anonymousReplication: allow
comment: Fullsync connector that holds all forms and user settings
databaseName: c8oforms_fs
↓DeleteDocument [transactions.couchdb.DeleteDocumentTransaction]: 
  accessibility: Public
  ↓_use_docid [variables.RequestableVariable-1572016079895]: 
    description: Document ID
↓GetDocument [transactions.couchdb.GetDocumentTransaction]: 
  accessibility: Public
  ↓_use_docid [variables.RequestableVariable-1570024790592]: 
    description: Document ID
    value: 
↓GetDocumentAttachment [transactions.couchdb.GetDocumentAttachmentTransaction]: 
  accessibility: Public
  ↓_use_attname [variables.RequestableVariable-1586362482635]: 
    description: Attachment name
  ↓_use_docid [variables.RequestableVariable-1586362482637]: 
    description: Document ID
  ↓_use_rev [variables.RequestableVariable-1586362482639]: 
    description: (string) – Document’s revision. Optional
  ↓_use_attpath [variables.RequestableVariable-1586418947900]: 
    description: Attachment path  This path is either absolute or relative to Convertigo environment. Relative paths starting with:<br/><br/>• <span class="computer">./</span> are relative to Convertigo workspace,<br/>• <span class="computer">.//</span> are relative to current project folder. <br/><br/>
↓GetDocumentAttachment1 [transactions.couchdb.GetDocumentAttachmentTransaction]: 
  accessibility: Public
  ↓_use_attpath [variables.RequestableVariable-1586420530084]: 
    description: Attachment path  This path is either absolute or relative to Convertigo environment. Relative paths starting with:<br/><br/>• <span class="computer">./</span> are relative to Convertigo workspace,<br/>• <span class="computer">.//</span> are relative to current project folder. <br/><br/>
  ↓_use_attname [variables.RequestableVariable-1586420530086]: 
    description: Attachment name
  ↓_use_docid [variables.RequestableVariable-1586420530088]: 
    description: Document ID
↓GetDocumentAttachmentB64 [transactions.couchdb.GetDocumentAttachmentTransaction]: 
  accessibility: Public
  ↓_use_attname [variables.RequestableVariable-1618222642237]: 
    description: Attachment name
  ↓_use_docid [variables.RequestableVariable-1618222642239]: 
    description: Document ID
↓GetDocumentRev [transactions.couchdb.GetDocumentTransaction]: 
  accessibility: Public
  ↓Test_Case [core.TestCase]: 
    ↓_use_docid [variables.TestCaseVariable-1694685110332]: 
      comment: 1682685487161
      description: Document ID
      value: 1682685487161
    ↓_use_rev [variables.TestCaseVariable-1694685110334]: 
      description: (string) – Retrieves document of specified revision. Optional
      value: 9-efd60595c7f0dbbd6d36d42a4a1241e0
  ↓_use_docid [variables.RequestableVariable-1571920860201]: 
    description: Document ID
  ↓_use_rev [variables.RequestableVariable-1571920860203]: 
    description: (string) – Retrieves document of specified revision. Optional
↓GetServerInfo [transactions.couchdb.GetServerInfoTransaction]: 
  ↑default: true
  accessibility: Public
↓GetServerInfo1 [transactions.couchdb.GetServerInfoTransaction]: 
  accessibility: Public
↓GetUsersByACL [transactions.couchdb.GetViewTransaction]: 
  accessibility: Public
  ↓_use_ddoc [variables.RequestableVariable-1613595294788]: 
    description: Design document name
  ↓_use_view [variables.RequestableVariable-1613595294790]: 
    description: View function name
  ↓_use_keys [variables.RequestableVariable-1613595294792]: 
    description: (json-array) – Return only documents where the key matches one of the keys specified in the array. Optional
  ↓_use_include_docs [variables.RequestableVariable-1728401960622]: 
    description: (boolean) – Include the associated document with each row. Default is false
↓GetView [transactions.couchdb.GetViewTransaction]: 
  accessibility: Public
  responseTimeout: 600
  ↓_use_ddoc [variables.RequestableVariable-1604507273380]: 
    description: Design document name
    value: data_integrity
  ↓_use_view [variables.RequestableVariable-1604507273382]: 
    description: View function name
    value: check_published_collabResponse_groups
  ↓_use_group [variables.RequestableVariable-1632329377608]: 
    description: (boolean) – Group the results using the reduce function to a group or single row. Default is false
  ↓_use_reduce [variables.RequestableVariable-1632329377611]: 
    description: (boolean) – Use the reduction function. Default is true
  ↓_use_group_level [variables.RequestableVariable-1632329377614]: 
    description: (number) – Specify the group level to be used. Optional
↓GetViewAuth [transactions.couchdb.GetViewTransaction]: 
  q_group: true
  q_reduce: true
  viewname: authentication/distinctGroups
  ↓Test_Case [core.TestCase]: 
    ↓_use_keys [variables.TestCaseVariable-1694098463653]: 
      description: (json-array) – Return only documents where the key matches one of the keys specified in the array. Optional
      value: '["_C8O_HIDDEN_1682685487161","_C8O_HIDDEN_published_1684345872648","_C8O_HIDDEN_published_1684229152065","_C8O_HIDDEN_published_1684345583841","_C8O_HIDDEN_published_1693907987365","_C8O_HIDDEN_published_1683192325591","_C8O_HIDDEN_1693907987365","_C8O_HIDDEN_published_1688544656866","_C8O_HIDDEN_1684229152065","_C8O_HIDDEN_1684933048820","_C8O_HIDDEN_1683192325591","_C8O_HIDDEN_1693909616247","C8Oreserved_google:108792390496318778325:charlesg@convertigo.com","_C8O_HIDDEN_1683191651699","_C8O_HIDDEN_published_1693909616247","_C8O_HIDDEN_published_1683191651699","_C8O_HIDDEN_1684345872648","_C8O_HIDDEN_1688544656866","_C8O_HIDDEN_1684345583841","_C8O_HIDDEN_published_1684933048820","_C8O_HIDDEN_published_1682685487161"]'
  ↓_use_group_level [variables.RequestableVariable-1694097159093]: 
    description: (number) – Specify the group level to be used. Optional
  ↓_use_reduce [variables.RequestableVariable-1694097159097]: 
    description: (boolean) – Use the reduction function. Default is true
  ↓_use_keys [variables.RequestableVariable-1694097927725]: 
    description: (json-array) – Return only documents where the key matches one of the keys specified in the array. Optional
  ↓_use_group [variables.RequestableVariable-1694098054874]: 
    description: (boolean) – Group the results using the reduce function to a group or single row. Default is false
↓GetViewByKeys [transactions.couchdb.GetViewTransaction]: 
  accessibility: Public
  responseTimeout: 600
  ↓_use_ddoc [variables.RequestableVariable-1625136115665]: 
    description: Design document name
    value: users
  ↓_use_view [variables.RequestableVariable-1625136115668]: 
    description: View function name
    value: all
  ↓_use_keys [variables.RequestableVariable-1625136142360]: 
    description: (json-array) – Return only documents where the key matches one of the keys specified in the array. Optional
↓GetViewIncludeDocs [transactions.couchdb.GetViewTransaction]: 
  accessibility: Public
  ↓_use_ddoc [variables.RequestableVariable-1607952977500]: 
    description: Design document name
    value: pwas
  ↓_use_view [variables.RequestableVariable-1607952977502]: 
    description: View function name
    value: all
  ↓_use_include_docs [variables.RequestableVariable-1607952977504]: 
    description: (boolean) – Include the associated document with each row. Default is false
    value: true
↓GetViewPublishedbyAcl [transactions.couchdb.GetViewTransaction]: 
  accessibility: Public
  q_include_docs: true
  ↓_use_ddoc [variables.RequestableVariable-1593622241052]: 
    description: Design document name
    value: published_forms_anonymous
  ↓_use_view [variables.RequestableVariable-1593622241054]: 
    description: View function name
    value: all
  ↓_use_key [variables.RequestableVariable-1593622241056]: 
    description: (string) – Return only documents that match the specified key. Optional
    value: 6045e561448d5030be6c82f2648a3bad90a3bb5a057860d50e9bc88a5fb553cb
↓HeadDocument [transactions.couchdb.HeadDocumentTransaction]: 
  ↓_use_docid [variables.RequestableVariable-1656517565880]: 
    description: Document ID
↓PostBulkDocuments_1 [transactions.couchdb.PostBulkDocumentsTransaction]: 
  accessibility: Public
  fullSyncAclPolicy: fromKeyC8oAcl
  ↓_use_json_base [variables.RequestableVariable-1622205348147]: 
    description: (string) – JSON use as a base for the array of documents (js array), or for individual documents (js object). Optional
↓PostDocument [transactions.couchdb.PostDocumentTransaction]: 
  accessibility: Public
  policy: merge
  ↓parentId [variables.RequestableVariable-1571925112700]: 
  ↓parentRev [variables.RequestableVariable-1571925122218]: 
  ↓creator [variables.RequestableVariable-1571925123500]: 
  ↓descform [variables.RequestableVariable-1571925124101]: 
  ↓descformPosition [variables.RequestableVariable-1571925124668]: 
  ↓formulaire [variables.RequestableVariable-1571933874780]: 
  ↓pages [variables.RequestableVariable-1592513437251]: 
  ↓name [variables.RequestableVariable-1571925167970]: 
  ↓namePosition [variables.RequestableVariable-1571925168800]: 
  ↓respNameRequired [variables.RequestableVariable-1571925169560]: 
  ↓wallpaper [variables.RequestableVariable-1571930780335]: 
  ↓_id [variables.RequestableVariable-1571925993206]: 
    description: Document id
  ↓c8oGrp [variables.RequestableVariable-1572427104730]: 
    description: Set the group of the document (see lib_FullSyncGrp)
  ↓version [variables.RequestableVariable-1576172438781]: 
  ↓_c8oAcl [variables.RequestableVariable-1576232911593]: 
    description: Set the owner of the document if the "Acl Policy"="From _c8oACL variable"
  ↓sharedAnonymous [variables.RequestableVariable-1576514851735]: 
    description: Set the owner of the document if the "Acl Policy"="From _c8oACL variable"
  ↓tag [variables.RequestableVariable-1581935957644]: 
  ↓subTag [variables.RequestableVariable-1581935972899]: 
  ↓thumbnail [variables.RequestableVariable-1594892972263]: 
  ↓actions [variables.RequestableVariable-1602002790959]: 
  ↓pwa_enabled [variables.RequestableVariable-1604008280385]: 
  ↓pwa_subPath [variables.RequestableVariable-1604008281184]: 
  ↓c8o_view_type_published_form [variables.RequestableVariable-1605308370569]: 
  ↓collabs [variables.RequestableVariable-1614963099091]: 
  ↓collabsResponse [variables.RequestableVariable-1614963101823]: 
  ↓_use_merge [variables.RequestableVariable-1616420324097]: 
    description: |
      '(string) – JSON used to specify special behavior of the ''merge'' Policy. Optional <br/>
       In this strict JSON string, you can:<br/><br/>• <b>delete</b>: delete the target key. <br/>• <b>override</b>: replace the value of the target key, don''t merge this. <br/>• <b>prepend</b>: prepend the value or the array in the existing array or value of the target key. <br/>• <b>append</b>: append the value or the array in the existing array or value of the target key. <br/><br/>A target key is the path of the object to reach, separated by the "_separator" (default is dot). The target key is the same for the 2 documents to merge. <br/>Samples: <br/>{"a.b.c": "override", "a.b.d": "delete"} <br/>{"_separator": "+", "a+b+c": "override"} <br/><br/>'
  ↓creationDate [variables.RequestableVariable-1622203282251]: 
  ↓lastMofification [variables.RequestableVariable-1622203302516]: 
↓PostDocument_PWA [transactions.couchdb.PostDocumentTransaction]: 
  accessibility: Public
  fullSyncAclPolicy: fromKeyC8oAcl
  policy: merge
  ↓_use_merge [variables.RequestableVariable-1618217480556]: 
    description: |
      '(string) – JSON used to specify special behavior of the ''merge'' Policy. Optional <br/>
       In this strict JSON string, you can:<br/><br/>• <b>delete</b>: delete the target key. <br/>• <b>override</b>: replace the value of the target key, don''t merge this. <br/>• <b>prepend</b>: prepend the value or the array in the existing array or value of the target key. <br/>• <b>append</b>: append the value or the array in the existing array or value of the target key. <br/><br/>A target key is the path of the object to reach, separated by the "_separator" (default is dot). The target key is the same for the 2 documents to merge. <br/>Samples: <br/>{"a.b.c": "override", "a.b.d": "delete"} <br/>{"_separator": "+", "a+b+c": "override"} <br/><br/>'
  ↓_c8oAcl [variables.RequestableVariable-1618217551879]: 
    description: Set the owner of the document if the "Acl Policy"="From _c8oACL variable"
  ↓backgroundColor [variables.RequestableVariable-1618217647111]: 
  ↓name [variables.RequestableVariable-1618217662472]: 
  ↓notAnonymous [variables.RequestableVariable-1618217677082]: 
  ↓originalFormId [variables.RequestableVariable-1618217698706]: 
  ↓querystr [variables.RequestableVariable-1618217707106]: 
  ↓shortName [variables.RequestableVariable-1618217707904]: 
  ↓themeColor [variables.RequestableVariable-1618217709782]: 
  ↓_id [variables.RequestableVariable-1618217749849]: 
    description: Document id
  ↓_use_json_base [variables.RequestableVariable-1618221696189]: 
    description: (string) – JSON use as a base for the document (js object). Optional
  ↓c8o_view_type_pwa_document [variables.RequestableVariable-1621934162543]: 
  ↓targetId [variables.RequestableVariable-1621947092429]: 
↓PostDocument_restore_deleted [transactions.couchdb.PostDocumentTransaction]: 
  fullSyncAclPolicy: noOp
  policy: override
  ↓data [variables.RequestableVariable-1668016281713]: 
    description: Document content
↓PostDocumentAddArgc8o_view_type_pwa_document [transactions.couchdb.PostDocumentTransaction]: 
  accessibility: Public
  fullSyncAclPolicy: noOp
  policy: merge
  ↓c8o_view_type_pwa_document [variables.RequestableVariable-1621935377387]: 
  ↓_id [variables.RequestableVariable-1621935394317]: 
    description: Document id
  ↓targetId [variables.RequestableVariable-1621947097793]: 
↓PostDocumentBaserowPassword [transactions.couchdb.PostDocumentTransaction]: 
  accessibility: Public
  policy: merge
  useHash: true
  ↓_id [variables.RequestableVariable-1728483379479]: 
    description: Document id
  ↓password [variables.RequestableVariable-1728483379482]: 
↓PostDocumentCreateNotif [transactions.couchdb.PostDocumentTransaction]: 
  accessibility: Public
  policy: override
  ↓_id [variables.RequestableVariable-1603909780277]: 
    description: Document id
  ↓type [variables.RequestableVariable-1603909814624]: 
  ↓date [variables.RequestableVariable-1603909821881]: 
  ↓status [variables.RequestableVariable-1603909822858]: 
  ↓formId [variables.RequestableVariable-1603909823916]: 
  ↓new [variables.RequestableVariable-1603910142375]: 
  ↓c8o_view_type_notification [variables.RequestableVariable-1603914998798]: 
  ↓targetId [variables.RequestableVariable-1603965411988]: 
  ↓targetName [variables.RequestableVariable-1603965433662]: 
↓PostDocumentCreateUserSettings [transactions.couchdb.PostDocumentTransaction]: 
  accessibility: Public
  fullSyncAclPolicy: fromKeyC8oAcl
  policy: merge
  ↓Test_Case [core.TestCase]: 
    ↓_id [variables.TestCaseVariable-1601285064850]: 
      description: Document id
      value: myIdTest3
    ↓_c8oAcl [variables.TestCaseVariable-1601285064852]: 
      description: Set the owner of the document if the "Acl Policy"="From _c8oACL variable"
      value: myIdTest3
    ↓favorites [variables.TestCaseVariable-1601285064854]: 
    ↓published_First [variables.TestCaseVariable-1601285064856]: 
      value: false
    ↓language [variables.TestCaseVariable-1601285064858]: 
      value: en
    ↓mail [variables.TestCaseVariable-1601285064860]: 
    ↓editing_rights [variables.TestCaseVariable-1601285064862]: 
      value: true
    ↓_use_json_base [variables.TestCaseVariable-1601285064864]: 
      description: (string) – JSON use as a base for the document (js object). Optional
      value: 
  ↓_id [variables.RequestableVariable-1576602854620]: 
    description: Document id
  ↓_c8oAcl [variables.RequestableVariable-1576602854622]: 
    description: Set the owner of the document if the "Acl Policy"="From _c8oACL variable"
  ↓favorites [variables.RequestableVariable-1576602890983]: 
  ↓published_First [variables.RequestableVariable-1576602901167]: 
  ↓language [variables.RequestableVariable-1582210105657]: 
  ↓provider [variables.RequestableVariable-1602689112695]: 
  ↓mail [variables.RequestableVariable-1599468887934]: 
  ↓editing_rights [variables.RequestableVariable-1601284450896]: 
  ↓_use_json_base [variables.RequestableVariable-1601285928251]: 
    description: (string) – JSON use as a base for the document (js object). Optional
  ↓name [variables.RequestableVariable-1602767769443]: 
  ↓surname [variables.RequestableVariable-1602767781627]: 
  ↓displayName [variables.RequestableVariable-1602767809807]: 
  ↓picture [variables.RequestableVariable-1602854676616]: 
  ↓c8o_view_type_users [variables.RequestableVariable-1613052096604]: 
↓PostDocumentFromAclKey [transactions.couchdb.PostDocumentTransaction]: 
  accessibility: Public
  fullSyncAclPolicy: fromKeyC8oAcl
  policy: override
  ↓parentId [variables.RequestableVariable-1576234969660]: 
  ↓parentRev [variables.RequestableVariable-1576234969663]: 
  ↓creator [variables.RequestableVariable-1576234969666]: 
  ↓descform [variables.RequestableVariable-1576234969669]: 
  ↓descformPosition [variables.RequestableVariable-1576234969672]: 
  ↓formulaire [variables.RequestableVariable-1576234969675]: 
  ↓pages [variables.RequestableVariable-1592513518464]: 
  ↓name [variables.RequestableVariable-1576234969678]: 
  ↓namePosition [variables.RequestableVariable-1576234969681]: 
  ↓respNameRequired [variables.RequestableVariable-1576234969684]: 
  ↓wallpaper [variables.RequestableVariable-1576234969687]: 
  ↓_id [variables.RequestableVariable-1576234969690]: 
    description: Document id
  ↓c8oGrp [variables.RequestableVariable-1576234969693]: 
    description: Set the group of the document (see lib_FullSyncGrp)
  ↓version [variables.RequestableVariable-1576234969696]: 
  ↓_c8oAcl [variables.RequestableVariable-1576234969699]: 
    description: Set the owner of the document if the "Acl Policy"="From _c8oACL variable"
  ↓actions [variables.RequestableVariable-1602002905552]: 
  ↓_use_merge [variables.RequestableVariable-1616420487561]: 
    description: |
      '(string) – JSON used to specify special behavior of the ''merge'' Policy. Optional <br/>
       In this strict JSON string, you can:<br/><br/>• <b>delete</b>: delete the target key. <br/>• <b>override</b>: replace the value of the target key, don''t merge this. <br/>• <b>prepend</b>: prepend the value or the array in the existing array or value of the target key. <br/>• <b>append</b>: append the value or the array in the existing array or value of the target key. <br/><br/>A target key is the path of the object to reach, separated by the "_separator" (default is dot). The target key is the same for the 2 documents to merge. <br/>Samples: <br/>{"a.b.c": "override", "a.b.d": "delete"} <br/>{"_separator": "+", "a+b+c": "override"} <br/><br/>'
↓PostDocumentFromAclKeyMerge [transactions.couchdb.PostDocumentTransaction]: 
  accessibility: Public
  fullSyncAclPolicy: fromKeyC8oAcl
  policy: merge
  ↓parentId [variables.RequestableVariable-1656517593393]: 
  ↓parentRev [variables.RequestableVariable-1656517593396]: 
  ↓creator [variables.RequestableVariable-1656517593399]: 
  ↓descform [variables.RequestableVariable-1656517593402]: 
  ↓descformPosition [variables.RequestableVariable-1656517593405]: 
  ↓formulaire [variables.RequestableVariable-1656517593408]: 
  ↓pages [variables.RequestableVariable-1656517593411]: 
  ↓name [variables.RequestableVariable-1656517593414]: 
  ↓namePosition [variables.RequestableVariable-1656517593417]: 
  ↓respNameRequired [variables.RequestableVariable-1656517593420]: 
  ↓wallpaper [variables.RequestableVariable-1656517593423]: 
  ↓_id [variables.RequestableVariable-1656517593426]: 
    description: Document id
  ↓c8oGrp [variables.RequestableVariable-1656517593429]: 
    description: Set the group of the document (see lib_FullSyncGrp)
  ↓version [variables.RequestableVariable-1656517593432]: 
  ↓_c8oAcl [variables.RequestableVariable-1656517593435]: 
    description: Set the owner of the document if the "Acl Policy"="From _c8oACL variable"
  ↓actions [variables.RequestableVariable-1656517593438]: 
  ↓_use_merge [variables.RequestableVariable-1656517593441]: 
    description: |
      '(string) – JSON used to specify special behavior of the ''merge'' Policy. Optional <br/>
       In this strict JSON string, you can:<br/><br/>• <b>delete</b>: delete the target key. <br/>• <b>override</b>: replace the value of the target key, don''t merge this. <br/>• <b>prepend</b>: prepend the value or the array in the existing array or value of the target key. <br/>• <b>append</b>: append the value or the array in the existing array or value of the target key. <br/><br/>A target key is the path of the object to reach, separated by the "_separator" (default is dot). The target key is the same for the 2 documents to merge. <br/>Samples: <br/>{"a.b.c": "override", "a.b.d": "delete"} <br/>{"_separator": "+", "a+b+c": "override"} <br/><br/>'
↓PostDocumentJSONBASE [transactions.couchdb.PostDocumentTransaction]: 
  accessibility: Public
  fullSyncAclPolicy: fromKeyC8oAcl
  policy: merge
  ↓_use_json_base [variables.RequestableVariable-1613599549336]: 
    description: (string) – JSON use as a base for the document (js object). Optional
  ↓_c8oAcl [variables.RequestableVariable-1613599568931]: 
    description: Set the owner of the document if the "Acl Policy"="From _c8oACL variable"
↓PostDocumentJsonBaseKeepACL [transactions.couchdb.PostDocumentTransaction]: 
  accessibility: Public
  fullSyncAclPolicy: noOp
  policy: merge
  ↓_use_json_base [variables.RequestableVariable-1614096764921]: 
    description: (string) – JSON use as a base for the document (js object). Optional
  ↓_use_merge [variables.RequestableVariable-1614350263387]: 
    description: |
      '(string) – JSON used to specify special behavior of the ''merge'' Policy. Optional <br/>
       In this strict JSON string, you can:<br/><br/>• <b>delete</b>: delete the target key. <br/>• <b>override</b>: replace the value of the target key, don''t merge this. <br/>• <b>prepend</b>: prepend the value or the array in the existing array or value of the target key. <br/>• <b>append</b>: append the value or the array in the existing array or value of the target key. <br/><br/>A target key is the path of the object to reach, separated by the "_separator" (default is dot). The target key is the same for the 2 documents to merge. <br/>Samples: <br/>{"a.b.c": "override", "a.b.d": "delete"} <br/>{"_separator": "+", "a+b+c": "override"} <br/><br/>'
↓PostDocumentMigrationAll [transactions.couchdb.PostDocumentTransaction]: 
  accessibility: Public
  fullSyncAclPolicy: noOp
  policy: merge
  responseTimeout: 600
  ↓_id [variables.RequestableVariable-1605289868702]: 
    description: Document id
  ↓tag [variables.RequestableVariable-1605304216338]: 
  ↓subTag [variables.RequestableVariable-1605305036718]: 
↓PostDocumentMigrationDraft [transactions.couchdb.PostDocumentTransaction]: 
  accessibility: Public
  fullSyncAclPolicy: noOp
  policy: merge
  responseTimeout: 600
  ↓_id [variables.RequestableVariable-1605182670264]: 
    description: Document id
  ↓c8o_view_type_drafts_form [variables.RequestableVariable-1605182741422]: 
↓PostDocumentMigrationPublished [transactions.couchdb.PostDocumentTransaction]: 
  accessibility: Public
  fullSyncAclPolicy: noOp
  policy: merge
  responseTimeout: 600
  ↓_id [variables.RequestableVariable-1605184455784]: 
    description: Document id
  ↓c8o_view_type_published_form [variables.RequestableVariable-1605184455787]: 
↓PostDocumentMigrationPublished11 [transactions.couchdb.PostDocumentTransaction]: 
  accessibility: Public
  fullSyncAclPolicy: noOp
  policy: merge
  responseTimeout: 600
  ↓_id [variables.RequestableVariable-1612966074303]: 
    description: Document id
  ↓c8o_view_type_published_form [variables.RequestableVariable-1612966074306]: 
↓PostDocumentMigrationUsers [transactions.couchdb.PostDocumentTransaction]: 
  accessibility: Public
  fullSyncAclPolicy: noOp
  policy: merge
  responseTimeout: 600
  ↓_id [variables.RequestableVariable-1612961597069]: 
    description: Document id
  ↓c8o_view_type_users [variables.RequestableVariable-1612961597072]: 
↓PostDocumentMigrationUsersModif [transactions.couchdb.PostDocumentTransaction]: 
  accessibility: Public
  fullSyncAclPolicy: noOp
  policy: merge
  responseTimeout: 600
  ↓_id [variables.RequestableVariable-1612966233584]: 
    description: Document id
  ↓c8o_view_type_usersModif [variables.RequestableVariable-1612966233587]: 
↓PostDocumentPolicyMerge [transactions.couchdb.PostDocumentTransaction]: 
  accessibility: Public
  policy: merge
  ↓_id [variables.RequestableVariable-1576248023653]: 
    description: Document id
  ↓sharedAnonymous [variables.RequestableVariable-1576251912815]: 
↓PostDocumentPublicFormJSONbase [transactions.couchdb.PostDocumentTransaction]: 
  accessibility: Public
  fullSyncAclPolicy: anonymous
  policy: override
  ↓_use_json_base [variables.RequestableVariable-1606922199128]: 
    description: (string) – JSON use as a base for the document (js object). Optional
↓PostDocumentSetDone [transactions.couchdb.PostDocumentTransaction]: 
  accessibility: Public
  fullSyncAclPolicy: noOp
  policy: merge
  ↓_id [variables.RequestableVariable-1603894477905]: 
    description: Document id
  ↓done [variables.RequestableVariable-1603894494548]: 
↓PostDocumentSetPWAEnabled [transactions.couchdb.PostDocumentTransaction]: 
  accessibility: Public
  fullSyncAclPolicy: noOp
  policy: merge
  ↓_id [variables.RequestableVariable-1603967263409]: 
    description: Document id
  ↓pwa_enabled [variables.RequestableVariable-1603967271377]: 
  ↓pwa_subPath [variables.RequestableVariable-1603967562406]: 
↓PostDocumentSetStatus [transactions.couchdb.PostDocumentTransaction]: 
  accessibility: Public
  fullSyncAclPolicy: noOp
  policy: merge
  ↓_id [variables.RequestableVariable-1604004027678]: 
    description: Document id
  ↓status [variables.RequestableVariable-1604004027681]: 
↓PostDocumentUpdateRights [transactions.couchdb.PostDocumentTransaction]: 
  accessibility: Public
  fullSyncAclPolicy: fromKeyC8oAcl
  policy: merge
  ↓_id [variables.RequestableVariable-1601379566904]: 
    description: Document id
  ↓editing_rights [variables.RequestableVariable-1601379575440]: 
  ↓_c8oAcl [variables.RequestableVariable-1601379696447]: 
    description: Set the owner of the document if the "Acl Policy"="From _c8oACL variable"
↓PostFind [transactions.couchdb.PostFindTransaction]: 
  p_limit: 200
  p_selector: |
    '{
          "$and": [
             {
                "_deleted": {
                   "$exists": false
                }
             },
             {
                "$or": [
                   {
                      "_id": {
                         "$regex": "^_design/"
                      }
                   },
                   {
                      "~c8oAcl": {
                         "$exists": false
                      },
                      "c8oGrp": {
                         "$exists": false
                      }
                   },
                   {
                      "~c8oAcl": {
                         "$eq": "google:108792390496318778325:charlesg@convertigo.com"
                      }
                   },
                   {
                      "c8oGrp": {
                         "$or": [
                            {
                               "_C8O_HIDDEN_1693909616247": {
                                  "$in": [
                                     true,
                                     "true"
                                  ]
                               }
                            },
                            {
                               "$eq": "_C8O_HIDDEN_1693909616247"
                            }
                         ]
                      }
                   },
                   {
                      "c8oGrp": {
                         "$or": [
                            {
                               "_C8O_HIDDEN_published_1693907987365": {
                                  "$in": [
                                     true,
                                     "true"
                                  ]
                               }
                            },
                            {
                               "$eq": "_C8O_HIDDEN_published_1693907987365"
                            }
                         ]
                      }
                   },
                   {
                      "c8oGrp": {
                         "$or": [
                            {
                               "_C8O_HIDDEN_1683192325591": {
                                  "$in": [
                                     true,
                                     "true"
                                  ]
                               }
                            },
                            {
                               "$eq": "_C8O_HIDDEN_1683192325591"
                            }
                         ]
                      }
                   },
                   {
                      "c8oGrp": {
                         "$or": [
                            {
                               "C8Oreserved_google:108792390496318778325:charlesg@convertigo\\\\.com": {
                                  "$in": [
                                     true,
                                     "true"
                                  ]
                               }
                            },
                            {
                               "$eq": "C8Oreserved_google:108792390496318778325:charlesg@convertigo.com"
                            }
                         ]
                      }
                   },
                   {
                      "c8oGrp": {
                         "$or": [
                            {
                               "_C8O_HIDDEN_published_1683191651699": {
                                  "$in": [
                                     true,
                                     "true"
                                  ]
                               }
                            },
                            {
                               "$eq": "_C8O_HIDDEN_published_1683191651699"
                            }
                         ]
                      }
                   },
                   {
                      "c8oGrp": {
                         "$or": [
                            {
                               "_C8O_HIDDEN_1688544656866": {
                                  "$in": [
                                     true,
                                     "true"
                                  ]
                               }
                            },
                            {
                               "$eq": "_C8O_HIDDEN_1688544656866"
                            }
                         ]
                      }
                   },
                   {
                      "c8oGrp": {
                         "$or": [
                            {
                               "_C8O_HIDDEN_1682685487161": {
                                  "$in": [
                                     true,
                                     "true"
                                  ]
                               }
                            },
                            {
                               "$eq": "_C8O_HIDDEN_1682685487161"
                            }
                         ]
                      }
                   },
                   {
                      "c8oGrp": {
                         "$or": [
                            {
                               "_C8O_HIDDEN_1684345583841": {
                                  "$in": [
                                     true,
                                     "true"
                                  ]
                               }
                            },
                            {
                               "$eq": "_C8O_HIDDEN_1684345583841"
                            }
                         ]
                      }
                   },
                   {
                      "c8oGrp": {
                         "$or": [
                            {
                               "_C8O_HIDDEN_1693907987365": {
                                  "$in": [
                                     true,
                                     "true"
                                  ]
                               }
                            },
                            {
                               "$eq": "_C8O_HIDDEN_1693907987365"
                            }
                         ]
                      }
                   },
                   {
                      "c8oGrp": {
                         "$or": [
                            {
                               "_C8O_HIDDEN_1684229152065": {
                                  "$in": [
                                     true,
                                     "true"
                                  ]
                               }
                            },
                            {
                               "$eq": "_C8O_HIDDEN_1684229152065"
                            }
                         ]
                      }
                   },
                   {
                      "c8oGrp": {
                         "$or": [
                            {
                               "_C8O_HIDDEN_published_1684933048820": {
                                  "$in": [
                                     true,
                                     "true"
                                  ]
                               }
                            },
                            {
                               "$eq": "_C8O_HIDDEN_published_1684933048820"
                            }
                         ]
                      }
                   },
                   {
                      "c8oGrp": {
                         "$or": [
                            {
                               "_C8O_HIDDEN_published_1684345872648": {
                                  "$in": [
                                     true,
                                     "true"
                                  ]
                               }
                            },
                            {
                               "$eq": "_C8O_HIDDEN_published_1684345872648"
                            }
                         ]
                      }
                   },
                   {
                      "c8oGrp": {
                         "$or": [
                            {
                               "_C8O_HIDDEN_published_1684229152065": {
                                  "$in": [
                                     true,
                                     "true"
                                  ]
                               }
                            },
                            {
                               "$eq": "_C8O_HIDDEN_published_1684229152065"
                            }
                         ]
                      }
                   },
                   {
                      "c8oGrp": {
                         "$or": [
                            {
                               "_C8O_HIDDEN_1683191651699": {
                                  "$in": [
                                     true,
                                     "true"
                                  ]
                               }
                            },
                            {
                               "$eq": "_C8O_HIDDEN_1683191651699"
                            }
                         ]
                      }
                   },
                   {
                      "c8oGrp": {
                         "$or": [
                            {
                               "_C8O_HIDDEN_published_1684345583841": {
                                  "$in": [
                                     true,
                                     "true"
                                  ]
                               }
                            },
                            {
                               "$eq": "_C8O_HIDDEN_published_1684345583841"
                            }
                         ]
                      }
                   },
                   {
                      "c8oGrp": {
                         "$or": [
                            {
                               "_C8O_HIDDEN_1684933048820": {
                                  "$in": [
                                     true,
                                     "true"
                                  ]
                               }
                            },
                            {
                               "$eq": "_C8O_HIDDEN_1684933048820"
                            }
                         ]
                      }
                   },
                   {
                      "c8oGrp": {
                         "$or": [
                            {
                               "_C8O_HIDDEN_published_1683192325591": {
                                  "$in": [
                                     true,
                                     "true"
                                  ]
                               }
                            },
                            {
                               "$eq": "_C8O_HIDDEN_published_1683192325591"
                            }
                         ]
                      }
                   },
                   {
                      "c8oGrp": {
                         "$or": [
                            {
                               "_C8O_HIDDEN_published_1688544656866": {
                                  "$in": [
                                     true,
                                     "true"
                                  ]
                               }
                            },
                            {
                               "$eq": "_C8O_HIDDEN_published_1688544656866"
                            }
                         ]
                      }
                   },
                   {
                      "c8oGrp": {
                         "$or": [
                            {
                               "_C8O_HIDDEN_1684345872648": {
                                  "$in": [
                                     true,
                                     "true"
                                  ]
                               }
                            },
                            {
                               "$eq": "_C8O_HIDDEN_1684345872648"
                            }
                         ]
                      }
                   },
                   {
                      "c8oGrp": {
                         "$or": [
                            {
                               "_C8O_HIDDEN_published_1693909616247": {
                                  "$in": [
                                     true,
                                     "true"
                                  ]
                               }
                            },
                            {
                               "$eq": "_C8O_HIDDEN_published_1693909616247"
                            }
                         ]
                      }
                   },
                   {
                      "c8oGrp": {
                         "$or": [
                            {
                               "_C8O_HIDDEN_published_1682685487161": {
                                  "$in": [
                                     true,
                                     "true"
                                  ]
                               }
                            },
                            {
                               "$eq": "_C8O_HIDDEN_published_1682685487161"
                            }
                         ]
                      }
                   }
                ]
             },
             {
                "c8o_view_type_drafts_form": true
             }
          ]
       }'
↓PurgeDatabase [transactions.couchdb.PurgeDatabaseTransaction]: 
  accessibility: Public
  purgeAll: true
↓PutDocumentAttachment [transactions.couchdb.PutDocumentAttachmentTransaction]: 
  accessibility: Public
  ↓_use_attname [variables.RequestableVariable-1586362813447]: 
    description: Attachment name
  ↓_use_attpath [variables.RequestableVariable-1586362813449]: 
    description: Attachment path  This path is either absolute or relative to Convertigo environment. Relative paths starting with:<br/><br/>• <span class="computer">./</span> are relative to Convertigo workspace,<br/>• <span class="computer">.//</span> are relative to current project folder. <br/><br/>
  ↓_use_docid [variables.RequestableVariable-1586362813451]: 
    description: Document ID
↓PutDocumentAttachmentFromBase64 [transactions.couchdb.PutDocumentAttachmentTransaction]: 
  accessibility: Public
  ↓_use_attname [variables.RequestableVariable-1606924953228]: 
    description: Attachment name
  ↓_use_docid [variables.RequestableVariable-1606924953230]: 
    description: Document ID
  ↓_use_attbase64 [variables.RequestableVariable-1606924953232]: 
    description: Attachment base64 encoded  The value is converted from a base64 string to a binary content. Used if attpath parameter is blank or if the file doesn't exist.
  ↓_use_attcontent_type [variables.RequestableVariable-1607098587904]: 
    description: Attachment ContentType  Define the ContentType of the attachment. This is the ContentType returned when the attachment is requested.
    value: application/octet-stream
↓PutDocumentAttachmentFromFile [transactions.couchdb.PutDocumentAttachmentTransaction]: 
  accessibility: Public
  ↓_use_attname [variables.RequestableVariable-1607100973172]: 
    description: Attachment name
  ↓_use_attpath [variables.RequestableVariable-1607100973174]: 
    description: Attachment path  This path is either absolute or relative to Convertigo environment. Relative paths starting with:<br/><br/>• <span class="computer">./</span> are relative to Convertigo workspace,<br/>• <span class="computer">.//</span> are relative to current project folder. <br/><br/>
  ↓_use_docid [variables.RequestableVariable-1607100973176]: 
    description: Document ID
  ↓_use_attcontent_type [variables.RequestableVariable-1607102500265]: 
    description: Attachment ContentType  Define the ContentType of the attachment. This is the ContentType returned when the attachment is requested.
↓PutDocumentAttachmentOK [transactions.couchdb.PutDocumentAttachmentTransaction]: 
  accessibility: Public
  ↓_use_attpath [variables.RequestableVariable-1613599717940]: 
    description: |
      Attachment path <br/>
       This path is either absolute or relative to Convertigo environment. Relative paths starting with:<br/><br/>• <span class="computer">./</span> are relative to Convertigo workspace,<br/>• <span class="computer">.//</span> are relative to current project folder. <br/><br/>
  ↓_use_docid [variables.RequestableVariable-1613599717942]: 
    description: Document ID
  ↓_use_attname [variables.RequestableVariable-1613599717944]: 
    description: Attachment name
  ↓_use_attcontent_type [variables.RequestableVariable-1613599717946]: 
    description: |
      Attachment ContentType <br/>
       Define the ContentType of the attachment. This is the ContentType returned when the attachment is requested.
↓SetLanguage [transactions.couchdb.PostDocumentTransaction]: 
  accessibility: Public
  policy: merge
  ↓Test_CaseEN [core.TestCase]: 
    ↓_id [variables.TestCaseVariable-1582211949639]: 
      description: Document id
      value: grimont.c@gmail.com
    ↓language [variables.TestCaseVariable-1582211949642]: 
      value: en
  ↓Test_CaseFR [core.TestCase]: 
    ↓_id [variables.TestCaseVariable-1582211949646]: 
      description: Document id
      value: grimont.c@gmail.com
    ↓language [variables.TestCaseVariable-1582211949649]: 
      value: en
  ↓_id [variables.RequestableVariable-1582211949652]: 
    description: Document id
  ↓language [variables.RequestableVariable-1582211949655]: 
↓all [couchdb.DesignDocument]: 
  docdata: 
    →: |
      '{
        "_id": "_design\/all",
        "filters": {},
        "updates": {},
        "views": {
          "view": {
            "map": "function (doc) {\r\n
          try {\r\n
              if(doc.c8o_view_type_drafts_form === true || doc.c8o_view_type_published_form === true || doc.c8o_view_type_pwa_document === true){\r\n
                  emit(doc._id, doc._rev);\r\n
              }\r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }"
          }
        }
      }'
↓allForms [couchdb.DesignDocument]: 
  docdata: 
    →: |
      '{
        "_id": "_design\/allForms",
        "filters": {},
        "updates": {},
        "views": {
          "tags": {
            "map": "function (doc) {\r\n
          try {\r\n
              if(doc.deleted != true && doc.c8o_view_type_pwa_document != true && doc.c8o_view_type_notification != true && doc._id.indexOf(\"C8Oreserved\") == -1 && doc._id.indexOf(\"control_document\") == -1 && ((doc.tag != undefined && doc.tag != \"[]\") ||(doc.subTag != undefined && doc.subTag != \"[]\"))){\r\n
                  emit(doc._id, {tags: JSON.parse(doc.tag), subTags: JSON.parse(doc.subTag)});\r\n
                  \/\/{tags: JSON.parse(doc.tag), subTags: JSON.parse(doc.subTag)});\r\n
              } \r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }",
            "reduce": "function (keys, values, rereduce) {\r\n
          try {\r\n
              if(!rereduce){\r\n
                  return values;\r\n
              }\r\n
              else{\r\n
                var tags = [];\r\n
                var subTags = [];\r\n
                for (i in values) { \r\n
                      if(values[i][0][\"tags\"] != undefined){\r\n
                        for (j in values[i][0][\"tags\"]) {\r\n
                           if(tags.indexOf(values[i][0][\"tags\"][j]) == -1){\r\n
                             tags.push(values[i][0][\"tags\"][j]);\r\n
                           }\r\n
                        }\r\n
                      }\r\n
                     \r\n
                } \r\n
                return tags;\r\n
              }\r\n
                    \r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }"
          }
        }
      }'
↓allFormsV2 [couchdb.DesignDocument]: 
  docdata: 
    →: |
      '{
        "_id": "_design\/allFormsV2",
        "filters": {},
        "updates": {},
        "views": {
          "all": {
            "map": "function (doc) {\r\n
           try {\r\n
              if(doc.c8o_view_type_drafts_form === true || doc.c8o_view_type_published_form === true){\r\n
                      emit(doc._id, {\"doc\":doc});    \r\n
                  }\r\n
              } catch (err) {\r\n
                  log(err.message);\r\n
              }\r\n
      }"
          },
          "migration": {
            "map": "function (doc) {\r\n
           try {\r\n
              if(doc.c8o_view_type_drafts_form === true || doc.c8o_view_type_published_form === true){\r\n
                      emit(doc._id, {\"doc\":{\"tag\": doc.tag, \"subTag\": doc.subTag}});    \r\n
                  }\r\n
              } catch (err) {\r\n
                  log(err.message);\r\n
              }\r\n
      }"
          }
        }
      }'
↓authentication [couchdb.DesignDocument]: 
  docdata: 
    →: |
      '{
        "_id": "_design\/authentication",
        "filters": {},
        "updates": {},
        "views": {
          "distinctGroups": {
            "map": "function (doc) {\r\n
          if (typeof doc[\"c8oGrp\"] == \"string\") {\r\n
              emit(doc[\"c8oGrp\"], 1);\r\n
          } else if (typeof doc[\"c8oGrp\"] != \"undefined\") {\r\n
              for (var grp in doc[\"c8oGrp\"]) {\r\n
                  if (\"\" + doc[\"c8oGrp\"][grp] == \"true\")\r\n
                  emit(grp, 1);            \r\n
              }\r\n
          }\r\n
      }",
            "reduce": "_count"
          }
        }
      }'
↓control_documents [couchdb.DesignDocument]: 
  docdata: 
    →: |
      '{
        "_id": "_design\/control_documents",
        "filters": {},
        "updates": {},
        "views": {
          "control_documents_published": {
            "map": "function (doc) {\r\n
          try {\r\n
              if(doc._id.indexOf(\"C8Oreserved\") == -1 && doc._id.indexOf(\"published\") == -1 && doc._id.indexOf(\"control_document_publish\") != -1){\r\n
                  emit(doc._id, doc._rev);\r\n
              }    \r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }"
          },
          "control_documents_create_user": {
            "map": "function (doc) {\r\n
          try {\r\n
              if(doc._id.indexOf(\"C8Oreserved\") == -1 && doc._id.indexOf(\"published\") == -1 && doc._id.indexOf(\"control_document_create_user\") != -1){\r\n
                  emit(doc._id, doc._rev);\r\n
              }    \r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }"
          },
          "control_documents_delete_user": {
            "map": "function (doc) {\r\n
          try {\r\n
              if(doc._id.indexOf(\"C8Oreserved\") == -1 && doc._id.indexOf(\"published\") == -1 && doc._id.indexOf(\"control_document_delete_user\") != -1){\r\n
                  emit(doc._id, doc._rev);\r\n
              }    \r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }"
          },
          "control_documents_add_users_of_group_to_form_group": {
            "map": "function (doc) {\r\n
          try {\r\n
              if(doc._id.indexOf(\"C8Oreserved\") == -1 && doc._id.indexOf(\"published\") == -1 && doc._id.indexOf(\"control_document_set_users_in_group\") != -1 && doc.c8o_view_type_pwa_document != true && doc.c8o_view_type_notification != true){\r\n
                  emit(doc._id, doc._rev);\r\n
              }    \r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }"
          },
          "control_documents_add_groups_to_responses": {
            "map": "function (doc) {\r\n
          try {\r\n
              if(doc._id.indexOf(\"C8Oreserved\") == -1 && doc._id.indexOf(\"published\") == -1 && doc._id.indexOf(\"control_document_set_groups_in_responses\") != -1 && doc.c8o_view_type_pwa_document != true && doc.c8o_view_type_notification != true){\r\n
                  emit(doc._id, doc._rev);\r\n
              }    \r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }"
          },
          "control_documents_check_for_deletion": {
            "map": "function (doc) {\r\n
          try {\r\n
              if(doc._id.indexOf(\"C8Oreserved\") == -1 && doc._id.indexOf(\"published\") == -1 && doc._id.indexOf(\"control_documents_check_for_deletion\") != -1 && doc.c8o_view_type_pwa_document != true && doc.c8o_view_type_notification != true){\r\n
                  emit(doc._id, doc._rev);\r\n
              }    \r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }"
          },
          "control_local_doc_check_delete": {
            "map": "function (doc) {\r\n
          try {\r\n
              if(doc.is_control_local_doc_check_delete == true){\r\n
                  emit(doc._id, {base_id: doc.id});\r\n
              }\r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }"
          },
          "control_documents_pwaPublishAndCreateRights": {
            "map": "function (doc) {\r\n
          try {\r\n
              if(doc._id.indexOf(\"C8Oreserved\") == -1 && doc._id.indexOf(\"published\") == -1 && doc._id.indexOf(\"control_document_pwaPublishAndCreateRights_\") != -1 && doc.updateFinished == true){\r\n
                  emit(doc._id, doc._rev);\r\n
              }    \r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }"
          },
          "control_documents_pwaAndCreateRights": {
            "map": "function (doc) {\r\n
          try {\r\n
              if(doc._id.indexOf(\"C8Oreserved\") == -1 && doc._id.indexOf(\"published\") == -1 && doc._id.indexOf(\"control_document_pwaAndCreateRights_\") != -1 && doc.updateFinished == true){\r\n
                  emit(doc._id, doc._rev);\r\n
              }    \r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }"
          }
        }
      }'
↓data_integrity [couchdb.DesignDocument]: 
  docdata: 
    →: |
      '{
        "_id": "_design\/data_integrity",
        "filters": {},
        "updates": {},
        "views": {
          "check_between_edition_published": {
            "map": "function (doc) {\r\n
          try {\r\n
              if ((doc.c8o_view_type_drafts_form === true || doc.c8o_view_type_published_form === true) && doc.deleted !== true) {\r\n
                  var id = \"\";\r\n
                  if (doc.c8o_view_type_drafts_form === true) {\r\n
                      id = doc._id;\r\n
                  }\r\n
                  else {\r\n
                      id = doc.parentId;\r\n
                  }\r\n
                  var tab = null;\r\n
                  if (doc.collabsResponse != undefined && doc.collabsResponse.length > 0) {\r\n
                      tab = JSON.parse(JSON.stringify(doc.collabsResponse));\r\n
                      tab.sort();\r\n
                  }\r\n
                  \/\/if(tab != null){\r\n
                      emit([id, JSON.stringify(tab)], tab);\r\n
                  \/\/}\r\n
              }\r\n
          }\r\n
          catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }",
            "reduce": "_count"
          },
          "check_published_collabResponse_groups": {
            "map": "function (doc) {\r\n
          try {\r\n
              if (doc.c8o_view_type_published_form === true && doc.deleted !== true) {\r\n
                  var id = doc._id;\r\n
                  var tab = [];\r\n
                  if (doc.collabsResponse != undefined && doc.collabsResponse.length > 0) {\r\n
                      tab = JSON.parse(JSON.stringify(doc.collabsResponse));\r\n
                      \/*var ownerIndex = tab.indexOf(\"C8Oreserved_\" + doc.creator)\r\n
                      if(ownerIndex != -1){\r\n
                           tab.splice(ownerIndex, 1)\r\n
                      }*\/\r\n
                      tab.sort();\r\n
                  }\r\n
                  emit(id, JSON.stringify(tab));\r\n
              }\r\n
          }\r\n
          catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }"
          },
          "check_between_edition_published_pwa_doc_anonymous": {
            "map": "function (doc) {\r\n
          try {\r\n
              emit(doc._id, doc._rev);\r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }"
          }
        }
      }'
↓deleted [couchdb.DesignDocument]: 
  docdata: 
    →: |
      '{
        "_id": "_design\/deleted",
        "filters": {},
        "updates": {},
        "views": {
          "all": {
            "map": "function (doc) {\r\n
          try {\r\n
              if(doc.deleted == true){\r\n
                  emit(doc._id, doc._rev);    \r\n
              }\r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }"
          }
        }
      }'
↓forms [couchdb.DesignDocument]: 
  docdata: 
    →: |
      '{
        "_id": "_design\/forms",
        "filters": {},
        "updates": {},
        "views": {
          "view": {
            "map": "function (doc) {\r\n
          try {\r\n
              if(doc._id.indexOf(\"C8Oreserved\") == -1 && doc.c8o_view_type_pwa_document != true && doc.c8o_view_type_notification != true){\r\n
                  emit(doc._id, {doc: doc});\r\n
              }\r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }"
          },
          "formulaires": {
            "map": "function (doc) {\r\n
          try {\r\n
              if(doc.deleted != true && doc._id.indexOf(\"C8Oreserved\") == -1 && doc._id.indexOf(\"published\") == -1 && doc._id.indexOf(\"control_document\") == -1 && doc.c8o_view_type_pwa_document != true && doc.c8o_view_type_notification != true){\r\n
                  emit(doc._id, {doc: doc});\r\n
              }    \r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }\r\n
      "
          },
          "favorites": {
            "map": "function (doc) {\r\n
          try {\r\n
              if(doc._id.indexOf(\"C8Oreserved\") == -1 && doc.c8o_view_type_pwa_document != true && doc.c8o_view_type_notification != true){\r\n
                  emit(doc._id, doc._rev);    \r\n
              }\r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }"
          },
          "formulaires-search": {
            "map": "function (doc) {\r\n
            try {\r\n
                if(doc.deleted != true && doc._id.indexOf(\"C8Oreserved\") == -1 && doc._id.indexOf(\"published\") == -1 && doc._id.indexOf(\"control_document\") == -1 && doc.c8o_view_type_pwa_document != true && doc.c8o_view_type_notification != true){\r\n
                    emit(doc.name.toLowerCase(), {doc: doc});\r\n
                }    \r\n
            } catch (err) {\r\n
                log(err.message);\r\n
            }\r\n
      }"
          },
          "byFolder": {
            "map": "function (doc) {\r\n
          if(doc.deleted != true && doc._id.indexOf(\"C8Oreserved\") == -1 && doc._id.indexOf(\"published\") == -1 && doc._id.indexOf(\"control_document\") == -1 &&  doc.c8o_view_type_pwa_document != true && doc.c8o_view_type_notification != true){\r\n
              if(doc.tag != undefined && doc.tag != \"[]\"){\r\n
                    var arr = JSON.parse(doc.tag);\r\n
                        for(var i in arr){\r\n
                              emit(arr[i], doc._id);  \r\n
                            }\r\n
                    }\r\n
                    \r\n
              else{\r\n
                    emit(\"_c8o_out_c8o\", doc._id)\r\n
              }\r\n
          }\r\n
      }",
            "reduce": "function (keys, values, rereduce) {\r\n
           return values;\r\n
      }"
          },
          "byFolderNoReduce": {
            "map": "function (doc) {\r\n
          if(doc.deleted != true && doc._id.indexOf(\"C8Oreserved\") == -1 && doc._id.indexOf(\"published\") == -1 && doc._id.indexOf(\"control_document\") == -1 && doc.c8o_view_type_pwa_document != true && doc.c8o_view_type_notification != true){\r\n
              if(doc.tag != undefined && doc.tag != \"[]\"){\r\n
                    var arr = JSON.parse(doc.tag);\r\n
                    for(var i in arr){\r\n
                      emit(arr[i], {doc: doc});  \r\n
                    }\r\n
              }\r\n
              else{\r\n
                    emit(\"_c8o_out_c8o\", {doc: doc})\r\n
              }\r\n
          }\r\n
      }"
          },
          "justIds": {
            "map": "function (doc) {\r\n
          try {\r\n
              if(doc.deleted != true && doc._id.indexOf(\"C8Oreserved\") == -1 && doc._id.indexOf(\"published\") == -1 && doc._id.indexOf(\"control_document\") == -1 && doc.c8o_view_type_pwa_document != true && doc.c8o_view_type_notification != true && doc.c8o_view_type_template != true){\r\n
                  emit(doc._id, null);\r\n
              } \r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }"
          }
        }
      }'
↓formsV2 [couchdb.DesignDocument]: 
  docdata: 
    →: |
      '{
        "_id": "_design\/formsV2",
        "filters": {},
        "updates": {},
        "views": {
          "folders": {
            "map": "function (doc) {\r\n
          try{\r\n
              if((doc.c8o_view_type_drafts_form === true || doc.c8o_view_type_drafts_folder) && doc.deleted !== true){\r\n
                  if(doc.tag != undefined && doc.tag.length > 0){\r\n
                    for(var i in doc.tag){\r\n
                      emit(doc.tag[i], doc._id);  \r\n
                    }\r\n
                  }\r\n
              }\r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }",
            "reduce": "function (keys, values, rereduce) {\r\n
          return null;\r\n
      }"
          },
          "out_folders": {
            "map": "function (doc) {\r\n
          \/* !important! any change here must be reported into c8oforms shared action \"searchForm\" *\/\r\n
          try{\r\n
              if(doc.c8o_view_type_drafts_form === true && doc.deleted !== true){\r\n
                  if(doc.tag == undefined || doc.tag.length == 0 || doc.tag == ''[]''){\r\n
                      var objToEmit = {\"name\": doc.name, \"pwa_enabled\": doc.pwa_enabled, \"pwa_subPath\": doc.pwa_subPath};\r\n
                      if(doc.thumbnail != undefined && doc.thumbnail.enabled){\r\n
                          if(doc.thumbnail.type != undefined && doc.thumbnail.type == \"color\"){\r\n
                              objToEmit[\"color\"] = doc.thumbnail.color;\r\n
                          }\r\n
                          else{\r\n
                              objToEmit[\"thumbnail\"] = true;\r\n
                          }\r\n
                          \r\n
                      }\r\n
                      else if(doc.wallpaper != undefined && doc.wallpaper.enabled){\r\n
                          if(doc.wallpaper.type != undefined && doc.wallpaper.type == \"color\"){\r\n
                              objToEmit[\"color\"] = doc.wallpaper.color;\r\n
                          }\r\n
                          else{\r\n
                              objToEmit[\"wallpaper\"] = true;\r\n
                          }\r\n
                      }\r\n
                      else{\r\n
                          objToEmit[\"random\"] = doc.wallpaper.random;\r\n
                      }\r\n
                      objToEmit[\"creator\"] = doc.creator;\r\n
                      objToEmit[\"shared\"] = doc.shared;\r\n
                      objToEmit[\"collabsResponse\"] = doc.collabsResponse;\r\n
                      objToEmit[\"collabs\"] = doc.collabs;\r\n
                      emit(doc._id, objToEmit);  \r\n
                  }\r\n
              }\r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }"
          },
          "all_search": {
            "map": "function (doc) {\r\n
          try {\r\n
              if(doc.c8o_view_type_drafts_form === true && doc.deleted !== true){\r\n
                  emit(doc._id, {\"doc\":doc});    \r\n
              }\r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }"
          },
          "in_folders": {
            "map": "function (doc) {\r\n
          try{\r\n
              if(doc.c8o_view_type_drafts_form === true && doc.deleted !== true){\r\n
                  if(doc.tag != undefined && doc.tag.length > 0){\r\n
                    var objToEmit = {\"name\": doc.name, \"pwa_enabled\": doc.pwa_enabled, \"pwa_subPath\": doc.pwa_subPath};\r\n
                    if(doc.thumbnail != undefined && doc.thumbnail.enabled){\r\n
                        if(doc.thumbnail.type != undefined && doc.thumbnail.type == \"color\"){\r\n
                            objToEmit[\"color\"] = doc.thumbnail.color;\r\n
                        }\r\n
                        else{\r\n
                            objToEmit[\"thumbnail\"] = true;\r\n
                        }\r\n
                        \r\n
                    }\r\n
                    else if(doc.wallpaper != undefined && doc.wallpaper.enabled){\r\n
                        if(doc.wallpaper.type != undefined && doc.wallpaper.type == \"color\"){\r\n
                            objToEmit[\"color\"] = doc.wallpaper.color;\r\n
                        }\r\n
                        else{\r\n
                            objToEmit[\"wallpaper\"] = true;\r\n
                        }\r\n
                    }\r\n
                    else{\r\n
                        objToEmit[\"random\"] = doc.wallpaper.random;\r\n
                    }\r\n
                    objToEmit[\"creator\"] = doc.creator;\r\n
                      objToEmit[\"shared\"] = doc.shared;\r\n
                      objToEmit[\"collabsResponse\"] = doc.collabsResponse;\r\n
                      objToEmit[\"collabs\"] = doc.collabs;\r\n
                    for(var i in doc.tag){\r\n
                      emit([doc.tag[i], doc._id], objToEmit);  \r\n
                    }\r\n
                  }\r\n
              }\r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }"
          },
          "showUsage": {
            "map": "function (doc) {\r\n
          try {\r\n
              if(doc.c8o_view_type_drafts_form === true && doc.deleted !== true){\r\n
                  if(doc.creationDate != null){\r\n
                      var creationDate =  new Date(+doc.creationDate).toLocaleDateString();\r\n
                  }\r\n
                  else{\r\n
                      var creationDate = \"unknown\";\r\n
                  }\r\n
                  if(doc.lastMofification != null){\r\n
                      var lastMofification =  new Date(+doc.lastMofification).toLocaleDateString();\r\n
                  }\r\n
                  else{\r\n
                      var lastMofification = \"unknown\";\r\n
                  }\r\n
                  emit([doc.creationDate, doc.lastMofification], {\"creationDate\":creationDate, lastMofification:lastMofification, \"name\":doc.name, \"_id\": doc._id, \"creator\":doc.creator});    \r\n
              }\r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }"
          }
        }
      }'
↓invitedUsers [couchdb.DesignDocument]: 
  docdata: 
    →: |
      '{
        "_id": "_design\/invitedUsers",
        "filters": {},
        "updates": {},
        "views": {
          "all": {
            "map": "function (doc) {\r\n
          try {\r\n
              if(doc.c8o_view_type_share_rights_to_new_user === true){\r\n
                  emit(doc.email, {doc: doc})\r\n
              }\r\n
              \r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }"
          }
        }
      }'
↓notifs [couchdb.DesignDocument]: 
  docdata: 
    →: |
      '{
        "_id": "_design\/notifs",
        "filters": {},
        "updates": {},
        "views": {
          "all": {
            "map": "function (doc) {\r\n
          try {\r\n
              if(doc.c8o_view_type_notification == true){\r\n
                  emit(doc.date, {doc: doc});\r\n
              }\r\n
              \r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }"
          },
          "new": {
            "map": "function (doc) {\r\n
          try {\r\n
              if(doc.c8o_view_type_notification == true && doc.new){\r\n
                  emit(doc._id, doc.new);\r\n
              }\r\n
              \r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }"
          }
        }
      }'
↓published_forms [couchdb.DesignDocument]: 
  docdata: 
    →: |
      '{
        "_id": "_design\/published_forms",
        "filters": {},
        "updates": {},
        "views": {
          "formulaires": {
            "map": "function (doc) {\r\n
          try {\r\n
              if(doc.deleted != true && doc._id.indexOf(\"C8Oreserved\") == -1 && doc._id.indexOf(\"published\") != -1 && doc._id.indexOf(\"control_document\") == -1 && doc.c8o_view_type_pwa_document != true && doc.c8o_view_type_notification != true && doc._id.indexOf(\"anonymous\") == -1){\r\n
                  emit(doc._id, {doc: doc});\r\n
              }    \r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }"
          },
          "formulaires-search": {
            "map": "function (doc) {\r\n
           try {\r\n
                  if(doc.deleted != true && doc._id.indexOf(\"C8Oreserved\") == -1 && doc._id.indexOf(\"published\") != -1 && doc.c8o_view_type_pwa_document != true && doc.c8o_view_type_notification != true && doc._id.indexOf(\"control_document\") == -1){\r\n
                      emit(doc.name.toLowerCase(), {doc: doc});\r\n
                  }    \r\n
              } catch (err) {\r\n
                  log(err.message);\r\n
              }\r\n
      }"
          },
          "byFolder": {
            "map": "function (doc) {\r\n
          if(doc.deleted != true && doc._id.indexOf(\"C8Oreserved\") == -1 && doc._id.indexOf(\"published\") != -1 && doc.c8o_view_type_pwa_document != true && doc.c8o_view_type_notification != true &&  doc._id.indexOf(\"control_document\") == -1){\r\n
              if(doc.tag != undefined && doc.tag != \"[]\"){\r\n
                    var arr = JSON.parse(doc.tag);\r\n
                    for(var i in arr){\r\n
                      emit(arr[i], doc._id);  \r\n
                    }\r\n
              }\r\n
              else{\r\n
                    emit(\"_c8o_out_c8o\", doc._id)\r\n
              }\r\n
          }\r\n
      }",
            "reduce": "function (keys, values, rereduce) {\r\n
           return values;\r\n
      }"
          },
          "byFolderNoReduce": {
            "map": "function (doc) {\r\n
          if(doc.deleted != true && doc._id.indexOf(\"C8Oreserved\") == -1 && doc._id.indexOf(\"published\") != -1 && doc.c8o_view_type_pwa_document != true && doc.c8o_view_type_notification != true && doc._id.indexOf(\"control_document\") == -1){\r\n
              if(doc.tag != undefined && doc.tag != \"[]\"){\r\n
                    var arr = JSON.parse(doc.tag);\r\n
                    for(var i in arr){\r\n
                      emit(arr[i], {doc: doc});  \r\n
                    }\r\n
              }\r\n
              else{\r\n
                    emit(\"_c8o_out_c8o\", {doc: doc})\r\n
              }\r\n
          }\r\n
      }"
          },
          "justIds": {
            "map": "function (doc) {\r\n
          try {\r\n
              if(doc.deleted != true && doc._id.indexOf(\"C8Oreserved\") == -1 && doc._id.indexOf(\"published\") != -1 && doc._id.indexOf(\"control_document\") == -1 && doc.c8o_view_type_pwa_document != true && doc.c8o_view_type_notification != true && doc._id.indexOf(\"anonymous\") == -1 && doc.c8o_view_type_template != true){\r\n
                  emit(doc._id, null);\r\n
              } \r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }"
          }
        }
      }'
↓published_forms_anonymous [couchdb.DesignDocument]: 
  docdata: 
    →: |
      '{
        "_id": "_design\/published_forms_anonymous",
        "filters": {},
        "updates": {},
        "views": {
          "all": {
            "map": "function (doc) {\r\n
          try {\r\n
              if(doc._id.indexOf(\"C8Oreserved\") == -1 && doc._id.indexOf(\"anonymous\") != -1 && doc._id.indexOf(\"_pwa_document\") == -1 && doc.c8o_view_type_pwa_document != true && doc.c8o_view_type_notification != true){\r\n
                  emit(doc[\"~c8oAcl\"]);\r\n
              }\r\n
              \r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }"
          }
        }
      }'
↓published_formsV2 [couchdb.DesignDocument]: 
  docdata: 
    →: |
      '{
        "_id": "_design\/published_formsV2",
        "filters": {},
        "updates": {},
        "views": {
          "all_search": {
            "map": "function (doc) {\r\n
          try {\r\n
              if(doc.c8o_view_type_published_form === true && doc.deleted !== true){\r\n
                  emit(doc._id, {\"doc\":doc});    \r\n
              }\r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }"
          },
          "folders": {
            "map": "function (doc) {\r\n
          try{\r\n
              if((doc.c8o_view_type_published_form === true || doc.c8o_view_type_published_folder) && doc.deleted !== true){\r\n
                  if(doc.tag != undefined && doc.tag.length > 0){\r\n
                    for(var i in doc.tag){\r\n
                      emit(doc.tag[i], doc._id);  \r\n
                    }\r\n
                  }\r\n
              }\r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }",
            "reduce": "function (keys, values, rereduce) {\r\n
          return null;\r\n
      }"
          },
          "out_folders": {
            "map": "function (doc) {\r\n
          \/* !important! any change here must be reported into c8oforms shared action \"searchForm\" *\/\r\n
          try{\r\n
              if(doc.c8o_view_type_published_form === true && doc.deleted !== true){\r\n
                  if(doc.tag == undefined || doc.tag.length == 0 || doc.tag == ''[]''){\r\n
                      var objToEmit = {\"name\": doc.name, \"pwa_enabled\": doc.pwa_enabled, \"pwa_subPath\": doc.pwa_subPath, \"version\": doc.version, \"status\": doc.status};\r\n
                      if(doc.thumbnail != undefined && doc.thumbnail.enabled){\r\n
                          if(doc.thumbnail.type != undefined && doc.thumbnail.type == \"color\"){\r\n
                              objToEmit[\"color\"] = doc.thumbnail.color;\r\n
                          }\r\n
                          else{\r\n
                              objToEmit[\"thumbnail\"] = true;\r\n
                          }\r\n
                          \r\n
                      }\r\n
                      else if(doc.wallpaper != undefined && doc.wallpaper.enabled){\r\n
                          if(doc.wallpaper.type != undefined && doc.wallpaper.type == \"color\"){\r\n
                              objToEmit[\"color\"] = doc.wallpaper.color;\r\n
                          }\r\n
                          else{\r\n
                              objToEmit[\"wallpaper\"] = true;\r\n
                          }\r\n
                      }\r\n
                      else{\r\n
                          objToEmit[\"random\"] = doc.wallpaper.random;\r\n
                      }\r\n
                      objToEmit[\"creator\"] = doc.creator;\r\n
                      objToEmit[\"shared\"] = doc.shared;\r\n
                      objToEmit[\"collabsResponse\"] = doc.collabsResponse;\r\n
                      objToEmit[\"collabs\"] = doc.collabs;\r\n
                      emit(doc._id, objToEmit);  \r\n
                  }\r\n
              }\r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }"
          },
          "in_folders": {
            "map": "function (doc) {\r\n
          try{\r\n
              if(doc.c8o_view_type_published_form === true && doc.deleted !== true){\r\n
                  if(doc.tag != undefined && doc.tag.length > 0){\r\n
                    var objToEmit = {\"name\": doc.name, \"pwa_enabled\": doc.pwa_enabled, \"pwa_subPath\": doc.pwa_subPath, \"version\": doc.version, \"status\": doc.status};\r\n
                    if(doc.thumbnail != undefined && doc.thumbnail.enabled){\r\n
                        if(doc.thumbnail.type != undefined && doc.thumbnail.type == \"color\"){\r\n
                            objToEmit[\"color\"] = doc.thumbnail.color;\r\n
                        }\r\n
                        else{\r\n
                            objToEmit[\"thumbnail\"] = true;\r\n
                        }\r\n
                        \r\n
                    }\r\n
                    else if(doc.wallpaper != undefined && doc.wallpaper.enabled){\r\n
                        if(doc.wallpaper.type != undefined && doc.wallpaper.type == \"color\"){\r\n
                            objToEmit[\"color\"] = doc.wallpaper.color;\r\n
                        }\r\n
                        else{\r\n
                            objToEmit[\"wallpaper\"] = true;\r\n
                        }\r\n
                    }\r\n
                    else{\r\n
                        objToEmit[\"random\"] = doc.wallpaper.random;\r\n
                    }\r\n
                    objToEmit[\"creator\"] = doc.creator;\r\n
                      objToEmit[\"shared\"] = doc.shared;\r\n
                      objToEmit[\"collabsResponse\"] = doc.collabsResponse;\r\n
                      objToEmit[\"collabs\"] = doc.collabs;\r\n
                    for(var i in doc.tag){\r\n
                      emit([doc.tag[i], doc._id], objToEmit);  \r\n
                    }\r\n
                  }\r\n
              }\r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }"
          },
          "non-pwa": {
            "map": "function (doc) {\r\n
          try {\r\n
              if(doc.c8o_view_type_published_form === true && doc.deleted !== true && (doc.pwa_enabled == undefined || doc.pwa_enabled == false)){\r\n
                  emit(doc._id, {\"doc\":doc});    \r\n
              }\r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }"
          },
          "showUsage": {
            "map": "function (doc) {\r\n
          try {\r\n
              if(doc.c8o_view_type_published_form === true && doc.deleted !== true){\r\n
                  if(doc.creationDate != null){\r\n
                      var creationDate =  new Date(+doc.creationDate).toLocaleDateString();\r\n
                  }\r\n
                  else{\r\n
                      var creationDate = \"unknown\";\r\n
                  }\r\n
                  if(doc.lastMofification != null){\r\n
                      var lastMofification =  new Date(+doc.lastMofification).toLocaleDateString();\r\n
                  }\r\n
                  else{\r\n
                      var lastMofification = \"unknown\";\r\n
                  }\r\n
                  emit([doc.creationDate, doc.lastMofification], {\"creationDate\":creationDate, lastMofification:lastMofification, \"name\":doc.name, \"_id\": doc._id, \"creator\":doc.creator});    \r\n
              }\r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }"
          }
        }
      }'
↓pwas [couchdb.DesignDocument]: 
  docdata: 
    →: |
      '{
        "_id": "_design\/pwas",
        "filters": {
          "toBeDone": "function (doc, req) {\r\n
          try {\r\n
              return doc.c8o_view_type_pwa_document == true && doc._attachments != undefined && doc.done != true && doc.updateFinished == true;\r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }"
        },
        "updates": {},
        "views": {
          "all": {
            "map": "function (doc) {\r\n
          try {\r\n
              if(doc.c8o_view_type_pwa_document == true){\r\n
                  emit(doc._id, {doc: doc});\r\n
              }\r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }"
          },
          "toBeDone": {
            "map": "function (doc) {\r\n
          try {\r\n
              if(doc.c8o_view_type_pwa_document == true && doc._attachments != undefined && doc.done != true && doc.updateFinished == true){\r\n
                  emit(doc._id, {doc: doc});\r\n
              }\r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }"
          },
          "allById": {
            "map": "function (doc) {\r\n
          try {\r\n
              if(doc._id.indexOf(\"published_\") == 0 && doc._id.indexOf(\"_pwa_document\") != -1){\r\n
                  emit(doc._id, {doc: doc});\r\n
              }\r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }"
          }
        }
      }'
↓templatesV2 [couchdb.DesignDocument]: 
  docdata: 
    →: |
      '{
        "_id": "_design\/templatesV2",
        "filters": {},
        "updates": {},
        "views": {
          "all": {
            "map": "function (doc) {\r\n
          try {\r\n
              if(doc.c8o_view_type_template === true && doc.deleted !== true){\r\n
                  emit(doc._id, {\"doc\":doc});    \r\n
              }\r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }"
          },
          "byLang": {
            "map": "function (doc) {\r\n
          try {\r\n
              if(doc.c8o_view_type_template === true && doc.deleted !== true){\r\n
                  emit(doc.lang, {\"lang\":doc.lang, \"name\": doc.name, \"enabled\": (doc.thumbnail != undefined && doc.thumbnail.enabled == true) ? \"thumbnail\": \"wallpaper\"});    \r\n
              }\r\n
          } catch (err) {\r\n
              log(err.message);\r\n
              \r\n
          }\r\n
      }"
          },
          "overview": {
            "map": "function (doc) {\r\n
          try {\r\n
              if(doc.c8o_view_type_template === true && doc.deleted !== true){\r\n
                  emit(doc._id, {\"name\":doc.name});    \r\n
              }\r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }"
          }
        }
      }'
↓users [couchdb.DesignDocument]: 
  docdata: 
    →: |
      '{
        "_id": "_design\/users",
        "filters": {},
        "updates": {},
        "views": {
          "all": {
            "map": "function (doc) {\r\n
          try {\r\n
              if(doc._id.indexOf(\"C8Oreserved_\") == 0){\r\n
                  emit(doc._id, doc._rev);\r\n
              }\r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }"
          }
        }
      }'
↓usersV2 [couchdb.DesignDocument]: 
  docdata: 
    →: |
      '{
        "_id": "_design\/usersV2",
        "filters": {},
        "updates": {},
        "views": {
          "all": {
            "map": "function (doc) {\r\n
          try {\r\n
              if(doc.c8o_view_type_users == true){\r\n
                  emit(doc._id, {\"mail\":doc.mail != undefined ? doc.mail : doc._id, displayName:doc.displayName, picture: (doc.picture != undefined ? doc.picture : \"assets\/images\/svg\/icon\/icn_user.svg\")});\r\n
              }\r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }"
          },
          "byACL": {
            "map": "function (doc) {\r\n
          try {\r\n
              if(doc.c8o_view_type_users == true){\r\n
                  emit(doc[\"~c8oAcl\"], {\"mail\":doc.mail != undefined ? doc.mail : doc._id});\r\n
              }\r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }"
          },
          "allAD": {
            "map": "function (doc) {\r\n
          try {\r\n
              if(doc.c8o_view_type_users == true && doc.provider == \"ad\"){\r\n
                  emit(doc._id, {\"acl\":doc[\"~c8oAcl\"],\"provider\": doc.provider,\"mail\":doc.mail != undefined ? doc.mail : doc._id, displayName:doc.displayName, picture: doc.picture != undefined ? doc.picture : \"assets\/images\/svg\/icon\/icn_user.svg\"});\r\n
              }\r\n
          } catch (err) {\r\n
              log(err.message);\r\n
          }\r\n
      }"
          }
        }
      }'
↓FullSync_Delete_Listener_View [couchdb.FullSyncDeleteViewListener]: 
  isEnabled: false
  targetSequence: C8Oforms.checkIfDeleteIsPermitted
  targetView: C8Oforms.c8oforms_fs.all.view
↓FullSync_Update_Listener_View [couchdb.FullSyncListener]: 
  targetSequence: C8Oforms.GeneratePwaAsset
  targetView: C8Oforms.c8oforms_fs.pwas.toBeDone
↓FullSync_Update_Listener_ViewAddGroupsToResponses [couchdb.FullSyncListener]: 
  targetSequence: C8Oforms.AddGroupsToAwnsers
  targetView: C8Oforms.c8oforms_fs.control_documents.control_documents_add_groups_to_responses
↓OnPostControlDocumentCreateUser [couchdb.FullSyncListener]: 
  comment: Triggered when we received a control document that orders to create a new anonymous link
  targetSequence: C8Oforms.CreatePublicUserAddGroupe
  targetView: C8Oforms.c8oforms_fs.control_documents.control_documents_create_user
↓OnPostControlDocumentDeleteUser [couchdb.FullSyncListener]: 
  comment: Triggered when we received a control document that orders to delete an anonymous link
  targetSequence: C8Oforms.RemovePublicUserRemoveGroupe
  targetView: C8Oforms.c8oforms_fs.control_documents.control_documents_delete_user
↓OnPostControlDocumentPublishedDoc [couchdb.FullSyncListener]: 
  comment: Triggered when we received a control document that orders to publish a document
  targetSequence: C8Oforms.PublishForm
  targetView: C8Oforms.c8oforms_fs.control_documents.control_documents_published
↓OnPostControlDocumentPwaPublishAndCreateRights [couchdb.FullSyncListener]: 
  comment: Triggered on first pwa + form publication (also manage creating anonymous form in this process)
  targetSequence: C8Oforms.PublishFormCreateAnnonymousAndPWA
  targetView: C8Oforms.c8oforms_fs.control_documents.control_documents_pwaPublishAndCreateRights
↓OrderToCheckForDeletion [couchdb.FullSyncListener]: 
  targetSequence: C8Oforms.OrderToCheckForDeletion
  targetView: C8Oforms.c8oforms_fs.control_documents.control_documents_check_for_deletion