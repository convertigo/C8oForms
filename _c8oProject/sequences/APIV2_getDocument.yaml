↓getAuthorizedDoc [steps.SimpleStep-1695127936279]: 
  expression: |
    '// Imports and helpers functions
    include("js/common.js");
    
    let authenticatedUserID = context.getAuthenticatedUser();
    console.log("toto",authenticatedUserID, "warn");
    let authGranted = false;
    let db = "c8oforms_fs";
    if(fromResponse == "true"){
    	db = "c8oforms_response_fs";
    }
    
    let doc = getDoc(id, rev, db);
    console.log("doc",doc, "warn");
    // now check if doc is authorized for currentUser
    if(doc._deleted == null && ((doc["~c8oAcl"] == null && doc.c8oGrp == null) || doc["~c8oAcl"] == authenticatedUserID)){
       authGranted = true;
    }
    // if acl is not enough to grant access, check with used groups and doc.grp is not null
    let grpIsArray = isArray(doc.c8oGrp);
    let grpIsObject = isObject(doc.c8oGrp);
    if(!authGranted && doc.c8oGrp != null && ((grpIsArray && doc.c8oGrp.length > 0) || (grpIsObject && Object.keys(doc.c8oGrp).length > 0) )){
       // call c8ofullsyncgrp =>  design/get_groups_by_user
       query = new java.util.HashMap();
       query.put(''reduce'', ''false'');
       keys = toJettison([authenticatedUserID]);
       rows = toJSON(fsclient.postView("c8ofullsyncgrp", ''design'', ''get_groups_by_user'', query, keys)).rows;
    
       // call c8oforms_fs =>  authentication/distinctGroups
       query = new java.util.HashMap();
       query.put(''reduce'', ''true'');
       query.put(''group'', ''true'');
       _use_keys = rows.map((x) => { return x.value });
       keys = toJettison(_use_keys);
       usedGroups = toJSON(fsclient.postView(db, ''authentication'', ''distinctGroups'', query, keys));
       usedGroups = usedGroups.rows.map((x) => { return x.key });
       if(usedGroups.length > 0 && ((grpIsArray && doc.c8oGrp.some(function(value) { return usedGroups.indexOf(value) !== -1; })) || (grpIsObject && usedGroups.some(function(group) { return (doc.c8oGrp[group] == true || doc.c8oGrp[group] == "true") })))){
          authGranted = true;
       }
    }
    if(!authGranted){
       doc = null;
    }
    if(doc && doc.error){
    	doc = null;
    }'
↓object2 [steps.JsonToXmlStep-1695130350652]: 
  jsonObject: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.steps.SmartType
      - SmartType: 
        - ↑mode: JS
        - →→: doc
  key: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.steps.SmartType
      - SmartType: 
        - ↑mode: PLAIN
        - →→: res
↓id [variables.RequestableVariable-1695130384939]: 
↓rev [variables.RequestableVariable-1695130389024]: 
↓fromResponse [variables.RequestableVariable-1697472248791]: 
  value: false