↓Input_variables [steps.InputVariablesStep-1572462408764]: 
↓idForV [steps.SimpleSourceStep-1572462408767]: 
  sourceDefinition: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - java.lang.String: 
          - ↑value: 1572462408764
        - java.lang.String: 
          - ↑value: ./formId/text()
  variableName: idForV
↓Sequence_JS1 [steps.SimpleStep-1572462408770]: 
  expression: |
    //todo
    var idForView = '"'+idForV+'"';
↓jElement [steps.ElementStep-1572462408773]: 
  expression: idForView
  nodeName: myIdForView
  output: false
↓Call_Transaction1 [steps.TransactionStep-1572462408776]: 
  sourceTransaction: C8Oforms.c8oforms_response_fs.GetResponseByFormId
  ↓_use_key [variables.StepVariable-1572462408779]: 
    description: (string) – Return only documents that match the specified key. Optional
    sourceDefinition: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
        - com.twinsoft.convertigo.beans.common.XMLVector: 
          - java.lang.String: 
            - ↑value: 1572462408773
          - java.lang.String: 
            - ↑value: ./text()
    value: 
↓jSource [steps.SourceStep-1572462408782]: 
  sourceDefinition: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - java.lang.String: 
          - ↑value: 1572462408776
        - java.lang.String: 
          - ↑value: ./document/couchdb_output/rows
  variableName: rows
↓Complex1 [steps.XMLComplexStep-1572462408785]: 
↓jSource1 [steps.SourceStep-1572462408788]: 
  sourceDefinition: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - java.lang.String: 
          - ↑value: 1572462408785
        - java.lang.String: 
          - ↑value: .
↓Sequence_JS2 [steps.SimpleStep-1572462408791]: 
  expression: |
    '//todo
    function searchRecursive(nodeList, nodePath, lvl){
    	for(var i = 0; i< nodeList.length; i++){
    		var level = lvl;
    		if(level == null){
    			tab.push([]);
    			level = i;
    		}
    		var type = nodeList.item(i).getNodeType();
    		var hasChild = nodeList.item(i).hasChildNodes();
    		
    		 if (hasChild && type != 3) {
    			var paf = nodePath;
    			var nodeName = nodeList.item(i).getNodeName();
    			if(nodeName != "resp"){
    				paf != "" ? paf += separator : null;
    				paf += nodeName; 
    			}
    			searchRecursive(nodeList.item(i), paf, level);
    		}
    		else{
    			var value = "" + nodeList.item(i).getTextContent();
    			if(nodePath != "" && value != ""){
    				var data = {};
    				data.key = nodePath;
    	            data.value = value;
    	            tab[level].push(data);
    			}  
    		}
    	}
    }
    
    
    function createNodeXml(arr){
    	// create parent node
    	//var node = context.addTextNodeUnderRoot("resp", "");
    	var node = myNodeList.item(0);
    	for(var i = 0; i< arr.length; i++){
    		var item = context.addTextNode(node, "item", "");
    		for(var j = 0; j< arr[i].length; j++){
    			log.warning("elem => key: " + arr[i][j]["key"]+" value: "+ arr[i][j]["value"]);
    			var elem = context.addTextNode(item, arr[i][j]["key"],arr[i][j]["value"]);			
    		}
    	}
    }
    
    
    const separator = "_";
    var tab = [];
    var list = rows.item(0).getElementsByTagName("resp");
    var length =rows.item(0).length;
    log.warning("resultat length: " + length);
    searchRecursive(list, "", null);
    log.warning("resultat: " + JSON.stringify(tab))
    createNodeXml(tab);
    /*log.warning("resultat: " + JSON.stringify(tab));
    var tab = JSON.stringify({tab: tab});*/
    /*
    var xmlUtils = use("com.twinsoft.convertigo.engine.util.XMLUtils");
    var jsonObject = new org.codehaus.jettison.json.JSONObject(JSON.stringify(tab));
    xmlUtils.jsonToXml(jsonObject, dom.getDocumentElement());
    
    */
    /*
    function searchRecursive(nodeList, nodePath, lvl){
    for(var i = 0; i< nodeList.length; i++){
    	var level = lvl;
    	if(level == null){
    		tab.push([]);
    		level = i;
    	}
    	var type = nodeList.item(i).getNodeType();
    	var hasChild = nodeList.item(i).hasChildNodes();
    	
    	 if (hasChild && type != 3) {
    		var paf = nodePath;
    		var nodeName = nodeList.item(i).getNodeName();
    		if(nodeName != "resp"){
    			paf != "" ? paf += separator : null;
    			paf += nodeName; 
    		}
    		searchRecursive(nodeList.item(i), paf, level);
    	}
    	else{
    		var value = "" + nodeList.item(i).getTextContent();
    		var data = {};
            data.key = nodePath;
            data.value = value;
            tab[level].push(data);
            
    	}
    }
    }
    */'
↓Write_CSV [steps.WriteCSVStep-1572462408794]: 
  dataFile: '".//csv/" + formId + ".csv"'
  sourceDefinition: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - java.lang.String: 
          - ↑value: 1572462408785
        - java.lang.String: 
          - ↑value: ./item
  titleLine: true
↓Concat [steps.XMLConcatStep-1572462408797]: 
  output: false
  separator: 
  sourcesDefinition: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: description
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
              - com.twinsoft.convertigo.beans.common.XMLVector: 
                - java.lang.String: 
                  - ↑value: 1572462408764
                - java.lang.String: 
                  - ↑value: ./formId/text()
            - java.lang.String: 
              - ↑value: ''
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: description
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
              - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: .csv
↓jSimpleSource [steps.SimpleSourceStep-1572462408800]: 
  sourceDefinition: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - java.lang.String: 
          - ↑value: 1572462408797
        - java.lang.String: 
          - ↑value: ./text()
  variableName: id
↓Element [steps.XMLElementStep-1572462408803]: 
  nodeName: attachment
  ↓jAttribute [steps.AttributeStep-1572462408806]: 
    nodeName: content-type
    nodeText: application/csv
  ↓jAttribute1 [steps.AttributeStep-1572462408809]: 
    expression: context.getProjectDirectory() + "/csv/"+ id
    nodeName: local-url
  ↓jAttribute2 [steps.AttributeStep-1572462408812]: 
    expression: name+".csv"
    nodeName: name
  ↓jAttribute3 [steps.AttributeStep-1572462408815]: 
    nodeName: type
    nodeText: attachment
↓formId [variables.RequestableVariable-1572462408818]: 
↓name [variables.RequestableVariable-1572462408821]: 
↓Test_Case [core.TestCase]: 
  ↓formId [variables.TestCaseVariable-1572462408825]: 
    value: published_1570197503511
  ↓name [variables.TestCaseVariable-1572462408828]: 
    value: a