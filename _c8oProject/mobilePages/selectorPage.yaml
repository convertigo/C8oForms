comment: Form chooser
scriptContent: 
  - xmlizable: 
    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
    - com.twinsoft.convertigo.beans.common.FormatedContent: 
      →: |
        '/*Begin_c8o_PageImport*/
        import {C8oFullSyncChangeListener } from "c8osdkangular";
        /*End_c8o_PageImport*/
        /*Begin_c8o_PageDeclaration*/
        	public list = [];
        	public listResponses = [];
        	public creating ="";
        	public query = "";
        	public created = new Date().getTime();
        	public form:any;
        	/*End_c8o_PageDeclaration*/
        /*Begin_c8o_PageConstructor*/
        		this.local.searchTags = [];
                this.local.searchSubTags = [];
        		this.global.platform.name[''0''] = ""
        		    this.global.visibleoptions = [];
        		this.global["visibleoptions1"] = [];
        		/*End_c8o_PageConstructor*/
        /*Begin_c8o_PageFunction*/
        	getLevelAccesDoc(doc, settings){
        		// if I am the owner of the doc
        		if(doc.creator == settings["~c8oAcl"]){
        			return 0;
        		}
        		else {
        			let groups = settings.group != undefined ? Object.keys(settings.groups).filter((x)=>{ return settings.groups[x] == true}) : [];
        			let isAcollabResp = doc.collabsResponse != undefined && (doc.collabsResponse.indexOf(settings["_id"]) != -1 || doc.collabsResponse.filter(value => (groups.indexOf(value) != -1)).length > 0);
        			let isAcollab = doc.collabs != undefined && (doc.collabs.indexOf(settings["_id"]) != -1 || doc.collabs.filter(value => (groups.indexOf(value) != -1)).length > 0);
        			let isAshared  = doc.shared != undefined && (doc.shared.indexOf(settings["_id"]) != -1 || doc.shared.filter(value => (groups.indexOf(value) != -1)).length > 0);
        			if(isAcollabResp && isAcollab){
        				return 1;
        			}
        			else if(isAcollab){
        				return 2;
        			}
        			else if(isAcollabResp){
        				return 3;
        			}
        			else if(isAshared){
        				return 4;
        			}
        		}
        	}
        	
        	trackById(index, item) {
        		return item.id;  
        	}
        	trackByKey(index, item) {
        		return item.key;  
        	}
        	public stringi(str){
        	    try{
        	        return JSON.stringify(str);
        	    }
        	    catch(e){
        	        return ''catched''
        	    }
        	}
        	
        	version(rev: string):string{
        	    let index = rev.indexOf("-");
        	    return rev.substring(0,index);
        	    
        	}
        	getSizeObject(obj): number{
        	    if(obj != null){
        	        let count = 0;
        	        for(let item in obj){
        	            if(obj[item]){
        	                count ++;
        	            }
        	        }
        	        return count;
        	    }
        	    else{
        	        return 0;
        	    }
        	    
        	}
        	
        	getSizeObjectFormated(obj){
        	    let count = this.getSizeObject(obj);
        	    return ((count <= 9) ? "0"+ count : count);
        	}
        	
        	getTranslate(msgTosearch :string): Promise<any>{
                return new Promise((resolve, reject)=>{
                    let translate = this.getInstance(TranslateService)
                    translate.get(msgTosearch).subscribe((res: string) => {
                        resolve(res);
                    });
                });        
            }
        	
        	
        	getTime(){
        		return new Date().getTime() + "";
        	}
        	
        	formatTime(date: any){
        	    return new Date(+date).toLocaleString();
        	}
        	
        	getcolorfromEl(id){
        	    var el = document.getElementById(id)
        	    if(el != null){
        	        let rgb = this.getAverageRGB(el);
        	        let hex = this.rgbToHex(rgb);
        	        return this.getContrastYIQ(hex);
        	    }
        	}
        	
        	rgbToHex (rgb) { 
        	    var hex = Number(rgb).toString(16);
        	    if (hex.length < 2) {
        	         hex = "0" + hex;
        	    }
        	    return hex;
        	  }
        	
        	getContrastYIQ(hexcolor){
        	    var r = parseInt(hexcolor.substr(0,2),16);
        	    var g = parseInt(hexcolor.substr(2,2),16);
        	    var b = parseInt(hexcolor.substr(4,2),16);
        	    var yiq = ((r*299)+(g*587)+(b*114))/1000;
        	    console.log((yiq >= 128) ? ''black'' : ''white'');
        	    return (yiq >= 128) ? ''black'' : ''white'';
        	}
        	
        	getAverageRGB(imgEl) {
        
        	    var blockSize = 5, // only visit every 5 pixels
        	        defaultRGB = {r:0,g:0,b:0}, // for non-supporting envs
        	        canvas = document.createElement(''canvas''),
        	        context = canvas.getContext && canvas.getContext(''2d''),
        	        data, width, height,
        	        i = -4,
        	        length,
        	        rgb = {r:0,g:0,b:0},
        	        count = 0;
        
        	    if (!context) {
        	        return defaultRGB;
        	    }
        
        	    height = canvas.height = imgEl.naturalHeight || imgEl.offsetHeight || imgEl.height;
        	    width = canvas.width = imgEl.naturalWidth || imgEl.offsetWidth || imgEl.width;
        
        	        var src = imgEl.src;
        	        imgEl = new Image;
        	        imgEl.setAttribute(''crossOrigin'', ''anonymous''); 
        	        imgEl.src = src;
        	    
        	    context.drawImage(imgEl, 0, 0);
        	    
        	    //context.canvas.baseURI = this.router.c8o.endpoint;
        	    try {
        	        data = context.getImageData(0, 0, width, height);
        	    } catch(e) {
        	        /* security error, img on diff domain */
        	        return defaultRGB;
        	    }
        
        	    length = data.data.length;
        
        	    while ( (i += blockSize * 4) < length ) {
        	        ++count;
        	        rgb.r += data.data[i];
        	        rgb.g += data.data[i+1];
        	        rgb.b += data.data[i+2];
        	    }
        
        	    // ~~ used to floor values
        	    rgb.r = ~~(rgb.r/count);
        	    rgb.g = ~~(rgb.g/count);
        	    rgb.b = ~~(rgb.b/count);
        
        	    return rgb;
        
        	}
        	
        	updateState() {
                return new Promise((resolve)=>{
                    let params = {};
                    params["_use_policy"] =  "merge";
                    params["thumbnail"] = "";
                });     
            }
        	/*End_c8o_PageFunction*/
        '
segment: selector/:published/:folder/:sub/:grid
title: Selection de formulaires
↓Header [ngx.components.UIDynamicElement-1537533854974]: 
  beanData: '{"ionBean":"Header"}'
  tagName: ion-header
  ↓Grid [ngx.components.UIDynamicElement-1559835774461]: 
    beanData: '{"ionBean":"Grid"}'
    isEnabled: false
    tagName: ion-grid
    ↓GridRow [ngx.components.UIDynamicElement-1559835779201]: 
      beanData: '{"ionBean":"GridRow"}'
      tagName: ion-row
      ↓GridCol2 [ngx.components.UIDynamicElement-1559835825383]: 
        beanData: |
          '{
           "ionBean": "GridCol",
           "SizeLg": "plain:1",
           "SizeXl": "plain:1"
          }'
        tagName: ion-col
        ↓ToolBar [ngx.components.UIDynamicElement-1567412568906]: 
          beanData: '{"ionBean":"ToolBar"}'
          isEnabled: false
          tagName: ion-toolbar
        ↓Style [ngx.components.UIStyle-1567415046209]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  color:-internal-root-color;
                  
      ↓GridCol [ngx.components.UIDynamicElement-1559835782489]: 
        beanData: |
          '{
           "ionBean": "GridCol",
           "SizeLg": "plain:10",
           "SizeMd": "plain:12",
           "SizeSm": "plain:12",
           "SizeXl": "plain:10",
           "SizeXs": "plain:12"
          }'
        tagName: ion-col
        ↓Directive [ngx.components.UIControlDirective-1559835884307]: 
          directiveName: If
          directiveSource: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:this.global?.platform?.name['0'] != 'mobile'
          ↓Grid [ngx.components.UIDynamicElement-1567437444768]: 
            beanData: '{"ionBean":"Grid"}'
            tagName: ion-grid
            ↓GridRow [ngx.components.UIDynamicElement-1567437444771]: 
              beanData: '{"ionBean":"GridRow"}'
              tagName: ion-row
              ↓Style [ngx.components.UIStyle-1567437444774]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        'align-items: end;
                        margin-top:10px;
                        '
              ↓GridCol [ngx.components.UIDynamicElement-1567437444798]: 
                beanData: '{"ionBean":"GridCol"}'
                tagName: ion-col
                ↓ButtonMenu [ngx.components.UIDynamicElement-1567437444801]: 
                  beanData: |
                    '{
                     "ionBean": "MenuButton",
                     "ButtonFormType": "plain:false",
                     "IonColor": "plain:dark"
                    }'
                  comment: A button to toggle the menu
                  tagName: ion-menu-button
                  ↓Style [ngx.components.UIStyle-1567437444807]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            float:left;
                            
                            
                ↓ImageConvertigo [ngx.components.UIDynamicElement-1567437444810]: 
                  beanData: '{"ionBean":"Image","url":"script:''assets\/images\/svg\/logo\/logo_convertigo_blue.svg''"}'
                  selfClose: true
                  tagName: img
                  ↓Style [ngx.components.UIStyle-1567437444813]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            	margin-left:0.5em;
                            	margin-right:1em;
                            	margin-top:1px;
                            
                ↓Text [ngx.components.UIText-1567437444816]: 
                  i18n: true
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:Form Builder
              ↓GridCol1 [ngx.components.UIDynamicElement-1567437444837]: 
                beanData: '{"ionBean":"GridCol"}'
                tagName: ion-col
                ↓Tag1 [ngx.components.UIElement-1567515622653]: 
                  comment: svg profile
                  tagName: svg
                  ↓Attr [ngx.components.UIAttribute-1567515622656]: 
                    attrName: width
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:34px
                  ↓Attr1 [ngx.components.UIAttribute-1567515622659]: 
                    attrName: height
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:34px;
                  ↓Attr2 [ngx.components.UIAttribute-1567515622662]: 
                    attrName: viewBox
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:0 0 34 34
                  ↓Attr3 [ngx.components.UIAttribute-1567515622665]: 
                    attrName: version
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:1.1
                  ↓Attr4 [ngx.components.UIAttribute-1567515622668]: 
                    attrName: xmlns
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:http://www.w3.org/2000/svg
                  ↓Attr5 [ngx.components.UIAttribute-1567515622671]: 
                    attrName: xmlns:xlink
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:http://www.w3.org/1999/xlink
                  ↓FragmentProfile [ngx.components.UICustom-1567515622674]: 
                    htmlTemplate: |
                      <desc>Created with Sketch.</desc>
                          <defs></defs>
                          <g id="Homepage" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" stroke-linecap="round" stroke-linejoin="round">
                              <g id="02b_hover_card_project" transform="translate(-1139.000000, -15.000000)" stroke="#4A4A4A">
                                  <g id="Header">
                                      <g id="icn-compte" transform="translate(1140.000000, 16.000000)">
                                          <path d="M16,0 C7.17634783,0 0,7.17634783 0,16 C0,24.8222609 7.17634783,32 16,32 C24.8222609,32 32,24.8222609 32,16 C32,7.17634783 24.8222609,0 16,0 Z" id="Stroke-1"></path>
                                          <path d="M26.2255304,27.9137391 C22.8077913,26.4897391 19.4853565,24.8507826 19.1646609,23.821913 L19.1646609,22.4403478 C20.0780522,21.5053913 20.7987478,20.2017391 21.2258783,18.6754783 C21.6571826,16.5405217 21.6571826,12.3353043 21.6571826,12.3353043 C21.6571826,9.14226087 19.8784,6.95652174 15.8137043,6.95652174 C11.8533565,6.95652174 9.96813913,9.14226087 9.96813913,12.3353043 C9.96813913,12.3353043 9.96813913,16.5676522 10.3994435,18.6747826 C10.8258783,20.2017391 11.5472696,21.5053913 12.4613565,22.4403478 L12.4613565,23.821913 C12.1385739,24.8591304 9.02692174,26.3937391 5.56535652,27.8323478" id="Stroke-3"></path>
                                      </g>
                                  </g>
                              </g>
                          </g>
                  ↓Style [ngx.components.UIStyle-1567437444843]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            'float:right;
                            margin-left:1em;
                            }
                            .class1567515622653:hover{
                            	filter: drop-shadow(3px 3px 3px #979797);
                            '
                ↓Tag [ngx.components.UIElement-1567515311431]: 
                  comment: svg star
                  tagName: svg
                  ↓Attr [ngx.components.UIAttribute-1567515335719]: 
                    attrName: width
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:34px
                  ↓Attr1 [ngx.components.UIAttribute-1567515341008]: 
                    attrName: height
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:34px;
                  ↓Attr2 [ngx.components.UIAttribute-1567515343106]: 
                    attrName: viewBox
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:0 0 34 34
                  ↓Attr3 [ngx.components.UIAttribute-1567515346143]: 
                    attrName: version
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:1.1
                  ↓Attr4 [ngx.components.UIAttribute-1567515349145]: 
                    attrName: xmlns
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:http://www.w3.org/2000/svg
                  ↓Attr5 [ngx.components.UIAttribute-1567515453044]: 
                    attrName: xmlns:xlink
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:http://www.w3.org/1999/xlink
                  ↓FragmentStar [ngx.components.UICustom-1567515135759]: 
                    htmlTemplate: |
                      <desc>Created with Sketch.</desc>
                          <defs></defs>
                          <g id="Homepage" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                              <g id="02b_hover_card_project" transform="translate(-1091.000000, -15.000000)">
                                  <g id="Header">
                                      <g id="icn-favorite" transform="translate(1092.000000, 16.000000)">
                                          <circle id="Oval" stroke="#5B5B5B" fill="#FFFFFF" cx="16" cy="16" r="16"></circle>
                                          <path d="M10.3908451,24 C12.4190141,23.1212121 13.8767606,22.3333333 16,21.030303 C18.1232394,22.3333333 19.5809859,23.1212121 21.6091549,24 C21.3239437,21.6060606 21.0704225,20.3636364 20.3732394,18 C22.4964789,16.6363636 23.6690141,15.7575758 25,14.5151515 C22.6549296,13.6969697 21.1021127,13.3030303 18.915493,12.9393939 C17.806338,10.8484848 16.9823944,9.45454545 16,8 C15.0176056,9.45454545 14.193662,10.8484848 13.084507,12.9393939 C10.8978873,13.3030303 9.34507042,13.6969697 7,14.5151515 C8.33098592,15.7575758 9.50352113,16.6363636 11.6267606,18 C10.9295775,20.3636364 10.6760563,21.6060606 10.3908451,24 Z M21.7320872,25 C19.5825545,24.1118421 17.7445483,23.2236842 16,22.1578947 C14.2554517,23.2236842 12.4174455,24.1118421 10.2679128,25 L9.33333333,24.3486842 C9.52024922,22.0690789 9.8317757,20.4111842 10.423676,18.3092105 C8.58566978,17.0361842 7.27725857,16 6,14.8157895 L6.24922118,13.75 C8.02492212,13.0394737 9.95638629,12.5065789 12.3551402,12.0328947 C13.4143302,10.0789474 14.1308411,8.89473684 15.470405,7 L16.529595,7 C17.8691589,8.89473684 18.5856698,10.0789474 19.6448598,12.0328947 C22.0436137,12.5065789 23.9750779,13.0394737 25.7507788,13.75 L26,14.8157895 C24.7227414,16 23.4143302,17.0361842 21.576324,18.3092105 C22.1682243,20.4111842 22.4797508,22.0690789 22.6666667,24.3486842 L21.7320872,25 Z" id="Mask" [attr.fill]="this.local.fav ?'#ff8206':'#4d4d4d'"></path>
                                      </g>
                                  </g>
                              </g>
                          </g>
                  ↓Event [ngx.components.UIControlEvent-1567503870243]: 
                    ↓setFavView [ngx.components.UICustomAction-1567503870249]: 
                      actionValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              		this.local.fav = !this.local.fav;
                              		resolve();
                              
                      ↓ifFavView [ngx.components.UIDynamicIf-1567503870252]: 
                        beanData: '{"ionBean":"IfElseAction","condition":"script:this.local.fav"}'
                        ↓GetData [ngx.components.UIDynamicAction-1567503870255]: 
                          beanData: |
                            '{
                             "ionBean": "FullSyncGetAction",
                             "requestable": "plain:C8Oforms_NGX.c8oform_users_objects",
                             "_id": "script:true ? ''grimont.c@gmail.com'' : this.global[''user'']"
                            }'
                          ↓Failure_Handler [ngx.components.UIActionFailureEvent-1567503870258]: 
                          ↓setFav [ngx.components.UICustomAction-1567503870261]: 
                            actionValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    		page.local.favs = props.stack["GetData"].out.favorites;
                                    		resolve();
                                    
                          ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1567503870264]: 
                            beanData: '{"ionBean":"InvokeAction"}'
                            stack: C8Oforms_NGX.MobileApplication.Application.cancelLive
                            ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1567503870267]: 
                              beanData: '{"ionBean":"InvokeAction"}'
                              stack: C8Oforms_NGX.MobileApplication.Application.callViewLiveAndFillFormList
                              ↓keys [ngx.components.UIControlVariable-1567503870270]: 
                                varValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                    - MobileSmartSourceType: script:stack["GetData"].out.favorites
                        ↓Else_Handler [ngx.components.UIActionElseEvent-1567503870273]: 
                          ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1567503870276]: 
                            beanData: '{"ionBean":"InvokeAction"}'
                            stack: C8Oforms_NGX.MobileApplication.Application.cancelLive
                            ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1567503870279]: 
                              beanData: '{"ionBean":"InvokeAction"}'
                              stack: C8Oforms_NGX.MobileApplication.Application.callViewLiveAndFillFormList
                              ↓keys [ngx.components.UIControlVariable-1567503870282]: 
                                varValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                    - MobileSmartSourceType: script:null
                  ↓Style [ngx.components.UIStyle-1567437444849]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            'float:right;
                            margin-left:1em;
                            }
                            .class1567515311431:hover{
                            	filter: drop-shadow(3px 3px 3px #979797);
                            	fill: #DA4567;
                            '
                ↓Tag11 [ngx.components.UIElement-1567515760237]: 
                  comment: svg bell
                  tagName: svg
                  ↓Attr [ngx.components.UIAttribute-1567515760240]: 
                    attrName: width
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:34px
                  ↓Attr1 [ngx.components.UIAttribute-1567515760243]: 
                    attrName: height
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:34px;
                  ↓Attr2 [ngx.components.UIAttribute-1567515760246]: 
                    attrName: viewBox
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:0 0 34 34
                  ↓Attr3 [ngx.components.UIAttribute-1567515760249]: 
                    attrName: version
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:1.1
                  ↓Attr4 [ngx.components.UIAttribute-1567515760252]: 
                    attrName: xmlns
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:http://www.w3.org/2000/svg
                  ↓Attr5 [ngx.components.UIAttribute-1567515760255]: 
                    attrName: xmlns:xlink
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:http://www.w3.org/1999/xlink
                  ↓FragmentBell [ngx.components.UICustom-1567515760258]: 
                    htmlTemplate: |
                      <desc>Created with Sketch.</desc>
                          <defs></defs>
                          <g id="Homepage" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                              <g id="02b_hover_card_project" transform="translate(-1040.000000, -15.000000)">
                                  <g id="Header">
                                      <g id="icn-notif-on" transform="translate(1041.000000, 16.000000)">
                                          <circle id="Oval" stroke="#4A4A4A" cx="16" cy="16" r="16"></circle>
                                          <path d="M23.4326628,23.710562 L14.8895305,23.710562 L9.56616012,23.710562 C8.78762297,23.710562 8.15336624,23.0763053 8.15336624,22.2983453 C8.15336624,21.6398494 8.61968056,21.059265 9.26086275,20.916716 C9.34569964,20.897671 9.42534243,20.8601581 9.49344279,20.8059086 C10.3781703,20.1064371 10.9096994,16.2316422 11.0961097,14.6035819 C11.6495694,10.1412771 13.7375956,8.78850384 15.1723201,8.39259837 C15.1792456,8.390867 15.1867482,8.39375261 15.1936736,8.39202124 C15.3552677,8.34700575 15.5041651,8.31584118 15.6409429,8.29217919 C15.6669134,8.28813934 15.6946153,8.28294525 15.7211629,8.27948252 C15.7604071,8.2737113 15.7973429,8.26794008 15.8337016,8.26390023 C16.0114551,8.24370097 16.1672779,8.23619839 16.2878963,8.23619839 C16.3767731,8.23619839 16.4315996,8.24023824 16.4402565,8.24081536 C16.4771923,8.24485522 16.5170137,8.24427809 16.5551037,8.24139249 C16.5666461,8.24023824 16.6208956,8.23619839 16.7103494,8.23619839 C16.8292365,8.23619839 16.983328,8.24370097 17.158773,8.26390023 C17.1951316,8.26794008 17.2320674,8.27313418 17.2707346,8.27890539 C17.2955508,8.28236812 17.3226755,8.28756222 17.348646,8.29102495 C17.4871552,8.31468694 17.6389382,8.34642863 17.803995,8.39202124 C17.8178459,8.3960611 17.832274,8.39490685 17.8455478,8.39779246 C19.2802723,8.80062339 21.3509849,10.1620534 21.8992505,14.5960793 C22.0775811,16.2281794 22.5877566,20.0995117 23.4753698,20.8001374 C23.5457786,20.8566953 23.628307,20.8942082 23.7166066,20.912099 C24.3699084,21.0465684 24.8437253,21.6300384 24.8437253,22.2989224 C24.8448795,23.0763053 24.211777,23.710562 23.4326628,23.710562 Z M17.6978046,24.8659596 C17.7099242,24.9363685 17.7168496,25.0085087 17.7168496,25.0818032 C17.7168496,25.7524185 17.1703154,26.2983757 16.4991229,26.2983757 C15.8279304,26.2983757 15.2825504,25.7524185 15.2825504,25.0818032 C15.2825504,25.0079316 15.2888987,24.9357914 15.3010183,24.8648054 L17.6978046,24.8659596 Z M15.6172809,7.03463105 C15.6172809,6.54927171 16.0137635,6.15394336 16.4991229,6.15394336 C16.9850593,6.15394336 17.3815419,6.54927171 17.3815419,7.03463105 L17.3815419,7.12812476 C17.3238298,7.12004506 17.2770829,7.11773657 17.2245648,7.11254248 C17.1928231,7.10907975 17.1645442,7.10619414 17.1339567,7.10330853 C17.0693191,7.09753731 17.0064128,7.0917661 16.9487007,7.08888049 C16.8615553,7.08368639 16.7871066,7.08195503 16.7276631,7.08137791 C16.7236232,7.08137791 16.7166978,7.08080078 16.7126579,7.08080078 C16.6913044,7.08080078 16.6774535,7.08137791 16.6584085,7.08195503 C16.627821,7.08195503 16.5983878,7.08253215 16.5741487,7.08368639 C16.556835,7.08426351 16.5452926,7.08484064 16.5314417,7.08541776 C16.5210535,7.08599488 16.5077797,7.08599488 16.4991229,7.086572 C16.4650727,7.08426351 16.4119775,7.08253215 16.3508026,7.08137791 C16.1591982,7.07272108 15.9231554,7.08541776 15.6172809,7.12754764 L15.6172809,7.03463105 Z M24.1442538,19.8282645 C23.7743188,19.2551827 23.2878052,16.671986 23.0459912,14.46161 C22.4636755,9.75229705 20.222712,8.04170838 18.5363624,7.42476531 L18.5363624,7.03463105 C18.5363624,5.9127065 17.6227788,4.9997 16.4997,4.9997 C15.3771983,4.9997 14.4636147,5.9127065 14.4636147,7.03463105 L14.4636147,7.42476531 C12.7761109,8.04228551 10.5345703,9.75402841 9.95052316,14.4668041 C9.6960125,16.6852598 9.19276239,19.2875015 8.82802149,19.8374984 C7.75803789,20.1612637 6.9997,21.1666097 6.9997,22.2983453 C6.9997,23.7134476 8.15105775,24.8648054 9.56673724,24.8648054 L14.1537004,24.8648054 C14.147352,24.9375227 14.1294613,25.0073545 14.1294613,25.0818032 C14.1294613,26.390138 15.1930965,27.452619 16.5002771,27.452619 C17.8080349,27.452619 18.8722472,26.3895609 18.8722472,25.0818032 C18.8722472,25.0079316 18.8537793,24.9375227 18.847431,24.8648054 L23.4332399,24.8648054 C24.8483422,24.8648054 25.9997,23.7134476 25.9997,22.2983453 C25.9991229,21.1504503 25.2303968,20.1422187 24.1442538,19.8282645 Z" id="Fill-1" fill="#4A4A4A"></path>
                                     		<circle *ngIf="this?.global?.notif" id="Oval" fill="#FF8206" cx="29" cy="6" r="6"></circle>
                                          <text *ngIf="this?.global?.notif" id="4" font-family="Arial-BoldMT, Arial" font-size="9" font-weight="bold" fill="#FFFFFF">
                                              <tspan x="26" y="9">4</tspan>
                                          </text>
                                      </g>
                                  </g>
                              </g>
                          </g>
                  ↓Style [ngx.components.UIStyle-1567515760303]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            'float:right;
                            margin-left:1em;
                            }
                            .class1567515760237:hover{
                            	filter: drop-shadow(3px 3px 3px #979797);
                            '
                ↓btCreate [ngx.components.UIDynamicElement-1567437444858]: 
                  beanData: |
                    '{
                     "ionBean": "Button",
                     "IonShape": "plain:round",
                     "IonSize": "plain:small"
                    }'
                  tagName: ion-button
                  ↓Style [ngx.components.UIStyle-1567437444861]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            '	border-radius: 34px;
                            	background-color: #ff8206;
                            	padding-left: 2rem;
                            	padding-right: 2rem;
                            	color:white;
                             	font-size: 14px;
                               	line-height: 1.79;
                              	letter-spacing: normal;
                              	text-align: center;
                              	float:right;
                            }
                            
                            .class1567437444858:hover {
                            	color:white !important;
                            	background-color: #333333 !important;
                            '
                  ↓Icon [ngx.components.UIDynamicElement-1567437444864]: 
                    beanData: '{"ionBean":"Icon","IconName":"plain:add-circle"}'
                    isEnabled: false
                    tagName: ion-icon
                  ↓Tag [ngx.components.UIElement-1567525117610]: 
                    comment: svg plus
                    tagName: svg
                    ↓Attr [ngx.components.UIAttribute-1567525117616]: 
                      attrName: width
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:14px
                    ↓Attr1 [ngx.components.UIAttribute-1567525117619]: 
                      attrName: height
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:14px
                    ↓Attr2 [ngx.components.UIAttribute-1567525117622]: 
                      attrName: viewBox
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:0 0 14 14
                    ↓Attr3 [ngx.components.UIAttribute-1567525117625]: 
                      attrName: version
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:1.1
                    ↓Attr4 [ngx.components.UIAttribute-1567525117628]: 
                      attrName: xmlns
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:http://www.w3.org/2000/svg
                    ↓Attr5 [ngx.components.UIAttribute-1567525117631]: 
                      attrName: xmlns:xlink
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:http://www.w3.org/1999/xlink
                    ↓FragmentStar [ngx.components.UICustom-1567525117634]: 
                      htmlTemplate: |
                        <defs></defs>
                            <g id="Homepage" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" stroke-linecap="square">
                                <g id="02a_search_hover" transform="translate(-797.000000, -25.000000)" stroke="#FFFFFF" stroke-width="2">
                                    <g id="Header">
                                        <g id="btn-new" transform="translate(775.000000, 16.000000)">
                                            <g id="icn" transform="translate(23.000000, 10.000000)">
                                                <path d="M6,0 L6,12" id="Line-2"></path>
                                                <path d="M11.6683968,5.82605018 L0.333333333,5.82605018" id="Line-2-Copy"></path>
                                            </g>
                                        </g>
                                    </g>
                                </g>
                            </g>
                    ↓Event [ngx.components.UIControlEvent-1567525117637]: 
                      isEnabled: false
                      ↓RootPage [ngx.components.UIDynamicAction-1567525117640]: 
                        beanData: '{"ionBean":"RootPageAction","page":"plain:C8Oforms_NGX.MobileApplication.Application.editorPage"}'
                        isEnabled: false
                      ↓setFavView [ngx.components.UICustomAction-1567525117644]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                		this.local.fav = !this.local.fav;
                                		resolve();
                                
                        ↓ifFavView [ngx.components.UIDynamicIf-1567525117652]: 
                          beanData: '{"ionBean":"IfElseAction","condition":"script:this.local.fav"}'
                          ↓GetData [ngx.components.UIDynamicAction-1567525117655]: 
                            beanData: |
                              '{
                               "ionBean": "FullSyncGetAction",
                               "requestable": "plain:C8Oforms_NGX.c8oform_users_objects",
                               "_id": "script:true ? ''grimont.c@gmail.com'' : this.global[''user'']"
                              }'
                            ↓Failure_Handler [ngx.components.UIActionFailureEvent-1567525117659]: 
                            ↓setFav [ngx.components.UICustomAction-1567525117662]: 
                              actionValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                    →: |
                                      		page.local.favs = props.stack["GetData"].out.favorites;
                                      		resolve();
                                      
                            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1567525117665]: 
                              beanData: '{"ionBean":"InvokeAction"}'
                              stack: C8Oforms_NGX.MobileApplication.Application.cancelLive
                              ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1567525117668]: 
                                beanData: '{"ionBean":"InvokeAction"}'
                                stack: C8Oforms_NGX.MobileApplication.Application.callViewLiveAndFillFormList
                                ↓keys [ngx.components.UIControlVariable-1567525117671]: 
                                  varValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                      - MobileSmartSourceType: script:stack["GetData"].out.favorites
                          ↓Else_Handler [ngx.components.UIActionElseEvent-1567525117674]: 
                            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1567525117677]: 
                              beanData: '{"ionBean":"InvokeAction"}'
                              stack: C8Oforms_NGX.MobileApplication.Application.cancelLive
                              ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1567525117680]: 
                                beanData: '{"ionBean":"InvokeAction"}'
                                stack: C8Oforms_NGX.MobileApplication.Application.callViewLiveAndFillFormList
                                ↓keys [ngx.components.UIControlVariable-1567525117683]: 
                                  varValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                      - MobileSmartSourceType: script:null
                    ↓Style [ngx.components.UIStyle-1567525117686]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              float:left;
                              margin-right:0.5em;
                              
                  ↓Text [ngx.components.UIText-1567437444867]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'chooseformcreate' | translate
                  ↓Event [ngx.components.UIControlEvent-1569836510783]: 
                    ↓ShowAlertCustom [ngx.components.UICustomAction-1569836515031]: 
                      actionValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '		let alertCtrl: AlertController = this.getInstance(AlertController);
                              		const prompt = alertCtrl.create({
                              		      header: ''Creating From'',
                              		      message: "Enter a name for the new form",
                              		      inputs: [
                              		        {
                              		          name: ''title'',
                              		          placeholder: ''Title''
                              		        },
                              		      ],
                              		      buttons: [
                              		        {
                              		          text: ''Cancel'',
                              		          handler: (data) => {
                              		            resolve(false);
                              		          }
                              		        },
                              		        {
                              		          text: ''Save'',
                              		          handler: (data) => {
                              		              console.log(data);
                              		              this.creating = data["title"];
                              		            resolve(data["title"]);
                              		          }
                              		        }
                              		      ]
                              		    }).then((res)=>{res.prensent()});
                              '
                      ↓If [ngx.components.UIDynamicAction-1569836515034]: 
                        beanData: '{"ionBean":"IfAction","condition":"script:parent.out != false && this.creating != ''''"}'
                        ↓CustomAction [ngx.components.UICustomAction-1569936052786]: 
                          actionValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                              page.local.random = "assets/images/svg/imgplaceholder/placeholder" + (Math.floor(Math.random() * Math.floor(3)))+".svg";
                                  		resolve();
                                  
                          ↓PostData [ngx.components.UIDynamicAction-1569836515037]: 
                            beanData: |
                              '{
                               "ionBean": "FullSyncPostAction",
                               "requestable": "plain:C8Oforms_NGX.c8oforms_fs",
                               "_id": "script:this.getTime()",
                               "_use_policy": "plain:merge"
                              }'
                            ↓formulaire [ngx.components.UIControlVariable-1569836515040]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:[]
                            ↓wallpaper [ngx.components.UIControlVariable-1569836515043]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: 'script:{''link'':null, ''enabled'': false, ''index'': null, ''random'': this.local.random}'
                            ↓name [ngx.components.UIControlVariable-1569836515046]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:this.creating
                            ↓descform [ngx.components.UIControlVariable-1569836515049]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: plain:
                            ↓namePosition [ngx.components.UIControlVariable-1569836515052]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: plain:text-center
                            ↓descformPosition [ngx.components.UIControlVariable-1569836515055]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: plain:text-left
                            ↓GetData [ngx.components.UIDynamicAction-1569836515058]: 
                              beanData: |
                                '{
                                 "ionBean": "FullSyncGetAction",
                                 "requestable": "plain:C8Oforms_NGX.c8oforms_fs",
                                 "_id": "script:parent.out.id"
                                }'
                              ↓SetGlobal [ngx.components.UIDynamicAction-1569836515061]: 
                                beanData: |
                                  '{
                                   "ionBean": "SetGlobalAction",
                                   "Property": "plain:formSelected",
                                   "Value": "script:parent.out"
                                  }'
                                ↓SupressCreating [ngx.components.UICustomAction-1569836515064]: 
                                  actionValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                        →: |
                                          		this.creating = "";
                                          		resolve();
                                          
                              ↓RootPage [ngx.components.UIDynamicAction-1569836515067]: 
                                beanData: '{"ionBean":"RootPageAction","page":"plain:C8Oforms_NGX.MobileApplication.Application.editorPage"}'
                      ↓Else [ngx.components.UIDynamicAction-1569836515070]: 
                        beanData: '{"ionBean":"IfAction","condition":"script:parent.out == false || this.creating == ''''"}'
                        ↓Translate [ngx.components.UICustomAction-1569836515073]: 
                          actionValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  		this.getTranslate("enterName").then((resp)=>{
                                  		    resolve(resp);
                                  		});
                                  
                          ↓Toast [ngx.components.UIDynamicAction-1569836515076]: 
                            beanData: '{"ionBean":"ToastAction","message":"script:parent.out"}'
        ↓Directive1 [ngx.components.UIControlDirective-1559835884415]: 
          directiveName: If
          directiveSource: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:this.global?.platform?.name['0'] == 'mobile'
          ↓Grid [ngx.components.UIDynamicElement-1567526491714]: 
            beanData: '{"ionBean":"Grid"}'
            tagName: ion-grid
            ↓GridRow [ngx.components.UIDynamicElement-1567526491717]: 
              beanData: '{"ionBean":"GridRow"}'
              tagName: ion-row
              ↓Style [ngx.components.UIStyle-1567526491720]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        'align-items: end;
                        margin-top:10px;
                        '
              ↓GridCol [ngx.components.UIDynamicElement-1567526491723]: 
                beanData: '{"ionBean":"GridCol","FlexAlignement":"plain:ion-align-self-baseline"}'
                tagName: ion-col
                ↓Grid [ngx.components.UIDynamicElement-1567585167841]: 
                  beanData: '{"ionBean":"Grid"}'
                  tagName: ion-grid
                  ↓GridRow [ngx.components.UIDynamicElement-1567585171816]: 
                    beanData: '{"ionBean":"GridRow"}'
                    tagName: ion-row
                    ↓GridCol [ngx.components.UIDynamicElement-1567604014359]: 
                      beanData: '{"ionBean":"GridCol"}'
                      tagName: ion-col
                      ↓Div [ngx.components.UIDynamicElement-1567608687040]: 
                        beanData: '{"ionBean":"DivTag"}'
                        tagName: div
                        ↓ButtonMenu [ngx.components.UIDynamicElement-1567526491726]: 
                          beanData: |
                            '{
                             "ionBean": "MenuButton",
                             "ButtonFormType": "plain:false",
                             "IonColor": "plain:dark"
                            }'
                          comment: A button to toggle the menu
                          tagName: ion-menu-button
                          ↓Style [ngx.components.UIStyle-1567526491732]: 
                            styleContent: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    float:left;
                                    margin:0;
                                    
                          ↓Attr [ngx.components.UIAttribute-1567585361184]: 
                            attrName: 
                            attrValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: plain:item-start
                        ↓FormatLayout [ngx.components.UIDynamicAttr-1645090139677]: 
                          beanData: '{"ionBean":"FormatLayout"}'
                          comment: FormatLayout
                          tagName: div
                        ↓Text [ngx.components.UIText-1567526491741]: 
                          i18n: true
                          textValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: plain:Form Builder
                        ↓Style [ngx.components.UIStyle-1567604296056]: 
                          styleContent: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  'margin-top:0.75rem;
                                  margin-bottom:0.8rem;
                                  
                                  font-size: 14px;
                                    font-weight: 600;
                                    font-style: normal;
                                    font-stretch: normal;
                                    line-height: normal;
                                    letter-spacing: normal;
                                    color: #4a4a4a;
                                    display: inline-block;
                                  '
                        ↓Tag11 [ngx.components.UIElement-1567605173703]: 
                          comment: svg button create
                          tagName: svg
                          ↓Attr [ngx.components.UIAttribute-1567605173706]: 
                            attrName: width
                            attrValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: plain:26px
                          ↓Attr1 [ngx.components.UIAttribute-1567605173709]: 
                            attrName: height
                            attrValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: plain:26px;
                          ↓Attr2 [ngx.components.UIAttribute-1567605173712]: 
                            attrName: viewBox
                            attrValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: plain:0 0 26 26
                          ↓Attr3 [ngx.components.UIAttribute-1567605173715]: 
                            attrName: version
                            attrValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: plain:1.1
                          ↓Attr4 [ngx.components.UIAttribute-1567605173718]: 
                            attrName: xmlns
                            attrValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: plain:http://www.w3.org/2000/svg
                          ↓Attr5 [ngx.components.UIAttribute-1567605173721]: 
                            attrName: xmlns:xlink
                            attrValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: plain:http://www.w3.org/1999/xlink
                          ↓FragmentButtonCreate [ngx.components.UICustom-1567605173724]: 
                            htmlTemplate: |
                              <defs></defs>
                                  <g id="Mobile" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                                      <g id="02a_homepage_cards" transform="translate(-279.000000, -11.000000)">
                                          <g id="Header">
                                              <g id="btn-new" transform="translate(280.000000, 12.000000)">
                                                  <rect id="Rectangle-4" stroke="#FF8206" fill="#FF8206" x="0" y="0" width="24" height="24" rx="12"></rect>
                                                  <g id="icn" transform="translate(8.000000, 8.000000)" stroke="#FFFFFF" stroke-linecap="square" stroke-width="2">
                                                      <path d="M4.5,0 L4.5,9" id="Line-2"></path>
                                                      <path d="M8.7512976,4.36953763 L0.25,4.36953763" id="Line-2-Copy"></path>
                                                  </g>
                                              </g>
                                          </g>
                                      </g>
                                  </g>
                          ↓Style [ngx.components.UIStyle-1567605173727]: 
                            styleContent: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    'float:right;
                                    margin-right:1.5rem;
                                    padding-bottom: 0.5rem;
                                    }
                                    .class1567515760237:hover{
                                    	filter: drop-shadow(3px 3px 3px #979797);
                                    '
                        ↓Style1 [ngx.components.UIStyle-1567608535728]: 
                          styleContent: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  'padding-bottom: 1rem;
                                  '
      ↓GridCol21 [ngx.components.UIDynamicElement-1559835864985]: 
        beanData: |
          '{
           "ionBean": "GridCol",
           "SizeLg": "plain:1",
           "SizeXl": "plain:1"
          }'
        tagName: ion-col
      ↓Style [ngx.components.UIStyle-1567436548755]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                'align-items: bottom;
                '
  ↓UseSharedComponent [ngx.components.UIUseShared-1571076272171]: 
    sharedcomponent: C8Oforms_NGX.MobileApplication.Application.sharedHeader
↓Content [ngx.components.UIDynamicElement-1537533855334]: 
  beanData: '{"ionBean":"Content","Fullscreen":"plain:true"}'
  tagName: ion-content
  ↓GridMain [ngx.components.UIDynamicElement-1559750569253]: 
    beanData: '{"ionBean":"Grid"}'
    tagName: ion-grid
    ↓GridRowSearch [ngx.components.UIDynamicElement-1559750585431]: 
      beanData: '{"ionBean":"GridRow"}'
      tagName: ion-row
      ↓GridColSpaceLeft [ngx.components.UIDynamicElement-1567171596531]: 
        beanData: '{"ionBean":"GridCol","SizeXl":"plain:2"}'
        tagName: ion-col
      ↓GridColContent [ngx.components.UIDynamicElement-1559750590333]: 
        beanData: |
          '{
           "ionBean": "GridCol",
           "Size": "plain:8",
           "SizeLg": "plain:12",
           "SizeMd": "plain:12",
           "SizeSm": "plain:12",
           "SizeXl": "plain:8",
           "SizeXs": "plain:12"
          }'
        tagName: ion-col
        ↓Grid [ngx.components.UIDynamicElement-1559827351477]: 
          beanData: '{"ionBean":"Grid"}'
          tagName: ion-grid
          ↓GridRowForms [ngx.components.UIDynamicElement-1579253829433]: 
            beanData: '{"ionBean":"GridRow"}'
            tagName: ion-row
            ↓GridColText1 [ngx.components.UIDynamicElement-1579253835065]: 
              beanData: '{"ionBean":"GridCol","Size":"plain:12"}'
              tagName: ion-col
              ↓Attr [ngx.components.UIAttribute-1579253835098]: 
                attrName: 
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:text-right
              ↓Style [ngx.components.UIStyle-1579253835146]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        	text-align:right;
                        
              ↓DivScrollContainerTab [ngx.components.UIDynamicElement-1602516281541]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓Style [ngx.components.UIStyle-1602516281544]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          	width:100%;
                          
                ↓DivContainerTab [ngx.components.UIDynamicElement-1602516281547]: 
                  beanData: '{"ionBean":"DivTag"}'
                  tagName: div
                  ↓Style [ngx.components.UIStyle-1602516281550]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            '	display: inline-flex;
                            	flex-wrap: wrap;
                            	background-color: #fafbfc!important;
                            	width:100%;
                            	margin-bottom: 6px;
                            	box-sizing:border-box;
                            	width:100% !important;
                            '
                  ↓Directive [ngx.components.UIControlDirective-1602516470906]: 
                    directiveName: If
                    directiveSource: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:(this.global?.settings?.editing_rights != undefined && this.global?.settings?.editing_rights == "true") || this.global?.settings?.editing_rights == undefined
                    ↓DivTabEdition [ngx.components.UIDynamicElement-1602516281559]: 
                      beanData: '{"ionBean":"DivTag"}'
                      tagName: div
                      ↓Icon1 [ngx.components.UIDynamicElement-1602516281565]: 
                        beanData: '{"ionBean":"Icon","IconName":"plain:menu"}'
                        tagName: ion-icon
                        ↓Style [ngx.components.UIStyle-1602516281568]: 
                          styleContent: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  '
                                    display: block;
                                    margin-left: auto;
                                    margin-right: 5px;
                                  '
                      ↓Paragraph [ngx.components.UIDynamicElement-1602516409026]: 
                        beanData: '{"ionBean":"Paragraph"}'
                        tagName: p
                        ↓Text [ngx.components.UIText-1602516409029]: 
                          i18n: true
                          isEnabled: false
                          textValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: plain:Vue_des_projets
                        ↓Style [ngx.components.UIStyle-1602516409032]: 
                          styleContent: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  ' color: #9b9b9b;
                                   display:inline-block;
                                   cursor:pointer;
                                  '
                        ↓Style1 [ngx.components.UIStyle-1602516409035]: 
                          styleContent: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  text-align:right;
                                  
                        ↓Attr [ngx.components.UIAttribute-1602516409038]: 
                          attrName: '[style.color]'
                          attrValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: 'script:this.local.published ? '''' : ''#0cbbe7'''
                        ↓Directive [ngx.components.UIControlDirective-1603096168912]: 
                          directiveName: If
                          directiveSource: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:window.innerWidth > 428 else ElseBlock_1603096168918
                          ↓Text [ngx.components.UIText-1603096168915]: 
                            i18n: true
                            textValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: plain:Vue_des_projets
                        ↓Tag [ngx.components.UIElement-1603096168918]: 
                          identifier: ElseBlock_1603096168918
                          tagName: ng-template
                          ↓Text [ngx.components.UIText-1603096168921]: 
                            i18n: true
                            textValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: plain:Vue_des_projets2
                      ↓Attr [ngx.components.UIAttribute-1602517464017]: 
                        attrName: '[ngClass]'
                        attrValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:this.local.published?'TabNotSelected':'TabSelected'
                      ↓Event [ngx.components.UIControlEvent-1602516409041]: 
                        ↓SetPublishedFalse [ngx.components.UICustomAction-1602516409044]: 
                          actionValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  '		
                                  	    if(page.local.published != false){
                                  		
                                  			//reset search criterias
                                  			try{
                                  				page["query"] = "";
                                  				page.local.searchTags = [];
                                  				page.local.searchSubTags = [];
                                  			}
                                  			catch(e){
                                  				
                                  			}
                                  	        page.local.spinner = true;
                                              page.local.published = false;
                                              page.c8o.cancelLive("viewLiveFolders");
                                              page.c8o.cancelLive("viewLiveOut");
                                              page.c8o.cancelLive("viewLiveInFolders");
                                              page.local.folder = "";
                                              const ddocPublished = "formsV2";
                                              page.local["ddoc"] = ddocPublished;
                                              resolve(true);
                                              let url : string = window.location.href;
                                  			let hash = window.location.hash;
                                  			let hashPosition = url.indexOf(hash);
                                  			let prefixUrl = url.substring(0, hashPosition);
                                  			let hashArray = hash.split("/");
                                  			
                                  			hashArray[2] = ""+page.local.published;
                                  			hashArray[3] = ""+encodeURI(":folder");
                                  			
                                  			window.location.href = prefixUrl + hashArray.join("/");
                                  			
                                              /*let strToReplace = hash.split("/")[2];
                                              let index = hash.indexOf(strToReplace);
                                              url = url.substring(0, index) + page.local.published + url.substring(index + strToReplace.length);
                                              let strToReplace2 = window.location.hash.split("/")[3];
                                              let index2 = url.indexOf(strToReplace2);
                                              url = url.substring(0, index2) + encodeURI(":folder") + url.substring(index2 + strToReplace2.length);
                                              window.location.href = url;*/
                                              
                                          }
                                  	    else{
                                  	        resolve(false);
                                  	    }
                                  		
                                  		
                                  		    /*page.local.tag = false;
                                  		if(this.local.published != false){
                                  		    page.local.spinner = true;
                                  		    page.c8o.cancelLive("viewLiveSelector");
                                  		    page.local["ddoc"] = "forms";
                                  		    this.local.published = false; 
                                  		    let url : string = window.location.href;
                                              let strToReplace = window.location.hash.split("/")[2];
                                  		    let index = url.indexOf(strToReplace);
                                              url = url.substring(0, index) + page.local.published + url.substring(index + strToReplace.length);
                                              window.location.href = url;
                                              resolve(true);
                                  		}
                                  		else{
                                  		    resolve(false);
                                  		}*/
                                  		
                                  		
                                  '
                          ↓If [ngx.components.UIDynamicAction-1602516409047]: 
                            beanData: '{"ionBean":"IfAction"}'
                            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1602516409050]: 
                              beanData: '{"ionBean":"InvokeAction"}'
                              stack: C8Oforms_NGX.MobileApplication.Application.callViewLiveAndFillFormList
                              ↓keys [ngx.components.UIControlVariable-1602516409053]: 
                                varValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                    - MobileSmartSourceType: script:null
                  ↓DivTabPublished [ngx.components.UIDynamicElement-1602516281580]: 
                    beanData: '{"ionBean":"DivTag"}'
                    tagName: div
                    ↓Icon1 [ngx.components.UIDynamicElement-1602516281586]: 
                      beanData: '{"ionBean":"Icon","IconName":"plain:menu"}'
                      tagName: ion-icon
                      ↓Style [ngx.components.UIStyle-1602516281589]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '
                                  display: block;
                                  margin-left: auto;
                                  margin-right: 5px;
                                '
                    ↓Event [ngx.components.UIControlEvent-1602516281595]: 
                      ↓CustomAction [ngx.components.UICustomAction-1602516281598]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                		page.local.currentPage = props.stack.root.scope.item.pageTechName;
                                		page.local.index = props.stack.root.scope.i;
                                		resolve();
                                
                        isEnabled: false
                        ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1602516281601]: 
                          beanData: '{"ionBean":"InvokeAction"}'
                          isEnabled: false
                          stack: C8Oforms_NGX.MobileApplication.Application.detectChanges
                      ↓SetPublishedTrue [ngx.components.UICustomAction-1602522452374]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '		    if(page.local.published == false){
                                				//reset search criterias
                                				try{
                                					page["query"] = "";
                                					page.local.searchTags = [];
                                					page.local.searchSubTags = [];
                                				}
                                				catch(e){
                                					
                                				}
                                		        page.local.spinner = true;
                                		        page.local.published = true;
                                		        page.c8o.cancelLive("viewLiveFolders");
                                		        page.c8o.cancelLive("viewLiveOut");
                                		        page.c8o.cancelLive("viewLiveInFolders");
                                		        page.local.folder = "";
                                		        const ddocPublished = "published_formsV2";
                                		        page.local["ddoc"] = ddocPublished;
                                		        resolve(true);
                                				let url : string = window.location.href;
                                				let hash = window.location.hash;
                                				let hashPosition = url.indexOf(hash);
                                				let prefixUrl = url.substring(0, hashPosition);
                                				let hashArray = hash.split("/");
                                				
                                				hashArray[2] = ""+page.local.published;
                                				hashArray[3] = ""+encodeURI(":folder");
                                				
                                				window.location.href = prefixUrl + hashArray.join("/");
                                		        /*let url : string = window.location.href;
                                	            let strToReplace = window.location.hash.split("/")[2];
                                	            let index = url.indexOf(strToReplace);
                                	            url = url.substring(0, index) + page.local.published + url.substring(index+strToReplace.length);
                                	            let strToReplace2 = window.location.hash.split("/")[3];
                                	            let index2 = url.indexOf(strToReplace2);
                                	            url = url.substring(0, index2) + encodeURI(":folder") + url.substring(index2 + strToReplace2.length);
                                	            window.location.href = url;*/
                                		    }
                                		    else{
                                		        resolve(false);
                                		    }
                                		   /* page.local.tag = false;
                                		    page.local.fav = false;
                                		if(this.local.published == false){
                                		    page.local.spinner = true;
                                		    page.c8o.cancelLive("viewLiveSelector");
                                		    this.local.published = true; 
                                		    page.local["ddoc"] = "published_forms";
                                		    let url : string = window.location.href;
                                            let strToReplace = window.location.hash.split("/")[2];
                                            let index = url.indexOf(strToReplace);
                                            url = url.substring(0, index) + page.local.published + url.substring(index+strToReplace.length);
                                            window.location.href = url;
                                		    resolve(true);
                                		}
                                		else{
                                		    resolve(false);
                                		}
                                		*/
                                		
                                '
                        ↓If [ngx.components.UIDynamicAction-1602522452377]: 
                          beanData: '{"ionBean":"IfAction"}'
                          ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1602522452380]: 
                            beanData: '{"ionBean":"InvokeAction"}'
                            stack: C8Oforms_NGX.MobileApplication.Application.callViewLiveAndFillFormList
                            ↓keys [ngx.components.UIControlVariable-1602522452383]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:null
                    ↓Paragraph1 [ngx.components.UIDynamicElement-1602516414295]: 
                      beanData: '{"ionBean":"Paragraph"}'
                      tagName: p
                      ↓Style [ngx.components.UIStyle-1602516414301]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                ' color: #9b9b9b;
                                 display:inline-block;
                                 cursor:pointer;
                                '
                      ↓Style1 [ngx.components.UIStyle-1602516414304]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                text-align:right;
                                
                      ↓Attr [ngx.components.UIAttribute-1602516414307]: 
                        attrName: '[style.color]'
                        attrValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: 'script:this.local.published ? ''#0cbbe7'' : '''''
                      ↓Event [ngx.components.UIControlEvent-1602516414310]: 
                        isEnabled: false
                        ↓SetPublishedTrue [ngx.components.UICustomAction-1602516414313]: 
                          actionValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  '		    page.local.tag = false;
                                  		    page.local.fav = false;
                                  		if(this.local.published == false){
                                  		    page.local.spinner = true;
                                  		    page.c8o.cancelLive("viewLiveSelector");
                                  		    this.local.published = true; 
                                  		    page.local["ddoc"] = "published_forms";
                                  		    let url : string = window.location.href;
                                              let strToReplace = window.location.hash.split("/")[2];
                                              let index = url.indexOf(strToReplace);
                                              url = url.substring(0, index) + page.local.published + url.substring(index+strToReplace.length);
                                              window.location.href = url;
                                  		    resolve(true);
                                  		}
                                  		else{
                                  		    resolve(false);
                                  		}
                                  		
                                  		
                                  '
                          ↓If [ngx.components.UIDynamicAction-1602516414316]: 
                            beanData: '{"ionBean":"IfAction"}'
                            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1602516414319]: 
                              beanData: '{"ionBean":"InvokeAction"}'
                              stack: C8Oforms_NGX.MobileApplication.Application.callViewLiveAndFillFormList
                              ↓keys [ngx.components.UIControlVariable-1602516414322]: 
                                varValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                    - MobileSmartSourceType: script:null
                      ↓Directive [ngx.components.UIControlDirective-1603095920274]: 
                        directiveName: If
                        directiveSource: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:window.innerWidth > 428 else ElseBlock_1603096127001
                        ↓Text [ngx.components.UIText-1603095955760]: 
                          i18n: true
                          textValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: plain:Vue_Publication
                      ↓Tag [ngx.components.UIElement-1603096127001]: 
                        identifier: ElseBlock_1603096127001
                        tagName: ng-template
                        ↓Text [ngx.components.UIText-1602516414298]: 
                          i18n: true
                          textValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: plain:Vue_Publication2
                    ↓Attr [ngx.components.UIAttribute-1602517389172]: 
                      attrName: '[ngClass]'
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:this.local.published?'TabSelected':'TabNotSelected'
                  ↓DivTabEmpty [ngx.components.UIDynamicElement-1602517922050]: 
                    beanData: '{"ionBean":"DivTag"}'
                    tagName: div
                    ↓Style [ngx.components.UIStyle-1602517922053]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '	padding: 7px 15px 8px;
                              	color: #586069;
                              	white-space: nowrap;
                              	border: 1px solid transparent;
                              	border-top: 3px solid transparent;
                              	border-radius: 3px 3px 0 0;
                              	padding: 7px 12px 8px!important;
                              	margin: 0;
                              	display: flex;
                              	align-items: center;
                              	justify-content: center;
                              	border-bottom: 1px solid #e1e4e8;
                              	flex-grow: 1
                              '
          ↓GridRowSearch [ngx.components.UIDynamicElement-1559827351480]: 
            beanData: '{"ionBean":"GridRow","FlexAlignement":"plain:ion-align-items-center"}'
            tagName: ion-row
            ↓GridCol2 [ngx.components.UIDynamicElement-1559827351483]: 
              beanData: |
                '{
                 "ionBean": "GridCol",
                 "SizeLg": "plain:6",
                 "SizeMd": "plain:6",
                 "SizeSm": "plain:12",
                 "SizeXl": "plain:6",
                 "SizeXs": "plain:12"
                }'
              tagName: ion-col
              ↓GenericItemSearchByName [ngx.components.UIDynamicElement-1559827351486]: 
                beanData: '{"ionBean":"GenericItem"}'
                tagName: ion-item
                ↓Icon [ngx.components.UIDynamicElement-1559827351489]: 
                  beanData: '{"ionBean":"Icon","IconName":"plain:search"}'
                  tagName: ion-icon
                  ↓Attr [ngx.components.UIAttribute-1559827351492]: 
                    attrName: 
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:item-start
                  ↓Style [ngx.components.UIStyle-1559831872172]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            margin-right:0px !important;
                            
                ↓TextInput [ngx.components.UIDynamicElement-1559827351495]: 
                  beanData: |
                    '{
                     "ionBean": "Input",
                     "Debounce": "plain:0",
                     "Placeholder": "script:''searchProject'' | translate"
                    }'
                  tagName: ion-input
                  ↓Attr [ngx.components.UIAttribute-1572278779357]: 
                    attrName: '[(ngModel)]'
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:query
                  ↓Event [ngx.components.UIControlEvent-1572278814741]: 
                    attrName: (ngModelChange)
                    eventName: (ngModelChange)
                    ↓EvaluateIsEmpty [ngx.components.UICustomAction-1572278831637]: 
                      actionValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              		    if(event != ""){
                              	            page.c8o.cancelLive("viewLiveOut");
                              	            page.c8o.cancelLive("viewLiveFolders");
                              	            page.c8o.cancelLive("viewLiveInFolders");
                              	            resolve(true);
                              	        }
                              	        else if((page.local.searchTags != undefined && page.local.searchTags.length > 1) || (page.local.searchSubTags != undefined && page.local.searchSubTags.length > 0)){
                              	        resolve(true);
                              	        }
                              	        else{
                              	            if(page.local.searchTags != undefined && page.local.searchTags.length == 1){
                              	                this.local.folder = page.local.searchTags[0];
                              	                page.local.searchTags = [];
                                                  page.local.searchSuTags = [];
                              	            }
                              	            resolve(false);
                              	        }
                              		
                              		
                              
                      ↓IfElse [ngx.components.UIDynamicIf-1572279032900]: 
                        beanData: '{"ionBean":"IfElseAction"}'
                        ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1605199379069]: 
                          beanData: '{"ionBean":"InvokeAction"}'
                          stack: C8Oforms_NGX.MobileApplication.Application.searchForm
                        ↓Else_Handler [ngx.components.UIActionElseEvent-1572279038236]: 
                          ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1572279048437]: 
                            beanData: '{"ionBean":"InvokeAction"}'
                            stack: C8Oforms_NGX.MobileApplication.Application.callViewLiveAndFillFormList
                  ↓Style [ngx.components.UIStyle-1606501838393]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            	input{
                            	  white-space:nowrap;
                            	  overflow:hidden;
                            	  text-overflow:ellipsis;
                            	}
                            	
                            
                ↓Style [ngx.components.UIStyle-1559827351501]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '	padding:0px;
                          
                          .item-inner {
                             margin-left: 0px !important;
                          }
                          
                          }
                          
                          .class1559827351486.input-has-focus, .class1559827351486:hover{
                          	border-bottom-color: #0cbbe7 !important;
                             	-webkit-box-shadow: inset 0 -1px 0 0 #0cbbe7 !important;
                              box-shadow: inset 0 -1px 0 0 #0cbbe7 !important;
                             .item-inner{
                              	border-bottom-color: #0cbbe7 !important;
                               	-webkit-box-shadow: inset 0 -1px 0 0 #0cbbe7 !important;
                                	box-shadow: inset 0 -1px 0 0 #0cbbe7 !important;
                          	}
                          '
                ↓Attr [ngx.components.UIAttribute-1559827351504]: 
                  attrName: 
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:no-lines
                ↓Attr1 [ngx.components.UIAttribute-1559832254199]: 
                  attrName: 
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:no-margin
                ↓Attr2 [ngx.components.UIAttribute-1578927001445]: 
                  attrName: '*ngIf'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:this.local.tag == false || this.local.tag == undefined
                ↓Button [ngx.components.UIDynamicElement-1605176257746]: 
                  beanData: '{"ionBean":"Button"}'
                  tagName: ion-button
                  ↓Icon1 [ngx.components.UIDynamicElement-1578926299818]: 
                    beanData: '{"ionBean":"Icon","IconName":"plain:md-arrow-dropdown"}'
                    tagName: ion-icon
                    ↓Style [ngx.components.UIStyle-1578926351158]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              'margin-left:0px !important;
                              color:#979797;	
                              }
                              .class1578926299818:hover {
                              cursor: pointer;
                              '
                    ↓Attr [ngx.components.UIAttribute-1578926371536]: 
                      attrName: 
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:item-end
                      isEnabled: false
                    ↓Attr2 [ngx.components.UIAttribute-1579253518305]: 
                      attrName: '*ngIf'
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:(this.local.tag == false || this.local.tag == undefined) && this.global?.mobilePlat != true
                      isEnabled: false
                    ↓Attr1 [ngx.components.UIAttribute-1586274187528]: 
                      attrName: title
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:translate.instant('searchProjectTag')
                      isEnabled: false
                  ↓Attr [ngx.components.UIAttribute-1605176311233]: 
                    attrName: 
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:item-end
                  ↓Event [ngx.components.UIControlEvent-1605176348767]: 
                    ↓StopPropagationAndShowAdvancedSearch [ngx.components.UICustomAction-1605176566731]: 
                      actionValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              		event.stopPropagation();
                              		if(this.local.searchTags == undefined){
                              		    this.local.searchTags = [];
                              		}
                              		if(this.local.searchTags.indexOf(this.local.folder) == -1 && this.local.folder != undefined && this.local.folder != ''){
                              		    this.local.searchTags.push(this.local.folder)
                              		}
                              		this.local.showAdvancedSearch = true;
                              		resolve();
                              
              ↓Directive [ngx.components.UIControlDirective-1605175515179]: 
                directiveName: If
                directiveSource: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.local.showAdvancedSearch
                ↓Div [ngx.components.UIDynamicElement-1605175544594]: 
                  beanData: '{"ionBean":"DivTag"}'
                  tagName: div
                  ↓Style [ngx.components.UIStyle-1605175549027]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            'position:absolute;
                            box-shadow: 0 2px 4px rgba(0,0,0,0.2);
                            border: 1px solid rgba(0,0,0,0.2);
                            z-index:101;
                            background-color: white !important;
                            width:100%;
                            
                            '
                  ↓Event [ngx.components.UIControlEvent-1605176642470]: 
                    ↓StopPropagationToPreventFromClosingThis [ngx.components.UICustomAction-1605176642473]: 
                      actionValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              		event.stopPropagation();
                              		resolve();
                              
                  ↓DivSearchName [ngx.components.UIDynamicElement-1605178161270]: 
                    beanData: '{"ionBean":"DivTag"}'
                    tagName: div
                    ↓Label [ngx.components.UIDynamicElement-1605178166890]: 
                      beanData: '{"ionBean":"Label","Position":"plain:stacked"}'
                      tagName: ion-label
                      ↓FormatLayout [ngx.components.UIDynamicAttr-1645090139699]: 
                        beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-capitalize"}'
                        comment: FormatLayout
                        tagName: div
                      ↓Text [ngx.components.UIText-1605178166896]: 
                        i18n: true
                        textValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: plain:Name
                    ↓TextInput [ngx.components.UIDynamicElement-1605178169903]: 
                      beanData: |
                        '{
                         "ionBean": "Input",
                         "Debounce": "plain:0",
                         "Placeholder": "script:this.translate.instant(''Name'')"
                        }'
                      tagName: ion-input
                      ↓Attr [ngx.components.UIAttribute-1605179766917]: 
                        attrName: '[ngModel]'
                        attrValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:query
                      ↓Event [ngx.components.UIControlEvent-1605287363658]: 
                        attrName: (ngModelChange)
                        eventName: (ngModelChange)
                        ↓saveTemp [ngx.components.UICustomAction-1605287378515]: 
                          actionValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  		    page.local["_query"] = event;
                                  		    resolve();
                                  
                    ↓Style [ngx.components.UIStyle-1605178481293]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              'box-shadow: inset 0 -1px 0 0 var(--ion-color-greyButton) !important;
                              border-bottom-color: var(--ion-color-greyButton);
                              '
                    ↓Attr [ngx.components.UIAttribute-1605178542065]: 
                      attrName: '[ngClass]'
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:styledivnormal
                  ↓DivSearchTags [ngx.components.UIDynamicElement-1605178172767]: 
                    beanData: '{"ionBean":"DivTag"}'
                    tagName: div
                    ↓Label [ngx.components.UIDynamicElement-1605178182739]: 
                      beanData: '{"ionBean":"Label","Position":"plain:stacked"}'
                      tagName: ion-label
                      ↓Text [ngx.components.UIText-1605178182742]: 
                        i18n: true
                        textValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: plain:labels
                    ↓UseSharedComponent [ngx.components.UIUseShared-1605178188614]: 
                      sharedcomponent: lib_ExtendedComponents_ui_ngx.MobileApplication.Application.ngxTagInput
                      ↓items [ngx.components.UIUseVariable-1605178188617]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:this.local.searchTags
                      ↓inputtext [ngx.components.UIUseVariable-1605178188620]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:''
                      ↓theme [ngx.components.UIUseVariable-1605178188623]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:''
                      ↓maxItems [ngx.components.UIUseVariable-1605178188626]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:100
                      ↓placeholder [ngx.components.UIUseVariable-1605178188629]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:translate.instant('labels_placeholder')
                      ↓secondaryPlaceholder [ngx.components.UIUseVariable-1605178188632]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:translate.instant('labels_placeholder')
                      ↓editableTag [ngx.components.UIUseVariable-1605178188635]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:false
                      ↓removableTag [ngx.components.UIUseVariable-1605178188638]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:true
                      ↓itemIdentifyBy [ngx.components.UIUseVariable-1605178188641]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:'value'
                      ↓itemDisplayBy [ngx.components.UIUseVariable-1605178188644]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:'display'
                      ↓autocompleteItems [ngx.components.UIUseVariable-1605178188647]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:[]
                      ↓onlyFromAutocomplete [ngx.components.UIUseVariable-1605178188650]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:false
                      ↓showAutoCompleteDropdownIfEmpty [ngx.components.UIUseVariable-1605178188653]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:false
                      ↓ref [ngx.components.UIUseVariable-1605178188656]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:'searchTags'
                    ↓Style [ngx.components.UIStyle-1605178339842]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '.ng2-tag-input{
                              	border-bottom: unset !important;
                              }
                              box-shadow: inset 0 -1px 0 0 var(--ion-color-greyButton) !important;
                              border-bottom-color: var(--ion-color-greyButton);
                              '
                    ↓Attr1 [ngx.components.UIAttribute-1605538588763]: 
                      attrName: '[ngClass]'
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:'styledivnormal c8o-ngxTag-larger'
                  ↓DivSearchSubTags [ngx.components.UIDynamicElement-1605179329167]: 
                    beanData: '{"ionBean":"DivTag"}'
                    tagName: div
                    ↓Label [ngx.components.UIDynamicElement-1605179329170]: 
                      beanData: '{"ionBean":"Label","Position":"plain:stacked"}'
                      tagName: ion-label
                      ↓Text [ngx.components.UIText-1605179329173]: 
                        i18n: true
                        textValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: plain:subtag
                    ↓UseSharedComponent [ngx.components.UIUseShared-1605179329176]: 
                      sharedcomponent: lib_ExtendedComponents_ui_ngx.MobileApplication.Application.ngxTagInput
                      ↓items [ngx.components.UIUseVariable-1605179329179]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:this.local.searchSubTags
                      ↓inputtext [ngx.components.UIUseVariable-1605179329182]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:''
                      ↓theme [ngx.components.UIUseVariable-1605179329185]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:''
                      ↓maxItems [ngx.components.UIUseVariable-1605179329188]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:100
                      ↓placeholder [ngx.components.UIUseVariable-1605179329191]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:translate.instant('subTag_placeholder')
                      ↓secondaryPlaceholder [ngx.components.UIUseVariable-1605179329194]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:translate.instant('subTag_placeholder')
                      ↓editableTag [ngx.components.UIUseVariable-1605179329197]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:true
                      ↓removableTag [ngx.components.UIUseVariable-1605179329200]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:true
                      ↓itemIdentifyBy [ngx.components.UIUseVariable-1605179329203]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:'value'
                      ↓itemDisplayBy [ngx.components.UIUseVariable-1605179329206]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:'display'
                      ↓autocompleteItems [ngx.components.UIUseVariable-1605179329209]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:[]
                      ↓onlyFromAutocomplete [ngx.components.UIUseVariable-1605179329212]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:false
                      ↓showAutoCompleteDropdownIfEmpty [ngx.components.UIUseVariable-1605179329215]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:false
                      ↓ref [ngx.components.UIUseVariable-1605179329218]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:'searchSubTags'
                    ↓Style [ngx.components.UIStyle-1605179329221]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '.ng2-tag-input{
                              	border-bottom: unset !important;
                              }
                              box-shadow: inset 0 -1px 0 0 var(--ion-color-greyButton) !important;
                              border-bottom-color: var(--ion-color-greyButton);
                              '
                    ↓Attr1 [ngx.components.UIAttribute-1605538603051]: 
                      attrName: '[ngClass]'
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:'styledivnormal c8o-ngxTag-larger'
                  ↓ButtonSet [ngx.components.UIDynamicElement-1605179589046]: 
                    beanData: '{"ionBean":"ButtonSet","SetPosition":"plain:end"}'
                    tagName: ion-buttons
                    ↓Button [ngx.components.UIDynamicElement-1605179426106]: 
                      beanData: '{"ionBean":"Button","IonColor":"plain:convertigo"}'
                      tagName: ion-button
                      ↓Text [ngx.components.UIText-1605179432870]: 
                        i18n: true
                        textValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: plain:Search
                      ↓Attr [ngx.components.UIAttribute-1605179537362]: 
                        attrName: 
                        attrValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: plain:item-end
                      ↓Event [ngx.components.UIControlEvent-1605179924734]: 
                        ↓ApplyParams [ngx.components.UICustomAction-1605287109317]: 
                          actionValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  		setTimeout(()=>{
                                  			if(page.local["_searchSubTags"] != undefined){
                                  		        page.local.searchSubTags = page.local["_searchSubTags"];
                                  		    }
                                  		    if(page.local["_searchTags"] != undefined){
                                  		        page.local.searchTags = page.local["_searchTags"];
                                              }
                                  		    if(page.local["_query"] != undefined){
                                  		        page["query"] = page.local["_query"];
                                  		    }
                                  		    
                                  		resolve();
                                  		},100)
                                  		    
                                  
                          ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1605199210558]: 
                            beanData: '{"ionBean":"InvokeAction"}'
                            stack: C8Oforms_NGX.MobileApplication.Application.searchForm
                            ↓CustomAction [ngx.components.UICustomAction-1605179934100]: 
                              actionValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                    →: |
                                      '		new Promise(async(resolve2, reject2)=>{
                                      		    try{
                                      		        let filterName = this.local.published ? "c8o_view_type_published_form" : "c8o_view_type_drafts_form";
                                      		        var filter = undefined;
                                      		        if(this.local.published){
                                      		            filter = function (doc){
                                      	                   return doc.c8o_view_type_published_form === true;
                                      	                }
                                      		        }
                                      		        else{
                                      		            filter = function (doc){
                                      		                return doc.c8o_view_type_drafts_form === true;
                                                          }
                                      		        }
                                      		        let params = {filter: filter, fields:["name"], query: page["query"], highlighting: true, include_docs: true}
                                      		        let resp = await this.c8o.callJsonObject("fs://c8oforms_fs.search", params).async();
                                      		        let responseAfterView = resp.rows.map((emit)=>{
                                      		            let doc = emit.doc;
                                      		            // comes from ddoc = formsV2 view = out_folders
                                      		            var objToEmit = {"name": doc.name, "pwa_enabled": doc.pwa_enabled, "pwa_subPath": doc.pwa_subPath};
                                      	                if(doc.thumbnail != undefined && doc.thumbnail.enabled){
                                      	                    if(doc.thumbnail.type != undefined && doc.thumbnail.type == "color"){
                                      	                        objToEmit["color"] = doc.thumbnail.color;
                                      	                    }
                                      	                    else{
                                      	                        objToEmit["thumbnail"] = true;
                                      	                    }
                                      	                    
                                      	                }
                                      	                else if(doc.wallpaper != undefined && doc.wallpaper.enabled){
                                      	                    if(doc.wallpaper.type != undefined && doc.wallpaper.type == "color"){
                                      	                        objToEmit["color"] = doc.wallpaper.color;
                                      	                    }
                                      	                    else{
                                      	                        objToEmit["wallpaper"] = true;
                                      	                    }
                                      	                }
                                      	                else{
                                      	                    objToEmit["random"] = doc.wallpaper.random;
                                      	                }
                                      	                
                                      	                //// difference from view
                                      	                if(emit.highlighting.name != undefined){
                                      	                    objToEmit.name = emit.highlighting.name;
                                      	                }
                                      	                return {"id": emit.id, "score": emit.score, value: objToEmit}; 
                                                          //end difference from view
                                      	                
                                      		        });
                                      		        
                                      		        console.log(responseAfterView);
                                      		        this.list = responseAfterView;
                                      		    }
                                      		    catch(e){
                                      		        console.log("errr", e);
                                      		    }
                                      		})
                                      		.then(()=>{
                                      		    resolve();
                                      		})
                                      		
                                      '
                              isEnabled: false
                            ↓setshowAdvancedSearchFalse [ngx.components.UICustomAction-1605202141497]: 
                              actionValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                    →: |
                                      		    page.local.showAdvancedSearch = false;
                                      		resolve();
                                      
                    ↓Style [ngx.components.UIStyle-1605179608965]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              margin-top:10px;
                              
              ↓Style [ngx.components.UIStyle-1605176052244]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        	position:relative;
                        
        ↓Style [ngx.components.UIStyle-1605175683714]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  	position:relative;
                  
      ↓GridColSpaceRight [ngx.components.UIDynamicElement-1567171596534]: 
        beanData: '{"ionBean":"GridCol","SizeXl":"plain:2"}'
        tagName: ion-col
    ↓Directive [ngx.components.UIControlDirective-1606929898932]: 
      directiveName: If
      directiveSource: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:!this.local.published
      ↓GridRow [ngx.components.UIDynamicElement-1606905332756]: 
        beanData: '{"ionBean":"GridRow"}'
        tagName: ion-row
        ↓GridColSpaceLeft [ngx.components.UIDynamicElement-1606905363322]: 
          beanData: '{"ionBean":"GridCol","SizeXl":"plain:2"}'
          tagName: ion-col
        ↓GridColContent [ngx.components.UIDynamicElement-1606905363325]: 
          beanData: |
            '{
             "ionBean": "GridCol",
             "Size": "plain:8",
             "SizeLg": "plain:12",
             "SizeMd": "plain:12",
             "SizeSm": "plain:12",
             "SizeXl": "plain:8",
             "SizeXs": "plain:12"
            }'
          tagName: ion-col
          ↓DivTitle [ngx.components.UIDynamicElement-1606913323202]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓Paragraph [ngx.components.UIDynamicElement-1606913372387]: 
              beanData: '{"ionBean":"Paragraph"}'
              tagName: p
              ↓Text [ngx.components.UIText-1606913353945]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:chooseformcreate
              ↓Style [ngx.components.UIStyle-1606913408030]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        'font-weight: bold;
                        display:inline-block;
                        '
            ↓Button [ngx.components.UIDynamicElement-1606988855266]: 
              beanData: '{"ionBean":"Button"}'
              tagName: ion-button
              ↓Icon [ngx.components.UIDynamicElement-1606988855269]: 
                beanData: '{"ionBean":"Icon","IconName":"plain:ios-cloud-upload"}'
                tagName: ion-icon
                ↓Style [ngx.components.UIStyle-1606988855272]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          'font-size: 3rem;
                          '
              ↓Style [ngx.components.UIStyle-1606988855275]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        float:right;
                        
              ↓Event [ngx.components.UIControlEvent-1606988855278]: 
                ↓ModalPage [ngx.components.UIDynamicAction-1606988855281]: 
                  beanData: |
                    '{
                     "ionBean": "ModalAction",
                     "page": "plain:C8Oforms_NGX.MobileApplication.Application.dropFilePage",
                     "data": "script:{import: true}",
                     "cssClass": "plain:modalCSV"
                    }'
              ↓Attr [ngx.components.UIAttribute-1606989118511]: 
                attrName: tooltip
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:'chooseformImport' | translate
              ↓Attr1 [ngx.components.UIAttribute-1606989350998]: 
                attrName: 
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:arrow
              ↓Attr2 [ngx.components.UIAttribute-1606989368672]: 
                attrName: positionV
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:top
          ↓DivNewForm [ngx.components.UIDynamicElement-1606905363334]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓Style [ngx.components.UIStyle-1606905363337]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '  flex: 1;
                          display: flex;
                          overflow: auto;
                          width:100%;
                      '
            ↓DivBox [ngx.components.UIDynamicElement-1606905502457]: 
              beanData: '{"ionBean":"DivTag"}'
              tagName: div
              ↓Style [ngx.components.UIStyle-1606905566830]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        'display: flex;
                            min-height: webkit-min-content; /*min-content; /* needs vendor prefixes */
                        '
              ↓DivElement [ngx.components.UIDynamicElement-1606905588980]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓DivImage [ngx.components.UIDynamicElement-1606912602116]: 
                  beanData: '{"ionBean":"DivTag"}'
                  tagName: div
                  ↓Style [ngx.components.UIStyle-1606912630735]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            'background-color:white;
                            height: 120px;
                            width: 160px;
                            border: 1px solid #dadce0;
                            border-radius: 4px;
                            margin-right:10px;
                            }
                            .class1606912602116:hover{
                            	cursor:pointer;
                            	border-color:#0cbbe7;
                            '
                  ↓Fragment [ngx.components.UICustom-1606912714849]: 
                    htmlTemplate: <svg xmlns='http://www.w3.org/2000/svg' width="160px" height="120px" class='ionicon' viewBox='0 0 512 512'><title>Add</title><path fill='none' stroke='#0cbbe7' stroke-linecap='square' stroke-linejoin='round' stroke-width='32' d='M256 112v288M400 256H112'/></svg>
                  ↓Event [ngx.components.UIControlEvent-1606992766619]: 
                    ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1606992802581]: 
                      beanData: '{"ionBean":"InvokeAction"}'
                      stack: C8Oforms_NGX.MobileApplication.Application.createNewForm
                ↓ParagraphTitle [ngx.components.UIDynamicElement-1606907583829]: 
                  beanData: '{"ionBean":"Paragraph"}'
                  tagName: p
                  ↓Text [ngx.components.UIText-1606907304971]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:empty
                  ↓Style [ngx.components.UIStyle-1606907619236]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            'font-weight: bold;
                            margin-left:4px;
                            '
              ↓Directive [ngx.components.UIControlDirective-1606926209148]: 
                directiveItemName: itemTemplate
                directiveSource: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: source:{"filter":"Database","project":"C8Oforms_NGX","input":"listen(['fs:\/\/c8oforms_fs.view#getTemplates, {ddoc='templatesV2', view='byLang', include_docs='false'}'])?.rows"}
                ↓DivElement [ngx.components.UIDynamicElement-1606926552436]: 
                  beanData: '{"ionBean":"DivTag"}'
                  tagName: div
                  ↓DivImage [ngx.components.UIDynamicElement-1606926552439]: 
                    beanData: '{"ionBean":"DivTag"}'
                    tagName: div
                    ↓Style [ngx.components.UIStyle-1606926552442]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '	background-color:white;
                              	height: 120px;
                              	width: 160px;
                              	border: 1px solid #dadce0;
                              	border-radius: 4px;
                              	margin-right:10px;
                              	
                              	img{
                              		height: 100%;
                              		width: 100%;
                              		border-radius: 4px;
                              	}
                              }
                              .class1606926552439:hover{
                              	cursor:pointer;
                              	border-color:#0cbbe7;
                              '
                    ↓FSImage [ngx.components.UIDynamicElement-1606926747455]: 
                      beanData: |
                        '{
                         "ionBean": "FSImage",
                         "docid": "source:{\"filter\":\"Iteration\",\"project\":\"C8Oforms_NGX\",\"input\":\"item1606926209148?.id\"}",
                         "attachment": "source:{\"filter\":\"Iteration\",\"project\":\"C8Oforms_NGX\",\"input\":\"\",\"model\":{\"data\":[{\"priority\":1606926209148}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\".value.enabled\",\"custom\":\"\",\"useCustom\":false}}",
                         "requestable": "plain:C8Oforms_NGX.c8oforms_fs"
                        }'
                      selfClose: true
                      tagName: img
                    ↓Event [ngx.components.UIControlEvent-1606992991938]: 
                      ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1606993060861]: 
                        beanData: '{"ionBean":"InvokeAction"}'
                        stack: C8Oforms_NGX.MobileApplication.Application.createFormFromTemplate
                        ↓id [ngx.components.UIControlVariable-1606993076312]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: source:{"filter":"Iteration","project":"C8Oforms_NGX","input":"item1606926209148?.id"}
                  ↓ParagraphTitle [ngx.components.UIDynamicElement-1606926552448]: 
                    beanData: '{"ionBean":"Paragraph"}'
                    tagName: p
                    ↓Text [ngx.components.UIText-1606926552451]: 
                      textValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: source:{"filter":"Iteration","project":"C8Oforms_NGX","input":"item1606926209148?.value?.name"}
                    ↓Style [ngx.components.UIStyle-1606926552454]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              'font-weight: bold;
                              margin-left:4px;
                              '
          ↓Style [ngx.components.UIStyle-1606907415131]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    '	border-bottom: 1px solid #cecece;
                    	border-top: 1px solid #cecece;
                    	margin-top: 5px;
                        background-color:#F1F3F4;
                        padding: 1em !important;
                    '
        ↓GridColSpaceRight [ngx.components.UIDynamicElement-1606905364087]: 
          beanData: '{"ionBean":"GridCol","SizeXl":"plain:2"}'
          tagName: ion-col
    ↓GridRowDivider [ngx.components.UIDynamicElement-1559835096807]: 
      beanData: '{"ionBean":"GridRow"}'
      tagName: ion-row
      ↓GridColSpaceLeft [ngx.components.UIDynamicElement-1567171531347]: 
        beanData: '{"ionBean":"GridCol","SizeXl":"plain:2"}'
        tagName: ion-col
      ↓GridColContent [ngx.components.UIDynamicElement-1559836163558]: 
        beanData: |
          '{
           "ionBean": "GridCol",
           "Size": "plain:8",
           "SizeLg": "plain:12",
           "SizeMd": "plain:12",
           "SizeSm": "plain:12",
           "SizeXl": "plain:8",
           "SizeXs": "plain:12"
          }'
        tagName: ion-col
        ↓Divider [ngx.components.UIDynamicElement-1602515996000]: 
          beanData: '{"ionBean":"DivTag"}'
          tagName: div
          ↓Style [ngx.components.UIStyle-1602516011833]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    '	height: 4px;
                    	border-bottom: 1px solid #cecece;
                    '
          ↓Attr [ngx.components.UIAttribute-1606994493480]: 
            attrName: '*ngIf'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:this.local.published
        ↓DivResultString [ngx.components.UIDynamicElement-1586278166182]: 
          beanData: '{"ionBean":"DivTag"}'
          tagName: div
          ↓Style [ngx.components.UIStyle-1586278166185]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    '  font-size: 15px;
                      font-weight: normal;
                      font-style: normal;
                      font-stretch: normal;
                      line-height: normal;
                      letter-spacing: normal;
                       color: #9b9b9b;
                      a {
                      font-size: 15px;
                      font-weight: normal;
                      font-style: normal;
                      font-stretch: normal;
                      line-height: normal;
                      letter-spacing: normal;
                       color: #9b9b9b;
                      }
                      p {
                      	display:inline-block;
                      }
                      display: flex; 
                        align-items: center;
                      justify-content: center;
                    '
          ↓Directive4 [ngx.components.UIControlDirective-1605274324311]: 
            comment: if we are root without any search
            directiveName: If
            directiveSource: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.local.count != undefined && (this.query == undefined || this.query == '') && (this.local.searchTags?.length == undefined || this.local.searchTags?.length == 0) && (this.local.searchSubTags?.length == undefined || this.local.searchSubTags?.length ==0)  && (this.local.folder == undefined || this.local.folder == '')
            ↓Paragraph [ngx.components.UIDynamicElement-1605274447772]: 
              beanData: '{"ionBean":"Paragraph"}'
              tagName: p
              ↓Text [ngx.components.UIText-1605274447775]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.local.count +'  ' + ('results' | translate)
          ↓Directive41 [ngx.components.UIControlDirective-1605274690832]: 
            comment: if we are in folder whithout any search
            directiveName: If
            directiveSource: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.local.count != undefined && (this.query == undefined || this.query == '') && (this.local.searchTags?.length == undefined || this.local.searchTags?.length == 0) && (this.local.searchSubTags?.length == undefined || this.local.searchSubTags?.length ==0)  && (this.local.folder != undefined && this.local.folder != '')
            ↓Paragraph [ngx.components.UIDynamicElement-1605274732071]: 
              beanData: '{"ionBean":"Paragraph"}'
              tagName: p
              ↓Text [ngx.components.UIText-1605274732074]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.local.count +'  ' + ('results' | translate) +' '+ ('in_folder' | translate)
              ↓Badge [ngx.components.UIDynamicElement-1605274732077]: 
                beanData: '{"ionBean":"Badge"}'
                tagName: ion-badge
                ↓Text [ngx.components.UIText-1605274732080]: 
                  i18n: true
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this.local.folder
                ↓Style [ngx.components.UIStyle-1605274732083]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          position:relative;
                          
                ↓Icon [ngx.components.UIDynamicElement-1605274732086]: 
                  beanData: '{"ionBean":"Icon","IconName":"plain:close"}'
                  tagName: ion-icon
                  ↓Style [ngx.components.UIStyle-1605274732089]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            '
                            }
                            .class1605213441302:hover {
                            	cursor:pointer;
                            '
                  ↓Event [ngx.components.UIControlEvent-1605274732092]: 
                    ↓setNoFolder [ngx.components.UICustomAction-1605274732095]: 
                      actionValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              		    page.local.folder = "";
                                          let arrayHash = window.location.hash.split("/");
                                          arrayHash.splice(3,1, ":folder");
                                          let url = window.location.origin + window.location.pathname + arrayHash.join("/");
                                          window.location.href = url;
                              		resolve();
                              
                      ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1605274732098]: 
                        beanData: '{"ionBean":"InvokeAction"}'
                        stack: C8Oforms_NGX.MobileApplication.Application.callViewLiveAndFillFormList
          ↓Directive42 [ngx.components.UIControlDirective-1605274900849]: 
            comment: if we are root with search by name
            directiveName: If
            directiveSource: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.local.count != undefined && (this.query != undefined && this.query != '') && (this.local.searchTags?.length == undefined || this.local.searchTags?.length == 0) && (this.local.searchSubTags?.length == undefined || this.local.searchSubTags?.length ==0) && (this.local.folder == undefined || this.local.folder == '')
            ↓Paragraph [ngx.components.UIDynamicElement-1605275009390]: 
              beanData: '{"ionBean":"Paragraph"}'
              tagName: p
              ↓Text [ngx.components.UIText-1605275009393]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.local.count + '  ' +( 'search_term_results' | translate)
              ↓Badge [ngx.components.UIDynamicElement-1605275009396]: 
                beanData: '{"ionBean":"Badge"}'
                tagName: ion-badge
                ↓Text [ngx.components.UIText-1605275009399]: 
                  i18n: true
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this.query
                ↓Style [ngx.components.UIStyle-1605275009402]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          position:relative;
                          
                ↓Icon [ngx.components.UIDynamicElement-1605275009405]: 
                  beanData: '{"ionBean":"Icon","IconName":"plain:close"}'
                  tagName: ion-icon
                  ↓Style [ngx.components.UIStyle-1605275009408]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            '
                            }
                            .class1605201666444:hover {
                            	cursor:pointer;
                            '
                  ↓Event [ngx.components.UIControlEvent-1605275009411]: 
                    ↓setQueryempty [ngx.components.UICustomAction-1605275009414]: 
                      actionValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              		page["query"] = "";
                              		resolve();
                              
                      ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1605275009417]: 
                        beanData: '{"ionBean":"InvokeAction"}'
                        stack: C8Oforms_NGX.MobileApplication.Application.callViewLiveAndFillFormList
          ↓Directive421 [ngx.components.UIControlDirective-1605276146176]: 
            comment: if we are in folder with search by name
            directiveName: If
            directiveSource: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.local.count != undefined && (this.query != undefined && this.query != '') && (this.local.searchTags?.length != undefined && this.local.searchTags?.length > 0) && (this.local.searchSubTags?.length == undefined || this.local.searchSubTags?.length ==0)
            ↓Paragraph [ngx.components.UIDynamicElement-1605276146179]: 
              beanData: '{"ionBean":"Paragraph"}'
              tagName: p
              ↓Text [ngx.components.UIText-1605276146182]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.local.count + '  ' +( 'search_term_results' | translate)
              ↓Badge [ngx.components.UIDynamicElement-1605276146185]: 
                beanData: '{"ionBean":"Badge"}'
                tagName: ion-badge
                ↓Text [ngx.components.UIText-1605276146188]: 
                  i18n: true
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this.query
                ↓Style [ngx.components.UIStyle-1605276146191]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          position:relative;
                          
                ↓Icon [ngx.components.UIDynamicElement-1605276146194]: 
                  beanData: '{"ionBean":"Icon","IconName":"plain:close"}'
                  tagName: ion-icon
                  ↓Style [ngx.components.UIStyle-1605276146197]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            '
                            }
                            .class1605201666444:hover {
                            	cursor:pointer;
                            '
                  ↓Event [ngx.components.UIControlEvent-1605276146200]: 
                    ↓setQueryempty [ngx.components.UICustomAction-1605276146203]: 
                      actionValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              		    page["query"] = "";
                              		    //still in research mode
                              	        if(page.local.searchTags.length > 1 || page.local.searchSubTags.length > 0 || page["query"] != ""){
                              	            resolve(true);    
                              	        }
                              	        else{
                              	            // in view mode
                              	            if(page.local.searchTags.length == 1){
                              	                this.local.folder = page.local.searchTags[0];
                              	            }
                              	            else{
                              	                this.local.folder = "";
                              	            }
                              	            resolve(false);
                              	        }
                              		resolve();
                              
                      ↓IfElse [ngx.components.UIDynamicIf-1605277651778]: 
                        beanData: '{"ionBean":"IfElseAction"}'
                        ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1605277651781]: 
                          beanData: '{"ionBean":"InvokeAction"}'
                          stack: C8Oforms_NGX.MobileApplication.Application.searchForm
                        ↓Else_Handler [ngx.components.UIActionElseEvent-1605277651784]: 
                          ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1605277651787]: 
                            beanData: '{"ionBean":"InvokeAction"}'
                            stack: C8Oforms_NGX.MobileApplication.Application.callViewLiveAndFillFormList
              ↓Text1 [ngx.components.UIText-1605276368335]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:'  ' + ('in_folder' | translate)
              ↓Directive [ngx.components.UIControlDirective-1605276368338]: 
                directiveIndexName: i90
                directiveItemName: item90
                directiveSource: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.local.searchTags
                ↓Badge1 [ngx.components.UIDynamicElement-1605276368341]: 
                  beanData: '{"ionBean":"Badge"}'
                  tagName: ion-badge
                  ↓Text [ngx.components.UIText-1605276368344]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:item90
                  ↓Style [ngx.components.UIStyle-1605276368347]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            position:relative;
                            
                  ↓Icon [ngx.components.UIDynamicElement-1605276368350]: 
                    beanData: '{"ionBean":"Icon","IconName":"plain:close"}'
                    tagName: ion-icon
                    ↓Style [ngx.components.UIStyle-1605276368353]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '
                              }
                              .class1605213441302:hover {
                              	cursor:pointer;
                              '
                    ↓Event [ngx.components.UIControlEvent-1605276368356]: 
                      ↓CustomAction [ngx.components.UICustomAction-1605276368359]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                		page.local.searchTags.splice(props.stack.root.scope.i90, 1);
                                
                                		//still in research mode
                                		if(page.local.searchTags.length > 1){
                                		    resolve(true);    
                                		}
                                		else{
                                		    //still in research mode
                                		    if(page["query"] != ""){
                                		        resolve(true);   
                                		    }
                                		    // in view mode
                                		    else{
                                		        if(page.local.searchTags.length == 1){
                                		            this.local.folder = page.local.searchTags[0];
                                		        }
                                		        else{
                                		            this.local.folder = "";
                                		        }
                                		        resolve(false);
                                		    }
                                		}
                                		
                                
                        ↓IfElse [ngx.components.UIDynamicIf-1605276897902]: 
                          beanData: '{"ionBean":"IfElseAction"}'
                          ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1605276924415]: 
                            beanData: '{"ionBean":"InvokeAction"}'
                            stack: C8Oforms_NGX.MobileApplication.Application.searchForm
                          ↓Else_Handler [ngx.components.UIActionElseEvent-1605276905174]: 
                            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1605276368362]: 
                              beanData: '{"ionBean":"InvokeAction"}'
                              stack: C8Oforms_NGX.MobileApplication.Application.callViewLiveAndFillFormList
          ↓Directive4211 [ngx.components.UIControlDirective-1605281268477]: 
            comment: if we are in searching by folders
            directiveName: If
            directiveSource: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.local.count != undefined && (this.query == undefined || this.query == '') && (this.local.searchTags?.length != undefined && this.local.searchTags?.length > 0) && (this.local.searchSubTags?.length == undefined || this.local.searchSubTags?.length ==0)
            ↓Paragraph [ngx.components.UIDynamicElement-1605281268480]: 
              beanData: '{"ionBean":"Paragraph"}'
              tagName: p
              ↓Text [ngx.components.UIText-1605281308546]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.local.count +'  ' + ('results' | translate) +' '+ ('in_folder' | translate)
              ↓Directive [ngx.components.UIControlDirective-1605281268522]: 
                directiveIndexName: i90
                directiveItemName: item90
                directiveSource: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.local.searchTags
                ↓Badge1 [ngx.components.UIDynamicElement-1605281268525]: 
                  beanData: '{"ionBean":"Badge"}'
                  tagName: ion-badge
                  ↓Text [ngx.components.UIText-1605281268528]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:item90
                  ↓Style [ngx.components.UIStyle-1605281268531]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            position:relative;
                            
                  ↓Icon [ngx.components.UIDynamicElement-1605281268534]: 
                    beanData: '{"ionBean":"Icon","IconName":"plain:close"}'
                    tagName: ion-icon
                    ↓Style [ngx.components.UIStyle-1605281268537]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '
                              }
                              .class1605213441302:hover {
                              	cursor:pointer;
                              '
                    ↓Event [ngx.components.UIControlEvent-1605281268540]: 
                      ↓CustomAction [ngx.components.UICustomAction-1605281268543]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                		page.local.searchTags.splice(props.stack.root.scope.i90, 1);
                                
                                		//still in research mode
                                        if(page.local.searchTags.length > 1 || page.local.searchSubTags.length > 0 || (page["query"] != "" && page["query"] != undefined)){
                                            resolve(true);    
                                        }
                                        else{
                                            // in view mode
                                            if(page.local.searchTags.length == 1){
                                                this.local.folder = page.local.searchTags[0];
                                            }
                                            else{
                                                this.local.folder = "";
                                            }
                                            resolve(false);
                                        }
                                		
                                
                        ↓IfElse [ngx.components.UIDynamicIf-1605281268546]: 
                          beanData: '{"ionBean":"IfElseAction"}'
                          ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1605281268549]: 
                            beanData: '{"ionBean":"InvokeAction"}'
                            stack: C8Oforms_NGX.MobileApplication.Application.searchForm
                          ↓Else_Handler [ngx.components.UIActionElseEvent-1605281268552]: 
                            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1605281268555]: 
                              beanData: '{"ionBean":"InvokeAction"}'
                              stack: C8Oforms_NGX.MobileApplication.Application.callViewLiveAndFillFormList
          ↓Directive42111 [ngx.components.UIControlDirective-1605281976793]: 
            comment: if we are in searching by subTags
            directiveName: If
            directiveSource: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.local.count != undefined && (this.query == undefined || this.query == '') && (this.local.searchTags?.length == undefined || this.local.searchTags?.length == 0) && (this.local.searchSubTags?.length != undefined && this.local.searchSubTags?.length > 0)
            ↓Paragraph [ngx.components.UIDynamicElement-1605281976796]: 
              beanData: '{"ionBean":"Paragraph"}'
              tagName: p
              ↓Text [ngx.components.UIText-1605281976799]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.local.count +'  ' + ('results' | translate) +' '+ ('for_tag' | translate)
              ↓Directive [ngx.components.UIControlDirective-1605281976802]: 
                directiveIndexName: i91
                directiveItemName: item91
                directiveSource: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.local.searchSubTags
                ↓Badge1 [ngx.components.UIDynamicElement-1605281976805]: 
                  beanData: '{"ionBean":"Badge"}'
                  tagName: ion-badge
                  ↓Text [ngx.components.UIText-1605281976808]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:item91
                  ↓Style [ngx.components.UIStyle-1605281976811]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            position:relative;
                            
                  ↓Icon [ngx.components.UIDynamicElement-1605281976814]: 
                    beanData: '{"ionBean":"Icon","IconName":"plain:close"}'
                    tagName: ion-icon
                    ↓Style [ngx.components.UIStyle-1605281976817]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '
                              }
                              .class1605213441302:hover {
                              	cursor:pointer;
                              '
                    ↓Event [ngx.components.UIControlEvent-1605281976820]: 
                      ↓CustomAction [ngx.components.UICustomAction-1605281976823]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                		page.local.searchSubTags.splice(props.stack.root.scope.i91, 1);
                                
                                		//still in research mode
                                		if(page.local.searchTags.length > 1 || page.local.searchSubTags.length > 0 || page["query"] != ""){
                                		    resolve(true);    
                                		}
                                		else{
                                            // in view mode
                                            if(page.local.searchTags.length == 1){
                                                this.local.folder = page.local.searchTags[0];
                                            }
                                            else{
                                                this.local.folder = "";
                                            }
                                            resolve(false);
                                		}
                                		
                                
                        ↓IfElse [ngx.components.UIDynamicIf-1605281976826]: 
                          beanData: '{"ionBean":"IfElseAction"}'
                          ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1605281976829]: 
                            beanData: '{"ionBean":"InvokeAction"}'
                            stack: C8Oforms_NGX.MobileApplication.Application.searchForm
                          ↓Else_Handler [ngx.components.UIActionElseEvent-1605281976832]: 
                            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1605281976835]: 
                              beanData: '{"ionBean":"InvokeAction"}'
                              stack: C8Oforms_NGX.MobileApplication.Application.callViewLiveAndFillFormList
          ↓Directive421111 [ngx.components.UIControlDirective-1605283861435]: 
            comment: if we are in searching by folders and sub
            directiveName: If
            directiveSource: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.local.count != undefined && (this.query == undefined || this.query == '') && (this.local.searchTags?.length != undefined && this.local.searchTags?.length > 0) && (this.local.searchSubTags?.length != undefined && this.local.searchSubTags?.length > 0)
            ↓Paragraph1 [ngx.components.UIDynamicElement-1605283919698]: 
              beanData: '{"ionBean":"Paragraph"}'
              tagName: p
              ↓Text [ngx.components.UIText-1605283919701]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.local.count +'  ' + ('results' | translate) +' '+ ('in_folder' | translate)
              ↓Directive [ngx.components.UIControlDirective-1605283919704]: 
                directiveIndexName: i90
                directiveItemName: item90
                directiveSource: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.local.searchTags
                ↓Badge1 [ngx.components.UIDynamicElement-1605283919707]: 
                  beanData: '{"ionBean":"Badge"}'
                  tagName: ion-badge
                  ↓Text [ngx.components.UIText-1605283919710]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:item90
                  ↓Style [ngx.components.UIStyle-1605283919713]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            position:relative;
                            
                  ↓Icon [ngx.components.UIDynamicElement-1605283919716]: 
                    beanData: '{"ionBean":"Icon","IconName":"plain:close"}'
                    tagName: ion-icon
                    ↓Style [ngx.components.UIStyle-1605283919719]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '
                              }
                              .class1605213441302:hover {
                              	cursor:pointer;
                              '
                    ↓Event [ngx.components.UIControlEvent-1605283919722]: 
                      ↓CustomAction [ngx.components.UICustomAction-1605283919725]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                		page.local.searchTags.splice(props.stack.root.scope.i90, 1);
                                
                                		//still in research mode
                                        if(page.local.searchTags.length > 1 || page.local.searchSubTags.length > 0 || page["query"] != ""){
                                            resolve(true);    
                                        }
                                        else{
                                            // in view mode
                                            if(page.local.searchTags.length == 1){
                                                this.local.folder = page.local.searchTags[0];
                                            }
                                            else{
                                                this.local.folder = "";
                                            }
                                            resolve(false);
                                        }
                                		
                                
                        ↓IfElse [ngx.components.UIDynamicIf-1605283919728]: 
                          beanData: '{"ionBean":"IfElseAction"}'
                          ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1605283919731]: 
                            beanData: '{"ionBean":"InvokeAction"}'
                            stack: C8Oforms_NGX.MobileApplication.Application.searchForm
                          ↓Else_Handler [ngx.components.UIActionElseEvent-1605283919734]: 
                            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1605283919737]: 
                              beanData: '{"ionBean":"InvokeAction"}'
                              stack: C8Oforms_NGX.MobileApplication.Application.callViewLiveAndFillFormList
              ↓Text1 [ngx.components.UIText-1605283989192]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:('and' | translate) +' '+ ('for_tag' | translate)
              ↓Directive1 [ngx.components.UIControlDirective-1605284046578]: 
                directiveIndexName: i91
                directiveItemName: item91
                directiveSource: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.local.searchSubTags
                ↓Badge1 [ngx.components.UIDynamicElement-1605284046581]: 
                  beanData: '{"ionBean":"Badge"}'
                  tagName: ion-badge
                  ↓Text [ngx.components.UIText-1605284046584]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:item91
                  ↓Style [ngx.components.UIStyle-1605284046587]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            position:relative;
                            
                  ↓Icon [ngx.components.UIDynamicElement-1605284046590]: 
                    beanData: '{"ionBean":"Icon","IconName":"plain:close"}'
                    tagName: ion-icon
                    ↓Style [ngx.components.UIStyle-1605284046593]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '
                              }
                              .class1605213441302:hover {
                              	cursor:pointer;
                              '
                    ↓Event [ngx.components.UIControlEvent-1605284046596]: 
                      ↓CustomAction [ngx.components.UICustomAction-1605284046599]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                		page.local.searchSubTags.splice(props.stack.root.scope.i91, 1);
                                
                                		//still in research mode
                                		if(page.local.searchTags.length > 1 || page.local.searchSubTags.length > 0 || page["query"] != ""){
                                		    resolve(true);    
                                		}
                                		else{
                                            // in view mode
                                            if(page.local.searchTags.length == 1){
                                                this.local.folder = page.local.searchTags[0];
                                            }
                                            else{
                                                this.local.folder = "";
                                            }
                                            resolve(false);
                                		}
                                		
                                
                        ↓IfElse [ngx.components.UIDynamicIf-1605284046602]: 
                          beanData: '{"ionBean":"IfElseAction"}'
                          ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1605284046605]: 
                            beanData: '{"ionBean":"InvokeAction"}'
                            stack: C8Oforms_NGX.MobileApplication.Application.searchForm
                          ↓Else_Handler [ngx.components.UIActionElseEvent-1605284046608]: 
                            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1605284046611]: 
                              beanData: '{"ionBean":"InvokeAction"}'
                              stack: C8Oforms_NGX.MobileApplication.Application.callViewLiveAndFillFormList
          ↓Directive4212 [ngx.components.UIControlDirective-1605284284660]: 
            comment: if we are in folder with search by name
            directiveName: If
            directiveSource: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.local.count != undefined && (this.query != undefined && this.query != '') && (this.local.searchTags?.length == undefined || this.local.searchTags?.length == 0) && (this.local.searchSubTags?.length != undefined && this.local.searchSubTags?.length > 0)
            ↓Paragraph [ngx.components.UIDynamicElement-1605284284663]: 
              beanData: '{"ionBean":"Paragraph"}'
              tagName: p
              ↓Text [ngx.components.UIText-1605284284666]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.local.count + '  ' +( 'search_term_results' | translate)
              ↓Badge [ngx.components.UIDynamicElement-1605284284669]: 
                beanData: '{"ionBean":"Badge"}'
                tagName: ion-badge
                ↓Text [ngx.components.UIText-1605284284672]: 
                  i18n: true
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this.query
                ↓Style [ngx.components.UIStyle-1605284284675]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          position:relative;
                          
                ↓Icon [ngx.components.UIDynamicElement-1605284284678]: 
                  beanData: '{"ionBean":"Icon","IconName":"plain:close"}'
                  tagName: ion-icon
                  ↓Style [ngx.components.UIStyle-1605284284681]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            '
                            }
                            .class1605201666444:hover {
                            	cursor:pointer;
                            '
                  ↓Event [ngx.components.UIControlEvent-1605284284684]: 
                    ↓setQueryempty [ngx.components.UICustomAction-1605284284687]: 
                      actionValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              		    page["query"] = "";
                              		    //still in research mode
                              	        if(page.local.searchTags.length > 1 || page.local.searchSubTags.length > 0 || page["query"] != ""){
                              	            resolve(true);    
                              	        }
                              	        else{
                              	            // in view mode
                              	            if(page.local.searchTags.length == 1){
                              	                this.local.folder = page.local.searchTags[0];
                              	            }
                              	            else{
                              	                this.local.folder = "";
                              	            }
                              	            resolve(false);
                              	        }
                              		resolve();
                              
                      ↓IfElse [ngx.components.UIDynamicIf-1605284284690]: 
                        beanData: '{"ionBean":"IfElseAction"}'
                        ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1605284284693]: 
                          beanData: '{"ionBean":"InvokeAction"}'
                          stack: C8Oforms_NGX.MobileApplication.Application.searchForm
                        ↓Else_Handler [ngx.components.UIActionElseEvent-1605284284696]: 
                          ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1605284284699]: 
                            beanData: '{"ionBean":"InvokeAction"}'
                            stack: C8Oforms_NGX.MobileApplication.Application.callViewLiveAndFillFormList
              ↓Text1 [ngx.components.UIText-1605284284702]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:'  ' + ('for_tag' | translate)
              ↓Directive1 [ngx.components.UIControlDirective-1605284354405]: 
                directiveIndexName: i91
                directiveItemName: item91
                directiveSource: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.local.searchSubTags
                ↓Badge1 [ngx.components.UIDynamicElement-1605284354408]: 
                  beanData: '{"ionBean":"Badge"}'
                  tagName: ion-badge
                  ↓Text [ngx.components.UIText-1605284354411]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:item91
                  ↓Style [ngx.components.UIStyle-1605284354414]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            position:relative;
                            
                  ↓Icon [ngx.components.UIDynamicElement-1605284354417]: 
                    beanData: '{"ionBean":"Icon","IconName":"plain:close"}'
                    tagName: ion-icon
                    ↓Style [ngx.components.UIStyle-1605284354420]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '
                              }
                              .class1605213441302:hover {
                              	cursor:pointer;
                              '
                    ↓Event [ngx.components.UIControlEvent-1605284354423]: 
                      ↓CustomAction [ngx.components.UICustomAction-1605284354426]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                		page.local.searchSubTags.splice(props.stack.root.scope.i91, 1);
                                
                                		//still in research mode
                                		if(page.local.searchTags.length > 1 || page.local.searchSubTags.length > 0 || page["query"] != ""){
                                		    resolve(true);    
                                		}
                                		else{
                                            // in view mode
                                            if(page.local.searchTags.length == 1){
                                                this.local.folder = page.local.searchTags[0];
                                            }
                                            else{
                                                this.local.folder = "";
                                            }
                                            resolve(false);
                                		}
                                		
                                
                        ↓IfElse [ngx.components.UIDynamicIf-1605284354429]: 
                          beanData: '{"ionBean":"IfElseAction"}'
                          ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1605284354432]: 
                            beanData: '{"ionBean":"InvokeAction"}'
                            stack: C8Oforms_NGX.MobileApplication.Application.searchForm
                          ↓Else_Handler [ngx.components.UIActionElseEvent-1605284354435]: 
                            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1605284354438]: 
                              beanData: '{"ionBean":"InvokeAction"}'
                              stack: C8Oforms_NGX.MobileApplication.Application.callViewLiveAndFillFormList
          ↓Directive4211111 [ngx.components.UIControlDirective-1605285044628]: 
            comment: if we are in searching by folders and sub
            directiveName: If
            directiveSource: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.local.count != undefined && (this.query != undefined && this.query != '') && (this.local.searchTags?.length != undefined && this.local.searchTags?.length > 0) && (this.local.searchSubTags?.length != undefined && this.local.searchSubTags?.length > 0)
            ↓Paragraph1 [ngx.components.UIDynamicElement-1605285044631]: 
              beanData: '{"ionBean":"Paragraph"}'
              tagName: p
              ↓Text2 [ngx.components.UIText-1605285128990]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.local.count + '  ' +( 'search_term_results' | translate)
              ↓Badge [ngx.components.UIDynamicElement-1605285128993]: 
                beanData: '{"ionBean":"Badge"}'
                tagName: ion-badge
                ↓Text [ngx.components.UIText-1605285128996]: 
                  i18n: true
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this.query
                ↓Style [ngx.components.UIStyle-1605285128999]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          position:relative;
                          
                ↓Icon [ngx.components.UIDynamicElement-1605285129002]: 
                  beanData: '{"ionBean":"Icon","IconName":"plain:close"}'
                  tagName: ion-icon
                  ↓Style [ngx.components.UIStyle-1605285129005]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            '
                            }
                            .class1605201666444:hover {
                            	cursor:pointer;
                            '
                  ↓Event [ngx.components.UIControlEvent-1605285129008]: 
                    ↓setQueryempty [ngx.components.UICustomAction-1605285201054]: 
                      actionValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              		    page["query"] = "";
                              		    //still in research mode
                              	        if(page.local.searchTags.length > 1 || page.local.searchSubTags.length > 0 || page["query"] != ""){
                              	            resolve(true);    
                              	        }
                              	        else{
                              	            // in view mode
                              	            if(page.local.searchTags.length == 1){
                              	                this.local.folder = page.local.searchTags[0];
                              	            }
                              	            else{
                              	                this.local.folder = "";
                              	            }
                              	            resolve(false);
                              	        }
                              		resolve();
                              
                      ↓IfElse [ngx.components.UIDynamicIf-1605285201057]: 
                        beanData: '{"ionBean":"IfElseAction"}'
                        ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1605285201060]: 
                          beanData: '{"ionBean":"InvokeAction"}'
                          stack: C8Oforms_NGX.MobileApplication.Application.searchForm
                        ↓Else_Handler [ngx.components.UIActionElseEvent-1605285201063]: 
                          ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1605285201066]: 
                            beanData: '{"ionBean":"InvokeAction"}'
                            stack: C8Oforms_NGX.MobileApplication.Application.callViewLiveAndFillFormList
              ↓Text [ngx.components.UIText-1605285044634]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:' '+ ('in_folder' | translate)
              ↓Directive [ngx.components.UIControlDirective-1605285044637]: 
                directiveIndexName: i90
                directiveItemName: item90
                directiveSource: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.local.searchTags
                ↓Badge1 [ngx.components.UIDynamicElement-1605285044640]: 
                  beanData: '{"ionBean":"Badge"}'
                  tagName: ion-badge
                  ↓Text [ngx.components.UIText-1605285044643]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:item90
                  ↓Style [ngx.components.UIStyle-1605285044646]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            position:relative;
                            
                  ↓Icon [ngx.components.UIDynamicElement-1605285044649]: 
                    beanData: '{"ionBean":"Icon","IconName":"plain:close"}'
                    tagName: ion-icon
                    ↓Style [ngx.components.UIStyle-1605285044652]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '
                              }
                              .class1605213441302:hover {
                              	cursor:pointer;
                              '
                    ↓Event [ngx.components.UIControlEvent-1605285044655]: 
                      ↓CustomAction [ngx.components.UICustomAction-1605285044658]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                		page.local.searchTags.splice(props.stack.root.scope.i90, 1);
                                
                                		//still in research mode
                                        if(page.local.searchTags.length > 1 || page.local.searchSubTags.length > 0 || page["query"] != ""){
                                            resolve(true);    
                                        }
                                        else{
                                            // in view mode
                                            if(page.local.searchTags.length == 1){
                                                this.local.folder = page.local.searchTags[0];
                                            }
                                            else{
                                                this.local.folder = "";
                                            }
                                            resolve(false);
                                        }
                                		
                                
                        ↓IfElse [ngx.components.UIDynamicIf-1605285044661]: 
                          beanData: '{"ionBean":"IfElseAction"}'
                          ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1605285044664]: 
                            beanData: '{"ionBean":"InvokeAction"}'
                            stack: C8Oforms_NGX.MobileApplication.Application.searchForm
                          ↓Else_Handler [ngx.components.UIActionElseEvent-1605285044667]: 
                            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1605285044670]: 
                              beanData: '{"ionBean":"InvokeAction"}'
                              stack: C8Oforms_NGX.MobileApplication.Application.callViewLiveAndFillFormList
              ↓Text1 [ngx.components.UIText-1605285044673]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:('and' | translate) +' '+ ('for_tag' | translate)
              ↓Directive1 [ngx.components.UIControlDirective-1605285044676]: 
                directiveIndexName: i91
                directiveItemName: item91
                directiveSource: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.local.searchSubTags
                ↓Badge1 [ngx.components.UIDynamicElement-1605285044679]: 
                  beanData: '{"ionBean":"Badge"}'
                  tagName: ion-badge
                  ↓Text [ngx.components.UIText-1605285044682]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:item91
                  ↓Style [ngx.components.UIStyle-1605285044685]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            position:relative;
                            
                  ↓Icon [ngx.components.UIDynamicElement-1605285044688]: 
                    beanData: '{"ionBean":"Icon","IconName":"plain:close"}'
                    tagName: ion-icon
                    ↓Style [ngx.components.UIStyle-1605285044691]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '
                              }
                              .class1605213441302:hover {
                              	cursor:pointer;
                              '
                    ↓Event [ngx.components.UIControlEvent-1605285044694]: 
                      ↓CustomAction [ngx.components.UICustomAction-1605285044697]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                		page.local.searchSubTags.splice(props.stack.root.scope.i91, 1);
                                
                                		//still in research mode
                                		if(page.local.searchTags.length > 1 || page.local.searchSubTags.length > 0 || page["query"] != ""){
                                		    resolve(true);    
                                		}
                                		else{
                                            // in view mode
                                            if(page.local.searchTags.length == 1){
                                                this.local.folder = page.local.searchTags[0];
                                            }
                                            else{
                                                this.local.folder = "";
                                            }
                                            resolve(false);
                                		}
                                		
                                
                        ↓IfElse [ngx.components.UIDynamicIf-1605285044700]: 
                          beanData: '{"ionBean":"IfElseAction"}'
                          ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1605285044703]: 
                            beanData: '{"ionBean":"InvokeAction"}'
                            stack: C8Oforms_NGX.MobileApplication.Application.searchForm
                          ↓Else_Handler [ngx.components.UIActionElseEvent-1605285044706]: 
                            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1605285044709]: 
                              beanData: '{"ionBean":"InvokeAction"}'
                              stack: C8Oforms_NGX.MobileApplication.Application.callViewLiveAndFillFormList
          ↓Div [ngx.components.UIDynamicElement-1606649192233]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓ButtonCreateFolder [ngx.components.UIDynamicElement-1628616937955]: 
              beanData: '{"ionBean":"Button","IonSize":"plain:large"}'
              tagName: ion-button
              ↓Event [ngx.components.UIControlEvent-1628616937976]: 
                ↓CustomAction [ngx.components.UICustomAction-1628785025388]: 
                  actionValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '		const alertCtrl: AlertController = page.getInstance(AlertController);
                          		const translate: TranslateService = page.getInstance(TranslateService);
                          		const prompt = alertCtrl.create({
                          		      header: page["translate"].instant("creating_fodler"),
                          		      message: page["translate"].instant("enter_name_fold"),
                          		      cssClass: ''c8o-alert-create-form'',
                          		      inputs: [
                          		        {
                          		          name: ''title'',
                          		          placeholder: page["translate"].instant("label_title")
                          		        },
                          		      ],
                          		      buttons: [
                          		        {
                          		          text: page["translate"].instant("Cancel"),
                          		          handler: (data) => {
                          		            resolve(false);
                          		          }
                          		        },
                          		        {
                          		          text: page["translate"].instant("Save"),
                          		          handler: (data) => {
                          						let title = data["title"];
                          						page.c8o.callJsonObject("fs://c8oforms_fs.post",{
                          								"_id":"folder_"+title,
                          								tag: [title],
                          								c8o_view_type_drafts_folder: !page.local.published,
                          								c8o_view_type_published_folder: page.local.published
                          							})
                          							.then((res, params)=>{
                          								console.log("there res", {res:res, params: params});
                          								resolve({error:false})
                          								return null;
                          							})
                          							.fail((err)=>{
                          								resolve({error: true});
                          								console.log("there err", err);
                          							})
                          		          }
                          		        }
                          		      ]
                          		    }).then((res: any)=>{
                          			res.present();
                          			});
                          		
                          '
              ↓Icon [ngx.components.UIDynamicElement-1628616937961]: 
                beanData: '{"ionBean":"Icon","IconName":"plain:custom-folder"}'
                tagName: ion-icon
                ↓Style [ngx.components.UIStyle-1628616937964]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          'width:3rem;
                          height:3rem;
                          	vertical-align:middle;
                          }
                          .class1606649976284:hover{
                           cursor:pointer;
                          
                          '
              ↓Attr [ngx.components.UIAttribute-1628617159799]: 
                attrName: tooltip
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:'create_folder' | translate
              ↓Attr1 [ngx.components.UIAttribute-1628617159802]: 
                attrName: 
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:arrow
              ↓Attr2 [ngx.components.UIAttribute-1628617159805]: 
                attrName: positionV
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:top
            ↓Style [ngx.components.UIStyle-1606649215776]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '	display: inline-block;
                      	  line-height: normal;
                      	  margin-left:auto; margin-right:0;
                      '
            ↓ButtonDisplayFormat [ngx.components.UIDynamicElement-1606649879795]: 
              beanData: '{"ionBean":"Button","IonSize":"plain:large"}'
              tagName: ion-button
              ↓Directive [ngx.components.UIControlDirective-1606649902124]: 
                directiveName: If
                directiveSource: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this?.global?.grid == false else ElseBlock_1606649912084
                ↓Icon [ngx.components.UIDynamicElement-1606649976284]: 
                  beanData: '{"ionBean":"Icon","IconName":"plain:custom-grid"}'
                  tagName: ion-icon
                  ↓Style [ngx.components.UIStyle-1606650034717]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            'width:3rem;
                            height:3rem;
                            	vertical-align:middle;
                            }
                            .class1606649976284:hover{
                             cursor:pointer;
                            
                            '
              ↓Tag [ngx.components.UIElement-1606649912084]: 
                identifier: ElseBlock_1606649912084
                tagName: ng-template
                ↓Icon [ngx.components.UIDynamicElement-1606650098921]: 
                  beanData: '{"ionBean":"Icon","IconName":"plain:custom-list"}'
                  tagName: ion-icon
                  ↓Style [ngx.components.UIStyle-1606650098924]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            'width:3rem;
                            height:3rem;
                            	vertical-align:middle;
                            }
                            .class1606649976284:hover{
                             cursor:pointer;
                            
                            '
              ↓Event [ngx.components.UIControlEvent-1606650173142]: 
                ↓SetGlobal1 [ngx.components.UIDynamicAction-1606650173145]: 
                  beanData: |
                    '{
                     "ionBean": "SetGlobalAction",
                     "Property": "plain:grid",
                     "Value": "script:!this.global.grid"
                    }'
                  ↓If [ngx.components.UIDynamicAction-1606995106338]: 
                    beanData: '{"ionBean":"IfAction","condition":"script:!this.global.grid"}'
                    ↓SetGlobal [ngx.components.UIDynamicAction-1606995130668]: 
                      beanData: |
                        '{
                         "ionBean": "SetGlobalAction",
                         "Property": "plain:qr",
                         "Value": "script:false"
                        }'
                ↓SetGlobal [ngx.components.UIDynamicAction-1611746601672]: 
                  beanData: |
                    '{
                     "ionBean": "SetGlobalAction",
                     "Property": "plain:selectedItem",
                     "Value": "script:{}"
                    }'
              ↓Attr [ngx.components.UIAttribute-1628617665467]: 
                attrName: tooltip
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: 'script:this.global.grid == false ?  translate.instant(''grid_view'') : translate.instant(''list_view'')'
              ↓Attr1 [ngx.components.UIAttribute-1628617665470]: 
                attrName: 
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:arrow
              ↓Attr2 [ngx.components.UIAttribute-1628617665473]: 
                attrName: positionV
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:top
            ↓Button [ngx.components.UIDynamicElement-1606649796271]: 
              beanData: '{"ionBean":"Button","IonSize":"plain:large"}'
              tagName: ion-button
              ↓Icon [ngx.components.UIDynamicElement-1606648948116]: 
                beanData: '{"ionBean":"Icon","IconName":"plain:custom-qr_code"}'
                tagName: ion-icon
                ↓Style [ngx.components.UIStyle-1606648948119]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '	/*width: 17px !important;
                          	height: 17px !important;*/
                          	 width: 3rem;
                          	 height: 3rem;
                          	vertical-align:middle;
                          }
                          .class1604011220559:hover{
                           cursor:pointer;
                          '
              ↓Event [ngx.components.UIControlEvent-1606648948122]: 
                ↓SetGlobal [ngx.components.UIDynamicAction-1606648948125]: 
                  beanData: |
                    '{
                     "ionBean": "SetGlobalAction",
                     "Property": "plain:qr",
                     "Value": "script:!this.global.qr"
                    }'
                ↓SetGlobal1 [ngx.components.UIDynamicAction-1606648948128]: 
                  beanData: |
                    '{
                     "ionBean": "SetGlobalAction",
                     "Property": "plain:grid",
                     "Value": "script:true"
                    }'
              ↓Attr [ngx.components.UIAttribute-1628617667583]: 
                attrName: tooltip
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:'show_qr_code' | translate
              ↓Attr1 [ngx.components.UIAttribute-1628617667586]: 
                attrName: 
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:arrow
              ↓Attr2 [ngx.components.UIAttribute-1628617667589]: 
                attrName: positionV
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:top
        ↓Div [ngx.components.UIDynamicElement-1606648778819]: 
          beanData: '{"ionBean":"DivTag"}'
          isEnabled: false
          tagName: div
          ↓Style [ngx.components.UIStyle-1606648785763]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    '	display: inline-block;
                    	float:right;
                    	vertical-align: middle;
                    	
                    	font-size: 15px;
                      font-weight: normal;
                      font-style: normal;
                      font-stretch: normal;
                      line-height: normal;
                      letter-spacing: normal;
                       color: #9b9b9b;
                      a {
                      font-size: 15px;
                      font-weight: normal;
                      font-style: normal;
                      font-stretch: normal;
                      line-height: normal;
                      letter-spacing: normal;
                       color: #9b9b9b;
                      }
                    '
          ↓Tag1 [ngx.components.UIElement-1606648810528]: 
            comment: svg list
            tagName: svg
            ↓Attr [ngx.components.UIAttribute-1606648810531]: 
              attrName: width
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:21px
            ↓Attr1 [ngx.components.UIAttribute-1606648810534]: 
              attrName: height
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:17px
            ↓Attr2 [ngx.components.UIAttribute-1606648810537]: 
              attrName: viewBox
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:0 0 21 15
            ↓Attr3 [ngx.components.UIAttribute-1606648810540]: 
              attrName: version
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:1.1
            ↓Attr4 [ngx.components.UIAttribute-1606648810543]: 
              attrName: xmlns
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:http://www.w3.org/2000/svg
            ↓Attr5 [ngx.components.UIAttribute-1606648810546]: 
              attrName: xmlns:xlink
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:http://www.w3.org/1999/xlink
            ↓FragmentList [ngx.components.UICustom-1606648810549]: 
              htmlTemplate: |
                '<desc>Created with Sketch.</desc>
                    <defs></defs>
                    <g id="Homepage" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                        <g id="02a_search_hover" transform="translate(-1009.000000, -149.000000)">
                            <g id="Search-+-view" transform="translate(216.000000, 144.000000)">
                                <g id="Group" transform="translate(793.000000, 5.000000)">
                                    <path d="M4,0.5 L20,0.5" id="Line-3" [attr.stroke]="this?.global?.grid == false ? ''#0CBBE7'': ''#9B9B9B''" stroke-linecap="square"></path>
                                    <path d="M4,7.5 L20,7.5" id="Line-3-Copy" [attr.stroke]="this?.global?.grid == false ? ''#0CBBE7'': ''#9B9B9B''" stroke-linecap="square"></path>
                                    <path d="M4,14.5 L20,14.5" id="Line-3-Copy-2" [attr.stroke]="this?.global?.grid == false ? ''#0CBBE7'': ''#9B9B9B''" stroke-linecap="square"></path>
                                    <rect id="Rectangle-Copy-3" [attr.fill]="this?.global?.grid == false ? ''#0CBBE7'': ''#9B9B9B''" x="0" y="14" width="1" height="1" rx="0.5"></rect>
                                    <rect id="Rectangle-Copy-4" [attr.fill]="this?.global?.grid == false ? ''#0CBBE7'': ''#9B9B9B''" x="0" y="7" width="1" height="1" rx="0.5"></rect>
                                    <rect id="Rectangle-Copy-5" [attr.fill]="this?.global?.grid == false ? ''#0CBBE7'': ''#9B9B9B''" x="0" y="0" width="1" height="1" rx="0.5"></rect>
                                </g>
                            </g>
                        </g>
                    </g>'
            ↓Style [ngx.components.UIStyle-1606648810552]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      ' font-size: 3rem;
                      margin-bottom:0.1em;
                      }
                      .class1567517869278:hover{
                       cursor:pointer;
                      '
            ↓Event [ngx.components.UIControlEvent-1606648810555]: 
              ↓SetGlobal1 [ngx.components.UIDynamicAction-1606648810558]: 
                beanData: |
                  '{
                   "ionBean": "SetGlobalAction",
                   "Property": "plain:grid",
                   "Value": "script:false"
                  }'
              ↓SetGlobal [ngx.components.UIDynamicAction-1606648810561]: 
                beanData: |
                  '{
                   "ionBean": "SetGlobalAction",
                   "Property": "plain:qr",
                   "Value": "script:false"
                  }'
          ↓Tag11 [ngx.components.UIElement-1606648810564]: 
            comment: svg grid
            tagName: svg
            ↓Attr [ngx.components.UIAttribute-1606648810567]: 
              attrName: width
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:17px
            ↓Attr1 [ngx.components.UIAttribute-1606648810570]: 
              attrName: height
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:17px
            ↓Attr2 [ngx.components.UIAttribute-1606648810573]: 
              attrName: viewBox
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:0 0 17 17
            ↓Attr3 [ngx.components.UIAttribute-1606648810576]: 
              attrName: version
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:1.1
            ↓Attr4 [ngx.components.UIAttribute-1606648810579]: 
              attrName: xmlns
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:http://www.w3.org/2000/svg
            ↓Attr5 [ngx.components.UIAttribute-1606648810582]: 
              attrName: xmlns:xlink
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:http://www.w3.org/1999/xlink
            ↓FragmentGrid [ngx.components.UICustom-1606648810585]: 
              htmlTemplate: |
                '<desc>Created with Sketch.</desc>
                    <defs></defs>
                    <g id="Homepage" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
                        <g id="02a_search_hover" transform="translate(-1046.000000, -148.000000)" [attr.fill]="this?.global?.grid === true && !this?.global?.qr ? ''#0CBBE7'': ''#9B9B9B''">
                            <g id="Search-+-view" transform="translate(216.000000, 144.000000)">
                                <g id="Group-2" transform="translate(830.000000, 4.000000)">
                                    <rect id="Rectangle-Copy-2" x="0" y="0" width="7" height="7"></rect>
                                    <rect id="Rectangle-Copy-7" x="10" y="0" width="7" height="7"></rect>
                                    <rect id="Rectangle-Copy-6" x="0" y="10" width="7" height="7"></rect>
                                    <rect id="Rectangle-Copy-8" x="10" y="10" width="7" height="7"></rect>
                                </g>
                            </g>
                        </g>
                    </g>'
            ↓Style [ngx.components.UIStyle-1606648810588]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      ' font-size: 3rem;
                      margin-bottom:0.1em;
                      }
                      .class1567518314195:hover{
                       cursor:pointer;
                      '
            ↓Event [ngx.components.UIControlEvent-1606648810591]: 
              ↓SetGlobal1 [ngx.components.UIDynamicAction-1606648810594]: 
                beanData: |
                  '{
                   "ionBean": "SetGlobalAction",
                   "Property": "plain:grid",
                   "Value": "script:true"
                  }'
              ↓SetGlobal [ngx.components.UIDynamicAction-1606648810597]: 
                beanData: |
                  '{
                   "ionBean": "SetGlobalAction",
                   "Property": "plain:qr",
                   "Value": "script:false"
                  }'
          ↓Icon [ngx.components.UIDynamicElement-1606648810600]: 
            beanData: '{"ionBean":"Icon","IconName":"plain:custom-qr_code"}'
            tagName: ion-icon
            ↓Style [ngx.components.UIStyle-1606648810603]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '	width: 17px !important;
                      	height: 17px !important;
                      	margin-bottom:0.1em;
                      }
                      .class1604011220559:hover{
                       cursor:pointer;
                      '
            ↓Event [ngx.components.UIControlEvent-1606648810606]: 
              ↓SetGlobal [ngx.components.UIDynamicAction-1606648810609]: 
                beanData: |
                  '{
                   "ionBean": "SetGlobalAction",
                   "Property": "plain:qr",
                   "Value": "script:true"
                  }'
              ↓SetGlobal1 [ngx.components.UIDynamicAction-1606648810612]: 
                beanData: |
                  '{
                   "ionBean": "SetGlobalAction",
                   "Property": "plain:grid",
                   "Value": "script:true"
                  }'
        ↓Div1 [ngx.components.UIDynamicElement-1628877444826]: 
          beanData: '{"ionBean":"DivTag"}'
          tagName: div
          ↓Attr [ngx.components.UIAttribute-1628877451657]: 
            attrName: '*ngIf'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:this.local.folder != undefined && this.local.folder != ''
          ↓Attr1 [ngx.components.UIAttribute-1628877525406]: 
            isEnabled: false
          ↓Directive [ngx.components.UIControlDirective-1628877732330]: 
            directiveName: If
            directiveSource: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.local.dragging == true else ElseBlock_1600439522169
            ↓UseSharedComponent [ngx.components.UIUseShared-1628877732333]: 
              sharedcomponent: C8Oforms_NGX.MobileApplication.Application.sharedDropIndicatorSelector
          ↓Tag1 [ngx.components.UIElement-1628877732342]: 
            identifier: ElseBlock_1600439522169
            tagName: ng-template
            ↓Tag [ngx.components.UIElement-1628877732345]: 
              selfClose: true
              tagName: br
      ↓GridColSpaceRight [ngx.components.UIDynamicElement-1567171538646]: 
        beanData: '{"ionBean":"GridCol","SizeXl":"plain:2"}'
        tagName: ion-col
    ↓GridRowForms [ngx.components.UIDynamicElement-1559836225774]: 
      beanData: '{"ionBean":"GridRow"}'
      tagName: ion-row
      ↓GridColSpaceLeft [ngx.components.UIDynamicElement-1559836225777]: 
        beanData: '{"ionBean":"GridCol","SizeXl":"plain:2"}'
        tagName: ion-col
      ↓GridColContent [ngx.components.UIDynamicElement-1559836225780]: 
        beanData: |
          '{
           "ionBean": "GridCol",
           "FlexAlignement": "plain:ion-align-self-center",
           "Size": "plain:8",
           "SizeLg": "plain:12",
           "SizeMd": "plain:12",
           "SizeSm": "plain:12",
           "SizeXl": "plain:8",
           "SizeXs": "plain:12"
          }'
        tagName: ion-col
        ↓Grid [ngx.components.UIDynamicElement-1559836326864]: 
          beanData: '{"ionBean":"Grid"}'
          tagName: ion-grid
          ↓GridRow [ngx.components.UIDynamicElement-1559836326867]: 
            beanData: '{"ionBean":"GridRow"}'
            tagName: ion-row
            ↓Style [ngx.components.UIStyle-1566985770618]: 
            ↓Directive2 [ngx.components.UIControlDirective-1567155641818]: 
              comment: If GRID
              directiveName: If
              directiveSource: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: source:{"filter":"Global","project":"C8Oforms_NGX","input":"router.sharedObject?.grid"}
              ↓Directive1 [ngx.components.UIControlDirective-1580912306799]: 
                directiveExpression: 'trackBy: trackByKey'
                directiveIndexName: i
                directiveItemName: item1
                directiveSource: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.local.response2Array
                ↓Directive [ngx.components.UIControlDirective-1580912506601]: 
                  directiveName: If
                  directiveSource: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:item1.key != '_c8o_out_c8o' && ((this.local?.tags == undefined || this.local?.tags?.length == 0) && (this.local?.subTags == undefined || this.local?.subTags?.length == 0)) && (this.query == '' || this.query == undefined) && (this.local?.searchTags == undefined || this.local?.searchTags?.length == 0) && (this.local?.searchSubTags == undefined || this.local?.searchSubTags?.length == 0)
                  ↓GridColCards [ngx.components.UIDynamicElement-1580912620903]: 
                    beanData: |
                      '{
                       "ionBean": "GridCol",
                       "FlexAlignement": "plain:ion-align-self-baseline",
                       "SizeLg": "plain:3",
                       "SizeMd": "plain:4",
                       "SizeSm": "plain:6",
                       "SizeXl": "plain:3",
                       "SizeXs": "plain:6"
                      }'
                    tagName: ion-col
                    ↓DivCards [ngx.components.UIDynamicElement-1580912620906]: 
                      beanData: '{"ionBean":"DivTag"}'
                      tagName: div
                      ↓Style [ngx.components.UIStyle-1580912620909]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                'padding: 1em;
                                height: 100% !important;
                                margin-bottom: 15px;
                                margin-top: 15px;
                                margin-left:15px;
                                margin-right:15px;
                                
                                }
                                .class1580912620906:hover{
                                	cursor:pointer;
                                '
                      ↓DivOptions [ngx.components.UIDynamicElement-1580913073999]: 
                        beanData: '{"ionBean":"DivTag"}'
                        isEnabled: false
                        tagName: div
                        ↓divIconRadio [ngx.components.UIDynamicElement-1580913074002]: 
                          beanData: '{"ionBean":"DivTag"}'
                          tagName: div
                          ↓Style [ngx.components.UIStyle-1580913074005]: 
                            styleContent: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    display:inline-block;
                                    
                        ↓divIconMore [ngx.components.UIDynamicElement-1580913074035]: 
                          beanData: '{"ionBean":"DivTag"}'
                          tagName: div
                          ↓Style [ngx.components.UIStyle-1580913074038]: 
                            styleContent: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    'display:inline-block;
                                    float: right;
                                    }
                                    .class1566920678198:hover {
                                    cursor: pointer;
                                    '
                          ↓Icon [ngx.components.UIDynamicElement-1580913074041]: 
                            beanData: '{"ionBean":"Icon","IconName":"plain:trash"}'
                            tagName: ion-icon
                          ↓Event [ngx.components.UIControlEvent-1580913074044]: 
                            ↓Popover [ngx.components.UIDynamicAction-1580913074047]: 
                              beanData: |
                                '{
                                 "ionBean": "PopoverAction",
                                 "page": "plain:C8Oforms_NGX.MobileApplication.Application.popOverPageSelector",
                                 "data": "script:{''index'':i, ''selectedForm'': this.list[i][''value''][''doc''], that:this}"
                                }'
                        ↓Style [ngx.components.UIStyle-1580913074050]: 
                          styleContent: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  padding-left:1rem;
                                  padding-right:1rem;
                                  padding-top:1rem;
                                  
                        ↓Attr [ngx.components.UIAttribute-1580913074053]: 
                          attrName: '[ngStyle]'
                          attrValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: 'script:{''visibility'':this.global[''visibleoptions''][i] ? ''visible'' : ''hidden''}'
                        ↓Attr1 [ngx.components.UIAttribute-1580913074056]: 
                          attrName: '*ngIf'
                          attrValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: plain:this.global?.platform?.name['0'] != 'mobile'
                      ↓DivOptions1 [ngx.components.UIDynamicElement-1629222396015]: 
                        beanData: '{"ionBean":"DivTag"}'
                        tagName: div
                        ↓divIconRadio [ngx.components.UIDynamicElement-1629222396018]: 
                          beanData: '{"ionBean":"DivTag"}'
                          tagName: div
                          ↓Style [ngx.components.UIStyle-1629222396021]: 
                            styleContent: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    display:inline-block;
                                    
                          ↓Button [ngx.components.UIDynamicElement-1629222396024]: 
                            beanData: '{"ionBean":"Button"}'
                            isEnabled: false
                            tagName: ion-button
                            ↓CheckBox [ngx.components.UIDynamicElement-1629222396027]: 
                              beanData: '{"ionBean":"CheckBox","IonColor":"plain:greenSelector"}'
                              tagName: ion-checkbox
                              ↓Style [ngx.components.UIStyle-1629222396030]: 
                                styleContent: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                      →: |
                                        margin-left:2px;
                                        
                                        
                              ↓Attr [ngx.components.UIAttribute-1629222396033]: 
                                attrName: mode
                                attrValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                    - MobileSmartSourceType: plain:ios
                              ↓Attr1 [ngx.components.UIAttribute-1629222396036]: 
                                attrName: '[(ngModel)]'
                                attrValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                    - MobileSmartSourceType: script:this?.global?.selectedItem[this.list[i].id]
                                isEnabled: false
                            ↓Style [ngx.components.UIStyle-1629222396039]: 
                          ↓Attr1 [ngx.components.UIAttribute-1629222396042]: 
                            attrName: '[ngStyle]'
                            attrValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: 'script:(this.global?.mobilePlat && this?.global?.selectedItem[this.list[i].id]) ? {''visibility'': ''visible''} : this.global?.mobilePlat && !this?.global?.selectedItem[this.list[i].id]  ? {''visibility'': ''hidden''}: {}'
                        ↓divIconMore [ngx.components.UIDynamicElement-1629222396045]: 
                          beanData: '{"ionBean":"DivTag"}'
                          tagName: div
                          ↓Style [ngx.components.UIStyle-1629222396048]: 
                            styleContent: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    'display:inline-block;
                                    float: right;
                                    }
                                    .class1586272535771:hover {
                                    cursor: pointer;
                                    '
                          ↓Button [ngx.components.UIDynamicElement-1629222396051]: 
                            beanData: '{"ionBean":"Button"}'
                            tagName: ion-button
                            ↓Icon [ngx.components.UIDynamicElement-1629222396054]: 
                              beanData: '{"ionBean":"Icon","IconName":"plain:ios-more"}'
                              tagName: ion-icon
                            ↓Event [ngx.components.UIControlEvent-1629222396057]: 
                              ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1629222396090]: 
                                beanData: '{"ionBean":"InvokeAction"}'
                                stack: C8Oforms_NGX.MobileApplication.Application.showThreeDotsMenu
                                ↓id [ngx.components.UIControlVariable-1629222396093]: 
                                  varValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                      - MobileSmartSourceType: script:item1.key
                                ↓currentIndex [ngx.components.UIControlVariable-1629222396096]: 
                                  varValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                      - MobileSmartSourceType: script:i
                                ↓page [ngx.components.UIControlVariable-1629222396099]: 
                                  varValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                      - MobileSmartSourceType: script:this
                                ↓folder [ngx.components.UIControlVariable-1629224750025]: 
                                  varValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                      - MobileSmartSourceType: script:true
                            ↓Style [ngx.components.UIStyle-1629222396102]: 
                              styleContent: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                    →: |
                                      '
                                      }
                                      .class1606574763560:hover {
                                      cursor: pointer;
                                      '
                            ↓Attr [ngx.components.UIAttribute-1629222396105]: 
                        ↓Style [ngx.components.UIStyle-1629222396108]: 
                          styleContent: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  'overflow: auto;
                                  '
                        ↓Attr11 [ngx.components.UIAttribute-1629222396111]: 
                          attrName: id
                          attrValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:'idcardO'+params1586272511108.i
                          isEnabled: false
                        ↓Attr [ngx.components.UIAttribute-1629222396114]: 
                          attrName: '[ngStyle]'
                          attrValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: |
                                  'script:this.global?.mobilePlat ? {''visibility'': ''visible !important''}: {
                                  ''visibility'':''hidden''}'
                          isEnabled: false
                        ↓Attr1 [ngx.components.UIAttribute-1629224389722]: 
                          attrName: '[ngStyle]'
                          attrValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: 'script:{''visibility'':this.global[''visibleoptions0''][i] ? ''visible'' : ''hidden''}'
                        ↓Attr12 [ngx.components.UIAttribute-1629224389725]: 
                          attrName: '*ngIf'
                          attrValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: plain:this.global?.platform?.name['0'] != 'mobile'
                      ↓DivImg [ngx.components.UIDynamicElement-1580912620972]: 
                        beanData: '{"ionBean":"DivTag"}'
                        tagName: div
                        ↓Style [ngx.components.UIStyle-1580912620975]: 
                          styleContent: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  text-align:center;
                                  position:relative;
                                  
                        ↓Event [ngx.components.UIControlEvent-1580912620978]: 
                          isEnabled: false
                          ↓SetGlobal [ngx.components.UIDynamicAction-1580912620981]: 
                            beanData: |
                              '{
                               "ionBean": "SetGlobalAction",
                               "Property": "plain:formSelected",
                               "Value": "script:this.list[i][''value''][''doc'']"
                              }'
                          ↓IfPublishedElse [ngx.components.UIDynamicIf-1580912620984]: 
                            beanData: '{"ionBean":"IfElseAction","condition":"script:this.local.published"}'
                            ↓RootPage [ngx.components.UIDynamicAction-1580912620987]: 
                              beanData: |
                                '{
                                 "ionBean": "RootPageAction",
                                 "page": "plain:C8Oforms_NGX.MobileApplication.Application.viewerPage",
                                 "data": "script:{formId: stack.root.scope.item.value.doc._id}"
                                }'
                            ↓Else_Handler [ngx.components.UIActionElseEvent-1580912620990]: 
                              ↓RootPage [ngx.components.UIDynamicAction-1580912620993]: 
                                beanData: |
                                  '{
                                   "ionBean": "RootPageAction",
                                   "page": "plain:C8Oforms_NGX.MobileApplication.Application.editorPage",
                                   "data": "script:{formId: stack.root.scope.item.value.doc._id}"
                                  }'
                          ↓CustomAction [ngx.components.UICustomAction-1580912620996]: 
                            actionValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    		;
                                    		console.log(props);
                                    		resolve();
                                    
                            isEnabled: false
                        ↓Image1 [ngx.components.UIDynamicElement-1580912620999]: 
                          beanData: '{"ionBean":"Image","url":"script:''assets\/images\/svg\/icon\/folder.svg''"}'
                          comment: '''assets/images/folder.png'''
                          selfClose: true
                          tagName: img
                          ↓Style [ngx.components.UIStyle-1580912621002]: 
                            styleContent: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    '
                                        width:100px;
                                        height:100px;
                                        /*-webkit-border-radius: 50%;
                                        border-radius: 50%;
                                        object-fit: scale-down;
                                    */
                                    '
                        ↓Badge [ngx.components.UIDynamicElement-1580912621005]: 
                          beanData: '{"ionBean":"Badge","IonColor":"plain:btLight"}'
                          isEnabled: false
                          tagName: ion-badge
                          ↓Style [ngx.components.UIStyle-1580912621008]: 
                            styleContent: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    'position:absolute;
                                    top:0;
                                    right: calc(50% - 50px);
                                    border-radius: 10px;
                                    '
                          ↓Text [ngx.components.UIText-1580912621011]: 
                            i18n: true
                            textValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: script:'V' + this.list[i]['value']['doc']['version']
                          ↓Attr [ngx.components.UIAttribute-1580912621014]: 
                            attrName: '*ngIf'
                            attrValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: plain:this.local.published
                        ↓Event2 [ngx.components.UIControlEvent-1629224573089]: 
                          ↓setKey [ngx.components.UICustomAction-1629224573092]: 
                            actionValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    '		page.local.folder = props.stack.root.scope.item1.key;
                                    		let url : string = window.location.href;
                                            let strToReplace = window.location.hash.split("/")[3];
                                            let index = url.indexOf(strToReplace);
                                            url = url.substring(0, index) + page.local.folder + url.substring(index + strToReplace.length);
                                            window.location.href = url;
                                    		resolve();
                                    '
                            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1629224573095]: 
                              beanData: '{"ionBean":"InvokeAction"}'
                              stack: C8Oforms_NGX.MobileApplication.Application.callViewLiveAndFillFormList
                      ↓FormatLayout [ngx.components.UIDynamicAttr-1645090139748]: 
                        beanData: '{"ionBean":"FormatLayout","TextAlignment":"plain:ion-text-wrap"}'
                        comment: FormatLayout
                        tagName: div
                      ↓Text [ngx.components.UIText-1580912621020]: 
                        i18n: true
                        textValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:item1.key
                      ↓Style1 [ngx.components.UIStyle-1580912621023]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                'color: #999999;
                                
                                	
                                '
                      ↓Event2 [ngx.components.UIControlEvent-1580918761611]: 
                        ↓setKey [ngx.components.UICustomAction-1604916261979]: 
                          actionValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  '		page.local.folder = props.stack.root.scope.item1.key;
                                  		let url : string = window.location.href;
                                          let strToReplace = window.location.hash.split("/")[3];
                                          let index = url.indexOf(strToReplace);
                                          url = url.substring(0, index) + page.local.folder + url.substring(index + strToReplace.length);
                                          window.location.href = url;
                                  		resolve();
                                  '
                          ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1604916235850]: 
                            beanData: '{"ionBean":"InvokeAction"}'
                            stack: C8Oforms_NGX.MobileApplication.Application.callViewLiveAndFillFormList
                      ↓Event [ngx.components.UIControlEvent-1580912621026]: 
                        attrName: (mouseenter)
                        eventName: (mouseenter)
                        ↓showoptions [ngx.components.UICustomAction-1580912621029]: 
                          actionValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  		    this.global["visibleoptions0"][vars["visible"]] = true;
                                  		    resolve();
                                  
                          ↓visible [ngx.components.UIControlVariable-1580912621032]: 
                            varValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: script:i
                      ↓Event1 [ngx.components.UIControlEvent-1580912621035]: 
                        attrName: (mouseleave)
                        eventName: (mouseleave)
                        ↓removeoptions [ngx.components.UICustomAction-1580912621038]: 
                          actionValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  		    this.global["visibleoptions0"][vars["visible"]] = false;
                                  		    resolve();
                                  
                          ↓visible [ngx.components.UIControlVariable-1580912621041]: 
                            varValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: script:i
                      ↓Attr [ngx.components.UIAttribute-1580912621044]: 
                        attrName: '[ngStyle]'
                        attrValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: 'script:{''background-color'': this.global[''visibleoptions0Drag''] != undefined && this.global[''visibleoptions0Drag''][i] ? ''rgba(74, 74, 74, 0.50)'' : this.global[''visibleoptions0''][i] ? (this.global.platform?.name[''0''] == ''mobile'' ? ''rgba(74, 74, 74, 0.25)'': ''#f9f9f9''): ''#ffffff'', ''border-radius'': this.global[''visibleoptions0''][i] ? ''4px'': ''0px''}'
                      ↓Event3 [ngx.components.UIControlEvent-1628791908959]: 
                        attrName: (dragover)
                        eventName: (dragover)
                        ↓allowDrop [ngx.components.UICustomAction-1628791908962]: 
                          actionValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  		    if(event.dataTransfer.types.includes("__c8oformsdrag_form")){ 
                                  				if(page.global['visibleoptions0Drag'] == undefined){
                                  					page.global['visibleoptions0Drag'] = {};
                                  				}
                                  				page.global['visibleoptions0Drag'][vars.i] = true;    
                                  	            event.preventDefault();
                                  	        }
                                  		resolve();
                                  
                          ↓i [ngx.components.UIControlVariable-1628795003088]: 
                            varValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: script:i
                      ↓Event11 [ngx.components.UIControlEvent-1628791908968]: 
                        attrName: (drop)
                        eventName: (drop)
                        ↓drop [ngx.components.UICustomAction-1628791908971]: 
                          actionValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  '		event.preventDefault();
                                  		let name = "";
                                  		let error = false;
                                  		const keysSelected = Object.keys(page.global.selectedItem);
                                  		const multiple = keysSelected.length > 1;
                                  		if(page.global[''visibleoptions0Drag''] == undefined){
                                  			page.global[''visibleoptions0Drag''] = {};
                                  		}
                                  		page.global[''visibleoptions0Drag''][vars.i] = false;
                                  		
                                  		var id =  event.dataTransfer.getData("_id");
                                  		var ids = [];
                                  		if(multiple){
                                  			ids = keysSelected
                                  				.filter((x)=>{return this.global.selectedItem[x]});
                                  		}
                                  		else{
                                  			ids = [id];
                                  		}
                                  		new Promise(async (resolve1)=>{
                                  			for(let elem of ids){
                                  				try{
                                  					let res = await page.c8o.callJsonObject("fs://c8oforms_fs.get",{
                                  						"docid":elem
                                  					}).async();
                                  					name = res["name"];
                                  					let res2 = await page.c8o.callJsonObject("fs://c8oforms_fs.post",{
                                  						"_id": elem,
                                  						"tag": [vars.folder],
                                  						"_use_policy": "merge" 
                                  					}).async();
                                  				}
                                  				catch(e){
                                  					console.error("myErr", e);
                                  					error = true;
                                  				}				
                                  			}
                                  			resolve1();
                                  		})
                                  		.then((res)=>{
                                  			page.global.selectedItem = {};
                                  			resolve({"error": error, params: {"folder": vars.folder, "form": name}, id: id, multiple: multiple});
                                  		})
                                  		/*
                                  		page.c8o.callJsonObject("fs://c8oforms_fs.get",{
                                  			"docid":id
                                  		})
                                  		.then((res)=>{
                                  			console.log("res", res);
                                  			name = res["name"];
                                  			return page.c8o.callJsonObject("fs://c8oforms_fs.post",{
                                  				"_id": id,
                                  				"tag": [vars.folder],
                                  				"_use_policy": "merge" 
                                  			});
                                  		})
                                  		.then((res)=>{
                                  			resolve({"error": false, "name": name, "folder": vars.folder, id: id});
                                  			return null;
                                  		})	
                                  		.fail((err)=>{
                                  			resolve({"error": true, "name": name, "folder": vars.folder, id: id});
                                  			console.log("err", err);
                                  		})
                                  		*/
                                  		
                                  		
                                  		
                                  '
                          ↓folder [ngx.components.UIControlVariable-1628793910961]: 
                            varValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: script:stack.root.scope.item1580912306799.key
                          ↓i [ngx.components.UIControlVariable-1628795313303]: 
                            varValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: script:stack.root.scope.i
                          ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1628795389067]: 
                            beanData: '{"ionBean":"InvokeAction"}'
                            stack: C8Oforms_NGX.MobileApplication.Application.showToast
                            ↓msg [ngx.components.UIControlVariable-1628795405292]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: 'script:parent.out.error ?  c8oPage.translate.instant(''error_occured_while_moving'') : parent.out.multiple ? c8oPage.translate.instant(''had_been_moved_folders'', parent.out.params) : c8oPage.translate.instant(''has_been_moved_folder'', parent.out.params)'
                            ↓duration [ngx.components.UIControlVariable-1628795405294]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:'5000'
                            ↓position [ngx.components.UIControlVariable-1628795405296]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:'bottom'
                            ↓cssClass [ngx.components.UIControlVariable-1628795405298]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: 'script:parent.out.error ? ''toastError'' : ''toastSuccess'''
                            ↓showCloseButton [ngx.components.UIControlVariable-1628795405300]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:false
                            ↓closeButtonText [ngx.components.UIControlVariable-1628795405302]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:'Close'
                      ↓Event4 [ngx.components.UIControlEvent-1628794827199]: 
                        attrName: (dragleave)
                        eventName: (dragleave)
                        ↓CustomAction [ngx.components.UICustomAction-1628794838307]: 
                          actionValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  		if(page.global['visibleoptions0Drag'] == undefined){
                                  			page.global['visibleoptions0Drag'] = {};
                                  		}
                                  		page.global['visibleoptions0Drag'][vars.i] = false;
                                  		resolve();
                                  
                          ↓i [ngx.components.UIControlVariable-1628795113463]: 
                            varValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: script:i
                    ↓Style [ngx.components.UIStyle-1580912621059]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '	
                              	margin-bottom: 15px;
                              
                              '
                    ↓Attr [ngx.components.UIAttribute-1580912621062]: 
                      attrName: '[ngStyle]'
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: 'script:this?.global?.platform?.name[''0''] == ''mobile'' ? {''height'': ''10rem !important;''} : {''height'': ''20rem !important;''}'
                    ↓Event [ngx.components.UIControlEvent-1580912621065]: 
                      attrName: (press)
                      eventName: (press)
                      ↓showoptions [ngx.components.UICustomAction-1580912621068]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                		    if(this.global.platform.name['0'] == 'mobile'){
                                		        this.global["visibleoptions"]= {};
                                		        this.global["visibleoptions"][vars["visible"]] = true;
                                		    }
                                		    else{
                                		        if(!this.global.selectedItem[vars["visible"]]){
                                	                this.global["visibleoptions"][vars["visible"]] = true;
                                	            } 
                                		    }
                                		        
                                		    
                                		    resolve();
                                
                        ↓visible [ngx.components.UIControlVariable-1580912621071]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:i
              ↓Directive [ngx.components.UIControlDirective-1559836326870]: 
                directiveExpression: 'let i = index;trackBy: trackById'
                directiveItemName: item
                directiveSource: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.list
                ↓UseSharedComponent [ngx.components.UIUseShared-1604590374742]: 
                  sharedcomponent: C8Oforms_NGX.MobileApplication.Application.cardSelector
                  ↓i [ngx.components.UIUseVariable-1604590374745]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:i
            ↓Directive21 [ngx.components.UIControlDirective-1567155678381]: 
              comment: If LIST
              directiveName: If
              directiveSource: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: source:{"filter":"Global","project":"C8Oforms_NGX","input":"!router.sharedObject?.grid"}
              ↓Directive1 [ngx.components.UIControlDirective-1581012415862]: 
                directiveExpression: 'trackBy: trackByKey'
                directiveIndexName: i
                directiveItemName: item1
                directiveSource: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.local.response2Array
                ↓Directive [ngx.components.UIControlDirective-1581012415865]: 
                  directiveName: If
                  directiveSource: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:item1.key != '_c8o_out_c8o' && ((this.local?.tags == undefined || this.local?.tags?.length == 0) && (this.local?.subTags == undefined || this.local?.subTags?.length == 0)) && (this.query == '' || this.query == undefined) && (this.local?.searchTags == undefined || this.local?.searchTags?.length == 0) && (this.local?.searchSubTags == undefined || this.local?.searchSubTags?.length == 0)
                  ↓GridColList1 [ngx.components.UIDynamicElement-1604681432116]: 
                    beanData: |
                      '{
                       "ionBean": "GridCol",
                       "FlexAlignement": "plain:ion-align-self-baseline",
                       "SizeLg": "plain:6",
                       "SizeMd": "plain:6",
                       "SizeSm": "plain:12",
                       "SizeXl": "plain:6",
                       "SizeXs": "plain:12"
                      }'
                    tagName: ion-col
                    ↓Style [ngx.components.UIStyle-1604681432119]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '	margin-bottom: 2rem;
                              }
                              .class1604681432116:hover {
                              	cursor:pointer;
                              '
                    ↓GridList [ngx.components.UIDynamicElement-1604681432122]: 
                      beanData: '{"ionBean":"Grid"}'
                      tagName: ion-grid
                      ↓GridRowList [ngx.components.UIDynamicElement-1604681432125]: 
                        beanData: |
                          '{
                           "ionBean": "GridRow",
                           "FlexJustifyContent": "plain:ion-justify-content-center",
                           "FlexAlignement": "plain:ion-align-items-center"
                          }'
                        tagName: ion-row
                        ↓GridColOption [ngx.components.UIDynamicElement-1604681432128]: 
                          beanData: |
                            '{
                             "ionBean": "GridCol",
                             "FlexAlignement": "plain:ion-align-self-center",
                             "SizeLg": "plain:1",
                             "SizeMd": "plain:1",
                             "SizeSm": "plain:1",
                             "SizeXl": "plain:1",
                             "SizeXs": "plain:1"
                            }'
                          tagName: ion-col
                          ↓Event [ngx.components.UIControlEvent-1604681919411]: 
                            attrName: (mouseenter)
                            eventName: (mouseenter)
                            ↓showoptions [ngx.components.UICustomAction-1604681919414]: 
                              actionValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                    →: |
                                      		    this.global["visibleoptions1"][vars["visible"]] = true;
                                      		    resolve();
                                      
                              ↓visible [ngx.components.UIControlVariable-1604681919417]: 
                                varValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                    - MobileSmartSourceType: script:i
                          ↓Event1 [ngx.components.UIControlEvent-1604681919420]: 
                            attrName: (mouseleave)
                            eventName: (mouseleave)
                            ↓removeoptions [ngx.components.UICustomAction-1604681919423]: 
                              actionValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                    →: |
                                      		    this.global["visibleoptions1"][vars["visible"]] = false;
                                      		    resolve();
                                      
                              ↓visible [ngx.components.UIControlVariable-1604681919426]: 
                                varValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                    - MobileSmartSourceType: script:i
                        ↓GridColImage [ngx.components.UIDynamicElement-1604681432170]: 
                          beanData: |
                            '{
                             "ionBean": "GridCol",
                             "SizeLg": "plain:2",
                             "SizeMd": "plain:2",
                             "SizeSm": "plain:2",
                             "SizeXl": "plain:2",
                             "SizeXs": "plain:2"
                            }'
                          tagName: ion-col
                          ↓Style [ngx.components.UIStyle-1604681432173]: 
                            styleContent: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    '	 	height: 100% !important;
                                         	  
                                      	border-top: solid 1px #f6f6f6;
                                      	border-bottom: solid 1px #f6f6f6;
                                      	border-left: solid 1px #f6f6f6;
                                      	position:relative;
                                    '
                          ↓Attr [ngx.components.UIAttribute-1604681432236]: 
                            attrName: '[ngStyle]'
                            attrValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: 'script:{''background-color'': this.global[''visibleoptions0Drag''] != undefined && this.global[''visibleoptions0Drag''][i] ? ''rgba(74, 74, 74, 0.50)'' : this.global[''visibleoptions1''][i] ? ''#f9f9f9'': ''#ffffff'', ''border-bottom-right-radius'': this.global[''visibleoptions1''][i] ? ''4px'': ''0px'', ''border-top-right-radius'': this.global[''visibleoptions1''][i] ? ''4px'': ''0px'', ''border-right'': this.global.selectedItem[i] ? ''solid 1px #25e056'': '''', ''border-top'': this.global.selectedItem[i] ? ''solid 1px #25e056'': '''', ''border-bottom'': this.global.selectedItem[i] ? ''solid 1px #25e056'': '''', ''border-bottom-left-radius'': ''0px'', ''border-top-left-radius'':''0px''}'
                          ↓Event2 [ngx.components.UIControlEvent-1604681432257]: 
                            ↓IfPublishedElse [ngx.components.UIDynamicIf-1604681432260]: 
                              beanData: '{"ionBean":"IfElseAction","condition":"script:this.local.published"}'
                              isEnabled: false
                              ↓RootPage [ngx.components.UIDynamicAction-1604681432263]: 
                                beanData: |
                                  '{
                                   "ionBean": "RootPageAction",
                                   "page": "plain:C8Oforms_NGX.MobileApplication.Application.viewerPage",
                                   "data": "script:{formId: this.list[stack.root.scope.params1586351141705.i]?.id}"
                                  }'
                              ↓Else_Handler [ngx.components.UIActionElseEvent-1604681432266]: 
                                ↓RootPage [ngx.components.UIDynamicAction-1604681432269]: 
                                  beanData: |
                                    '{
                                     "ionBean": "RootPageAction",
                                     "page": "plain:C8Oforms_NGX.MobileApplication.Application.editorPage",
                                     "data": "script:{formId: this.list[stack.root.scope.params1586351141705.i]?.id}"
                                    }'
                            ↓setKey [ngx.components.UICustomAction-1622019599073]: 
                              actionValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                    →: |
                                      '		page.local.folder = props.stack.root.scope.item1.key;
                                      		let url : string = window.location.href;
                                              let strToReplace = window.location.hash.split("/")[3];
                                              let index = url.indexOf(strToReplace);
                                              url = url.substring(0, index) + page.local.folder + url.substring(index + strToReplace.length);
                                              window.location.href = url;
                                      		resolve();
                                      '
                              ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1622019599076]: 
                                beanData: '{"ionBean":"InvokeAction"}'
                                stack: C8Oforms_NGX.MobileApplication.Application.callViewLiveAndFillFormList
                          ↓Image [ngx.components.UIDynamicElement-1604681950788]: 
                            beanData: '{"ionBean":"Image","url":"script:''assets\/images\/svg\/icon\/folder.svg''"}'
                            selfClose: true
                            tagName: img
                            ↓Style [ngx.components.UIStyle-1604681950791]: 
                              styleContent: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                    →: |
                                      '    width:4rem;
                                          height: 4rem;
                                          position: relative;
                                          top: 50%; 
                                          transform: translateY(-50%);
                                          -webkit-transform: translateY(-50%);
                                          text-align: center;
                                          display: block;
                                          margin: 0 auto;
                                      }
                                      
                                      .class1567168007196:hover {
                                      cursor: pointer;
                                      '
                          ↓Event [ngx.components.UIControlEvent-1604681991117]: 
                            attrName: (mouseenter)
                            eventName: (mouseenter)
                            ↓showoptions [ngx.components.UICustomAction-1604681991120]: 
                              actionValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                    →: |
                                      		    this.global["visibleoptions1"][vars["visible"]] = true;
                                      		    resolve();
                                      
                              ↓visible [ngx.components.UIControlVariable-1604681991123]: 
                                varValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                    - MobileSmartSourceType: script:i
                          ↓Event1 [ngx.components.UIControlEvent-1604681991126]: 
                            attrName: (mouseleave)
                            eventName: (mouseleave)
                            ↓removeoptions [ngx.components.UICustomAction-1604681991129]: 
                              actionValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                    →: |
                                      		    this.global["visibleoptions1"][vars["visible"]] = false;
                                      		    resolve();
                                      
                              ↓visible [ngx.components.UIControlVariable-1604681991132]: 
                                varValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                    - MobileSmartSourceType: script:i
                        ↓GridColTitle [ngx.components.UIDynamicElement-1604681432344]: 
                          beanData: |
                            '{
                             "ionBean": "GridCol",
                             "FlexAlignement": "plain:ion-align-self-center",
                             "SizeLg": "plain:8",
                             "SizeMd": "plain:8",
                             "SizeSm": "plain:8",
                             "SizeXl": "plain:8",
                             "SizeXs": "plain:8"
                            }'
                          tagName: ion-col
                          ↓Style [ngx.components.UIStyle-1604681432347]: 
                            styleContent: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    ' 	height: 100% !important;
                                     	  border-radius: 4px;
                                      	border-top: solid 1px #f6f6f6;
                                      	border-bottom: solid 1px #f6f6f6;
                                      color: #999999
                                    }
                                    .class1586351172203:hover{
                                    	cursor:pointer;
                                    '
                          ↓Div [ngx.components.UIDynamicElement-1604681432350]: 
                            beanData: '{"ionBean":"DivTag"}'
                            tagName: div
                            ↓Text [ngx.components.UIText-1604681432353]: 
                              i18n: true
                              textValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:item1?.key
                            ↓Style [ngx.components.UIStyle-1604681432356]: 
                              styleContent: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                    →: |
                                      '  position: relative;
                                          top: 50%; 
                                          transform: translateY(-50%);
                                          -webkit-transform: translateY(-50%);
                                          text-align: left;
                                      }
                                      
                                      .class1604681432350:hover {
                                      cursor: pointer;
                                      '
                          ↓Attr [ngx.components.UIAttribute-1604681432359]: 
                            attrName: '[ngStyle]'
                            attrValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: 'script:{''background-color'': this.global[''visibleoptions0Drag''] != undefined && this.global[''visibleoptions0Drag''][i] ? ''rgba(74, 74, 74, 0.50)'' : this.global[''visibleoptions1''][i] ? ''#f9f9f9'': ''#ffffff'', ''border-bottom-right-radius'': this.global[''visibleoptions1''][i] ? ''4px'': ''0px'', ''border-top-right-radius'': this.global[''visibleoptions1''][i] ? ''4px'': ''0px'', ''border-right'': this.global.selectedItem[i] ? ''solid 1px #25e056'': '''', ''border-top'': this.global.selectedItem[i] ? ''solid 1px #25e056'': '''', ''border-bottom'': this.global.selectedItem[i] ? ''solid 1px #25e056'': '''', ''border-bottom-left-radius'': ''0px'', ''border-top-left-radius'':''0px''}'
                          ↓Event2 [ngx.components.UIControlEvent-1604681432380]: 
                            ↓IfPublishedElse [ngx.components.UIDynamicIf-1604681432383]: 
                              beanData: '{"ionBean":"IfElseAction","condition":"script:this.local.published"}'
                              isEnabled: false
                              ↓RootPage [ngx.components.UIDynamicAction-1604681432386]: 
                                beanData: |
                                  '{
                                   "ionBean": "RootPageAction",
                                   "page": "plain:C8Oforms_NGX.MobileApplication.Application.viewerPage",
                                   "data": "script:{formId: this.list[stack.root.scope.params1586351141705.i]?.id}"
                                  }'
                              ↓Else_Handler [ngx.components.UIActionElseEvent-1604681432389]: 
                                ↓RootPage [ngx.components.UIDynamicAction-1604681432392]: 
                                  beanData: |
                                    '{
                                     "ionBean": "RootPageAction",
                                     "page": "plain:C8Oforms_NGX.MobileApplication.Application.editorPage",
                                     "data": "script:{formId: this.list[stack.root.scope.params1586351141705.i]?.id}"
                                    }'
                            ↓setKey [ngx.components.UICustomAction-1622019603858]: 
                              actionValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                    →: |
                                      '		page.local.folder = props.stack.root.scope.item1.key;
                                      		let url : string = window.location.href;
                                              let strToReplace = window.location.hash.split("/")[3];
                                              let index = url.indexOf(strToReplace);
                                              url = url.substring(0, index) + page.local.folder + url.substring(index + strToReplace.length);
                                              window.location.href = url;
                                      		resolve();
                                      '
                              ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1622019603861]: 
                                beanData: '{"ionBean":"InvokeAction"}'
                                stack: C8Oforms_NGX.MobileApplication.Application.callViewLiveAndFillFormList
                          ↓Event [ngx.components.UIControlEvent-1604681878735]: 
                            attrName: (mouseenter)
                            eventName: (mouseenter)
                            ↓showoptions [ngx.components.UICustomAction-1604681878738]: 
                              actionValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                    →: |
                                      		    this.global["visibleoptions1"][vars["visible"]] = true;
                                      		    resolve();
                                      
                              ↓visible [ngx.components.UIControlVariable-1604681878741]: 
                                varValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                    - MobileSmartSourceType: script:i
                          ↓Event1 [ngx.components.UIControlEvent-1604681878744]: 
                            attrName: (mouseleave)
                            eventName: (mouseleave)
                            ↓removeoptions [ngx.components.UICustomAction-1604681878747]: 
                              actionValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                    →: |
                                      		    this.global["visibleoptions1"][vars["visible"]] = false;
                                      		    resolve();
                                      
                              ↓visible [ngx.components.UIControlVariable-1604681878750]: 
                                varValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                    - MobileSmartSourceType: script:i
                        ↓GridColMore [ngx.components.UIDynamicElement-1604681432395]: 
                          beanData: |
                            '{
                             "ionBean": "GridCol",
                             "SizeLg": "plain:1",
                             "SizeMd": "plain:1",
                             "SizeSm": "plain:1",
                             "SizeXl": "plain:1",
                             "SizeXs": "plain:1"
                            }'
                          tagName: ion-col
                          ↓Style [ngx.components.UIStyle-1604681432398]: 
                            styleContent: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    '	height: 100% !important;
                                        border-radius: 4px;
                                      	border-top: solid 1px #f6f6f6;
                                      	border-bottom: solid 1px #f6f6f6;
                                      	border-right: solid 1px #f6f6f6;
                                    '
                          ↓Attr [ngx.components.UIAttribute-1604681432416]: 
                            attrName: '[ngStyle]'
                            attrValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: 'script:{''background-color'': this.global[''visibleoptions0Drag''] != undefined && this.global[''visibleoptions0Drag''][i] ? ''rgba(74, 74, 74, 0.50)'' : this.global[''visibleoptions1''][i] ? ''#f9f9f9'': ''#ffffff'', ''border-bottom-right-radius'': this.global[''visibleoptions1''][i] ? ''4px'': ''0px'', ''border-top-right-radius'': this.global[''visibleoptions1''][i] ? ''4px'': ''0px'', ''border-right'': this.global.selectedItem[i] ? ''solid 1px #25e056'': '''', ''border-top'': this.global.selectedItem[i] ? ''solid 1px #25e056'': '''', ''border-bottom'': this.global.selectedItem[i] ? ''solid 1px #25e056'': '''', ''border-bottom-left-radius'': ''0px'', ''border-top-left-radius'':''0px''}'
                          ↓Event [ngx.components.UIControlEvent-1604681432419]: 
                            attrName: (mouseenter)
                            eventName: (mouseenter)
                            ↓showoptions [ngx.components.UICustomAction-1604681432422]: 
                              actionValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                    →: |
                                      		    this.global["visibleoptions1"][vars["visible"]] = true;
                                      		    resolve();
                                      
                              ↓visible [ngx.components.UIControlVariable-1604681432425]: 
                                varValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                    - MobileSmartSourceType: script:i
                          ↓Event1 [ngx.components.UIControlEvent-1604681432428]: 
                            attrName: (mouseleave)
                            eventName: (mouseleave)
                            ↓removeoptions [ngx.components.UICustomAction-1604681432431]: 
                              actionValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                    →: |
                                      		    this.global["visibleoptions1"][vars["visible"]] = false;
                                      		    resolve();
                                      
                              ↓visible [ngx.components.UIControlVariable-1604681432434]: 
                                varValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                    - MobileSmartSourceType: script:i
                      ↓Style [ngx.components.UIStyle-1604681432437]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '	height: 7rem !important;
                                '
                    ↓Event3 [ngx.components.UIControlEvent-1629218705174]: 
                      attrName: (dragover)
                      eventName: (dragover)
                      ↓allowDrop [ngx.components.UICustomAction-1629218705177]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                		    if(event.dataTransfer.types.includes("__c8oformsdrag_form")){ 
                                				if(page.global['visibleoptions0Drag'] == undefined){
                                					page.global['visibleoptions0Drag'] = {};
                                				}
                                				page.global['visibleoptions0Drag'][vars.i] = true;    
                                	            event.preventDefault();
                                	        }
                                		resolve();
                                
                        ↓i [ngx.components.UIControlVariable-1629218705180]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:i
                    ↓Event11 [ngx.components.UIControlEvent-1629218705183]: 
                      attrName: (drop)
                      eventName: (drop)
                      ↓drop [ngx.components.UICustomAction-1629218705186]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '		event.preventDefault();
                                		let name = "";
                                		let error = false;
                                		const keysSelected = Object.keys(page.global.selectedItem);
                                		const multiple = keysSelected.length > 1;
                                		if(page.global[''visibleoptions0Drag''] == undefined){
                                			page.global[''visibleoptions0Drag''] = {};
                                		}
                                		page.global[''visibleoptions0Drag''][vars.i] = false;
                                		
                                		var id =  event.dataTransfer.getData("_id");
                                		var ids = [];
                                		if(multiple){
                                			ids = keysSelected
                                				.filter((x)=>{return this.global.selectedItem[x]});
                                		}
                                		else{
                                			ids = [id];
                                		}
                                		new Promise(async (resolve1)=>{
                                			for(let elem of ids){
                                				try{
                                					let res = await page.c8o.callJsonObject("fs://c8oforms_fs.get",{
                                						"docid":elem
                                					}).async();
                                					name = res["name"];
                                					let res2 = await page.c8o.callJsonObject("fs://c8oforms_fs.post",{
                                						"_id": elem,
                                						"tag": [vars.folder],
                                						"_use_policy": "merge" 
                                					}).async();
                                				}
                                				catch(e){
                                					console.error("myErr", e);
                                					error = true;
                                				}				
                                			}
                                			resolve1();
                                		})
                                		.then((res)=>{
                                			page.global.selectedItem = {};
                                			resolve({"error": error, params: {"folder": vars.folder, "form": name}, id: id, multiple: multiple});
                                		})
                                		/*
                                		page.c8o.callJsonObject("fs://c8oforms_fs.get",{
                                			"docid":id
                                		})
                                		.then((res)=>{
                                			console.log("res", res);
                                			name = res["name"];
                                			return page.c8o.callJsonObject("fs://c8oforms_fs.post",{
                                				"_id": id,
                                				"tag": [vars.folder],
                                				"_use_policy": "merge" 
                                			});
                                		})
                                		.then((res)=>{
                                			resolve({"error": false, "name": name, "folder": vars.folder, id: id});
                                			return null;
                                		})	
                                		.fail((err)=>{
                                			resolve({"error": true, "name": name, "folder": vars.folder, id: id});
                                			console.log("err", err);
                                		})
                                		*/
                                		
                                		
                                		
                                '
                        ↓folder [ngx.components.UIControlVariable-1629218705189]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:stack.root.scope.item1581012415862.key
                        ↓i [ngx.components.UIControlVariable-1629218705192]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:stack.root.scope.i
                        ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1629218705195]: 
                          beanData: '{"ionBean":"InvokeAction"}'
                          stack: C8Oforms_NGX.MobileApplication.Application.showToast
                          ↓msg [ngx.components.UIControlVariable-1629218705198]: 
                            varValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: 'script:parent.out.error ?  c8oPage.translate.instant(''error_occured_while_moving'') : parent.out.multiple ? c8oPage.translate.instant(''had_been_moved_folders'', parent.out.params) : c8oPage.translate.instant(''has_been_moved_folder'', parent.out.params)'
                          ↓duration [ngx.components.UIControlVariable-1629218705201]: 
                            varValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: script:'5000'
                          ↓position [ngx.components.UIControlVariable-1629218705204]: 
                            varValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: script:'bottom'
                          ↓cssClass [ngx.components.UIControlVariable-1629218705207]: 
                            varValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: 'script:parent.out.error ? ''toastError'' : ''toastSuccess'''
                          ↓showCloseButton [ngx.components.UIControlVariable-1629218705210]: 
                            varValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: script:false
                          ↓closeButtonText [ngx.components.UIControlVariable-1629218705213]: 
                            varValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: script:'Close'
                    ↓Event4 [ngx.components.UIControlEvent-1629218705216]: 
                      attrName: (dragleave)
                      eventName: (dragleave)
                      ↓CustomAction [ngx.components.UICustomAction-1629218705219]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                		if(page.global['visibleoptions0Drag'] == undefined){
                                			page.global['visibleoptions0Drag'] = {};
                                		}
                                		page.global['visibleoptions0Drag'][vars.i] = false;
                                		resolve();
                                
                        ↓i [ngx.components.UIControlVariable-1629218705222]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:i
              ↓Directive [ngx.components.UIControlDirective-1567156428879]: 
                directiveExpression: 'let i = index;trackBy: trackById'
                directiveItemName: item
                directiveSource: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.list
                ↓UseSharedComponent [ngx.components.UIUseShared-1604674805865]: 
                  sharedcomponent: C8Oforms_NGX.MobileApplication.Application.listSelector
                  ↓i [ngx.components.UIUseVariable-1604674805868]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:i
          ↓Attr [ngx.components.UIAttribute-1572367585912]: 
            attrName: '*ngIf'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:this.local.spinner == false
        ↓Grid1Spinner [ngx.components.UIDynamicElement-1572367654303]: 
          beanData: '{"ionBean":"Grid"}'
          tagName: ion-grid
          ↓GridRow [ngx.components.UIDynamicElement-1572367654306]: 
            beanData: |
              '{
               "ionBean": "GridRow",
               "FlexJustifyContent": "plain:ion-justify-content-center",
               "FlexAlignement": "plain:ion-align-items-center"
              }'
            tagName: ion-row
            ↓GridCol [ngx.components.UIDynamicElement-1572367654309]: 
              beanData: |
                '{
                 "ionBean": "GridCol",
                 "FlexAlignement": "plain:ion-align-self-center",
                 "Size": "plain:12"
                }'
              tagName: ion-col
              ↓Div [ngx.components.UIDynamicElement-1572367654312]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓FragmentSpinner [ngx.components.UICustom-1572367654315]: 
                  htmlTemplate: <div  class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>
                ↓Style [ngx.components.UIStyle-1572367654318]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          text-align:center;
                          
                ↓TabsContainer [ngx.components.UIDynamicElement-1592469353815]: 
                  beanData: '{"ionBean":"Tabs"}'
                  isEnabled: false
                  tagName: ion-tabs
          ↓Attr [ngx.components.UIAttribute-1572367654321]: 
            attrName: '*ngIf'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:this.local.spinner == true
          ↓Style [ngx.components.UIStyle-1572367654324]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    height:100%;
                    
      ↓GridColSpaceRight [ngx.components.UIDynamicElement-1559836225786]: 
        beanData: '{"ionBean":"GridCol","SizeXl":"plain:2"}'
        tagName: ion-col
    ↓Style2 [ngx.components.UIStyle-1602517759614]: 
      styleContent: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              '	padding: 0 16px 16px 16px !important;
              	.scroll-content {
              		padding: 0 16px 16px 16px !important;
              	}
              '
  ↓Attr [ngx.components.UIAttribute-1547749579858]: 
    attrName: '[style.background-repeat]'
    attrValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: plain:no-repeat
    isEnabled: false
  ↓Attr1 [ngx.components.UIAttribute-1547749579861]: 
    attrName: '[style.background-size]'
    attrValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: plain:cover
    isEnabled: false
  ↓Attr21 [ngx.components.UIAttribute-1548899012531]: 
    attrName: '[ngStyle]'
    attrValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: |
            'script:{''background-image'': this[''global''][''themeImg''] == false ? ''url(../assets/images/flat.jpeg)'' : 
            this.getAttachmentUrl(this[''global''][''user''],''theme.jpg'', '''',''c8oform_users_objects'')}'
    isEnabled: false
  ↓Attr211 [ngx.components.UIAttribute-1550593625087]: 
    attrName: '[ngStyle]'
    attrValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: 'script:{''background-image'': ''url(assets/images/flat.jpeg)''}'
    isEnabled: false
  ↓Event [ngx.components.UIControlEvent-1605176468028]: 
    ↓CustomAction [ngx.components.UICustomAction-1605176478429]: 
      actionValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              		if(this.local.showAdvancedSearch == true){
              		    this.local.showAdvancedSearch = false;
              		}
              		resolve();
              
  ↓Style [ngx.components.UIStyle-1606648343339]: 
    styleContent: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            margin-top:10px;
            
↓PageEvent [ngx.components.UIPageEvent-1537534569504]: 
  viewEvent: onWillEnter
  ↓Error_Handler [ngx.components.UIActionErrorEvent-1572360114721]: 
    ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1586424113962]: 
      beanData: '{"ionBean":"InvokeAction"}'
      stack: C8Oforms_NGX.MobileApplication.Application.removeSpinner
  ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1586424006177]: 
    beanData: '{"ionBean":"InvokeAction"}'
    stack: C8Oforms_NGX.MobileApplication.Application.setSpinner
  ↓SetGlobal [ngx.components.UIDynamicAction-1572276678583]: 
    beanData: |
      '{
       "ionBean": "SetGlobalAction",
       "Property": "plain:visibleoptions",
       "Value": "script:{}"
      }'
  ↓SetGlobal2 [ngx.components.UIDynamicAction-1580999445423]: 
    beanData: |
      '{
       "ionBean": "SetGlobalAction",
       "Property": "plain:visibleoptions0",
       "Value": "script:{}"
      }'
  ↓SetGlobal11 [ngx.components.UIDynamicAction-1572276678586]: 
    beanData: |
      '{
       "ionBean": "SetGlobalAction",
       "Property": "plain:selectedItem",
       "Value": "script:{}"
      }'
  ↓defineSettings [ngx.components.UICustomAction-1576601694760]: 
    actionValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            '		page.local["ddoc"] = "published_forms";
            		//this.local.published = true;
            		if(this.global["language"] == "fr" || this.global["language"] == "it" || this.global["language"] == "es" || this.global["language"] == "en"){
            		    localStorage.setItem(''lang'', this.global["language"]);
            		}
            		
            		
            		
            		if(page["local"]["changeListener"] == undefined){
            		    page["local"]["changeListener"] = new C8oFullSyncChangeListener((changes:Array<any>)=>{
            	            /*if(this.global["changes_published"] != undefined && this.global["changes_published"].length > 0){
            	                for(let elem of changes["changes"]){
            	                    for(let i in this.global["changes_published"]){
            	                        if(elem.id == this.global["changes_published"][i]){
            	                            this.c8o.callJson("fs://c8oforms_fs.get", "docid", elem.id)
            	                            .then((res)=>{
            	                                this.global["changes_published"].pop(i);
            	                                const msg = this.translate.instant("pub_form_success0") +"\"" +  res["name"] + "\"" + this.translate.instant("pub_form_success1");
            	                                let _tc = this.getInstance(ToastController);
            	                                let options = {
            	                                        message: msg,
            	                                        duration: 3000,
            	                                        cssClass: "toastSuccess"
            	                                       };
            
            	                                _tc.create(options).present();
            	                                return null;
            	                            })
            	                            .fail((err)=>{
            	                                page.c8o.log.error(err);
            	                            })
            	                            
            	                            
            	                        }
            	                    }
            	                }
            	            }*/
                            for(let j in changes){
                                for(let i in changes[j]){
                                    if(page["imgCache"][changes[j][i]["id"] +"/wallpaper"] != undefined || page["imgCache"][changes[j][i]["id"] +"/thumbnail"] != undefined){
                                        delete page["imgCache"][changes[j][i]["id"] +"/wallpaper"];
                                        delete page["imgCache"][changes[j][i]["id"] +"/thumbnail"];
                                        page.c8o.log.debug("deleted img cache for id " +changes[j][i]["id"]);
                                        this.tick();
                                    }
                                }
                            }
                            
            	            
            	        });
            		}
            		
                    this.c8o.addFullSyncChangeListener("c8oforms_fs", page["local"]["changeListener"], {return_docs: true});
            		resolve();
            '
  ↓addEventListener [ngx.components.UICustomAction-1586340638874]: 
    actionValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            '		    
            		    // variables
                        const stack = props.stack;
                        const out = {keys: null};
                        // declare function to call shared action manually
                        page.local.manualCallShared = ()=>{
                            this.actionBeans.STS1567094239807(this,{...{stack: stack, parent: parent, out: out}, ...props}, {...stack["root"].in, ...out}, event)
                            .then((result)=>{
                            })
                            .catch((error)=>{
                                page.c8o.log.error("shared Action manual error", error)
                            });
                        };
                        
            		    // declare function for event subscriber
                        page.local.func = (event)=>{
                            if(event.ref == ''_tags'' || event.ref == ''_subTags''){
                                page.c8o.log.debug("event ngxTagInputNgModelChange from selectorPage, instance: " + this["created"]);
                                let arrTmp = [];
                                for(let elem of event["event"]){
                                    if(elem instanceof Object){
                                        arrTmp.push(elem["value"]);
                                    }
                                    else{
                                        arrTmp.push(elem);
                                    }
                                }
                                this.local[event[''ref''].substring(1)] = arrTmp;
                                page.local.manualCallShared();
                            }
                            
                        };
            
                		// get instance of Events    
                		const events = this.getInstance(Events);
                        
                		// call event subscriber
            			page["subscriptions"][''updateThumbnail''] = events.subscribe(''ngxTagInputNgModelChange'', page.local.func);
            		/**
            		
            		parent = self;
                    parent.out = res;
                    out = parent.out;
                    return new Promise((resolve, reject) => {
                    let self: any = stack["InvokeSharedAction"] = {};
                    self.in = {props:{tplVersion: ''7.8.0.0'', actionName: ''InvokeSharedAction'', actionFunction: ''STS1567094239807''}, vars:{keys: get(''keys'', `null`)}};
                    
                    this.actionBeans.STS1567094239807(this, {...{stack: stack, parent: parent, out: out}, ...self.in.props}, {...stack["root"].in, ...self.in.vars}, event)
                    
            		
            		**/
            		resolve();
            '
  ↓SyncData1 [ngx.components.UIDynamicAction-1604669061121]: 
    beanData: '{"ionBean":"FullSyncSyncAction","requestable":"plain:C8Oforms_NGX.c8oforms_fs"}'
    ↓PublishEventInitalSyncFinished [ngx.components.UIDynamicAction-1604669061139]: 
      beanData: |
        '{
         "ionBean": "PublishEventAction",
         "topic": "plain:anyInitalSyncFinished",
         "data": "script"
        }'
    ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1604670072767]: 
      beanData: '{"ionBean":"InvokeAction"}'
      stack: C8Oforms_NGX.MobileApplication.Application.getViewAndParametersForSelector
      ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1604670366191]: 
        beanData: '{"ionBean":"InvokeAction"}'
        stack: C8Oforms_NGX.MobileApplication.Application.removeSpinner
  ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1604670004971]: 
    beanData: '{"ionBean":"InvokeAction"}'
    isEnabled: false
    stack: C8Oforms_NGX.MobileApplication.Application.getViewAndParametersForSelector
  ↓InvokeSharedAction2 [ngx.components.UIDynamicInvoke-1624006767407]: 
    beanData: '{"ionBean":"InvokeAction"}'
    stack: C8Oforms_NGX.MobileApplication.Application.importNg2Tooltips
↓PageEvent1 [ngx.components.UIEventSubscriber-1645090139776]: 
  comment: Old implementation of onCanEnter. Prefer using AppGuard now.
  topic: CanEnter
  ↓CheckUser1 [ngx.components.UICustomAction-1572276511116]: 
    actionValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            '		    let indexPWA = window.location.pathname.indexOf("pwas");
                        let indexMobile = window.location.pathname.indexOf("mobile");
                          // if we started in standalone pwa mode
                        if(indexPWA != -1 && indexMobile == -1){
                            resolve(false);
                            setTimeout(()=>{
                                page.routerProvider.setRoot("loginPage", {}, null); 
                            }, 200);
                        }
                        else{
                		    this.local = {};
                		    page.local.editing_rights = false;
                		    page.c8o.promiseFinInit.then((res)=>{
                		        if(page.c8o.session.status == C8oSessionStatus.Connected || page.c8o.session.status == C8oSessionStatus.HasBeenConnected){
                		            page.global.user = page.c8o.session.user.name;
                                    page.local.user = page.c8o.session.user.name;
                                    resolve(true);
                                    /*page.c8o.callJson(''fs://c8oforms_fs.get'', ''_id'', ''C8Oreserved_'' +this.c8o.session.user.name)
                                    .then((res)=>{
                                        /*if(props.parent.out["editing_rights"] != undefined && (props.parent.out["editing_rights"] == false || props.parent.out["editing_rights"] == "false")){
                                            page.local.editing_rights = false;
                                        }
                                        console.log(res);
                                        return null;
                                    })*/
                	                
                	            }
                		    })
            				var ua = window.navigator.userAgent;
            				var isIE = /MSIE|Trident/.test(ua);
            				if(isIE){
            					resolve(false);
            	                setTimeout(()=>{
            	                    page.routerProvider.setRoot("loginPage", {page:''editorPage'', formId:page.local.formId}, null); 
            	                }, 200);
            	                return;
            				}
                		    const request = window["indexedDB"]["open"]("MyTestDatabase", 3);
                            request.onerror = (event)=> {
                                resolve(false);
                                setTimeout(()=>{
                                    page.routerProvider.setRoot("loginPage", {page:''editorPage'', formId:page.local.formId}, null); 
                                }, 200);
                                return;
                              };
                              request.onsuccess = (event)=> {
                                  page.local.folder = (this.navParams.get(''folder'') == undefined || this.navParams.get(''folder'') == ":folder" ) ? "": this.navParams.get(''folder'');
                                  page.local.sub = (this.navParams.get(''sub'') == undefined || this.navParams.get(''sub'') == ":sub" ) ? "": this.navParams.get(''sub'');
                                  
                                  if(this.navParams.get(''grid'') == "{false" || this.navParams.get(''grid'') == false){
                                      this.global.grid = false;
                                  }
                                  else{
                                      this.global.grid = true;
                                  }
                    		    // Getting user status (whenever he is logged or not)
                    		    //page.local.published = this.navParams.get(''published'');
                    		    if(this.navParams.get(''published'') == undefined || this.navParams.get(''published'') == ":published"){
                    		        //page.local.published = false;
                    		    }
                    		    else{
                    		        if(this.navParams.get(''published'') == false || this.navParams.get(''published'') == "false"){
                    		            page.local.published = false;
                    		        }
                    		        else if(this.navParams.get(''published'') == true || this.navParams.get(''published'') == "true"){
                    		            page.local.published = true;
                    	                page.local.ddoc = "published_forms";
                    	                
                    		        }
                    		        else {
                    		            page.local.published = false;
                    		        }
                    		        
                    		    }
                    		    page.c8o.httpInterface.getUserServiceStatus()
                    		    .then((res)=>{
                    		        if(res.user.length == 64 || res.user.authenticated == false){
                    		            setTimeout(()=>{
                                            page.routerProvider.setRoot("loginPage", {published:page.local.published, page: "selectorPage"}, null); 
                                        }, 200);
                                        resolve(false);
                                    }
                                    else{
                                        page.global.user = res.user;
                                        page.local.user = res.user;
                                        resolve(true);
                                    }
                    		    })
                    		    .catch((err)=>{
                    		        if(window.navigator.onLine == true){
                        		        setTimeout(()=>{
                        		            page.routerProvider.setRoot("loginPage", {published:page.local.published, page: "selectorPage"}, null); 
                        		        }, 200);
                        		        resolve(false);
                    		        }
                    		        else{
                    		            // Offline mode
                    		            page.local.user = page.c8o.session.user.name;
                    		            resolve(true);
                    		        }
                    		    })
                              };
                              
                		   /* this.local.debug = {};
                            let formId = this.navParams.get(''formId'');
                            if(formId != undefined){
                                this.local.formId = formId;
                                resolve(true);
                            }
                            else{
                                resolve(true);
                            }*/
                           
                            
                		/*
                		if(this.global.user == '''' || this.global.user == undefined){
                		    window.location.href = ''./'';
                		    resolve(false);
                		}
                		else{
                		    resolve(true);
                		}*/
                        }
            '
    page_ts_imports: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
        - com.twinsoft.convertigo.beans.common.XMLVector: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
            - com.twinsoft.convertigo.beans.common.XMLVector: 
              - java.lang.String: 
                - ↑value: C8oSessionStatus
              - java.lang.String: 
                - ↑value: c8osdkangular
↓Footer [ngx.components.UIDynamicElement-1566986230524]: 
  beanData: '{"ionBean":"Footer"}'
  isEnabled: false
  tagName: ion-footer
  ↓Directive [ngx.components.UIControlDirective-1566986395683]: 
    directiveName: If
    directiveSource: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:getSizeObject(this?.global?.selectedItem) > 0
    ↓Div1 [ngx.components.UIDynamicElement-1566998418536]: 
      beanData: '{"ionBean":"DivTag"}'
      tagName: div
      ↓Style [ngx.components.UIStyle-1566986310626]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '  box-shadow: 2px 2px 12px 0 rgba(0, 0, 0, 0.15);
                  background-color: #ffffff;
                '
      ↓GridTemplate [ngx.components.UIDynamicElement-1567008012476]: 
        beanData: '{"ionBean":"Grid"}'
        tagName: ion-grid
        ↓GridRow [ngx.components.UIDynamicElement-1567008016938]: 
          beanData: '{"ionBean":"GridRow"}'
          tagName: ion-row
          ↓GridColLeft [ngx.components.UIDynamicElement-1567008021702]: 
            beanData: |
              '{
               "ionBean": "GridCol",
               "SizeLg": "plain:1",
               "SizeXl": "plain:1"
              }'
            tagName: ion-col
          ↓GridColCenter [ngx.components.UIDynamicElement-1567008023408]: 
            beanData: |
              '{
               "ionBean": "GridCol",
               "SizeLg": "plain:10",
               "SizeMd": "plain:12",
               "SizeSm": "plain:12",
               "SizeXl": "plain:10",
               "SizeXs": "plain:12"
              }'
            tagName: ion-col
            ↓Directive [ngx.components.UIControlDirective-1606645530704]: 
              directiveName: If
              directiveSource: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:!this.global?.mobilePlat else ElseBlock_1606645547640
              ↓DivClose [ngx.components.UIDynamicElement-1606647086128]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓Style [ngx.components.UIStyle-1606647086131]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          'display: inline-block;
                          vertical-align: middle;
                          '
                ↓Event [ngx.components.UIControlEvent-1606647086134]: 
                  ↓DeselectAll [ngx.components.UICustomAction-1606647086137]: 
                    actionValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            		    for(let item in this.global.selectedItem){
                            				this.global.selectedItem[item] = false;
                            		        this.global['visibleoptions'][item] = false;
                            		    }
                            		    resolve();
                            
                ↓Button [ngx.components.UIDynamicElement-1606647086140]: 
                  beanData: '{"ionBean":"Button","IonSize":"plain:large"}'
                  isEnabled: false
                  tagName: ion-button
                  ↓Icon [ngx.components.UIDynamicElement-1606647086143]: 
                    beanData: '{"ionBean":"Icon","IconName":"plain:close-circle"}'
                    tagName: ion-icon
                    ↓Style [ngx.components.UIStyle-1606647086146]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              padding:0 !important;
                              
                ↓Button1 [ngx.components.UIDynamicElement-1611747191485]: 
                  beanData: '{"ionBean":"Button"}'
                  tagName: ion-button
                  ↓Icon [ngx.components.UIDynamicElement-1611747191488]: 
                    beanData: '{"ionBean":"Icon","IconName":"plain:close"}'
                    tagName: ion-icon
                  ↓Style [ngx.components.UIStyle-1611747191491]: 
                    isEnabled: false
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            float:right;
                            
                  ↓Attr1 [ngx.components.UIAttribute-1611755412589]: 
                    attrName: 
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:arrow
                  ↓Attr2 [ngx.components.UIAttribute-1611755412592]: 
                    attrName: positionV
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:top
                  ↓Attr [ngx.components.UIAttribute-1611755412595]: 
                    attrName: tooltip
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'Deselect' | translate
              ↓DivCount [ngx.components.UIDynamicElement-1606647104345]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓Style [ngx.components.UIStyle-1606647104348]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '  display: inline-block;
                            vertical-align: middle;
                          '
                ↓Badge [ngx.components.UIDynamicElement-1606647104351]: 
                  beanData: '{"ionBean":"Badge","IonColor":"plain:greyFab"}'
                  tagName: ion-badge
                  ↓Text [ngx.components.UIText-1606647104354]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:getSizeObjectFormated(this?.global?.selectedItem)
                  ↓Style [ngx.components.UIStyle-1606647104357]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            'vertical-align: middle;
                            '
              ↓DivElementSelected [ngx.components.UIDynamicElement-1606647125170]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓Style [ngx.components.UIStyle-1606647125173]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '
                            display: inline-block;
                            vertical-align:middle;
                              font-weight: bold;
                          	font-size: 18px;
                          	color: #333333;
                          '
                ↓Directive [ngx.components.UIControlDirective-1606647125176]: 
                  directiveName: If
                  directiveSource: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:getSizeObject(this?.global?.selectedItem) == 1
                  ↓Text [ngx.components.UIText-1606647125179]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:elem_selected
                ↓Directive1 [ngx.components.UIControlDirective-1606647125182]: 
                  directiveName: If
                  directiveSource: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:getSizeObject(this?.global?.selectedItem) > 1
                  ↓Text [ngx.components.UIText-1606647125185]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:elems_selected
              ↓DivButtons1 [ngx.components.UIDynamicElement-1606647236996]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓Style [ngx.components.UIStyle-1606647236999]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '    display: inline-block;
                            vertical-align:middle;
                            float:right;
                          '
                ↓btDelete [ngx.components.UIDynamicElement-1606647237023]: 
                  beanData: |
                    '{
                     "ionBean": "Button",
                     "IonColor": "plain:",
                     "IonShape": "plain:round"
                    }'
                  tagName: ion-button
                  ↓Style [ngx.components.UIStyle-1606647237026]: 
                  ↓Icon [ngx.components.UIDynamicElement-1606647237029]: 
                    beanData: '{"ionBean":"Icon","IconName":"plain:trash"}'
                    tagName: ion-icon
                  ↓Event [ngx.components.UIControlEvent-1606647237032]: 
                    ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1606647237035]: 
                      beanData: '{"ionBean":"InvokeAction"}'
                      stack: C8Oforms_NGX.MobileApplication.Application.deleteForm
                      ↓objectDocIds [ngx.components.UIControlVariable-1606647237038]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:this?.global?.selectedItem
                  ↓Attr1 [ngx.components.UIAttribute-1611753806702]: 
                    attrName: 
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:arrow
                  ↓Attr2 [ngx.components.UIAttribute-1611753806705]: 
                    attrName: positionV
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:top
                  ↓Attr [ngx.components.UIAttribute-1611753806708]: 
                    attrName: tooltip
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'Supprimer' | translate
            ↓Tag [ngx.components.UIElement-1606645547640]: 
              identifier: ElseBlock_1606645547640
              tagName: ng-template
              ↓DivClose [ngx.components.UIDynamicElement-1606645599231]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓Style [ngx.components.UIStyle-1606645599246]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          'display: inline-block;
                          vertical-align: middle;
                          
                          '
                ↓Event [ngx.components.UIControlEvent-1606645599255]: 
                  ↓DeselectAll [ngx.components.UICustomAction-1606645599258]: 
                    actionValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            		    for(let item in this.global.selectedItem){
                            				this.global.selectedItem[item] = false;
                            		        this.global['visibleoptions'][item] = false;
                            		    }
                            		    resolve();
                            
                ↓Button [ngx.components.UIDynamicElement-1606645819275]: 
                  beanData: '{"ionBean":"Button","IonSize":"plain:large"}'
                  isEnabled: false
                  tagName: ion-button
                  ↓Icon [ngx.components.UIDynamicElement-1606645826474]: 
                    beanData: '{"ionBean":"Icon","IconName":"plain:close-circle"}'
                    tagName: ion-icon
                    ↓Style [ngx.components.UIStyle-1606646309596]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              padding:0 !important;
                              
                ↓Button1 [ngx.components.UIDynamicElement-1611747027631]: 
                  beanData: '{"ionBean":"Button"}'
                  tagName: ion-button
                  ↓Icon [ngx.components.UIDynamicElement-1611747027634]: 
                    beanData: '{"ionBean":"Icon","IconName":"plain:close"}'
                    tagName: ion-icon
                  ↓Style [ngx.components.UIStyle-1611747027637]: 
                    isEnabled: false
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            float:right;
                            
                  ↓Attr1 [ngx.components.UIAttribute-1611755389590]: 
                    attrName: 
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:arrow
                  ↓Attr2 [ngx.components.UIAttribute-1611755389593]: 
                    attrName: positionV
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:top
                  ↓Attr [ngx.components.UIAttribute-1611755389596]: 
                    attrName: tooltip
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'Deselect' | translate
              ↓DivCount [ngx.components.UIDynamicElement-1606645636483]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓Style [ngx.components.UIStyle-1606645636486]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '  display: inline-block;
                            vertical-align: middle;
                          '
                ↓Badge [ngx.components.UIDynamicElement-1606646116442]: 
                  beanData: '{"ionBean":"Badge","IonColor":"plain:greyFab"}'
                  tagName: ion-badge
                  ↓Text [ngx.components.UIText-1606646116445]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:getSizeObjectFormated(this?.global?.selectedItem)
                  ↓Style [ngx.components.UIStyle-1606646116448]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            'vertical-align: middle;
                            '
              ↓DivElementSelected [ngx.components.UIDynamicElement-1606645671818]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓Style [ngx.components.UIStyle-1606645671821]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '
                            display: inline-block;
                            vertical-align:middle;
                              font-weight: bold;
                          	font-size: 18px;
                          	color: #333333;
                          '
                ↓Directive [ngx.components.UIControlDirective-1606645671824]: 
                  directiveName: If
                  directiveSource: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:getSizeObject(this?.global?.selectedItem) == 1
                  ↓Text [ngx.components.UIText-1606645671827]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:elem_selected
                ↓Directive1 [ngx.components.UIControlDirective-1606645671830]: 
                  directiveName: If
                  directiveSource: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:getSizeObject(this?.global?.selectedItem) > 1
                  ↓Text [ngx.components.UIText-1606645671833]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:elems_selected
              ↓DivButtons [ngx.components.UIDynamicElement-1606645671836]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓Style [ngx.components.UIStyle-1606645671839]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '    display: inline-block;
                            vertical-align:middle;
                            float:right;
                          '
                ↓btDelete [ngx.components.UIDynamicElement-1606645671866]: 
                  beanData: |
                    '{
                     "ionBean": "Button",
                     "IonColor": "plain:",
                     "IonShape": "plain:round"
                    }'
                  tagName: ion-button
                  ↓Style [ngx.components.UIStyle-1606645671869]: 
                  ↓Icon [ngx.components.UIDynamicElement-1606645671872]: 
                    beanData: '{"ionBean":"Icon","IconName":"plain:trash"}'
                    tagName: ion-icon
                  ↓Event [ngx.components.UIControlEvent-1606645671878]: 
                    ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1606645671881]: 
                      beanData: '{"ionBean":"InvokeAction"}'
                      stack: C8Oforms_NGX.MobileApplication.Application.deleteForm
                      ↓objectDocIds [ngx.components.UIControlVariable-1606645671884]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:this?.global?.selectedItem
                  ↓Attr1 [ngx.components.UIAttribute-1611753766371]: 
                    attrName: 
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:arrow
                  ↓Attr2 [ngx.components.UIAttribute-1611753766374]: 
                    attrName: positionV
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:top
                  ↓Attr [ngx.components.UIAttribute-1611753797158]: 
                    attrName: tooltip
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'Supprimer' | translate
          ↓GridRight [ngx.components.UIDynamicElement-1567008052623]: 
            beanData: |
              '{
               "ionBean": "GridCol",
               "SizeLg": "plain:1",
               "SizeXl": "plain:1"
              }'
            tagName: ion-col
          ↓Style [ngx.components.UIStyle-1567501653225]: 
    ↓Fragment [ngx.components.UICustom-1579008398703]: 
↓PageEvent3 [ngx.components.UIPageEvent-1572359975609]: 
  viewEvent: onWillLeave
  ↓Close_Loading [ngx.components.UIDynamicAction-1572359989055]: 
    beanData: '{"ionBean":"CloseLoadingAction"}'
  ↓removeEventListener [ngx.components.UICustomAction-1586345349876]: 
    actionValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            '		    
            		    page.c8o.removeFullSyncChangeListener("c8oforms_fs", page["local"]["changeListener"]);
                		page.c8o.log.debug("removing event ngxTagInputNgModelChange from selectorPage, instance: " + this["created"]);
                		const events = this.getInstance(Events);
                		page["subscriptions"][''ngxTagInputNgModelChange''].unsubscribe();
            '
↓Subscribe_Handler2 [ngx.components.UIEventSubscriber-1594641752198]: 
  topic: updateThumbnail
  ↓GetData [ngx.components.UIDynamicAction-1594826886510]: 
    beanData: |
      '{
       "ionBean": "FullSyncGetAction",
       "requestable": "plain:C8Oforms_NGX.c8oforms_fs",
       "noLoading": "plain:true",
       "_id": "script:parent.out._id"
      }'
    ↓CustomAction [ngx.components.UICustomAction-1594828305895]: 
      actionValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              '		page.c8o.log.debug(''[MB] ''+ props.actionFunction +'': ''+ props.actionName);
              		page.c8o.log.debug(''>>>'' + JSON.stringify(vars.data));
              		resolve();
              '
      isEnabled: false
      ↓data [ngx.components.UIControlVariable-1594828314768]: 
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:stack['GetData'].out
    ↓If [ngx.components.UIDynamicAction-1594828661218]: 
      beanData: '{"ionBean":"IfAction","condition":"script:stack[''GetData''].out.formulaire"}'
      ↓SaveProperties [ngx.components.UICustomAction-1594641752201]: 
        actionValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '		    let args = vars.arg;
                		    page.local.thumbnail = {};
                		    page.local["thumbnail"]["index"]= args.realIndex;
                		    page.local["thumbnail"]["enabled"] = args.enabledThumbTemp;
                		    page.local["thumbnail"]["random"] = props.stack[''GetData''].out.wallpaper.random;
                		    page.local["thumbnail"]["type"] = args.fromDevice ? ''custom'' : ''library'';
                		    /*this.updateState()
                		    .then(()=>{
                		        if(args.fromDevice === false){
                	                this.c8o.httpPublic.get(args.url, {responseType: ''blob'' })
                	                .subscribe(resp => {
                	                    resolve({"put_attach": true, "content": resp,"type": resp.type });
                	                });
                	            }
                		        else if(args.fromDevice === true){
                		            resolve({"put_attach": true, "content": page.global.filePrev, "type" : page.global.filePrevType });
                		        }
                		    })*/
                		    
                		    
                		    
                '
        isEnabled: false
        ↓arg [ngx.components.UIControlVariable-1594641752204]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:stack['root'].out
        ↓If [ngx.components.UIDynamicAction-1594641752207]: 
          beanData: '{"ionBean":"IfAction","condition":"script:parent.out.put_attach == true"}'
          isEnabled: false
          ↓PutAttachment [ngx.components.UIDynamicAction-1594641752210]: 
            beanData: |
              '{
               "ionBean": "FullSyncPutAttachmentAction",
               "requestable": "plain:C8Oforms_NGX.c8oforms_fs",
               "noLoading": "plain:true",
               "docid": "script:this.form._id",
               "name": "plain:thumbnail",
               "content_type": "script:stack[''SaveProperties''].out.type",
               "content": "script:stack[''SaveProperties''].out.content"
              }'
            ↓refreshThumbnail [ngx.components.UICustomAction-1594641752213]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      		    this.resetImageCache();
                      		resolve();
                      
      ↓PostData [ngx.components.UIDynamicAction-1594829724364]: 
        beanData: |
          '{
           "ionBean": "FullSyncPostAction",
           "requestable": "plain:C8Oforms_NGX.c8oforms_fs",
           "noLoading": "plain:true",
           "_id": "script:stack[''root''].out._id",
           "_use_policy": "plain:merge",
           "RootKey": "plain:thumbnail"
          }'
        ↓index [ngx.components.UIControlVariable-1594829838383]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:stack['root'].out.realIndex
        ↓enabled [ngx.components.UIControlVariable-1594829843294]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:stack['root'].out.enabledThumbTemp
        ↓type [ngx.components.UIControlVariable-1594829846526]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: 'script:stack[''root''].out.fromDevice == ''color'' ? ''color'' : (stack[''root''].out.fromDevice ? ''custom'' : ''library'')'
        ↓random [ngx.components.UIControlVariable-1594830959680]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:stack['GetData'].out.wallpaper.random
        ↓checkAttachment [ngx.components.UICustomAction-1594831107305]: 
          actionValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '		    let args = vars.arg;
                  	        if(args.fromDevice === false){
                                  this.c8o.httpPublic.get(args.url, {responseType: ''blob'' })
                                  .subscribe(resp => {
                                      resolve({"put_attach": true, "content": resp,"type": resp.type });
                                  });
                              }
                  	        else if(args.fromDevice === true){
                  	            resolve({"put_attach": true, "content": page.global.filePrev, "type" : page.global.filePrevType });
                  	        }
                  	        else {
                                  resolve({"put_attach": false});
                              }
                  '
          ↓arg [ngx.components.UIControlVariable-1594831107308]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:stack['root'].out
          ↓If [ngx.components.UIDynamicAction-1594831107311]: 
            beanData: '{"ionBean":"IfAction","condition":"script:parent.out.put_attach == true"}'
            ↓PutAttachment [ngx.components.UIDynamicAction-1594831107314]: 
              beanData: |
                '{
                 "ionBean": "FullSyncPutAttachmentAction",
                 "requestable": "plain:C8Oforms_NGX.c8oforms_fs",
                 "noLoading": "plain:true",
                 "docid": "script:stack[''root''].out._id",
                 "name": "plain:thumbnail",
                 "content_type": "script:stack[''checkAttachment''].out.type",
                 "content": "script:stack[''checkAttachment''].out.content"
                }'
              ↓refreshThumbnail [ngx.components.UICustomAction-1594831107317]: 
                actionValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        		    this.resetImageCache();
                        		resolve();
                        
        ↓color [ngx.components.UIControlVariable-1603357211310]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:stack['root'].out.colorPicker
↓Subscribe_Handler [ngx.components.UIEventSubscriber-1604007513115]: 
  isEnabled: false
  topic: toastPWA
  ↓Toast [ngx.components.UIDynamicAction-1604007345722]: 
    beanData: |
      '{
       "ionBean": "ToastAction",
       "message": "script:this.translate.instant(''notify_when_ready'')",
       "duration": "plain:10000",
       "cssClass": "plain:toastPending"
      }'
↓Subscribe_Handler21 [ngx.components.UIEventSubscriber-1605260781973]: 
  topic: ngxTagInputNgModelChange
  ↓setTags [ngx.components.UICustomAction-1605260781976]: 
    actionValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            		    if(event.ref == 'searchTags' || event.ref == 'searchSubTags'){
            		        let arrTmp = [];
            	            for(let elem of event["event"]){
            	                if(elem instanceof Object){
            	                    arrTmp.push(elem["value"]);
            	                }
            	                else{
            	                    arrTmp.push(elem);
            	                }
            	            }
            	            page.local["_"+event['ref']] = arrTmp;
            		    }
            		    resolve();
            		    
            		    
            