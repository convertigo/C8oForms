comment: Form chooser
scriptContent: 
  - xmlizable: 
    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
    - com.twinsoft.convertigo.beans.common.FormatedContent: 
      →: |
        '/*Begin_c8o_PageImport*/
        import {C8oFullSyncChangeListener } from "c8osdkangular";
        import * as Pouch from "pouchdb-browser";
        /*End_c8o_PageImport*/
        /*Begin_c8o_PageDeclaration*/
        	public list = [];
        	public listResponses = [];
        	public creating ="";
        	public query = "";
        	public created = new Date().getTime();
        	public form:any;
        	/*End_c8o_PageDeclaration*/
        /*Begin_c8o_PageConstructor*/
        		this.local.searchTags = [];
                this.local.searchSubTags = [];
        		this.global.platform.name[''0''] = ""
        		    this.global.visibleoptions = [];
        		this.global["visibleoptions1"] = [];
        		/*End_c8o_PageConstructor*/
        /*Begin_c8o_PageFunction*/
        	getLevelAccesDoc(doc, settings){
        		// if I am the owner of the doc
        		if(doc.creator == settings["~c8oAcl"]){
        			return 0;
        		}
        		else {
        			let groups = settings.group != undefined ? Object.keys(settings.groups).filter((x)=>{ return settings.groups[x] == true}) : [];
        			let isAcollabResp = doc.collabsResponse != undefined && (doc.collabsResponse.indexOf(settings["_id"]) != -1 || doc.collabsResponse.filter(value => (groups.indexOf(value) != -1)).length > 0);
        			let isAcollab = doc.collabs != undefined && (doc.collabs.indexOf(settings["_id"]) != -1 || doc.collabs.filter(value => (groups.indexOf(value) != -1)).length > 0);
        			let isAshared  = doc.shared != undefined && (doc.shared.indexOf(settings["_id"]) != -1 || doc.shared.filter(value => (groups.indexOf(value) != -1)).length > 0);
        			if(isAcollabResp && isAcollab){
        				return 1;
        			}
        			else if(isAcollab){
        				return 2;
        			}
        			else if(isAcollabResp){
        				return 3;
        			}
        			else if(isAshared){
        				return 4;
        			}
        		}
        	}
        	
        	trackById(index, item) {
        		return item.id;  
        	}
        	trackByKey(index, item) {
        		return item.key;  
        	}
        	public stringi(str){
        	    try{
        	        return JSON.stringify(str);
        	    }
        	    catch(e){
        	        return ''catched''
        	    }
        	}
        	
        	version(rev: string):string{
        	    let index = rev.indexOf("-");
        	    return rev.substring(0,index);
        	    
        	}
        	getSizeObject(obj): number{
        	    if(obj != null){
        	        let count = 0;
        	        for(let item in obj){
        	            if(obj[item]){
        	                count ++;
        	            }
        	        }
        	        return count;
        	    }
        	    else{
        	        return 0;
        	    }
        	    
        	}
        	
        	getSizeObjectFormated(obj){
        	    let count = this.getSizeObject(obj);
        	    return ((count <= 9) ? "0"+ count : count);
        	}
        	
        	getTranslate(msgTosearch :string): Promise<any>{
                return new Promise((resolve, reject)=>{
                    let translate = this.getInstance(TranslateService)
                    translate.get(msgTosearch).subscribe((res: string) => {
                        resolve(res);
                    });
                });        
            }
        	
        	
        	getTime(){
        		return new Date().getTime() + "";
        	}
        	
        	formatTime(date: any){
        	    return new Date(+date).toLocaleString();
        	}
        	
        	getcolorfromEl(id){
        	    var el = document.getElementById(id)
        	    if(el != null){
        	        let rgb = this.getAverageRGB(el);
        	        let hex = this.rgbToHex(rgb);
        	        return this.getContrastYIQ(hex);
        	    }
        	}
        	
        	rgbToHex (rgb) { 
        	    var hex = Number(rgb).toString(16);
        	    if (hex.length < 2) {
        	         hex = "0" + hex;
        	    }
        	    return hex;
        	  }
        	
        	getContrastYIQ(hexcolor){
        	    var r = parseInt(hexcolor.substr(0,2),16);
        	    var g = parseInt(hexcolor.substr(2,2),16);
        	    var b = parseInt(hexcolor.substr(4,2),16);
        	    var yiq = ((r*299)+(g*587)+(b*114))/1000;
        	    console.log((yiq >= 128) ? ''black'' : ''white'');
        	    return (yiq >= 128) ? ''black'' : ''white'';
        	}
        	
        	getAverageRGB(imgEl) {
        
        	    var blockSize = 5, // only visit every 5 pixels
        	        defaultRGB = {r:0,g:0,b:0}, // for non-supporting envs
        	        canvas = document.createElement(''canvas''),
        	        context = canvas.getContext && canvas.getContext(''2d''),
        	        data, width, height,
        	        i = -4,
        	        length,
        	        rgb = {r:0,g:0,b:0},
        	        count = 0;
        
        	    if (!context) {
        	        return defaultRGB;
        	    }
        
        	    height = canvas.height = imgEl.naturalHeight || imgEl.offsetHeight || imgEl.height;
        	    width = canvas.width = imgEl.naturalWidth || imgEl.offsetWidth || imgEl.width;
        
        	        var src = imgEl.src;
        	        imgEl = new Image;
        	        imgEl.setAttribute(''crossOrigin'', ''anonymous''); 
        	        imgEl.src = src;
        	    
        	    context.drawImage(imgEl, 0, 0);
        	    
        	    //context.canvas.baseURI = this.router.c8o.endpoint;
        	    try {
        	        data = context.getImageData(0, 0, width, height);
        	    } catch(e) {
        	        /* security error, img on diff domain */
        	        return defaultRGB;
        	    }
        
        	    length = data.data.length;
        
        	    while ( (i += blockSize * 4) < length ) {
        	        ++count;
        	        rgb.r += data.data[i];
        	        rgb.g += data.data[i+1];
        	        rgb.b += data.data[i+2];
        	    }
        
        	    // ~~ used to floor values
        	    rgb.r = ~~(rgb.r/count);
        	    rgb.g = ~~(rgb.g/count);
        	    rgb.b = ~~(rgb.b/count);
        
        	    return rgb;
        
        	}
        	
        	updateState() {
                return new Promise((resolve)=>{
                    let params = {};
                    params["_use_policy"] =  "merge";
                    params["thumbnail"] = "";
                });     
            }
            public getPWABaseUrl(){
        		return window.location.href.indexOf("localhost") == -1 ? window.location.href.substring(0, window.location.href.indexOf("mobile/")) : "http://localhost:18080/convertigo/projects/C8Oforms/DisplayObjects/"; 	
        	}
        	public openPWA(list, i){
            	window.open(this.getPWABaseUrl() + list[i].pwa_subPath);
        	}
        	/*End_c8o_PageFunction*/
        '
segment: selector/:published/:folder/:sub/:grid
startMenu: C8Oforms.MobileApplication.Application.MenuSelector
title: Selection de formulaires
↓Header [ngx.components.UIDynamicElement-1537533854974]: 
  beanData: '{"ionBean":"Header"}'
  tagName: ion-header
  ↓ToolBar [ngx.components.UIDynamicElement-1645544448594]: 
    beanData: '{"ionBean":"ToolBar"}'
    tagName: ion-toolbar
    ↓ButtonSetLeft [ngx.components.UIDynamicElement-1645544448597]: 
      beanData: '{"ionBean":"ButtonSet","SetPosition":"plain:start"}'
      tagName: ion-buttons
      ↓MenuButton [ngx.components.UIDynamicElement-1645544448600]: 
        beanData: '{"ionBean":"MenuButton"}'
        tagName: ion-menu-button
    ↓BarTitle [ngx.components.UIDynamicElement-1645544448603]: 
      beanData: '{"ionBean":"BarTitle"}'
      tagName: ion-title
      ↓Style1 [ngx.components.UIStyle-1648217641175]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '/*margin-top:0.75rem;
                margin-bottom:0.8rem;*/
                
                font-size: 14px;
                  font-weight: 800;
                  font-style: normal;
                  font-stretch: normal;
                  line-height: normal;
                  letter-spacing: normal;
                  white-space: nowrap;
                  overflow: hidden;
                  text-overflow: ellipsis;
                	
                '
      ↓ImageConvertigo2 [ngx.components.UIDynamicElement-1658929122884]: 
        beanData: '{"ionBean":"Image","url":"script:''assets\/images\/svg\/logo\/logo_no_code_studio.svg''"}'
        selfClose: true
        tagName: img
        ↓Style [ngx.components.UIStyle-1658929122887]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  	margin-left:0.5em;
                  	margin-right:0.5em;
                  
    ↓ButtonSetRight [ngx.components.UIDynamicElement-1645544448609]: 
      beanData: '{"ionBean":"ButtonSet","SetPosition":"plain:end"}'
      tagName: ion-buttons
      ↓Button [ngx.components.UIDynamicElement-1645544448612]: 
        beanData: '{"ionBean":"Button"}'
        tagName: ion-button
        ↓Icon [ngx.components.UIDynamicElement-1645544448615]: 
          beanData: '{"ionBean":"Icon","IconName":"plain:notifications-outline"}'
          tagName: ion-icon
        ↓Event [ngx.components.UIControlEvent-1645544808633]: 
          ↓Popover [ngx.components.UIDynamicAction-1645544808636]: 
            beanData: |
              '{
               "ionBean": "PopoverAction",
               "page": "plain:C8Oforms.MobileApplication.Application.PopOverNotifs",
               "cssClass": "plain:popOverNotif"
              }'
          ↓checkIfViewLiveAlreadyExistsAndHaveToExec [ngx.components.UICustomAsyncAction-1664373515312]: 
            actionValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    		let ret = true;
                    		try {
                    			console.log("## clicked");
                    			if(this.local.inLinePopOverStatus != undefined){
                    				ret = false;
                    			}
                    			else{
                    				this.local.inLinePopOverStatus = "doing";
                    				ret = true;
                    			}
                    		} catch (e) {
                    		
                    		} finally {
                    			return ret;
                    		}
                    
            isEnabled: false
            ↓If [ngx.components.UIDynamicAction-1664373651816]: 
              beanData: '{"ionBean":"IfAction"}'
              ↓QueryView [ngx.components.UIDynamicAction-1664373495322]: 
                beanData: |
                  '{
                   "ionBean": "FullSyncViewAction",
                   "noLoading": "plain:true",
                   "marker": "plain:viewNotifsAll",
                   "fsview": "plain:C8Oforms.c8oforms_fs.notifs.all",
                   "__live": "plain:liveRefresh",
                   "descending": "plain:true"
                  }'
                ↓setViewOk [ngx.components.UICustomAsyncAction-1664373690508]: 
                  actionValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          		try {
                          			this.local.inLinePopOverStatus = "done";
                          		} catch (e) {
                          		
                          		} finally {
                          			return;
                          		}
                          
            ↓CustomAsyncAction [ngx.components.UICustomAsyncAction-1664373943026]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      		try {
                      			console.log(props.parent.out);
                      		} catch (e) {
                      		
                      		} finally {
                      			return;
                      		}
                      
        ↓Directive [ngx.components.UIControlDirective-1645544833056]: 
          directiveName: If
          directiveSource: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:listen(['fs://c8oforms_fs.view#viewNotifsNew'])?.rows?.length > 0
          ↓Badge [ngx.components.UIDynamicElement-1645544833059]: 
            beanData: '{"ionBean":"Badge"}'
            tagName: ion-badge
            ↓Text [ngx.components.UIText-1645544833062]: 
              i18n: true
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:listen(['fs://c8oforms_fs.view#viewNotifsNew'])?.rows?.length
            ↓Style [ngx.components.UIStyle-1645544833065]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      'border-radius: 50%;
                      position: absolute;
                      top: -0; right:0;
                      z-index:100;
                      '
        ↓Attr [ngx.components.UIAttribute-1664373387048]: 
          attrName: id
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:12oo
↓Content [ngx.components.UIDynamicElement-1537533855334]: 
  beanData: |
    '{
     "ionBean": "Content",
     "Padding": "plain:ion-padding-top",
     "Fullscreen": "plain:true"
    }'
  tagName: ion-content
  ↓Event [ngx.components.UIControlEvent-1605176468028]: 
    ↓CustomAction [ngx.components.UICustomAction-1605176478429]: 
      actionValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              		if(this.local.showAdvancedSearch == true){
              		    this.local.showAdvancedSearch = false;
              		}
              		resolve();
              
  ↓Style [ngx.components.UIStyle-1606648343339]: 
    styleContent: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            '	margin-top:10px;
            	cdk-virtual-scroll-viewport {
            	  height: 100%;
            	  width: 100%;
            	  overscroll-behavior: auto;
            	}
            '
  ↓cdk_virtual_scroll_viewport [ngx.components.UIElement-1695809624421]: 
    identifier: viewport
    tagName: cdk-virtual-scroll-viewport
    ↓itemSize [ngx.components.UIAttribute-1695809803965]: 
      attrName: itemSize
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: plain:57.25
    ↓attr [ngx.components.UIAttribute-1695809854153]: 
      attrName: minBufferPx
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: plain:900
    ↓attr1 [ngx.components.UIAttribute-1695809855900]: 
      attrName: maxBufferPx
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: plain:1350
    ↓Style [ngx.components.UIStyle-1696239168099]: 
      styleContent: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              'overflow-x: hidden;
              max-width: 100%;
              width: 100%;
              ::ng-deep .cdk-virtual-scroll-content-wrapper{
              	max-width: 100%;
              }
              '
    ↓Grid [ngx.components.UIDynamicElement-1645545895858]: 
      beanData: '{"ionBean":"Grid"}'
      tagName: ion-grid
      ↓GridRow [ngx.components.UIDynamicElement-1645545904994]: 
        beanData: '{"ionBean":"GridRow"}'
        tagName: ion-row
        ↓GridCol1 [ngx.components.UIDynamicElement-1645545928670]: 
          beanData: |
            '{
             "ionBean": "GridCol",
             "OffsetXl": "plain:2",
             "SizeLg": "plain:12",
             "SizeMd": "plain:12",
             "SizeSm": "plain:12",
             "SizeXl": "plain:8",
             "SizeXs": "plain:12"
            }'
          tagName: ion-col
          ↓DivScrollContainerTab [ngx.components.UIDynamicElement-1645545973561]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓Style [ngx.components.UIStyle-1645545973564]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      	width:100%;
                      
            ↓DivContainerTab [ngx.components.UIDynamicElement-1645545973567]: 
              beanData: '{"ionBean":"DivTag"}'
              tagName: div
              ↓Style [ngx.components.UIStyle-1645545973570]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '	display: inline-flex;
                        	flex-wrap: wrap;
                        	background-color: #fafbfc!important;
                        	width:100%;
                        	margin-bottom: 6px;
                        	box-sizing:border-box;
                        	width:100% !important;
                        '
              ↓Directive [ngx.components.UIControlDirective-1645545973573]: 
                directiveName: If
                directiveSource: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:(this.global?.settings?.editing_rights != undefined && this.global?.settings?.editing_rights == "true") || this.global?.settings?.editing_rights == undefined
                ↓DivTabEdition [ngx.components.UIDynamicElement-1645545973576]: 
                  beanData: '{"ionBean":"DivTag"}'
                  tagName: div
                  ↓Icon1 [ngx.components.UIDynamicElement-1645545973579]: 
                    beanData: '{"ionBean":"Icon","IconName":"plain:menu"}'
                    tagName: ion-icon
                    ↓Style [ngx.components.UIStyle-1645545973582]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '
                                display: block;
                                margin-left: auto;
                                margin-right: 5px;
                              '
                  ↓Paragraph [ngx.components.UIDynamicElement-1645545973585]: 
                    beanData: '{"ionBean":"Paragraph"}'
                    tagName: p
                    ↓Style [ngx.components.UIStyle-1645545973591]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              ' color: #9b9b9b;
                               display:inline-block;
                               cursor:pointer;
                               text-align:right;
                               font-size: 16px !important;
                              '
                    ↓Attr [ngx.components.UIAttribute-1645545973597]: 
                      attrName: '[style.color]'
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: 'script:this.local.published ? '''' : ''var(--ion-color-primary)'''
                    ↓Directive [ngx.components.UIControlDirective-1645545973600]: 
                      directiveName: If
                      directiveSource: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:window.innerWidth > 428 else ElseBlock_1603096168918
                      ↓Text [ngx.components.UIText-1645545973603]: 
                        i18n: true
                        textValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: plain:Vue_des_projets
                    ↓Tag [ngx.components.UIElement-1645545973606]: 
                      identifier: ElseBlock_1603096168918
                      tagName: ng-template
                      ↓Text [ngx.components.UIText-1645545973609]: 
                        i18n: true
                        textValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: plain:Vue_des_projets2
                  ↓Attr [ngx.components.UIAttribute-1645545973612]: 
                    attrName: '[ngClass]'
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:this.local.published?'TabNotSelected':'TabSelected'
                  ↓Event [ngx.components.UIControlEvent-1645545973615]: 
                    ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1645788293753]: 
                      beanData: '{"ionBean":"InvokeAction"}'
                      stack: C8Oforms.MobileApplication.Application.changeTabIntoSelectorPage
                      ↓canExec [ngx.components.UIControlVariable-1645788306664]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:this.local.published == true
                      ↓changeToPublished [ngx.components.UIControlVariable-1645788306666]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:false
              ↓DivTabPublished [ngx.components.UIDynamicElement-1645545973630]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓Icon1 [ngx.components.UIDynamicElement-1645545973633]: 
                  beanData: '{"ionBean":"Icon","IconName":"plain:menu"}'
                  tagName: ion-icon
                  ↓Style [ngx.components.UIStyle-1645545973636]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            '
                              display: block;
                              margin-left: auto;
                              margin-right: 5px;
                            '
                ↓Event [ngx.components.UIControlEvent-1645545973639]: 
                  ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1645788353451]: 
                    beanData: '{"ionBean":"InvokeAction"}'
                    stack: C8Oforms.MobileApplication.Application.changeTabIntoSelectorPage
                    ↓canExec [ngx.components.UIControlVariable-1645788353454]: 
                      varValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:this.local.published == false
                    ↓changeToPublished [ngx.components.UIControlVariable-1645788353457]: 
                      varValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:true
                ↓Paragraph1 [ngx.components.UIDynamicElement-1645545973660]: 
                  beanData: '{"ionBean":"Paragraph"}'
                  tagName: p
                  ↓Style [ngx.components.UIStyle-1645545973663]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            ' color: #9b9b9b;
                             display:inline-block;
                             cursor:pointer;
                              text-align:right;
                             font-size: 16px !important;
                            '
                  ↓Attr [ngx.components.UIAttribute-1645545973669]: 
                    attrName: '[style.color]'
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: 'script:this.local.published ? ''var(--ion-color-primary)'': '''''
                  ↓Event [ngx.components.UIControlEvent-1645545973672]: 
                    isEnabled: false
                    ↓SetPublishedTrue [ngx.components.UICustomAction-1645545973675]: 
                      actionValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '		    page.local.tag = false;
                              		    page.local.fav = false;
                              		if(this.local.published == false){
                              		    page.local.spinner = true;
                              		    page.c8o.cancelLive("viewLiveSelector");
                              		    this.local.published = true; 
                              		    page.local["ddoc"] = "published_forms";
                              		    let url : string = window.location.href;
                                          let strToReplace = window.location.hash.split("/")[2];
                                          let index = url.indexOf(strToReplace);
                                          url = url.substring(0, index) + page.local.published + url.substring(index+strToReplace.length);
                                          window.location.href = url;
                              		    resolve(true);
                              		}
                              		else{
                              		    resolve(false);
                              		}
                              		
                              		
                              '
                      ↓If [ngx.components.UIDynamicAction-1645545973678]: 
                        beanData: '{"ionBean":"IfAction"}'
                        ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1645545973681]: 
                          beanData: '{"ionBean":"InvokeAction"}'
                          stack: C8Oforms.MobileApplication.Application.callViewLiveAndFillFormList
                          ↓keys [ngx.components.UIControlVariable-1645545973684]: 
                            varValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: script:null
                  ↓Directive [ngx.components.UIControlDirective-1645545973687]: 
                    directiveName: If
                    directiveSource: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:window.innerWidth > 428 else ElseBlock_1603096127001
                    ↓Text [ngx.components.UIText-1645545973690]: 
                      i18n: true
                      textValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:Vue_Publication
                  ↓Tag [ngx.components.UIElement-1645545973693]: 
                    identifier: ElseBlock_1603096127001
                    tagName: ng-template
                    ↓Text [ngx.components.UIText-1645545973696]: 
                      i18n: true
                      textValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:Vue_Publication2
                ↓Attr [ngx.components.UIAttribute-1645545973699]: 
                  attrName: '[ngClass]'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this.local.published?'TabSelected':'TabNotSelected'
              ↓DivTabEmpty [ngx.components.UIDynamicElement-1645545973702]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓Style [ngx.components.UIStyle-1645545973705]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '	padding: 7px 15px 8px;
                          	color: #586069;
                          	white-space: nowrap;
                          	border: 1px solid transparent;
                          	border-top: 3px solid transparent;
                          	border-radius: 3px 3px 0 0;
                          	padding: 7px 12px 8px!important;
                          	margin: 0;
                          	display: flex;
                          	align-items: center;
                          	justify-content: center;
                          	border-bottom: 1px solid #e1e4e8;
                          	flex-grow: 1
                          '
          ↓GenericItemSearchByName [ngx.components.UIDynamicElement-1645545984161]: 
            beanData: '{"ionBean":"GenericItem"}'
            tagName: ion-item
            ↓Icon [ngx.components.UIDynamicElement-1645545984164]: 
              beanData: '{"ionBean":"Icon","IconName":"plain:search"}'
              tagName: ion-icon
              ↓Attr [ngx.components.UIAttribute-1645545984167]: 
                attrName: 
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:item-start
              ↓Style [ngx.components.UIStyle-1645545984170]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        margin-right:0px !important;
                        
            ↓TextInput [ngx.components.UIDynamicElement-1645545984173]: 
              beanData: |
                '{
                 "ionBean": "Input",
                 "ControlName": "plain:name1645545984173",
                 "Debounce": "plain:0",
                 "Placeholder": "script:''searchProject'' | translate"
                }'
              tagName: ion-input
              ↓Attr [ngx.components.UIAttribute-1645545984176]: 
                attrName: '[(ngModel)]'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:query
              ↓Event [ngx.components.UIControlEvent-1645545984179]: 
                attrName: (ngModelChange)
                eventName: (ngModelChange)
                ↓EvaluateIsEmpty [ngx.components.UICustomAction-1645545984182]: 
                  actionValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          		    if(event != ""){
                          	            page.c8o.cancelLive("viewLiveOut");
                          	            page.c8o.cancelLive("viewLiveFolders");
                          	            page.c8o.cancelLive("viewLiveInFolders");
                          	            resolve(true);
                          	        }
                          	        else if((page.local.searchTags != undefined && page.local.searchTags.length > 1) || (page.local.searchSubTags != undefined && page.local.searchSubTags.length > 0)){
                          	        resolve(true);
                          	        }
                          	        else{
                          	            if(page.local.searchTags != undefined && page.local.searchTags.length == 1){
                          	                this.local.folder = page.local.searchTags[0];
                          	                page.local.searchTags = [];
                                              page.local.searchSuTags = [];
                          	            }
                          	            resolve(false);
                          	        }
                          		
                          		
                          
                  ↓IfElse [ngx.components.UIDynamicIf-1645545984185]: 
                    beanData: '{"ionBean":"IfElseAction"}'
                    ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1645545984188]: 
                      beanData: '{"ionBean":"InvokeAction"}'
                      stack: C8Oforms.MobileApplication.Application.searchForm
                    ↓Else_Handler [ngx.components.UIActionElseEvent-1645545984191]: 
                      ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1645545984194]: 
                        beanData: '{"ionBean":"InvokeAction"}'
                        stack: C8Oforms.MobileApplication.Application.callViewLiveAndFillFormList
              ↓Style [ngx.components.UIStyle-1645545984197]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        	input{
                        	  white-space:nowrap;
                        	  overflow:hidden;
                        	  text-overflow:ellipsis;
                        	}
                        	
                        
            ↓Style [ngx.components.UIStyle-1645545984200]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '	padding:0px;
                      
                      .item-inner {
                         margin-left: 0px !important;
                      }
                      
                      }
                      
                      .class1559827351486.input-has-focus, .class1559827351486:hover{
                      	border-bottom-color: #0cbbe7 !important;
                         	-webkit-box-shadow: inset 0 -1px 0 0 #0cbbe7 !important;
                          box-shadow: inset 0 -1px 0 0 #0cbbe7 !important;
                         .item-inner{
                          	border-bottom-color: #0cbbe7 !important;
                           	-webkit-box-shadow: inset 0 -1px 0 0 #0cbbe7 !important;
                            	box-shadow: inset 0 -1px 0 0 #0cbbe7 !important;
                      	}
                      '
            ↓Attr [ngx.components.UIAttribute-1645545984203]: 
              attrName: 
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:no-lines
            ↓Attr1 [ngx.components.UIAttribute-1645545984206]: 
              attrName: 
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:no-margin
            ↓Attr2 [ngx.components.UIAttribute-1645545984209]: 
              attrName: '*ngIf'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:this.local.tag == false || this.local.tag == undefined
            ↓Button [ngx.components.UIDynamicElement-1645545984212]: 
              beanData: '{"ionBean":"Button","IonFill":"plain:clear"}'
              tagName: ion-button
              ↓Icon1 [ngx.components.UIDynamicElement-1645545984215]: 
                beanData: '{"ionBean":"Icon","IconName":"plain:caret-down-outline"}'
                tagName: ion-icon
                ↓Style [ngx.components.UIStyle-1645545984218]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          'margin-left:0px !important;
                          color:#979797;	
                          }
                          .class1578926299818:hover {
                          cursor: pointer;
                          '
              ↓Attr [ngx.components.UIAttribute-1645545984230]: 
                attrName: 
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:item-end
              ↓Event [ngx.components.UIControlEvent-1645545984233]: 
                ↓StopPropagationAndShowAdvancedSearch [ngx.components.UICustomAction-1645545984236]: 
                  actionValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          		event.stopPropagation();
                          		if(this.local.searchTags == undefined){
                          		    this.local.searchTags = [];
                          		}
                          		if(this.local.searchTags.indexOf(this.local.folder) == -1 && this.local.folder != undefined && this.local.folder != ''){
                          		    this.local.searchTags.push(this.local.folder)
                          		}
                          		this.local.showAdvancedSearch = true;
                          		resolve();
                          
          ↓Directive [ngx.components.UIControlDirective-1645545984239]: 
            directiveName: If
            directiveSource: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.local.showAdvancedSearch
            ↓Div [ngx.components.UIDynamicElement-1645545984242]: 
              beanData: '{"ionBean":"DivTag"}'
              tagName: div
              ↓Style [ngx.components.UIStyle-1645545984245]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        'position:absolute;
                        box-shadow: 0 2px 4px rgba(0,0,0,0.2);
                        border: 1px solid rgba(0,0,0,0.2);
                        z-index:101;
                        background-color: white !important;
                        width:100%;
                        
                        '
              ↓Event [ngx.components.UIControlEvent-1645545984248]: 
                ↓StopPropagationToPreventFromClosingThis [ngx.components.UICustomAction-1645545984251]: 
                  actionValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          		event.stopPropagation();
                          		resolve();
                          
              ↓DivSearchName [ngx.components.UIDynamicElement-1645545984254]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓Label [ngx.components.UIDynamicElement-1645545984257]: 
                  beanData: '{"ionBean":"Label","Position":"plain:stacked"}'
                  tagName: ion-label
                  ↓FormatLayout [ngx.components.UIDynamicAttr-1645545984260]: 
                    beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-capitalize"}'
                    comment: FormatLayout
                    tagName: div
                  ↓Text [ngx.components.UIText-1645545984263]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:Name
                ↓TextInput [ngx.components.UIDynamicElement-1645545984266]: 
                  beanData: |
                    '{
                     "ionBean": "Input",
                     "ControlName": "plain:name1645545984266",
                     "Debounce": "plain:0",
                     "Placeholder": "script:this.translate.instant(''Name'')"
                    }'
                  tagName: ion-input
                  ↓Attr [ngx.components.UIAttribute-1645545984269]: 
                    attrName: '[ngModel]'
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:query
                  ↓Event [ngx.components.UIControlEvent-1645545984272]: 
                    attrName: (ngModelChange)
                    eventName: (ngModelChange)
                    ↓saveTemp [ngx.components.UICustomAction-1645545984275]: 
                      actionValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              		    page.local["_query"] = event;
                              		    resolve();
                              
                ↓Style [ngx.components.UIStyle-1645545984278]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          'box-shadow: inset 0 -1px 0 0 var(--ion-color-greyButton) !important;
                          border-bottom-color: var(--ion-color-greyButton);
                          '
                ↓Attr [ngx.components.UIAttribute-1645545984281]: 
                  attrName: '[ngClass]'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:styledivnormal
              ↓DivSearchTags [ngx.components.UIDynamicElement-1645545984284]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓Label [ngx.components.UIDynamicElement-1645545984287]: 
                  beanData: '{"ionBean":"Label","Position":"plain:stacked"}'
                  tagName: ion-label
                  ↓Text [ngx.components.UIText-1645545984290]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:labels
                ↓UseSharedComponent [ngx.components.UIUseShared-1645545984293]: 
                  sharedcomponent: lib_ExtendedComponents_ui_ngx.MobileApplication.Application.ngxTagInput
                  ↓items [ngx.components.UIUseVariable-1645545984296]: 
                    binding: twoWayBinding
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:this.local._searchTags
                  ↓inputtext [ngx.components.UIUseVariable-1645545984299]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:''
                  ↓theme [ngx.components.UIUseVariable-1645545984302]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:''
                  ↓maxItems [ngx.components.UIUseVariable-1645545984305]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:100
                  ↓placeholder [ngx.components.UIUseVariable-1645545984308]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:translate.instant('labels_placeholder')
                  ↓secondaryPlaceholder [ngx.components.UIUseVariable-1645545984311]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:translate.instant('labels_placeholder')
                  ↓editableTag [ngx.components.UIUseVariable-1645545984314]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:false
                  ↓removableTag [ngx.components.UIUseVariable-1645545984317]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:true
                  ↓itemIdentifyBy [ngx.components.UIUseVariable-1645545984320]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'value'
                  ↓itemDisplayBy [ngx.components.UIUseVariable-1645545984323]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'display'
                  ↓autocompleteItems [ngx.components.UIUseVariable-1645545984326]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:[]
                  ↓onlyFromAutocomplete [ngx.components.UIUseVariable-1645545984329]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:false
                  ↓showAutoCompleteDropdownIfEmpty [ngx.components.UIUseVariable-1645545984332]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:false
                ↓Style [ngx.components.UIStyle-1645545984338]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '.ng2-tag-input{
                          	border-bottom: unset !important;
                          }
                          box-shadow: inset 0 -1px 0 0 var(--ion-color-greyButton) !important;
                          border-bottom-color: var(--ion-color-greyButton);
                          '
                ↓Attr1 [ngx.components.UIAttribute-1645545984341]: 
                  attrName: '[ngClass]'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:'styledivnormal c8o-ngxTag-larger'
              ↓DivSearchSubTags [ngx.components.UIDynamicElement-1645545984344]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓Label [ngx.components.UIDynamicElement-1645545984347]: 
                  beanData: '{"ionBean":"Label","Position":"plain:stacked"}'
                  tagName: ion-label
                  ↓Text [ngx.components.UIText-1645545984350]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:subtag
                ↓UseSharedComponent [ngx.components.UIUseShared-1645545984353]: 
                  sharedcomponent: lib_ExtendedComponents_ui_ngx.MobileApplication.Application.ngxTagInput
                  ↓items [ngx.components.UIUseVariable-1645545984356]: 
                    binding: twoWayBinding
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:this.local._searchSubTags
                  ↓inputtext [ngx.components.UIUseVariable-1645545984359]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:''
                  ↓theme [ngx.components.UIUseVariable-1645545984362]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:''
                  ↓maxItems [ngx.components.UIUseVariable-1645545984365]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:100
                  ↓placeholder [ngx.components.UIUseVariable-1645545984368]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:translate.instant('subTag_placeholder')
                  ↓secondaryPlaceholder [ngx.components.UIUseVariable-1645545984371]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:translate.instant('subTag_placeholder')
                  ↓editableTag [ngx.components.UIUseVariable-1645545984374]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:true
                  ↓removableTag [ngx.components.UIUseVariable-1645545984377]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:true
                  ↓itemIdentifyBy [ngx.components.UIUseVariable-1645545984380]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'value'
                  ↓itemDisplayBy [ngx.components.UIUseVariable-1645545984383]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'display'
                  ↓autocompleteItems [ngx.components.UIUseVariable-1645545984386]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:[]
                  ↓onlyFromAutocomplete [ngx.components.UIUseVariable-1645545984389]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:false
                  ↓showAutoCompleteDropdownIfEmpty [ngx.components.UIUseVariable-1645545984392]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:false
                ↓Style [ngx.components.UIStyle-1645545984398]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '.ng2-tag-input{
                          	border-bottom: unset !important;
                          }
                          box-shadow: inset 0 -1px 0 0 var(--ion-color-greyButton) !important;
                          border-bottom-color: var(--ion-color-greyButton);
                          '
                ↓Attr1 [ngx.components.UIAttribute-1645545984401]: 
                  attrName: '[ngClass]'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:'styledivnormal c8o-ngxTag-larger'
              ↓ButtonSet [ngx.components.UIDynamicElement-1645545984404]: 
                beanData: '{"ionBean":"ButtonSet","SetPosition":"plain:end"}'
                isEnabled: false
                tagName: ion-buttons
                ↓Button [ngx.components.UIDynamicElement-1645545984407]: 
                  beanData: '{"ionBean":"Button","IonColor":"plain:convertigo"}'
                  tagName: ion-button
                  ↓Text [ngx.components.UIText-1645545984410]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:Search
                  ↓Attr [ngx.components.UIAttribute-1645545984413]: 
                    attrName: 
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:item-end
                  ↓Event [ngx.components.UIControlEvent-1645545984416]: 
                    ↓ApplyParams [ngx.components.UICustomAction-1645545984419]: 
                      actionValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '		setTimeout(()=>{
                              			if(page.local["_searchSubTags"] != undefined){
                              		        page.local.searchSubTags = page.local["_searchSubTags"].map((x)=>{return x.value != undefined ? x.value: x});
                              		    }
                              		    if(page.local["_searchTags"] != undefined){
                              		        page.local.searchTags = page.local["_searchTags"].map((x)=>{return x.value != undefined ? x.value: x});
                                          }
                              		    if(page.local["_query"] != undefined){
                              		        page["query"] = page.local["_query"];
                              		    }
                              		    
                              		resolve();
                              		},100)
                              		    
                              '
                      ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1645545984422]: 
                        beanData: '{"ionBean":"InvokeAction"}'
                        stack: C8Oforms.MobileApplication.Application.searchForm
                        ↓CustomAction [ngx.components.UICustomAction-1645545984425]: 
                          actionValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  '		new Promise(async(resolve2, reject2)=>{
                                  		    try{
                                  		        let filterName = this.local.published ? "c8o_view_type_published_form" : "c8o_view_type_drafts_form";
                                  		        var filter = undefined;
                                  		        if(this.local.published){
                                  		            filter = function (doc){
                                  	                   return doc.c8o_view_type_published_form === true;
                                  	                }
                                  		        }
                                  		        else{
                                  		            filter = function (doc){
                                  		                return doc.c8o_view_type_drafts_form === true;
                                                      }
                                  		        }
                                  		        let params = {filter: filter, fields:["name"], query: page["query"], highlighting: true, include_docs: true}
                                  		        let resp = await this.c8o.callJsonObject("fs://c8oforms_fs.search", params).async();
                                  		        let responseAfterView = resp.rows.map((emit)=>{
                                  		            let doc = emit.doc;
                                  		            // comes from ddoc = formsV2 view = out_folders
                                  		            var objToEmit = {"name": doc.name, "pwa_enabled": doc.pwa_enabled, "pwa_subPath": doc.pwa_subPath};
                                  	                if(doc.thumbnail != undefined && doc.thumbnail.enabled){
                                  	                    if(doc.thumbnail.type != undefined && doc.thumbnail.type == "color"){
                                  	                        objToEmit["color"] = doc.thumbnail.color;
                                  	                    }
                                  	                    else{
                                  	                        objToEmit["thumbnail"] = true;
                                  	                    }
                                  	                    
                                  	                }
                                  	                else if(doc.wallpaper != undefined && doc.wallpaper.enabled){
                                  	                    if(doc.wallpaper.type != undefined && doc.wallpaper.type == "color"){
                                  	                        objToEmit["color"] = doc.wallpaper.color;
                                  	                    }
                                  	                    else{
                                  	                        objToEmit["wallpaper"] = true;
                                  	                    }
                                  	                }
                                  	                else{
                                  	                    objToEmit["random"] = doc.wallpaper.random;
                                  	                }
                                  	                
                                  	                //// difference from view
                                  	                if(emit.highlighting.name != undefined){
                                  	                    objToEmit.name = emit.highlighting.name;
                                  	                }
                                  	                return {"id": emit.id, "score": emit.score, value: objToEmit}; 
                                                      //end difference from view
                                  	                
                                  		        });
                                  		        
                                  		        console.log(responseAfterView);
                                  		        this.list = responseAfterView;
                                  		    }
                                  		    catch(e){
                                  		        console.log("errr", e);
                                  		    }
                                  		})
                                  		.then(()=>{
                                  		    resolve();
                                  		})
                                  		
                                  '
                          isEnabled: false
                        ↓setshowAdvancedSearchFalse [ngx.components.UICustomAction-1645545984428]: 
                          actionValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  		    page.local.showAdvancedSearch = false;
                                  		resolve();
                                  
                ↓Style [ngx.components.UIStyle-1645545984431]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          margin-top:10px;
                          
              ↓DivSearchSubTags1 [ngx.components.UIDynamicElement-1694599302093]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓Style [ngx.components.UIStyle-1694599302144]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '	display: flex;
                          	justify-content: flex-end;
                          '
                ↓Attr1 [ngx.components.UIAttribute-1694599302147]: 
                  attrName: '[ngClass]'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:'styledivnormal c8o-ngxTag-larger'
                ↓Button [ngx.components.UIDynamicElement-1694599319853]: 
                  beanData: '{"ionBean":"Button","IonColor":"plain:convertigo"}'
                  tagName: ion-button
                  ↓Text [ngx.components.UIText-1694599319856]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:Search
                  ↓Attr [ngx.components.UIAttribute-1694599319859]: 
                    attrName: 
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:item-end
                  ↓Event [ngx.components.UIControlEvent-1694599319862]: 
                    ↓ApplyParams [ngx.components.UICustomAction-1694599319865]: 
                      actionValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '		setTimeout(()=>{
                              			if(page.local["_searchSubTags"] != undefined){
                              		        page.local.searchSubTags = page.local["_searchSubTags"].map((x)=>{return x.value != undefined ? x.value: x});
                              		    }
                              		    if(page.local["_searchTags"] != undefined){
                              		        page.local.searchTags = page.local["_searchTags"].map((x)=>{return x.value != undefined ? x.value: x});
                                          }
                              		    if(page.local["_query"] != undefined){
                              		        page["query"] = page.local["_query"];
                              		    }
                              		    
                              		resolve();
                              		},100)
                              		    
                              '
                      ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1694599319868]: 
                        beanData: '{"ionBean":"InvokeAction"}'
                        stack: C8Oforms.MobileApplication.Application.searchForm
                        ↓CustomAction [ngx.components.UICustomAction-1694599319871]: 
                          actionValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  '		new Promise(async(resolve2, reject2)=>{
                                  		    try{
                                  		        let filterName = this.local.published ? "c8o_view_type_published_form" : "c8o_view_type_drafts_form";
                                  		        var filter = undefined;
                                  		        if(this.local.published){
                                  		            filter = function (doc){
                                  	                   return doc.c8o_view_type_published_form === true;
                                  	                }
                                  		        }
                                  		        else{
                                  		            filter = function (doc){
                                  		                return doc.c8o_view_type_drafts_form === true;
                                                      }
                                  		        }
                                  		        let params = {filter: filter, fields:["name"], query: page["query"], highlighting: true, include_docs: true}
                                  		        let resp = await this.c8o.callJsonObject("fs://c8oforms_fs.search", params).async();
                                  		        let responseAfterView = resp.rows.map((emit)=>{
                                  		            let doc = emit.doc;
                                  		            // comes from ddoc = formsV2 view = out_folders
                                  		            var objToEmit = {"name": doc.name, "pwa_enabled": doc.pwa_enabled, "pwa_subPath": doc.pwa_subPath};
                                  	                if(doc.thumbnail != undefined && doc.thumbnail.enabled){
                                  	                    if(doc.thumbnail.type != undefined && doc.thumbnail.type == "color"){
                                  	                        objToEmit["color"] = doc.thumbnail.color;
                                  	                    }
                                  	                    else{
                                  	                        objToEmit["thumbnail"] = true;
                                  	                    }
                                  	                    
                                  	                }
                                  	                else if(doc.wallpaper != undefined && doc.wallpaper.enabled){
                                  	                    if(doc.wallpaper.type != undefined && doc.wallpaper.type == "color"){
                                  	                        objToEmit["color"] = doc.wallpaper.color;
                                  	                    }
                                  	                    else{
                                  	                        objToEmit["wallpaper"] = true;
                                  	                    }
                                  	                }
                                  	                else{
                                  	                    objToEmit["random"] = doc.wallpaper.random;
                                  	                }
                                  	                
                                  	                //// difference from view
                                  	                if(emit.highlighting.name != undefined){
                                  	                    objToEmit.name = emit.highlighting.name;
                                  	                }
                                  	                return {"id": emit.id, "score": emit.score, value: objToEmit}; 
                                                      //end difference from view
                                  	                
                                  		        });
                                  		        
                                  		        console.log(responseAfterView);
                                  		        this.list = responseAfterView;
                                  		    }
                                  		    catch(e){
                                  		        console.log("errr", e);
                                  		    }
                                  		})
                                  		.then(()=>{
                                  		    resolve();
                                  		})
                                  		
                                  '
                          isEnabled: false
                        ↓setshowAdvancedSearchFalse [ngx.components.UICustomAction-1694599319874]: 
                          actionValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  		    page.local.showAdvancedSearch = false;
                                  		resolve();
                                  
          ↓Directive1 [ngx.components.UIControlDirective-1645547166550]: 
            directiveName: If
            directiveSource: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:!this.local.published
            ↓Div [ngx.components.UIDynamicElement-1645547303032]: 
              beanData: '{"ionBean":"DivTag"}'
              tagName: div
              ↓DivTitle [ngx.components.UIDynamicElement-1645547241593]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓Paragraph [ngx.components.UIDynamicElement-1645547241596]: 
                  beanData: '{"ionBean":"Paragraph"}'
                  tagName: p
                  ↓Text [ngx.components.UIText-1645547241599]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:chooseformcreate
                  ↓Style [ngx.components.UIStyle-1645547241602]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            'font-weight: bold;
                            display:inline-block;
                            '
                ↓Button [ngx.components.UIDynamicElement-1645547241605]: 
                  beanData: '{"ionBean":"Button","IonFill":"plain:clear"}'
                  tagName: ion-button
                  ↓Icon [ngx.components.UIDynamicElement-1645547241608]: 
                    beanData: '{"ionBean":"Icon","IconName":"plain:cloud-upload"}'
                    tagName: ion-icon
                    ↓Style [ngx.components.UIStyle-1645547241611]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              'font-size: 1.5rem;
                              '
                  ↓Style [ngx.components.UIStyle-1645547241614]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            '	float:right;
                            	ion-icon {
                            	  color: var(--ion-color-btLight);
                            	}
                            '
                  ↓Event [ngx.components.UIControlEvent-1645547241617]: 
                    ↓ModalPage [ngx.components.UIDynamicAction-1645547241620]: 
                      beanData: |
                        '{
                         "ionBean": "ModalAction",
                         "page": "plain:C8Oforms.MobileApplication.Application.dropFilePage",
                         "data": "script:{import: true}",
                         "cssClass": "plain:modalCSV"
                        }'
                  ↓Attr [ngx.components.UIAttribute-1645547241623]: 
                    attrName: tooltip
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'chooseformImport' | translate
                  ↓Attr1 [ngx.components.UIAttribute-1645547241626]: 
                    attrName: 
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:arrow
                  ↓Attr2 [ngx.components.UIAttribute-1645547241629]: 
                    attrName: positionV
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:top
                ↓Style [ngx.components.UIStyle-1686564910490]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          position:relative;
                          
              ↓DivNewForm [ngx.components.UIDynamicElement-1645547241632]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓Style [ngx.components.UIStyle-1645547241635]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '  flex: 1;
                              display: flex;
                              overflow: auto;
                              width:100%;
                              position:relative;
                          '
                ↓DivBox [ngx.components.UIDynamicElement-1645547241638]: 
                  beanData: '{"ionBean":"DivTag"}'
                  tagName: div
                  ↓Style [ngx.components.UIStyle-1645547241641]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            'display: flex;
                                min-height: webkit-min-content; /*min-content; /* needs vendor prefixes */
                            '
                  ↓DivElement [ngx.components.UIDynamicElement-1645547241644]: 
                    beanData: '{"ionBean":"DivTag"}'
                    tagName: div
                    ↓DivImage [ngx.components.UIDynamicElement-1645547241647]: 
                      beanData: '{"ionBean":"DivTag"}'
                      tagName: div
                      ↓Style [ngx.components.UIStyle-1645547241650]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '	background-color:white;
                                	height: 120px;
                                	width: 160px;
                                	border: 1px solid #dadce0;
                                	border-radius: 4px;
                                	margin-right:10px;
                                	&:hover{
                                		cursor:pointer;
                                		border-color:var(--ion-color-primary);
                                	}
                                '
                      ↓Fragment [ngx.components.UICustom-1645547241653]: 
                        htmlTemplate: <svg xmlns='http://www.w3.org/2000/svg' width="160px" height="120px" class='ionicon' viewBox='0 0 512 512'><title>Add</title><path fill='none' stroke='#3880ff' stroke-linecap='square' stroke-linejoin='round' stroke-width='32' d='M256 112v288M400 256H112'/></svg>
                      ↓Event [ngx.components.UIControlEvent-1645547241656]: 
                        ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1645547241659]: 
                          beanData: '{"ionBean":"InvokeAction"}'
                          stack: C8Oforms.MobileApplication.Application.createNewForm
                    ↓ParagraphTitle [ngx.components.UIDynamicElement-1645547241662]: 
                      beanData: '{"ionBean":"Paragraph"}'
                      tagName: p
                      ↓Text [ngx.components.UIText-1645547241665]: 
                        i18n: true
                        textValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: plain:empty
                      ↓Style [ngx.components.UIStyle-1645547241668]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                'font-weight: bold;
                                margin-left:4px;
                                '
                  ↓DivElement1 [ngx.components.UIDynamicElement-1686562652101]: 
                    beanData: '{"ionBean":"DivTag"}'
                    tagName: div
                    ↓Badge [ngx.components.UIDynamicElement-1686564614633]: 
                      beanData: '{"ionBean":"Badge","IonColor":"plain:primary"}'
                      tagName: ion-badge
                      ↓some_text [ngx.components.UIText-1686564624202]: 
                        i18n: true
                        textValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: plain:ChatGPT_AI
                      ↓Style [ngx.components.UIStyle-1686564671686]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '/**
                                 * Custom properties (sometimes referred to as CSS variables or cascading variables)
                                 * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                                 * They are set using custom property notation, e.g.: --main-color: black;
                                 * and are accessed using the var() function, e.g.: color: var(--main-color);
                                 * You can find below your component''s properties you can customize within the page.
                                 * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                                 * For more informations see https://ionicframework.com/docs/theming.
                                **/
                                //--background	//Background of the badge
                                //--color	//Text color of the badge
                                //--padding-bottom	//Bottom padding of the badge
                                //--padding-end	//Right padding if direction is left-to-right, and left padding if direction is right-to-left of the badge
                                //--padding-start	//Left padding if direction is left-to-right, and right padding if direction is right-to-left of the badge
                                //--padding-top	//Top padding of the badge
                                position: absolute;
                                top: 0;
                                right:11px;
                                z-index: 100;
                                '
                    ↓DivImage [ngx.components.UIDynamicElement-1686562652104]: 
                      beanData: '{"ionBean":"DivTag"}'
                      tagName: div
                      ↓Style [ngx.components.UIStyle-1686562652107]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '	background-color:white;
                                	height: 120px;
                                	width: 160px;
                                	border: 1px solid #dadce0;
                                	border-radius: 4px;
                                	margin-right:10px;
                                	display: flex;
                                	align-items: center;
                                	justify-content: center;
                                	position: relative;
                                	
                                	&:hover{
                                		cursor:pointer;
                                		border-color:var(--ion-color-primary);
                                	}
                                '
                      ↓Fragment [ngx.components.UICustom-1686562652110]: 
                        htmlTemplate: |
                          '<svg xmlns=''http://www.w3.org/2000/svg'' style="opacity: 0.70; position: absolute; top: 0; right: 10px;" width="100px" height="108px" viewBox="0 0 2406 2406"><path d="M1 578.4C1 259.5 259.5 1 578.4 1h1249.1c319 0 577.5 258.5 577.5 577.4V2406H578.4C259.5 2406 1 2147.5 1 1828.6V578.4z" fill="#74aa9c"/><path d="M1107.3 299.1c-198 0-373.9 127.3-435.2 315.3C544.8 640.6 434.9 720.2 370.5 833c-99.3 171.4-76.6 386.9 56.4 533.8-41.1 123.1-27 257.7 38.6 369.2 98.7 172 297.3 260.2 491.6 219.2 86.1 97 209.8 152.3 339.6 151.8 198 0 373.9-127.3 435.3-315.3 127.5-26.3 237.2-105.9 301-218.5 99.9-171.4 77.2-386.9-55.8-533.9v-.6c41.1-123.1 27-257.8-38.6-369.8-98.7-171.4-297.3-259.6-491-218.6-86.6-96.8-210.5-151.8-340.3-151.2zm0 117.5-.6.6c79.7 0 156.3 27.5 217.6 78.4-2.5 1.2-7.4 4.3-11 6.1L952.8 709.3c-18.4 10.4-29.4 30-29.4 51.4V1248l-155.1-89.4V755.8c-.1-187.1 151.6-338.9 339-339.2zm434.2 141.9c121.6-.2 234 64.5 294.7 169.8 39.2 68.6 53.9 148.8 40.4 226.5-2.5-1.8-7.3-4.3-10.4-6.1l-360.4-208.2c-18.4-10.4-41-10.4-59.4 0L1024 984.2V805.4L1372.7 604c51.3-29.7 109.5-45.4 168.8-45.5zM650 743.5v427.9c0 21.4 11 40.4 29.4 51.4l421.7 243-155.7 90L597.2 1355c-162-93.8-217.4-300.9-123.8-462.8C513.1 823.6 575.5 771 650 743.5zm807.9 106 348.8 200.8c162.5 93.7 217.6 300.6 123.8 462.8l.6.6c-39.8 68.6-102.4 121.2-176.5 148.2v-428c0-21.4-11-41-29.4-51.4l-422.3-243.7 155-89.3zM1201.7 997l177.8 102.8v205.1l-177.8 102.8-177.8-102.8v-205.1L1201.7 997zm279.5 161.6 155.1 89.4v402.2c0 187.3-152 339.2-339 339.2v-.6c-79.1 0-156.3-27.6-217-78.4 2.5-1.2 8-4.3 11-6.1l360.4-207.5c18.4-10.4 30-30 29.4-51.4l.1-486.8zM1380 1421.9v178.8l-348.8 200.8c-162.5 93.1-369.6 38-463.4-123.7h.6c-39.8-68-54-148.8-40.5-226.5 2.5 1.8 7.4 4.3 10.4 6.1l360.4 208.2c18.4 10.4 41 10.4 59.4 0l421.9-243.7z" fill="white"/></svg>
                          <svg xmlns=''http://www.w3.org/2000/svg'' style="position: absolute; bottom: 0; left: 0;" width="50px" height="70px" class=''ionicon'' viewBox=''0 0 512 512''><title>Add</title><path fill=''none'' stroke=''#3880ff'' stroke-linecap=''square'' stroke-linejoin=''round'' stroke-width=''50'' d=''M256 112v288M400 256H112''/></svg>'
                      ↓Event [ngx.components.UIControlEvent-1686562652113]: 
                        ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1686562652116]: 
                          beanData: '{"ionBean":"InvokeAction"}'
                          stack: C8Oforms.MobileApplication.Application.createNewForm
                          ↓ai [ngx.components.UIControlVariable-1686566364437]: 
                            varValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: script:true
                    ↓ParagraphTitle [ngx.components.UIDynamicElement-1686562652119]: 
                      beanData: '{"ionBean":"Paragraph"}'
                      tagName: p
                      ↓Text [ngx.components.UIText-1686562652122]: 
                        i18n: true
                        textValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: plain:Convertigo_X_ChatGPT
                      ↓Style [ngx.components.UIStyle-1686562652125]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                'font-weight: bold;
                                margin-left:4px;
                                '
                    ↓Style [ngx.components.UIStyle-1686564675232]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '	position: relative;
                              '
                  ↓Directive1 [ngx.components.UIControlDirective-1656408985905]: 
                    directiveName: If
                    directiveSource: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:this.local.templates != undefined
                    ↓Directive [ngx.components.UIControlDirective-1645547241671]: 
                      directiveItemName: itemTemplate
                      directiveSource: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:this.local.templates
                      ↓DivElement [ngx.components.UIDynamicElement-1645547241674]: 
                        beanData: '{"ionBean":"DivTag"}'
                        tagName: div
                        ↓DivImage [ngx.components.UIDynamicElement-1645547241677]: 
                          beanData: '{"ionBean":"DivTag"}'
                          tagName: div
                          ↓Style [ngx.components.UIStyle-1645547241680]: 
                            styleContent: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    '	background-color:white;
                                    	height: 120px;
                                    	width: 160px;
                                    	border: 1px solid #dadce0;
                                    	border-radius: 4px;
                                    	margin-right:10px;
                                    	
                                    	img{
                                    		height: 100%;
                                    		width: 100%;
                                    		border-radius: 4px;
                                    	}
                                    	&:hover{
                                    		cursor:pointer;
                                    		border-color:var(--ion-color-primary);
                                    	}
                                    '
                          ↓FSImage [ngx.components.UIDynamicElement-1645547241683]: 
                            beanData: |
                              '{
                               "ionBean": "FSImage",
                               "docid": "source:{\"filter\":\"Iteration\",\"project\":\"C8Oforms\",\"input\":\"item1645547241671?.id\"}",
                               "attachment": "source:{\"filter\":\"Iteration\",\"project\":\"C8Oforms\",\"input\":\"\",\"model\":{\"data\":[{\"priority\":1645547241671}],\"path\":\"\",\"prefix\":\"\",\"suffix\":\".value.enabled\",\"custom\":\"\",\"useCustom\":false}}",
                               "requestable": "plain:C8Oforms.c8oforms_fs"
                              }'
                            isEnabled: false
                            selfClose: true
                            tagName: img
                          ↓Event [ngx.components.UIControlEvent-1645547241686]: 
                            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1645547241689]: 
                              beanData: '{"ionBean":"InvokeAction"}'
                              stack: C8Oforms.MobileApplication.Application.createFormFromTemplate
                              ↓id [ngx.components.UIControlVariable-1645547241692]: 
                                varValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                    - MobileSmartSourceType: source:{"filter":"Iteration","project":"C8Oforms","input":"item1645547241671?.id","model":{"data":[{"priority":1645547241671}],"path":"","prefix":"","suffix":"._id","custom":"","useCustom":false}}
                          ↓Image1 [ngx.components.UIDynamicElement-1694185296276]: 
                            beanData: '{"ionBean":"Image","url":"script:this.global.originIMG + ''\/convertigo\/fullsync\/c8oforms_fs\/''+ itemTemplate?._id + ''\/thumbnail''"}'
                            selfClose: true
                            tagName: img
                            ↓Style [ngx.components.UIStyle-1694185296279]: 
                              isEnabled: false
                              styleContent: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                    →: |
                                      '    width:100px;
                                          height:100px;
                                          -webkit-border-radius: 50%;
                                          border-radius: 50%;
                                      }
                                      
                                      .class1604597259456:hover {
                                      '
                        ↓ParagraphTitle [ngx.components.UIDynamicElement-1645547241695]: 
                          beanData: '{"ionBean":"Paragraph"}'
                          tagName: p
                          ↓Text [ngx.components.UIText-1645547241698]: 
                            textValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: source:{"filter":"Iteration","project":"C8Oforms","input":"item1645547241671?.value?.name","model":{"data":[{"priority":1645547241671}],"path":"","prefix":"","suffix":"?.name","custom":"","useCustom":false}}
                          ↓Style [ngx.components.UIStyle-1645547241701]: 
                            styleContent: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    'font-weight: bold;
                                    margin-left:4px;
                                    '
                  ↓Tag [ngx.components.UIElement-1656409076300]: 
                    identifier: ElseBlock_1656409076300
                    tagName: ng-template
                    ↓Directive [ngx.components.UIControlDirective-1656409980048]: 
                      directiveSource: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:[0, 1, 2, 3, 4, 5, 6 ,7, 8, 9]
                      ↓DivElement [ngx.components.UIDynamicElement-1656409426890]: 
                        beanData: '{"ionBean":"DivTag"}'
                        tagName: div
                        ↓DivImage [ngx.components.UIDynamicElement-1656409426893]: 
                          beanData: '{"ionBean":"DivTag"}'
                          tagName: div
                          ↓Style [ngx.components.UIStyle-1656409426896]: 
                            styleContent: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    '	background-color:white;
                                    	height: 120px;
                                    	width: 160px;
                                    	
                                    	border-radius: 4px;
                                    	margin-right:10px;
                                    	&:hover{
                                    		cursor: wait;
                                    	}
                                    	
                                    	
                                    '
                          ↓SkeletonText [ngx.components.UIDynamicElement-1656409445765]: 
                            beanData: |
                              '{
                               "ionBean": "SkeletonText",
                               "Animated": "plain:true",
                               "Width": "plain:100%"
                              }'
                            tagName: ion-skeleton-text
                            ↓Style [ngx.components.UIStyle-1656409644780]: 
                              styleContent: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                    →: |
                                      '/**
                                       * Custom properties (sometimes referred to as CSS variables or cascading variables)
                                       * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                                       * They are set using custom property notation, e.g.: --main-color: black;
                                       * and are accessed using the var() function, e.g.: color: var(--main-color);
                                       * You can find below your component''s properties you can customize within the page.
                                       * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                                       * For more informations see https://ionicframework.com/docs/theming.
                                      **/
                                      //--background	//Background of the skeleton text
                                      //--background-rgb	//Background of the skeleton text in rgb format
                                      //--border-radius	//Border radius of the skeleton text
                                      margin: 0 !important;
                                      '
                        ↓ParagraphTitle [ngx.components.UIDynamicElement-1656409426911]: 
                          beanData: '{"ionBean":"Paragraph"}'
                          tagName: p
                          ↓Style [ngx.components.UIStyle-1656409426917]: 
                            styleContent: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    'font-weight: bold;
                                    margin-left:4px;
                                    '
                          ↓SkeletonText [ngx.components.UIDynamicElement-1656409868076]: 
                            beanData: |
                              '{
                               "ionBean": "SkeletonText",
                               "Animated": "plain:true",
                               "Width": "plain:40%"
                              }'
                            tagName: ion-skeleton-text
              ↓Style [ngx.components.UIStyle-1645547166673]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '	border-bottom: 1px solid #cecece;
                        	//border-top: 1px solid #cecece;
                        	//margin-top: 5px;
                            background-color:#F1F3F4;
                            padding: 1em !important;
                            overflow-x: hidden;
                            
                        '
          ↓Divider [ngx.components.UIDynamicElement-1645547180010]: 
            beanData: '{"ionBean":"DivTag"}'
            isEnabled: false
            tagName: div
            ↓Style [ngx.components.UIStyle-1645547180013]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '	height: 4px;
                      	border-bottom: 1px solid #cecece;
                      '
            ↓Attr [ngx.components.UIAttribute-1645547180016]: 
              attrName: '*ngIf'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:this.local.published
          ↓DivResultString [ngx.components.UIDynamicElement-1645547180019]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓Style [ngx.components.UIStyle-1645547180022]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '  font-size: 15px;
                        font-weight: normal;
                        font-style: normal;
                        font-stretch: normal;
                        line-height: normal;
                        letter-spacing: normal;
                         color: #9b9b9b;
                        a {
                        font-size: 15px;
                        font-weight: normal;
                        font-style: normal;
                        font-stretch: normal;
                        line-height: normal;
                        letter-spacing: normal;
                         color: #9b9b9b;
                        }
                        p {
                        	display:inline-block;
                        }
                        display: flex; 
                          align-items: center;
                        justify-content: center;
                        
                        	ion-label{
                      		font-size: 15px;
                      	}
                      '
            ↓Directive4 [ngx.components.UIControlDirective-1645547180025]: 
              comment: if we are root without any search
              directiveName: If
              directiveSource: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.local.count != undefined && (this.query == undefined || this.query == '') && (this.local.searchTags?.length == undefined || this.local.searchTags?.length == 0) && (this.local.searchSubTags?.length == undefined || this.local.searchSubTags?.length ==0)  && (this.local.folder == undefined || this.local.folder == '')
              ↓Paragraph [ngx.components.UIDynamicElement-1645547180028]: 
                beanData: '{"ionBean":"Paragraph"}'
                isEnabled: false
                tagName: p
                ↓Text [ngx.components.UIText-1645547180031]: 
                  i18n: true
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this.local.count +'  ' + ('results' | translate)
              ↓GenericItem [ngx.components.UIDynamicElement-1645887457897]: 
                beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                tagName: ion-item
                ↓Label [ngx.components.UIDynamicElement-1645887457900]: 
                  beanData: '{"ionBean":"Label","IonColor":"plain:greyButton"}'
                  tagName: ion-label
                  ↓Text [ngx.components.UIText-1645887467092]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:this.local.count +'  ' + ('results' | translate)
            ↓Directive41 [ngx.components.UIControlDirective-1645547180034]: 
              comment: if we are in folder whithout any search
              directiveName: If
              directiveSource: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.local.count != undefined && (this.query == undefined || this.query == '') && (this.local.searchTags?.length == undefined || this.local.searchTags?.length == 0) && (this.local.searchSubTags?.length == undefined || this.local.searchSubTags?.length ==0)  && (this.local.folder != undefined && this.local.folder != '')
              ↓Paragraph [ngx.components.UIDynamicElement-1645547180037]: 
                beanData: '{"ionBean":"Paragraph"}'
                isEnabled: false
                tagName: p
                ↓Text [ngx.components.UIText-1645547180040]: 
                  i18n: true
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this.local.count +'  ' + ('results' | translate) +' '+ ('in_folder' | translate)
                ↓Badge [ngx.components.UIDynamicElement-1645547180043]: 
                  beanData: '{"ionBean":"Badge"}'
                  tagName: ion-badge
                  ↓Text [ngx.components.UIText-1645547180046]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:this.local.folder
                  ↓Style [ngx.components.UIStyle-1645547180049]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            'position:relative;
                            margin-left: 5px;
                            '
                  ↓Icon [ngx.components.UIDynamicElement-1645547180052]: 
                    beanData: '{"ionBean":"Icon","IconName":"plain:close"}'
                    tagName: ion-icon
                    ↓Style [ngx.components.UIStyle-1645547180055]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '
                              }
                              .class1605213441302:hover {
                              	cursor:pointer;
                              '
                    ↓Event [ngx.components.UIControlEvent-1645547180058]: 
                      ↓setNoFolder [ngx.components.UICustomAction-1645547180061]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '			page.local.folder = ""; 
                                	        let url : string = window.location.href;
                                			let splitSlash = window.location.href.split("/");
                                			let selectorPosition = splitSlash.indexOf("selector")
                                			splitSlash[selectorPosition + 3] = ":folder"
                                			window.history.replaceState("", "", splitSlash.join("/"));
                                		resolve();
                                '
                        ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1645547180064]: 
                          beanData: '{"ionBean":"InvokeAction"}'
                          stack: C8Oforms.MobileApplication.Application.callViewLiveAndFillFormList
              ↓GenericItem [ngx.components.UIDynamicElement-1645886794342]: 
                beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                tagName: ion-item
                ↓Label [ngx.components.UIDynamicElement-1645886812856]: 
                  beanData: '{"ionBean":"Label","IonColor":"plain:greyButton"}'
                  tagName: ion-label
                  ↓Text [ngx.components.UIText-1645886817295]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:this.local.count +'  ' + ('results' | translate) +' '+ ('in_folder' | translate)
                ↓Badge [ngx.components.UIDynamicElement-1645886820640]: 
                  beanData: '{"ionBean":"Badge"}'
                  tagName: ion-badge
                  ↓Text [ngx.components.UIText-1645886820643]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:this.local.folder
                  ↓Style [ngx.components.UIStyle-1645886820646]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            'position:relative;
                            margin-left: 5px;
                            '
                  ↓Icon [ngx.components.UIDynamicElement-1645886820649]: 
                    beanData: '{"ionBean":"Icon","IconName":"plain:close"}'
                    tagName: ion-icon
                    ↓Style [ngx.components.UIStyle-1645886820652]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              	cursor:pointer;	
                              
                    ↓Event [ngx.components.UIControlEvent-1645886820655]: 
                      ↓setNoFolder [ngx.components.UICustomAction-1645886820658]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '			page.local.folder = ""; 
                                	        let url : string = window.location.href;
                                			let splitSlash = window.location.href.split("/");
                                			let selectorPosition = splitSlash.indexOf("selector")
                                			splitSlash[selectorPosition + 3] = ":folder"
                                			window.history.replaceState("", "", splitSlash.join("/"));
                                		resolve();
                                '
                        ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1645886820661]: 
                          beanData: '{"ionBean":"InvokeAction"}'
                          stack: C8Oforms.MobileApplication.Application.callViewLiveAndFillFormList
            ↓Directive42 [ngx.components.UIControlDirective-1645547180067]: 
              comment: if we are root with search by name
              directiveName: If
              directiveSource: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.local.count != undefined && (this.query != undefined && this.query != '') && (this.local.searchTags?.length == undefined || this.local.searchTags?.length == 0) && (this.local.searchSubTags?.length == undefined || this.local.searchSubTags?.length ==0) && (this.local.folder == undefined || this.local.folder == '')
              ↓Paragraph [ngx.components.UIDynamicElement-1645547180070]: 
                beanData: '{"ionBean":"Paragraph"}'
                isEnabled: false
                tagName: p
                ↓Text [ngx.components.UIText-1645547180073]: 
                  i18n: true
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this.local.count + '  ' +( 'search_term_results' | translate)
                ↓Badge [ngx.components.UIDynamicElement-1645547180076]: 
                  beanData: '{"ionBean":"Badge"}'
                  tagName: ion-badge
                  ↓Text [ngx.components.UIText-1645547180079]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:this.query
                  ↓Style [ngx.components.UIStyle-1645547180082]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            position:relative;
                            
                  ↓Icon [ngx.components.UIDynamicElement-1645547180085]: 
                    beanData: '{"ionBean":"Icon","IconName":"plain:close"}'
                    tagName: ion-icon
                    ↓Style [ngx.components.UIStyle-1645547180088]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '
                              }
                              .class1605201666444:hover {
                              	cursor:pointer;
                              '
                    ↓Event [ngx.components.UIControlEvent-1645547180091]: 
                      ↓setQueryempty [ngx.components.UICustomAction-1645547180094]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                		page["query"] = "";
                                		resolve();
                                
                        ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1645547180097]: 
                          beanData: '{"ionBean":"InvokeAction"}'
                          stack: C8Oforms.MobileApplication.Application.callViewLiveAndFillFormList
              ↓GenericItem [ngx.components.UIDynamicElement-1645887476211]: 
                beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                tagName: ion-item
                ↓Label [ngx.components.UIDynamicElement-1645887476214]: 
                  beanData: '{"ionBean":"Label","IonColor":"plain:greyButton"}'
                  tagName: ion-label
                  ↓Text [ngx.components.UIText-1645887490725]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:this.local.count + '  ' +( 'search_term_results' | translate)
                ↓Badge [ngx.components.UIDynamicElement-1645887518298]: 
                  beanData: '{"ionBean":"Badge"}'
                  tagName: ion-badge
                  ↓Text [ngx.components.UIText-1645887518301]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:this.query
                  ↓Style [ngx.components.UIStyle-1645887518304]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            'position:relative;
                            margin-left: 5px;
                            '
                  ↓Icon [ngx.components.UIDynamicElement-1645887518307]: 
                    beanData: '{"ionBean":"Icon","IconName":"plain:close"}'
                    tagName: ion-icon
                    ↓Style [ngx.components.UIStyle-1645887518310]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '
                              }
                              .class1605201666444:hover {
                              	cursor:pointer;
                              '
                    ↓Event [ngx.components.UIControlEvent-1645887518313]: 
                      ↓setQueryempty [ngx.components.UICustomAction-1645887518316]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                		page["query"] = "";
                                		resolve();
                                
                        ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1645887518319]: 
                          beanData: '{"ionBean":"InvokeAction"}'
                          stack: C8Oforms.MobileApplication.Application.callViewLiveAndFillFormList
            ↓Directive421 [ngx.components.UIControlDirective-1645547180100]: 
              comment: if we are in folder with search by name
              directiveName: If
              directiveSource: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.local.count != undefined && (this.query != undefined && this.query != '') && (this.local.searchTags?.length != undefined && this.local.searchTags?.length > 0) && (this.local.searchSubTags?.length == undefined || this.local.searchSubTags?.length ==0)
              ↓Paragraph [ngx.components.UIDynamicElement-1645547180103]: 
                beanData: '{"ionBean":"Paragraph"}'
                tagName: p
                ↓Text [ngx.components.UIText-1645547180106]: 
                  i18n: true
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this.local.count + '  ' +( 'search_term_results' | translate)
                ↓Badge [ngx.components.UIDynamicElement-1645547180109]: 
                  beanData: '{"ionBean":"Badge"}'
                  tagName: ion-badge
                  ↓Text [ngx.components.UIText-1645547180112]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:this.query
                  ↓Style [ngx.components.UIStyle-1645547180115]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            position:relative;
                            
                  ↓Icon [ngx.components.UIDynamicElement-1645547180118]: 
                    beanData: '{"ionBean":"Icon","IconName":"plain:close"}'
                    tagName: ion-icon
                    ↓Style [ngx.components.UIStyle-1645547180121]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '
                              }
                              .class1605201666444:hover {
                              	cursor:pointer;
                              '
                    ↓Event [ngx.components.UIControlEvent-1645547180124]: 
                      ↓setQueryempty [ngx.components.UICustomAction-1645547180127]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                		    page["query"] = "";
                                		    //still in research mode
                                	        if(page.local.searchTags.length > 1 || page.local.searchSubTags.length > 0 || page["query"] != ""){
                                	            resolve(true);    
                                	        }
                                	        else{
                                	            // in view mode
                                	            if(page.local.searchTags.length == 1){
                                	                this.local.folder = page.local.searchTags[0];
                                	            }
                                	            else{
                                	                this.local.folder = "";
                                	            }
                                	            resolve(false);
                                	        }
                                		resolve();
                                
                        ↓IfElse [ngx.components.UIDynamicIf-1645547180130]: 
                          beanData: '{"ionBean":"IfElseAction"}'
                          ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1645547180133]: 
                            beanData: '{"ionBean":"InvokeAction"}'
                            stack: C8Oforms.MobileApplication.Application.searchForm
                          ↓Else_Handler [ngx.components.UIActionElseEvent-1645547180136]: 
                            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1645547180139]: 
                              beanData: '{"ionBean":"InvokeAction"}'
                              stack: C8Oforms.MobileApplication.Application.callViewLiveAndFillFormList
                ↓Text1 [ngx.components.UIText-1645547180142]: 
                  i18n: true
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:'  ' + ('in_folder' | translate)
                ↓Directive [ngx.components.UIControlDirective-1645547180145]: 
                  directiveIndexName: i90
                  directiveItemName: item90
                  directiveSource: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this.local.searchTags
                  ↓Badge1 [ngx.components.UIDynamicElement-1645547180148]: 
                    beanData: '{"ionBean":"Badge"}'
                    tagName: ion-badge
                    ↓Text [ngx.components.UIText-1645547180151]: 
                      i18n: true
                      textValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:item90
                    ↓Style [ngx.components.UIStyle-1645547180154]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              position:relative;
                              
                    ↓Icon [ngx.components.UIDynamicElement-1645547180157]: 
                      beanData: '{"ionBean":"Icon","IconName":"plain:close"}'
                      tagName: ion-icon
                      ↓Style [ngx.components.UIStyle-1645547180160]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '
                                }
                                .class1605213441302:hover {
                                	cursor:pointer;
                                '
                      ↓Event [ngx.components.UIControlEvent-1645547180163]: 
                        ↓CustomAction [ngx.components.UICustomAction-1645547180166]: 
                          actionValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  		page.local.searchTags.splice(props.stack.root.scope.i90, 1);
                                  
                                  		//still in research mode
                                  		if(page.local.searchTags.length > 1){
                                  		    resolve(true);    
                                  		}
                                  		else{
                                  		    //still in research mode
                                  		    if(page["query"] != ""){
                                  		        resolve(true);   
                                  		    }
                                  		    // in view mode
                                  		    else{
                                  		        if(page.local.searchTags.length == 1){
                                  		            this.local.folder = page.local.searchTags[0];
                                  		        }
                                  		        else{
                                  		            this.local.folder = "";
                                  		        }
                                  		        resolve(false);
                                  		    }
                                  		}
                                  		
                                  
                          ↓IfElse [ngx.components.UIDynamicIf-1645547180169]: 
                            beanData: '{"ionBean":"IfElseAction"}'
                            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1645547180172]: 
                              beanData: '{"ionBean":"InvokeAction"}'
                              stack: C8Oforms.MobileApplication.Application.searchForm
                            ↓Else_Handler [ngx.components.UIActionElseEvent-1645547180175]: 
                              ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1645547180178]: 
                                beanData: '{"ionBean":"InvokeAction"}'
                                stack: C8Oforms.MobileApplication.Application.callViewLiveAndFillFormList
            ↓Directive4211 [ngx.components.UIControlDirective-1645547180181]: 
              comment: if we are in searching by folders
              directiveName: If
              directiveSource: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.local.count != undefined && (this.query == undefined || this.query == '') && (this.local.searchTags?.length != undefined && this.local.searchTags?.length > 0) && (this.local.searchSubTags?.length == undefined || this.local.searchSubTags?.length ==0)
              ↓Paragraph [ngx.components.UIDynamicElement-1645547180184]: 
                beanData: '{"ionBean":"Paragraph"}'
                tagName: p
                ↓Text [ngx.components.UIText-1645547180187]: 
                  i18n: true
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this.local.count +'  ' + ('results' | translate) +' '+ ('in_folder' | translate)
                ↓Directive [ngx.components.UIControlDirective-1645547180190]: 
                  directiveIndexName: i90
                  directiveItemName: item90
                  directiveSource: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this.local.searchTags
                  ↓Badge1 [ngx.components.UIDynamicElement-1645547180193]: 
                    beanData: '{"ionBean":"Badge"}'
                    tagName: ion-badge
                    ↓Text [ngx.components.UIText-1645547180196]: 
                      i18n: true
                      textValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:item90
                    ↓Style [ngx.components.UIStyle-1645547180199]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              position:relative;
                              
                    ↓Icon [ngx.components.UIDynamicElement-1645547180202]: 
                      beanData: '{"ionBean":"Icon","IconName":"plain:close"}'
                      tagName: ion-icon
                      ↓Style [ngx.components.UIStyle-1645547180205]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '
                                }
                                .class1605213441302:hover {
                                	cursor:pointer;
                                '
                      ↓Event [ngx.components.UIControlEvent-1645547180208]: 
                        ↓CustomAction [ngx.components.UICustomAction-1645547180211]: 
                          actionValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  		page.local.searchTags.splice(props.stack.root.scope.i90, 1);
                                  
                                  		//still in research mode
                                          if(page.local.searchTags.length > 1 || page.local.searchSubTags.length > 0 || (page["query"] != "" && page["query"] != undefined)){
                                              resolve(true);    
                                          }
                                          else{
                                              // in view mode
                                              if(page.local.searchTags.length == 1){
                                                  this.local.folder = page.local.searchTags[0];
                                              }
                                              else{
                                                  this.local.folder = "";
                                              }
                                              resolve(false);
                                          }
                                  		
                                  
                          ↓IfElse [ngx.components.UIDynamicIf-1645547180214]: 
                            beanData: '{"ionBean":"IfElseAction"}'
                            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1645547180217]: 
                              beanData: '{"ionBean":"InvokeAction"}'
                              stack: C8Oforms.MobileApplication.Application.searchForm
                            ↓Else_Handler [ngx.components.UIActionElseEvent-1645547180220]: 
                              ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1645547180223]: 
                                beanData: '{"ionBean":"InvokeAction"}'
                                stack: C8Oforms.MobileApplication.Application.callViewLiveAndFillFormList
            ↓Directive42111 [ngx.components.UIControlDirective-1645547180226]: 
              comment: if we are in searching by subTags
              directiveName: If
              directiveSource: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.local.count != undefined && (this.query == undefined || this.query == '') && (this.local.searchTags?.length == undefined || this.local.searchTags?.length == 0) && (this.local.searchSubTags?.length != undefined && this.local.searchSubTags?.length > 0)
              ↓Paragraph [ngx.components.UIDynamicElement-1645547180229]: 
                beanData: '{"ionBean":"Paragraph"}'
                tagName: p
                ↓Text [ngx.components.UIText-1645547180232]: 
                  i18n: true
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this.local.count +'  ' + ('results' | translate) +' '+ ('for_tag' | translate)
                ↓Directive [ngx.components.UIControlDirective-1645547180235]: 
                  directiveIndexName: i91
                  directiveItemName: item91
                  directiveSource: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this.local.searchSubTags
                  ↓Badge1 [ngx.components.UIDynamicElement-1645547180238]: 
                    beanData: '{"ionBean":"Badge"}'
                    tagName: ion-badge
                    ↓Text [ngx.components.UIText-1645547180241]: 
                      i18n: true
                      textValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:item91
                    ↓Style [ngx.components.UIStyle-1645547180244]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              position:relative;
                              
                    ↓Icon [ngx.components.UIDynamicElement-1645547180247]: 
                      beanData: '{"ionBean":"Icon","IconName":"plain:close"}'
                      tagName: ion-icon
                      ↓Style [ngx.components.UIStyle-1645547180250]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '
                                }
                                .class1605213441302:hover {
                                	cursor:pointer;
                                '
                      ↓Event [ngx.components.UIControlEvent-1645547180253]: 
                        ↓CustomAction [ngx.components.UICustomAction-1645547180256]: 
                          actionValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  		page.local.searchSubTags.splice(props.stack.root.scope.i91, 1);
                                  
                                  		//still in research mode
                                  		if(page.local.searchTags.length > 1 || page.local.searchSubTags.length > 0 || page["query"] != ""){
                                  		    resolve(true);    
                                  		}
                                  		else{
                                              // in view mode
                                              if(page.local.searchTags.length == 1){
                                                  this.local.folder = page.local.searchTags[0];
                                              }
                                              else{
                                                  this.local.folder = "";
                                              }
                                              resolve(false);
                                  		}
                                  		
                                  
                          ↓IfElse [ngx.components.UIDynamicIf-1645547180259]: 
                            beanData: '{"ionBean":"IfElseAction"}'
                            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1645547180262]: 
                              beanData: '{"ionBean":"InvokeAction"}'
                              stack: C8Oforms.MobileApplication.Application.searchForm
                            ↓Else_Handler [ngx.components.UIActionElseEvent-1645547180265]: 
                              ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1645547180268]: 
                                beanData: '{"ionBean":"InvokeAction"}'
                                stack: C8Oforms.MobileApplication.Application.callViewLiveAndFillFormList
            ↓Directive421111 [ngx.components.UIControlDirective-1645547180271]: 
              comment: if we are in searching by folders and sub
              directiveName: If
              directiveSource: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.local.count != undefined && (this.query == undefined || this.query == '') && (this.local.searchTags?.length != undefined && this.local.searchTags?.length > 0) && (this.local.searchSubTags?.length != undefined && this.local.searchSubTags?.length > 0)
              ↓Paragraph1 [ngx.components.UIDynamicElement-1645547180274]: 
                beanData: '{"ionBean":"Paragraph"}'
                tagName: p
                ↓Text [ngx.components.UIText-1645547180277]: 
                  i18n: true
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this.local.count +'  ' + ('results' | translate) +' '+ ('in_folder' | translate)
                ↓Directive [ngx.components.UIControlDirective-1645547180280]: 
                  directiveIndexName: i90
                  directiveItemName: item90
                  directiveSource: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this.local.searchTags
                  ↓Badge1 [ngx.components.UIDynamicElement-1645547180283]: 
                    beanData: '{"ionBean":"Badge"}'
                    tagName: ion-badge
                    ↓Text [ngx.components.UIText-1645547180286]: 
                      i18n: true
                      textValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:item90
                    ↓Style [ngx.components.UIStyle-1645547180289]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              position:relative;
                              
                    ↓Icon [ngx.components.UIDynamicElement-1645547180292]: 
                      beanData: '{"ionBean":"Icon","IconName":"plain:close"}'
                      tagName: ion-icon
                      ↓Style [ngx.components.UIStyle-1645547180295]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '
                                }
                                .class1605213441302:hover {
                                	cursor:pointer;
                                '
                      ↓Event [ngx.components.UIControlEvent-1645547180298]: 
                        ↓CustomAction [ngx.components.UICustomAction-1645547180301]: 
                          actionValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  		page.local.searchTags.splice(props.stack.root.scope.i90, 1);
                                  
                                  		//still in research mode
                                          if(page.local.searchTags.length > 1 || page.local.searchSubTags.length > 0 || page["query"] != ""){
                                              resolve(true);    
                                          }
                                          else{
                                              // in view mode
                                              if(page.local.searchTags.length == 1){
                                                  this.local.folder = page.local.searchTags[0];
                                              }
                                              else{
                                                  this.local.folder = "";
                                              }
                                              resolve(false);
                                          }
                                  		
                                  
                          ↓IfElse [ngx.components.UIDynamicIf-1645547180304]: 
                            beanData: '{"ionBean":"IfElseAction"}'
                            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1645547180307]: 
                              beanData: '{"ionBean":"InvokeAction"}'
                              stack: C8Oforms.MobileApplication.Application.searchForm
                            ↓Else_Handler [ngx.components.UIActionElseEvent-1645547180310]: 
                              ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1645547180313]: 
                                beanData: '{"ionBean":"InvokeAction"}'
                                stack: C8Oforms.MobileApplication.Application.callViewLiveAndFillFormList
                ↓Text1 [ngx.components.UIText-1645547180316]: 
                  i18n: true
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:('and' | translate) +' '+ ('for_tag' | translate)
                ↓Directive1 [ngx.components.UIControlDirective-1645547180319]: 
                  directiveIndexName: i91
                  directiveItemName: item91
                  directiveSource: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this.local.searchSubTags
                  ↓Badge1 [ngx.components.UIDynamicElement-1645547180322]: 
                    beanData: '{"ionBean":"Badge"}'
                    tagName: ion-badge
                    ↓Text [ngx.components.UIText-1645547180325]: 
                      i18n: true
                      textValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:item91
                    ↓Style [ngx.components.UIStyle-1645547180328]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              position:relative;
                              
                    ↓Icon [ngx.components.UIDynamicElement-1645547180331]: 
                      beanData: '{"ionBean":"Icon","IconName":"plain:close"}'
                      tagName: ion-icon
                      ↓Style [ngx.components.UIStyle-1645547180334]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '
                                }
                                .class1605213441302:hover {
                                	cursor:pointer;
                                '
                      ↓Event [ngx.components.UIControlEvent-1645547180337]: 
                        ↓CustomAction [ngx.components.UICustomAction-1645547180340]: 
                          actionValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  		page.local.searchSubTags.splice(props.stack.root.scope.i91, 1);
                                  
                                  		//still in research mode
                                  		if(page.local.searchTags.length > 1 || page.local.searchSubTags.length > 0 || page["query"] != ""){
                                  		    resolve(true);    
                                  		}
                                  		else{
                                              // in view mode
                                              if(page.local.searchTags.length == 1){
                                                  this.local.folder = page.local.searchTags[0];
                                              }
                                              else{
                                                  this.local.folder = "";
                                              }
                                              resolve(false);
                                  		}
                                  		
                                  
                          ↓IfElse [ngx.components.UIDynamicIf-1645547180343]: 
                            beanData: '{"ionBean":"IfElseAction"}'
                            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1645547180346]: 
                              beanData: '{"ionBean":"InvokeAction"}'
                              stack: C8Oforms.MobileApplication.Application.searchForm
                            ↓Else_Handler [ngx.components.UIActionElseEvent-1645547180349]: 
                              ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1645547180352]: 
                                beanData: '{"ionBean":"InvokeAction"}'
                                stack: C8Oforms.MobileApplication.Application.callViewLiveAndFillFormList
            ↓Directive4212 [ngx.components.UIControlDirective-1645547180355]: 
              comment: if we are in folder with search by name
              directiveName: If
              directiveSource: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.local.count != undefined && (this.query != undefined && this.query != '') && (this.local.searchTags?.length == undefined || this.local.searchTags?.length == 0) && (this.local.searchSubTags?.length != undefined && this.local.searchSubTags?.length > 0)
              ↓Paragraph [ngx.components.UIDynamicElement-1645547180358]: 
                beanData: '{"ionBean":"Paragraph"}'
                tagName: p
                ↓Text [ngx.components.UIText-1645547180361]: 
                  i18n: true
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this.local.count + '  ' +( 'search_term_results' | translate)
                ↓Badge [ngx.components.UIDynamicElement-1645547180364]: 
                  beanData: '{"ionBean":"Badge"}'
                  tagName: ion-badge
                  ↓Text [ngx.components.UIText-1645547180367]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:this.query
                  ↓Style [ngx.components.UIStyle-1645547180370]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            position:relative;
                            
                  ↓Icon [ngx.components.UIDynamicElement-1645547180373]: 
                    beanData: '{"ionBean":"Icon","IconName":"plain:close"}'
                    tagName: ion-icon
                    ↓Style [ngx.components.UIStyle-1645547180376]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '
                              }
                              .class1605201666444:hover {
                              	cursor:pointer;
                              '
                    ↓Event [ngx.components.UIControlEvent-1645547180379]: 
                      ↓setQueryempty [ngx.components.UICustomAction-1645547180382]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                		    page["query"] = "";
                                		    //still in research mode
                                	        if(page.local.searchTags.length > 1 || page.local.searchSubTags.length > 0 || page["query"] != ""){
                                	            resolve(true);    
                                	        }
                                	        else{
                                	            // in view mode
                                	            if(page.local.searchTags.length == 1){
                                	                this.local.folder = page.local.searchTags[0];
                                	            }
                                	            else{
                                	                this.local.folder = "";
                                	            }
                                	            resolve(false);
                                	        }
                                		resolve();
                                
                        ↓IfElse [ngx.components.UIDynamicIf-1645547180385]: 
                          beanData: '{"ionBean":"IfElseAction"}'
                          ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1645547180388]: 
                            beanData: '{"ionBean":"InvokeAction"}'
                            stack: C8Oforms.MobileApplication.Application.searchForm
                          ↓Else_Handler [ngx.components.UIActionElseEvent-1645547180391]: 
                            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1645547180394]: 
                              beanData: '{"ionBean":"InvokeAction"}'
                              stack: C8Oforms.MobileApplication.Application.callViewLiveAndFillFormList
                ↓Text1 [ngx.components.UIText-1645547180397]: 
                  i18n: true
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:'  ' + ('for_tag' | translate)
                ↓Directive1 [ngx.components.UIControlDirective-1645547180400]: 
                  directiveIndexName: i91
                  directiveItemName: item91
                  directiveSource: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this.local.searchSubTags
                  ↓Badge1 [ngx.components.UIDynamicElement-1645547180403]: 
                    beanData: '{"ionBean":"Badge"}'
                    tagName: ion-badge
                    ↓Text [ngx.components.UIText-1645547180406]: 
                      i18n: true
                      textValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:item91
                    ↓Style [ngx.components.UIStyle-1645547180409]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              position:relative;
                              
                    ↓Icon [ngx.components.UIDynamicElement-1645547180412]: 
                      beanData: '{"ionBean":"Icon","IconName":"plain:close"}'
                      tagName: ion-icon
                      ↓Style [ngx.components.UIStyle-1645547180415]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '
                                }
                                .class1605213441302:hover {
                                	cursor:pointer;
                                '
                      ↓Event [ngx.components.UIControlEvent-1645547180418]: 
                        ↓CustomAction [ngx.components.UICustomAction-1645547180421]: 
                          actionValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  		page.local.searchSubTags.splice(props.stack.root.scope.i91, 1);
                                  
                                  		//still in research mode
                                  		if(page.local.searchTags.length > 1 || page.local.searchSubTags.length > 0 || page["query"] != ""){
                                  		    resolve(true);    
                                  		}
                                  		else{
                                              // in view mode
                                              if(page.local.searchTags.length == 1){
                                                  this.local.folder = page.local.searchTags[0];
                                              }
                                              else{
                                                  this.local.folder = "";
                                              }
                                              resolve(false);
                                  		}
                                  		
                                  
                          ↓IfElse [ngx.components.UIDynamicIf-1645547180424]: 
                            beanData: '{"ionBean":"IfElseAction"}'
                            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1645547180427]: 
                              beanData: '{"ionBean":"InvokeAction"}'
                              stack: C8Oforms.MobileApplication.Application.searchForm
                            ↓Else_Handler [ngx.components.UIActionElseEvent-1645547180430]: 
                              ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1645547180433]: 
                                beanData: '{"ionBean":"InvokeAction"}'
                                stack: C8Oforms.MobileApplication.Application.callViewLiveAndFillFormList
            ↓Directive4211111 [ngx.components.UIControlDirective-1645547180436]: 
              comment: if we are in searching by folders and sub
              directiveName: If
              directiveSource: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.local.count != undefined && (this.query != undefined && this.query != '') && (this.local.searchTags?.length != undefined && this.local.searchTags?.length > 0) && (this.local.searchSubTags?.length != undefined && this.local.searchSubTags?.length > 0)
              ↓Paragraph1 [ngx.components.UIDynamicElement-1645547180439]: 
                beanData: '{"ionBean":"Paragraph"}'
                tagName: p
                ↓Text2 [ngx.components.UIText-1645547180442]: 
                  i18n: true
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this.local.count + '  ' +( 'search_term_results' | translate)
                ↓Badge [ngx.components.UIDynamicElement-1645547180445]: 
                  beanData: '{"ionBean":"Badge"}'
                  tagName: ion-badge
                  ↓Text [ngx.components.UIText-1645547180448]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:this.query
                  ↓Style [ngx.components.UIStyle-1645547180451]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            position:relative;
                            
                  ↓Icon [ngx.components.UIDynamicElement-1645547180454]: 
                    beanData: '{"ionBean":"Icon","IconName":"plain:close"}'
                    tagName: ion-icon
                    ↓Style [ngx.components.UIStyle-1645547180457]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '
                              }
                              .class1605201666444:hover {
                              	cursor:pointer;
                              '
                    ↓Event [ngx.components.UIControlEvent-1645547180460]: 
                      ↓setQueryempty [ngx.components.UICustomAction-1645547180463]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                		    page["query"] = "";
                                		    //still in research mode
                                	        if(page.local.searchTags.length > 1 || page.local.searchSubTags.length > 0 || page["query"] != ""){
                                	            resolve(true);    
                                	        }
                                	        else{
                                	            // in view mode
                                	            if(page.local.searchTags.length == 1){
                                	                this.local.folder = page.local.searchTags[0];
                                	            }
                                	            else{
                                	                this.local.folder = "";
                                	            }
                                	            resolve(false);
                                	        }
                                		resolve();
                                
                        ↓IfElse [ngx.components.UIDynamicIf-1645547180466]: 
                          beanData: '{"ionBean":"IfElseAction"}'
                          ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1645547180469]: 
                            beanData: '{"ionBean":"InvokeAction"}'
                            stack: C8Oforms.MobileApplication.Application.searchForm
                          ↓Else_Handler [ngx.components.UIActionElseEvent-1645547180472]: 
                            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1645547180475]: 
                              beanData: '{"ionBean":"InvokeAction"}'
                              stack: C8Oforms.MobileApplication.Application.callViewLiveAndFillFormList
                ↓Text [ngx.components.UIText-1645547180478]: 
                  i18n: true
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:' '+ ('in_folder' | translate)
                ↓Directive [ngx.components.UIControlDirective-1645547180481]: 
                  directiveIndexName: i90
                  directiveItemName: item90
                  directiveSource: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this.local.searchTags
                  ↓Badge1 [ngx.components.UIDynamicElement-1645547180484]: 
                    beanData: '{"ionBean":"Badge"}'
                    tagName: ion-badge
                    ↓Text [ngx.components.UIText-1645547180487]: 
                      i18n: true
                      textValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:item90
                    ↓Style [ngx.components.UIStyle-1645547180490]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              position:relative;
                              
                    ↓Icon [ngx.components.UIDynamicElement-1645547180493]: 
                      beanData: '{"ionBean":"Icon","IconName":"plain:close"}'
                      tagName: ion-icon
                      ↓Style [ngx.components.UIStyle-1645547180496]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '
                                }
                                .class1605213441302:hover {
                                	cursor:pointer;
                                '
                      ↓Event [ngx.components.UIControlEvent-1645547180499]: 
                        ↓CustomAction [ngx.components.UICustomAction-1645547180502]: 
                          actionValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  		page.local.searchTags.splice(props.stack.root.scope.i90, 1);
                                  
                                  		//still in research mode
                                          if(page.local.searchTags.length > 1 || page.local.searchSubTags.length > 0 || page["query"] != ""){
                                              resolve(true);    
                                          }
                                          else{
                                              // in view mode
                                              if(page.local.searchTags.length == 1){
                                                  this.local.folder = page.local.searchTags[0];
                                              }
                                              else{
                                                  this.local.folder = "";
                                              }
                                              resolve(false);
                                          }
                                  		
                                  
                          ↓IfElse [ngx.components.UIDynamicIf-1645547180505]: 
                            beanData: '{"ionBean":"IfElseAction"}'
                            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1645547180508]: 
                              beanData: '{"ionBean":"InvokeAction"}'
                              stack: C8Oforms.MobileApplication.Application.searchForm
                            ↓Else_Handler [ngx.components.UIActionElseEvent-1645547180511]: 
                              ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1645547180514]: 
                                beanData: '{"ionBean":"InvokeAction"}'
                                stack: C8Oforms.MobileApplication.Application.callViewLiveAndFillFormList
                ↓Text1 [ngx.components.UIText-1645547180517]: 
                  i18n: true
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:('and' | translate) +' '+ ('for_tag' | translate)
                ↓Directive1 [ngx.components.UIControlDirective-1645547180520]: 
                  directiveIndexName: i91
                  directiveItemName: item91
                  directiveSource: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this.local.searchSubTags
                  ↓Badge1 [ngx.components.UIDynamicElement-1645547180523]: 
                    beanData: '{"ionBean":"Badge"}'
                    tagName: ion-badge
                    ↓Text [ngx.components.UIText-1645547180526]: 
                      i18n: true
                      textValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:item91
                    ↓Style [ngx.components.UIStyle-1645547180529]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              position:relative;
                              
                    ↓Icon [ngx.components.UIDynamicElement-1645547180532]: 
                      beanData: '{"ionBean":"Icon","IconName":"plain:close"}'
                      tagName: ion-icon
                      ↓Style [ngx.components.UIStyle-1645547180535]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '
                                }
                                .class1605213441302:hover {
                                	cursor:pointer;
                                '
                      ↓Event [ngx.components.UIControlEvent-1645547180538]: 
                        ↓CustomAction [ngx.components.UICustomAction-1645547180541]: 
                          actionValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  		page.local.searchSubTags.splice(props.stack.root.scope.i91, 1);
                                  
                                  		//still in research mode
                                  		if(page.local.searchTags.length > 1 || page.local.searchSubTags.length > 0 || page["query"] != ""){
                                  		    resolve(true);    
                                  		}
                                  		else{
                                              // in view mode
                                              if(page.local.searchTags.length == 1){
                                                  this.local.folder = page.local.searchTags[0];
                                              }
                                              else{
                                                  this.local.folder = "";
                                              }
                                              resolve(false);
                                  		}
                                  		
                                  
                          ↓IfElse [ngx.components.UIDynamicIf-1645547180544]: 
                            beanData: '{"ionBean":"IfElseAction"}'
                            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1645547180547]: 
                              beanData: '{"ionBean":"InvokeAction"}'
                              stack: C8Oforms.MobileApplication.Application.searchForm
                            ↓Else_Handler [ngx.components.UIActionElseEvent-1645547180550]: 
                              ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1645547180553]: 
                                beanData: '{"ionBean":"InvokeAction"}'
                                stack: C8Oforms.MobileApplication.Application.callViewLiveAndFillFormList
            ↓Div [ngx.components.UIDynamicElement-1645547180556]: 
              beanData: '{"ionBean":"DivTag"}'
              tagName: div
              ↓Style [ngx.components.UIStyle-1645547180583]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '	display: inline-block;
                        	line-height: normal;
                        	margin-left:auto; margin-right:0;
                        '
              ↓ButtonSet [ngx.components.UIDynamicElement-1645548112524]: 
                beanData: '{"ionBean":"ButtonSet"}'
                tagName: ion-buttons
                ↓ButtonCreateFolder [ngx.components.UIDynamicElement-1645547180559]: 
                  beanData: '{"ionBean":"Button","IonFill":"plain:clear"}'
                  tagName: ion-button
                  ↓Event [ngx.components.UIControlEvent-1645547180562]: 
                    ↓CustomAction [ngx.components.UICustomAction-1645547180565]: 
                      actionValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '		const alertCtrl: AlertController = page.getInstance(AlertController);
                              		const translate: TranslateService = page.getInstance(TranslateService);
                              		const prompt = alertCtrl.create({
                              		      header: page["translate"].instant("creating_fodler"),
                              		      message: page["translate"].instant("enter_name_fold"),
                              		      cssClass: ''c8o-alert-create-form'',
                              		      inputs: [
                              		        {
                              		          name: ''title'',
                              		          placeholder: page["translate"].instant("label_title")
                              		        },
                              		      ],
                              		      buttons: [
                              		        {
                              		          text: page["translate"].instant("Cancel"),
                              		          handler: (data) => {
                              		            resolve(false);
                              		          }
                              		        },
                              		        {
                              		          text: page["translate"].instant("Save"),
                              		          handler: (data) => {
                              						let title = data["title"];
                              						page.c8o.callJsonObject("fs://c8oforms_fs.post",{
                              								"_id":"folder_"+title,
                              								tag: [title],
                              								c8o_view_type_drafts_folder: !page.local.published,
                              								c8o_view_type_published_folder: page.local.published
                              							})
                              							.then((res, params)=>{
                              								console.log("there res", {res:res, params: params});
                              								resolve({error:false})
                              								return null;
                              							})
                              							.fail((err)=>{
                              								resolve({error: true});
                              								console.log("there err", err);
                              							})
                              		          }
                              		        }
                              		      ]
                              		    }).then((res: any)=>{
                              			res.present();
                              			});
                              		
                              '
                  ↓Icon [ngx.components.UIDynamicElement-1645547180568]: 
                    beanData: '{"ionBean":"Icon","IconName":"plain:folder-outline"}'
                    tagName: ion-icon
                    ↓Style [ngx.components.UIStyle-1645547180571]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '	font-size: 2rem;
                              	vertical-align:middle;
                              '
                  ↓Attr [ngx.components.UIAttribute-1645547180574]: 
                    attrName: tooltip
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'create_folder' | translate
                  ↓Attr1 [ngx.components.UIAttribute-1645547180577]: 
                    attrName: 
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:arrow
                  ↓Attr2 [ngx.components.UIAttribute-1645547180580]: 
                    attrName: positionV
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:top
                  ↓Style [ngx.components.UIStyle-1645548204862]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            '/**
                             * Custom properties (sometimes referred to as CSS variables or cascading variables)
                             * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                             * They are set using custom property notation, e.g.: --main-color: black;
                             * and are accessed using the var() function, e.g.: color: var(--main-color);
                             * You can find below your component''s properties you can customize within the page.
                             * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                             * For more informations see https://ionicframework.com/docs/theming.
                            **/
                            //--background	//Background of the button
                            //--background-activated	//Background of the button when pressed. Note: setting this will interfere with the Material Design ripple
                            //--background-activated-opacity	//Opacity of the button when pressed
                            //--background-focused	//Background of the button when focused with the tab key
                            //--background-focused-opacity	//Opacity of the button when focused with the tab key
                            //--background-hover	//Background of the button on hover
                            //--background-hover-opacity	//Opacity of the background on hover
                            //--border-color	//Border color of the button
                            //--border-radius	//Border radius of the button
                            //--border-style	//Border style of the button
                            //--border-width	//Border width of the button
                            //--box-shadow	//Box shadow of the button
                            //--color	//Text color of the button
                            //--color-activated	//Text color of the button when pressed
                            //--color-focused	//Text color of the button when focused with the tab key
                            //--color-hover	//Text color of the button when hover
                            //--opacity	//Opacity of the button
                            //--padding-bottom	//Bottom padding of the button
                            //--padding-end	//Right padding if direction is left-to-right, and left padding if direction is right-to-left of the button
                            //--padding-start	//Left padding if direction is left-to-right, and right padding if direction is right-to-left of the button
                            //--padding-top	//Top padding of the button
                            //--ripple-color	//Color of the button ripple effect
                            //--transition	//Transition of the button
                            
                            	ion-icon {
                            	  color: var(--ion-color-btLight);
                            	}
                            '
                ↓ButtonDisplayFormat [ngx.components.UIDynamicElement-1645547180586]: 
                  beanData: '{"ionBean":"Button","IonFill":"plain:clear"}'
                  tagName: ion-button
                  ↓Directive [ngx.components.UIControlDirective-1645547180589]: 
                    directiveName: If
                    directiveSource: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:this?.global?.grid == false else ElseBlock_1606649912084
                    ↓Icon [ngx.components.UIDynamicElement-1645547180592]: 
                      beanData: '{"ionBean":"Icon","IconName":"plain:grid-outline"}'
                      tagName: ion-icon
                      ↓Style [ngx.components.UIStyle-1645547180595]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '	font-size: 2rem;
                                	vertical-align:middle;
                                '
                  ↓Tag [ngx.components.UIElement-1645547180598]: 
                    identifier: ElseBlock_1606649912084
                    tagName: ng-template
                    ↓Icon [ngx.components.UIDynamicElement-1645547180601]: 
                      beanData: '{"ionBean":"Icon","IconName":"plain:list-outline"}'
                      tagName: ion-icon
                      ↓Style [ngx.components.UIStyle-1645547180604]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '	font-size: 2rem;
                                	vertical-align:middle;
                                }
                                .class1606649976284:hover{
                                 cursor:pointer;
                                
                                '
                  ↓Event [ngx.components.UIControlEvent-1645547180607]: 
                    ↓SetGlobal1 [ngx.components.UIDynamicAction-1645547180610]: 
                      beanData: |
                        '{
                         "ionBean": "SetGlobalAction",
                         "Property": "plain:grid",
                         "Value": "script:!this.global.grid"
                        }'
                      ↓If [ngx.components.UIDynamicAction-1645547180613]: 
                        beanData: '{"ionBean":"IfAction","condition":"script:!this.global.grid"}'
                        ↓SetGlobal [ngx.components.UIDynamicAction-1645547180616]: 
                          beanData: |
                            '{
                             "ionBean": "SetGlobalAction",
                             "Property": "plain:qr",
                             "Value": "script:false"
                            }'
                    ↓SetGlobal [ngx.components.UIDynamicAction-1645547180619]: 
                      beanData: |
                        '{
                         "ionBean": "SetGlobalAction",
                         "Property": "plain:selectedItem",
                         "Value": "script:{}"
                        }'
                  ↓Attr [ngx.components.UIAttribute-1645547180622]: 
                    attrName: tooltip
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: 'script:this.global.grid == false ?  translate.instant(''grid_view'') : translate.instant(''list_view'')'
                  ↓Attr1 [ngx.components.UIAttribute-1645547180625]: 
                    attrName: 
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:arrow
                  ↓Attr2 [ngx.components.UIAttribute-1645547180628]: 
                    attrName: positionV
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:top
                ↓Button [ngx.components.UIDynamicElement-1645547180631]: 
                  beanData: '{"ionBean":"Button","IonFill":"plain:clear"}'
                  tagName: ion-button
                  ↓Icon [ngx.components.UIDynamicElement-1645547180634]: 
                    beanData: '{"ionBean":"Icon","IconName":"plain:qr-code-outline"}'
                    tagName: ion-icon
                    ↓Style [ngx.components.UIStyle-1645547180637]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '	font-size: 2rem;
                              	vertical-align:middle;
                              '
                  ↓Event [ngx.components.UIControlEvent-1645547180640]: 
                    ↓SetGlobal [ngx.components.UIDynamicAction-1645547180643]: 
                      beanData: |
                        '{
                         "ionBean": "SetGlobalAction",
                         "Property": "plain:qr",
                         "Value": "script:!this.global.qr"
                        }'
                    ↓SetGlobal1 [ngx.components.UIDynamicAction-1645547180646]: 
                      beanData: |
                        '{
                         "ionBean": "SetGlobalAction",
                         "Property": "plain:grid",
                         "Value": "script:true"
                        }'
                  ↓Attr [ngx.components.UIAttribute-1645547180649]: 
                    attrName: tooltip
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'show_qr_code' | translate
                  ↓Attr1 [ngx.components.UIAttribute-1645547180652]: 
                    attrName: 
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:arrow
                  ↓Attr2 [ngx.components.UIAttribute-1645547180655]: 
                    attrName: positionV
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:top
          ↓DivDragAndDrop [ngx.components.UIDynamicElement-1645548364631]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓Attr [ngx.components.UIAttribute-1645548364634]: 
              attrName: '*ngIf'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:this.local.folder != undefined && this.local.folder != ''
            ↓Directive [ngx.components.UIControlDirective-1645548364640]: 
              directiveName: If
              directiveSource: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.local.dragging == true else ElseBlock_1600439522169
              ↓UseSharedComponent [ngx.components.UIUseShared-1645548364643]: 
                sharedcomponent: C8Oforms.MobileApplication.Application.sharedDropIndicatorSelector
            ↓Tag1 [ngx.components.UIElement-1645548364646]: 
              identifier: ElseBlock_1600439522169
              tagName: ng-template
              ↓Tag [ngx.components.UIElement-1645548364649]: 
                selfClose: true
                tagName: br
          ↓DivForms [ngx.components.UIDynamicElement-1645548457937]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓Grid [ngx.components.UIDynamicElement-1645790731790]: 
              beanData: '{"ionBean":"Grid"}'
              tagName: ion-grid
              ↓GridRow [ngx.components.UIDynamicElement-1645790736318]: 
                beanData: '{"ionBean":"GridRow"}'
                tagName: ion-row
                ↓Directive1 [ngx.components.UIControlDirective-1656410337424]: 
                  directiveName: If
                  directiveSource: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this.local.spinner != true && this.list else ElseBlock_1656410363226
                  ↓Directive [ngx.components.UIControlDirective-1645548521186]: 
                    directiveExpression: 'let i = index;trackBy: trackById'
                    directiveItemName: item
                    directiveSource: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:this.list
                    isEnabled: false
                  ↓ng_container [ngx.components.UIElement-1696242152219]: 
                    tagName: ng-container
                    ↓attr [ngx.components.UIAttribute-1696242176562]: 
                      attrName: '*cdkVirtualFor'
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: 'plain:let item of this.list;let item1645548521186 of this.list;let i = index;trackBy: trackById'
                    ↓Directive [ngx.components.UIControlDirective-1645548520901]: 
                      directiveName: If
                      directiveSource: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:true || (item.value != null)||(item.value == null && item.key != '_c8o_out_c8o' && ((this.local?.tags == undefined || this.local?.tags?.length == 0) && (this.local?.subTags == undefined || this.local?.subTags?.length == 0)) && (this.query == '' || this.query == undefined) && (this.local?.searchTags == undefined || this.local?.searchTags?.length == 0) && (this.local?.searchSubTags == undefined || this.local?.searchSubTags?.length == 0))
                      ↓Directive2 [ngx.components.UIControlDirective-1645812515046]: 
                        comment: If GRID
                        directiveName: If
                        directiveSource: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:global.grid else ElseBlock_1645812522951
                        ↓GridColCards [ngx.components.UIDynamicElement-1645797671043]: 
                          beanData: |
                            '{
                             "ionBean": "GridCol",
                             "FlexAlignement": "plain:ion-align-self-baseline",
                             "SizeLg": "plain:3",
                             "SizeMd": "plain:4",
                             "SizeSm": "plain:6",
                             "SizeXl": "plain:3",
                             "SizeXs": "plain:6"
                            }'
                          tagName: ion-col
                          ↓UseSharedComponent [ngx.components.UIUseShared-1645795002574]: 
                            sharedcomponent: C8Oforms.MobileApplication.Application.cardSelector
                            ↓i [ngx.components.UIUseVariable-1645795019703]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:i
                            ↓list [ngx.components.UIUseVariable-1645795019705]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:this.list
                            ↓isAfolder [ngx.components.UIUseVariable-1645795019707]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:item.isAtag
                            ↓offsetObject [ngx.components.UIUseVariable-1645811659115]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:null
                      ↓Tag [ngx.components.UIElement-1645812522951]: 
                        identifier: ElseBlock_1645812522951
                        tagName: ng-template
                        ↓GridColList1 [ngx.components.UIDynamicElement-1645812593810]: 
                          beanData: |
                            '{
                             "ionBean": "GridCol",
                             "FlexAlignement": "plain:ion-align-self-baseline",
                             "SizeLg": "plain:6",
                             "SizeMd": "plain:6",
                             "SizeSm": "plain:12",
                             "SizeXl": "plain:6",
                             "SizeXs": "plain:12"
                            }'
                          tagName: ion-col
                          ↓UseSharedComponent [ngx.components.UIUseShared-1645812613398]: 
                            sharedcomponent: C8Oforms.MobileApplication.Application.listSelector
                            ↓i [ngx.components.UIUseVariable-1645812613401]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:i
                            ↓list [ngx.components.UIUseVariable-1645812613404]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:this.list
                            ↓isAfolder [ngx.components.UIUseVariable-1645812613407]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:item.isAtag
                            ↓offsetObject [ngx.components.UIUseVariable-1645812613410]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:null
                ↓Tag [ngx.components.UIElement-1656410363226]: 
                  identifier: ElseBlock_1656410363226
                  tagName: ng-template
                  ↓Directive [ngx.components.UIControlDirective-1656410429061]: 
                    directiveSource: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:[0, 1, 2, 3, 4, 5, 6 ,7, 8, 9, 10, 11]
                    ↓GridColCards [ngx.components.UIDynamicElement-1656410429070]: 
                      beanData: |
                        '{
                         "ionBean": "GridCol",
                         "FlexAlignement": "plain:ion-align-self-baseline",
                         "SizeLg": "plain:3",
                         "SizeMd": "plain:4",
                         "SizeSm": "plain:6",
                         "SizeXl": "plain:3",
                         "SizeXs": "plain:6"
                        }'
                      tagName: ion-col
                      ↓DivCards [ngx.components.UIDynamicElement-1656410320217]: 
                        beanData: '{"ionBean":"DivTag"}'
                        tagName: div
                        ↓Style [ngx.components.UIStyle-1656410320220]: 
                          styleContent: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  'padding: 1em;
                                  height: 100% !important;
                                  margin-bottom: 15px;
                                  margin-top: 15px;
                                  margin-left:15px;
                                  margin-right:15px;
                                  
                                  '
                        ↓DivOptions [ngx.components.UIDynamicElement-1656410320223]: 
                          beanData: '{"ionBean":"DivTag"}'
                          tagName: div
                          ↓divIconRadio [ngx.components.UIDynamicElement-1656410320226]: 
                            beanData: '{"ionBean":"DivTag"}'
                            tagName: div
                            ↓Style [ngx.components.UIStyle-1656410320229]: 
                              styleContent: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                    →: |
                                      display:inline-block;
                                      
                            ↓Button [ngx.components.UIDynamicElement-1656410320232]: 
                              beanData: '{"ionBean":"Button","IonFill":"plain:clear"}'
                              tagName: ion-button
                              ↓CheckBox [ngx.components.UIDynamicElement-1656410320235]: 
                                beanData: |
                                  '{
                                   "ionBean": "CheckBox",
                                   "ControlName": "plain:name1656410320235",
                                   "IonColor": "plain:greenSelector"
                                  }'
                                tagName: ion-checkbox
                                ↓Style [ngx.components.UIStyle-1656410320238]: 
                                  styleContent: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                        →: |
                                          margin-left:2px;
                                          
                                          
                                ↓Attr [ngx.components.UIAttribute-1656410320241]: 
                                  attrName: mode
                                  attrValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                      - MobileSmartSourceType: plain:ios
                              ↓Style [ngx.components.UIStyle-1656410320247]: 
                                styleContent: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                      →: |
                                        '/**
                                         * Custom properties (sometimes referred to as CSS variables or cascading variables)
                                         * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                                         * They are set using custom property notation, e.g.: --main-color: black;
                                         * and are accessed using the var() function, e.g.: color: var(--main-color);
                                         * You can find below your component''s properties you can customize within the page.
                                         * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                                         * For more informations see https://ionicframework.com/docs/theming.
                                        **/
                                        //--background	//Background of the button
                                        //--background-activated	//Background of the button when pressed. Note: setting this will interfere with the Material Design ripple
                                        //--background-activated-opacity	//Opacity of the button when pressed
                                        //--background-focused	//Background of the button when focused with the tab key
                                        //--background-focused-opacity	//Opacity of the button when focused with the tab key
                                        //--background-hover	//Background of the button on hover
                                        //--background-hover-opacity	//Opacity of the background on hover
                                        //--border-color	//Border color of the button
                                        //--border-radius	//Border radius of the button
                                        //--border-style	//Border style of the button
                                        //--border-width	//Border width of the button
                                        //--box-shadow	//Box shadow of the button
                                        //--color	//Text color of the button
                                        //--color-activated	//Text color of the button when pressed
                                        //--color-focused	//Text color of the button when focused with the tab key
                                        //--color-hover	//Text color of the button when hover
                                        //--opacity	//Opacity of the button
                                        //--padding-bottom	//Bottom padding of the button
                                        //--padding-end	//Right padding if direction is left-to-right, and left padding if direction is right-to-left of the button
                                        //--padding-start	//Left padding if direction is left-to-right, and right padding if direction is right-to-left of the button
                                        //--padding-top	//Top padding of the button
                                        //--ripple-color	//Color of the button ripple effect
                                        //--transition	//Transition of the button
                                        '
                              ↓Attr [ngx.components.UIAttribute-1656410320250]: 
                                attrName: '*ngIf'
                                attrValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                    - MobileSmartSourceType: plain:false
                            ↓Attr1 [ngx.components.UIAttribute-1656410320253]: 
                              attrName: '[ngStyle]'
                              attrValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: 'script:{''visibility'': ''hidden''}'
                          ↓divIconMore [ngx.components.UIDynamicElement-1656410320256]: 
                            beanData: '{"ionBean":"DivTag"}'
                            tagName: div
                            ↓Style [ngx.components.UIStyle-1656410320259]: 
                              styleContent: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                    →: |
                                      'display:inline-block;
                                      float: right;
                                      }
                                      .class1586272535771:hover {
                                      cursor: pointer;
                                      '
                            ↓Button [ngx.components.UIDynamicElement-1656410320262]: 
                              beanData: '{"ionBean":"Button","IonFill":"plain:clear"}'
                              tagName: ion-button
                              ↓Icon [ngx.components.UIDynamicElement-1656410320265]: 
                                beanData: '{"ionBean":"Icon","IconName":"plain:ellipsis-horizontal"}'
                                tagName: ion-icon
                                ↓Attr [ngx.components.UIAttribute-1656410320268]: 
                                  attrName: '[color]'
                                  attrValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                      - MobileSmartSourceType: plain:greyButton
                              ↓Style [ngx.components.UIStyle-1656410320307]: 
                                styleContent: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                      →: |
                                        '	
                                        }
                                        .class1606574763560:hover {
                                        cursor: pointer;
                                        '
                          ↓Style [ngx.components.UIStyle-1656410320313]: 
                            styleContent: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    'overflow: auto;
                                    '
                          ↓Attr [ngx.components.UIAttribute-1656410320319]: 
                            attrName: '[ngStyle]'
                            attrValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: script:{'visibility':'hidden'}
                        ↓DivImg [ngx.components.UIDynamicElement-1656410320322]: 
                          beanData: '{"ionBean":"DivTag"}'
                          tagName: div
                          ↓Style [ngx.components.UIStyle-1656410320352]: 
                            styleContent: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    '	
                                    	text-align:center !important;
                                    	position:relative !important;
                                    	img{
                                    		text-align:center;
                                    		position:relative;
                                    	}
                                    	canvas{
                                    		text-align:center;
                                    		position:relative;
                                    	}
                                    	
                                    	display: flex;
                                        align-items: center;
                                        justify-content: center;
                                    	
                                    '
                          ↓Attr [ngx.components.UIAttribute-1656410320355]: 
                            attrName: '[ngStyle]'
                            attrValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: 'script:this.list[this.i]?.value?.status == ''doing'' ? {cursor: ''wait''} : {cursor: ''pointer''}'
                            isEnabled: false
                          ↓SkeletonText [ngx.components.UIDynamicElement-1656491656703]: 
                            beanData: |
                              '{
                               "ionBean": "SkeletonText",
                               "Animated": "plain:true",
                               "Width": "plain:100px"
                              }'
                            tagName: ion-skeleton-text
                          ↓Style1 [ngx.components.UIStyle-1656410320364]: 
                            styleContent: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    '    width:100%;
                                        height:100px;
                                        -webkit-border-radius: 50%;
                                        border-radius: 50%;
                                    '
                        ↓Attr2 [ngx.components.UIAttribute-1656410320691]: 
                          attrName: '[ngStyle]'
                          attrValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: 'script:this.global?.mobilePlat ? {''height'': ''10rem !important;''} : {''height'': ''20rem !important;''}'
                        ↓Div [ngx.components.UIDynamicElement-1656410320781]: 
                          beanData: '{"ionBean":"DivTag"}'
                          tagName: div
                          ↓FormatLayout [ngx.components.UIDynamicAttr-1656410320784]: 
                            beanData: '{"ionBean":"FormatLayout","TextAlignment":"plain:ion-text-wrap"}'
                            comment: FormatLayout
                            tagName: div
                          ↓Style [ngx.components.UIStyle-1656410320787]: 
                            styleContent: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    '	color: #999999;
                                    	strong{
                                    		color:black !important;
                                    	}
                                    	display: flex;
                                        align-items: center;
                                        justify-content: center;
                                    	
                                    '
                          ↓FormatLayout1 [ngx.components.UIDynamicAttr-1656410320793]: 
                            beanData: '{"ionBean":"FormatLayout","TextAlignment":"plain:ion-text-center"}'
                            selfClose: false
                          ↓SkeletonText [ngx.components.UIDynamicElement-1656492203217]: 
                            beanData: '{"ionBean":"SkeletonText","Animated":"plain:true"}'
                            tagName: ion-skeleton-text
      ↓Style [ngx.components.UIStyle-1696239897454]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '/**
                 * Custom properties (sometimes referred to as CSS variables or cascading variables)
                 * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                 * They are set using custom property notation, e.g.: --main-color: black;
                 * and are accessed using the var() function, e.g.: color: var(--main-color);
                 * You can find below your component''s properties you can customize within the page.
                 * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                 * For more informations see https://ionicframework.com/docs/theming.
                **/
                //--ion-grid-padding:16px;	//Padding for the Grid
                //--ion-grid-padding-lg	//Padding for the Grid on lg screens
                //--ion-grid-padding-md	//Padding for the Grid on md screens
                //--ion-grid-padding-sm	//Padding for the Grid on sm screens
                //--ion-grid-padding-xl	//Padding for the Grid on xl screens
                //--ion-grid-padding-xs	//Padding for the Grid on xs screens
                //--ion-grid-width	//Width of the fixed Grid
                //--ion-grid-width-lg	//Width of the fixed Grid on lg screens
                //--ion-grid-width-md	//Width of the fixed Grid on md screens
                //--ion-grid-width-sm	//Width of the fixed Grid on sm screens
                //--ion-grid-width-xl	//Width of the fixed Grid on xl screens
                //--ion-grid-width-xs	//Width of the fixed Grid on xs screens
                '
↓PageEvent [ngx.components.UIPageEvent-1537534569504]: 
  viewEvent: onWillEnter
  ↓Error_Handler [ngx.components.UIActionErrorEvent-1572360114721]: 
    ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1586424113962]: 
      beanData: '{"ionBean":"InvokeAction"}'
      stack: C8Oforms.MobileApplication.Application.removeSpinner
  ↓setSomeLocalsVariables [ngx.components.UICustomAction-1645722529369]: 
    actionValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            '		window["p"] = page;
            		page.local.hide1 = false;
            		page.local = {};
            		if(window.navigator.onLine == false){
            			page.local.user = page.c8o.session.user.name;
            		}
            		page.local.user = page.global.user;
            		page.local.editing_rights = false;
            		page.local.folder = (page.navParams.get(''folder'') == undefined || page.navParams.get(''folder'') == ":folder" ) ? "": page.navParams.get(''folder'');
                    page.local.sub = (page.navParams.get(''sub'') == undefined || page.navParams.get(''sub'') == ":sub" ) ? "": page.navParams.get(''sub'');
                    page.global.grid = (page.navParams.get(''grid'') == "false" || page.navParams.get(''grid'') == false) ? false : true;          
                    if(page.navParams.get(''published'') == undefined || page.navParams.get(''published'') == ":published"){
            	        // do nothing
            	    }
            	    else if(page.navParams.get(''published'') == false || page.navParams.get(''published'') == "false"){
            			page.local.published = false;
            		}
            		else if(page.navParams.get(''published'') == true || page.navParams.get(''published'') == "true"){
                        page.local.published = true;
                        page.local.ddoc = "published_forms";     
                    }
                    else {
                        page.local.published = false;
                    }
                    page.global.visibleoptions = {};
                    page.global.visibleoptions0 = {};
                    page.global.selectedItem = {};
                    resolve();
            '
    module_ng_imports: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
        - com.twinsoft.convertigo.beans.common.XMLVector: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
            - com.twinsoft.convertigo.beans.common.XMLVector: 
              - java.lang.String: 
                - ↑value: ScrollingModule
    module_ts_imports: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
        - com.twinsoft.convertigo.beans.common.XMLVector: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
            - com.twinsoft.convertigo.beans.common.XMLVector: 
              - java.lang.String: 
                - ↑value: ScrollingModule
              - java.lang.String: 
                - ↑value: '@angular/cdk/scrolling'
    ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1586424006177]: 
      beanData: '{"ionBean":"InvokeAction"}'
      stack: C8Oforms.MobileApplication.Application.setSpinner
    ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1694175204821]: 
      beanData: '{"ionBean":"InvokeAction"}'
      stack: C8Oforms.MobileApplication.Application.getViewAndParametersForSelector
      ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1694175204824]: 
        beanData: '{"ionBean":"InvokeAction"}'
        stack: C8Oforms.MobileApplication.Application.removeSpinner
    ↓defineSettings [ngx.components.UICustomAction-1576601694760]: 
      actionValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              '		page.local.folder = "";
              		page.local["ddoc"] = "published_forms";
              		//this.local.published = true;
              		if(this.global["language"] == "fr" || this.global["language"] == "it" || this.global["language"] == "es" || this.global["language"] == "en"){
              		    localStorage.setItem(''lang'', this.global["language"]);
              		}
              		if(page["local"]["changeListener"] == undefined){
              		    page["local"]["changeListener"] = new C8oFullSyncChangeListener((changes:Array<any>)=>{
              	            /*if(this.global["changes_published"] != undefined && this.global["changes_published"].length > 0){
              	                for(let elem of changes["changes"]){
              	                    for(let i in this.global["changes_published"]){
              	                        if(elem.id == this.global["changes_published"][i]){
              	                            this.c8o.callJson("fs://c8oforms_fs.get", "docid", elem.id)
              	                            .then((res)=>{
              	                                this.global["changes_published"].pop(i);
              	                                const msg = this.translate.instant("pub_form_success0") +"\"" +  res["name"] + "\"" + this.translate.instant("pub_form_success1");
              	                                let _tc = this.getInstance(ToastController);
              	                                let options = {
              	                                        message: msg,
              	                                        duration: 3000,
              	                                        cssClass: "toastSuccess"
              	                                       };
              
              	                                _tc.create(options).present();
              	                                return null;
              	                            })
              	                            .fail((err)=>{
              	                                page.c8o.log.error(err);
              	                            })
              	                            
              	                            
              	                        }
              	                    }
              	                }
              	            }*/
                              for(let j in changes){
                                  for(let i in changes[j]){
                                      if(page["imgCache"][changes[j][i]["id"] +"/wallpaper"] != undefined || page["imgCache"][changes[j][i]["id"] +"/thumbnail"] != undefined){
                                          delete page["imgCache"][changes[j][i]["id"] +"/wallpaper"];
                                          delete page["imgCache"][changes[j][i]["id"] +"/thumbnail"];
                                          page.c8o.log.debug("deleted img cache for id " +changes[j][i]["id"]);
                                          this.tick();
                                      }
                                  }
                              }
              	        });
              		}
                      this.c8o.addFullSyncChangeListener("c8oforms_fs", page["local"]["changeListener"], {return_docs: true});
              		resolve();
              '
    ↓addEventListener [ngx.components.UICustomAction-1586340638874]: 
      actionValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              '		    
              		    // variables
                          const stack = props.stack;
                          const out = {keys: null};
                          // declare function to call shared action manually
                          page.local.manualCallShared = ()=>{
                              this.actionBeans.STS1567094239807(this,{...{stack: stack, parent: parent, out: out}, ...props}, {...stack["root"].in, ...out}, event)
                              .then((result)=>{
                              })
                              .catch((error)=>{
                                  page.c8o.log.error("shared Action manual error", error)
                              });
                          };
                          
              		    // declare function for event subscriber
                          page.local.func = (event)=>{
                              if(event.ref == ''_tags'' || event.ref == ''_subTags''){
                                  page.c8o.log.debug("event ngxTagInputNgModelChange from selectorPage, instance: " + this["created"]);
                                  let arrTmp = [];
                                  for(let elem of event["event"]){
                                      if(elem instanceof Object){
                                          arrTmp.push(elem["value"]);
                                      }
                                      else{
                                          arrTmp.push(elem);
                                      }
                                  }
                                  this.local[event[''ref''].substring(1)] = arrTmp;
                                  page.local.manualCallShared();
                              }
                              
                          };
              
                  		// get instance of Events    
                  		const events = this.getInstance(Events);
                          
                  		// call event subscriber
              			page["subscriptions"][''updateThumbnail''] = events.subscribe(''ngxTagInputNgModelChange'', page.local.func);
              		/**
              		
              		parent = self;
                      parent.out = res;
                      out = parent.out;
                      return new Promise((resolve, reject) => {
                      let self: any = stack["InvokeSharedAction"] = {};
                      self.in = {props:{tplVersion: ''7.8.0.0'', actionName: ''InvokeSharedAction'', actionFunction: ''STS1567094239807''}, vars:{keys: get(''keys'', `null`)}};
                      
                      this.actionBeans.STS1567094239807(this, {...{stack: stack, parent: parent, out: out}, ...self.in.props}, {...stack["root"].in, ...self.in.vars}, event)
                      
              		
              		**/
              		resolve();
              '
    ↓InvokeSharedAction2 [ngx.components.UIDynamicInvoke-1624006767407]: 
      beanData: '{"ionBean":"InvokeAction"}'
      stack: C8Oforms.MobileApplication.Application.importNg2Tooltips
    ↓If [ngx.components.UIDynamicAction-1656578773983]: 
      beanData: '{"ionBean":"IfAction","condition":"script:window[''newUser''] == false"}'
      ↓ModalPage [ngx.components.UIDynamicAction-1656578813451]: 
        beanData: |
          '{
           "ionBean": "ModalAction",
           "page": "plain:C8Oforms.MobileApplication.Application.startCloud",
           "cssClass": "plain:modalCloud"
          }'
        ↓CustomAction [ngx.components.UICustomAction-1656578862241]: 
          actionValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  		window["newUser"] = undefined;
                  		resolve();
                  
↓Footer [ngx.components.UIDynamicElement-1566986230524]: 
  beanData: '{"ionBean":"Footer"}'
  tagName: ion-footer
  ↓Directive [ngx.components.UIControlDirective-1566986395683]: 
    directiveName: If
    directiveSource: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:getSizeObject(this?.global?.selectedItem) > 0
    ↓Div1 [ngx.components.UIDynamicElement-1566998418536]: 
      beanData: '{"ionBean":"DivTag"}'
      tagName: div
      ↓Style [ngx.components.UIStyle-1566986310626]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '  box-shadow: 2px 2px 12px 0 rgba(0, 0, 0, 0.15);
                  background-color: #ffffff;
                '
      ↓GridTemplate [ngx.components.UIDynamicElement-1567008012476]: 
        beanData: '{"ionBean":"Grid"}'
        tagName: ion-grid
        ↓GridRow [ngx.components.UIDynamicElement-1567008016938]: 
          beanData: '{"ionBean":"GridRow"}'
          tagName: ion-row
          ↓GridColCenter [ngx.components.UIDynamicElement-1567008023408]: 
            beanData: |
              '{
               "ionBean": "GridCol",
               "OffsetLg": "plain:1",
               "OffsetMd": "plain:0",
               "OffsetSm": "plain:0",
               "OffsetXl": "plain:1",
               "OffsetXs": "plain:0",
               "SizeLg": "plain:10",
               "SizeMd": "plain:12",
               "SizeSm": "plain:12",
               "SizeXl": "plain:10",
               "SizeXs": "plain:12"
              }'
            tagName: ion-col
            ↓Directive [ngx.components.UIControlDirective-1606645530704]: 
              directiveName: If
              directiveSource: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:!this.global?.mobilePlat else ElseBlock_1606645547640
              ↓DivClose [ngx.components.UIDynamicElement-1606647086128]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓Style [ngx.components.UIStyle-1606647086131]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          'display: inline-block;
                          vertical-align: middle;
                          '
                ↓Event [ngx.components.UIControlEvent-1606647086134]: 
                  ↓DeselectAll [ngx.components.UICustomAction-1606647086137]: 
                    actionValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            		    for(let item in this.global.selectedItem){
                            				this.global.selectedItem[item] = false;
                            		        this.global['visibleoptions'][item] = false;
                            		    }
                            		    resolve();
                            
                ↓Button1 [ngx.components.UIDynamicElement-1611747191485]: 
                  beanData: '{"ionBean":"Button","IonFill":"plain:clear"}'
                  tagName: ion-button
                  ↓Icon [ngx.components.UIDynamicElement-1611747191488]: 
                    beanData: '{"ionBean":"Icon","IconName":"plain:close"}'
                    tagName: ion-icon
                  ↓Style [ngx.components.UIStyle-1611747191491]: 
                    isEnabled: false
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            float:right;
                            
                  ↓Attr1 [ngx.components.UIAttribute-1611755412589]: 
                    attrName: 
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:arrow
                  ↓Attr2 [ngx.components.UIAttribute-1611755412592]: 
                    attrName: positionV
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:top
                  ↓Attr [ngx.components.UIAttribute-1611755412595]: 
                    attrName: tooltip
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'Deselect' | translate
              ↓DivCount [ngx.components.UIDynamicElement-1606647104345]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓Style [ngx.components.UIStyle-1606647104348]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '  display: inline-block;
                            vertical-align: middle;
                          '
                ↓Badge [ngx.components.UIDynamicElement-1606647104351]: 
                  beanData: '{"ionBean":"Badge","IonColor":"plain:greyFab"}'
                  tagName: ion-badge
                  ↓Text [ngx.components.UIText-1606647104354]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:getSizeObjectFormated(this?.global?.selectedItem)
                  ↓Style [ngx.components.UIStyle-1606647104357]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            'vertical-align: middle;
                            '
              ↓DivElementSelected [ngx.components.UIDynamicElement-1606647125170]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓Style [ngx.components.UIStyle-1606647125173]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          'margin-left: 5px;
                            display: inline-block;
                            vertical-align:middle;
                              font-weight: bold;
                          	font-size: 18px;
                          	color: #333333;
                          '
                ↓Directive [ngx.components.UIControlDirective-1606647125176]: 
                  directiveName: If
                  directiveSource: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:getSizeObject(this?.global?.selectedItem) == 1
                  ↓Text [ngx.components.UIText-1606647125179]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:elem_selected
                ↓Directive1 [ngx.components.UIControlDirective-1606647125182]: 
                  directiveName: If
                  directiveSource: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:getSizeObject(this?.global?.selectedItem) > 1
                  ↓Text [ngx.components.UIText-1606647125185]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:elems_selected
              ↓DivButtons1 [ngx.components.UIDynamicElement-1606647236996]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓Style [ngx.components.UIStyle-1606647236999]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '    display: inline-block;
                            vertical-align:middle;
                            float:right;
                          '
                ↓btDelete [ngx.components.UIDynamicElement-1606647237023]: 
                  beanData: |
                    '{
                     "ionBean": "Button",
                     "IonColor": "plain:",
                     "IonShape": "plain:round",
                     "IonFill": "plain:clear"
                    }'
                  tagName: ion-button
                  ↓Style [ngx.components.UIStyle-1606647237026]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            '	ion-icon {
                            		color: var(--ion-color-btLight);
                            	}
                            '
                  ↓Icon [ngx.components.UIDynamicElement-1606647237029]: 
                    beanData: '{"ionBean":"Icon","IconName":"plain:trash"}'
                    tagName: ion-icon
                  ↓Event [ngx.components.UIControlEvent-1606647237032]: 
                    ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1606647237035]: 
                      beanData: '{"ionBean":"InvokeAction"}'
                      stack: C8Oforms.MobileApplication.Application.deleteForm
                      ↓objectDocIds [ngx.components.UIControlVariable-1606647237038]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:this?.global?.selectedItem
                  ↓Attr1 [ngx.components.UIAttribute-1611753806702]: 
                    attrName: 
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:arrow
                  ↓Attr2 [ngx.components.UIAttribute-1611753806705]: 
                    attrName: positionV
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:top
                  ↓Attr [ngx.components.UIAttribute-1611753806708]: 
                    attrName: tooltip
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'Supprimer' | translate
            ↓Tag [ngx.components.UIElement-1606645547640]: 
              identifier: ElseBlock_1606645547640
              tagName: ng-template
              ↓DivClose [ngx.components.UIDynamicElement-1606645599231]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓Style [ngx.components.UIStyle-1606645599246]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          'display: inline-block;
                          vertical-align: middle;
                          
                          '
                ↓Event [ngx.components.UIControlEvent-1606645599255]: 
                  ↓DeselectAll [ngx.components.UICustomAction-1606645599258]: 
                    actionValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            		    for(let item in this.global.selectedItem){
                            				this.global.selectedItem[item] = false;
                            		        this.global['visibleoptions'][item] = false;
                            		    }
                            		    resolve();
                            
                ↓Button1 [ngx.components.UIDynamicElement-1611747027631]: 
                  beanData: '{"ionBean":"Button","IonFill":"plain:clear"}'
                  tagName: ion-button
                  ↓Icon [ngx.components.UIDynamicElement-1611747027634]: 
                    beanData: '{"ionBean":"Icon","IconName":"plain:close"}'
                    tagName: ion-icon
                  ↓Style [ngx.components.UIStyle-1611747027637]: 
                    isEnabled: false
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            float:right;
                            
                  ↓Attr1 [ngx.components.UIAttribute-1611755389590]: 
                    attrName: 
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:arrow
                  ↓Attr2 [ngx.components.UIAttribute-1611755389593]: 
                    attrName: positionV
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:top
                  ↓Attr [ngx.components.UIAttribute-1611755389596]: 
                    attrName: tooltip
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'Deselect' | translate
              ↓DivCount [ngx.components.UIDynamicElement-1606645636483]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓Style [ngx.components.UIStyle-1606645636486]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '  display: inline-block;
                            vertical-align: middle;
                          '
                ↓Badge [ngx.components.UIDynamicElement-1606646116442]: 
                  beanData: '{"ionBean":"Badge","IonColor":"plain:greyFab"}'
                  tagName: ion-badge
                  ↓Text [ngx.components.UIText-1606646116445]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:getSizeObjectFormated(this?.global?.selectedItem)
                  ↓Style [ngx.components.UIStyle-1606646116448]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            'vertical-align: middle;
                            '
              ↓DivElementSelected [ngx.components.UIDynamicElement-1606645671818]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓Style [ngx.components.UIStyle-1606645671821]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '	margin-left: 5px;
                            display: inline-block;
                            vertical-align:middle;
                              font-weight: bold;
                          	font-size: 18px;
                          	color: #333333;
                          '
                ↓Directive [ngx.components.UIControlDirective-1606645671824]: 
                  directiveName: If
                  directiveSource: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:getSizeObject(this?.global?.selectedItem) == 1
                  ↓Text [ngx.components.UIText-1606645671827]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:elem_selected
                ↓Directive1 [ngx.components.UIControlDirective-1606645671830]: 
                  directiveName: If
                  directiveSource: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:getSizeObject(this?.global?.selectedItem) > 1
                  ↓Text [ngx.components.UIText-1606645671833]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:elems_selected
              ↓DivButtons [ngx.components.UIDynamicElement-1606645671836]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓Style [ngx.components.UIStyle-1606645671839]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '    display: inline-block;
                            vertical-align:middle;
                            float:right;
                          '
                ↓btDelete [ngx.components.UIDynamicElement-1606645671866]: 
                  beanData: |
                    '{
                     "ionBean": "Button",
                     "IonColor": "plain:",
                     "IonShape": "plain:round",
                     "IonFill": "plain:clear"
                    }'
                  tagName: ion-button
                  ↓Style [ngx.components.UIStyle-1606645671869]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            '	ion-icon {
                            		color: var(--ion-color-btLight);
                            	}
                            '
                  ↓Icon [ngx.components.UIDynamicElement-1606645671872]: 
                    beanData: '{"ionBean":"Icon","IconName":"plain:trash"}'
                    tagName: ion-icon
                  ↓Event [ngx.components.UIControlEvent-1606645671878]: 
                    ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1606645671881]: 
                      beanData: '{"ionBean":"InvokeAction"}'
                      stack: C8Oforms.MobileApplication.Application.deleteForm
                      ↓objectDocIds [ngx.components.UIControlVariable-1606645671884]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:this?.global?.selectedItem
                  ↓Attr1 [ngx.components.UIAttribute-1611753766371]: 
                    attrName: 
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:arrow
                  ↓Attr2 [ngx.components.UIAttribute-1611753766374]: 
                    attrName: positionV
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:top
                  ↓Attr [ngx.components.UIAttribute-1611753797158]: 
                    attrName: tooltip
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'Supprimer' | translate
          ↓Style [ngx.components.UIStyle-1567501653225]: 
    ↓Fragment [ngx.components.UICustom-1579008398703]: 
↓PageEvent3 [ngx.components.UIPageEvent-1572359975609]: 
  viewEvent: onWillLeave
  ↓Close_Loading [ngx.components.UIDynamicAction-1572359989055]: 
    beanData: '{"ionBean":"CloseLoadingAction"}'
  ↓removeEventListener [ngx.components.UICustomAction-1586345349876]: 
    actionValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            '		    
            		    page.c8o.removeFullSyncChangeListener("c8oforms_fs", page["local"]["changeListener"]);
                		page.c8o.log.debug("removing event ngxTagInputNgModelChange from selectorPage, instance: " + this["created"]);
                		const events = this.getInstance(Events);
                		page["subscriptions"][''ngxTagInputNgModelChange''].unsubscribe();
            '
  ↓CancelPouchLive [ngx.components.UICustomAsyncAction-1696324305862]: 
    actionValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            		try {
            			page.local.live.cancel();
            		} catch (e) {
            		
            		} finally {
            			return;
            		}
            
↓Subscribe_Handler2 [ngx.components.UIEventSubscriber-1594641752198]: 
  topic: updateThumbnail
  ↓GetData [ngx.components.UIDynamicAction-1594826886510]: 
    beanData: |
      '{
       "ionBean": "FullSyncGetAction",
       "requestable": "plain:C8Oforms.c8oforms_fs",
       "noLoading": "plain:true",
       "_id": "script:parent.out._id"
      }'
    ↓CustomAction [ngx.components.UICustomAction-1594828305895]: 
      actionValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              '		page.c8o.log.debug(''[MB] ''+ props.actionFunction +'': ''+ props.actionName);
              		page.c8o.log.debug(''>>>'' + JSON.stringify(vars.data));
              		resolve();
              '
      isEnabled: false
      ↓data [ngx.components.UIControlVariable-1594828314768]: 
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:stack['GetData'].out
    ↓If [ngx.components.UIDynamicAction-1594828661218]: 
      beanData: '{"ionBean":"IfAction","condition":"script:stack[''GetData''].out.formulaire"}'
      ↓SaveProperties [ngx.components.UICustomAction-1594641752201]: 
        actionValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '		    let args = vars.arg;
                		    page.local.thumbnail = {};
                		    page.local["thumbnail"]["index"]= args.realIndex;
                		    page.local["thumbnail"]["enabled"] = args.enabledThumbTemp;
                		    page.local["thumbnail"]["random"] = props.stack[''GetData''].out.wallpaper.random;
                		    page.local["thumbnail"]["type"] = args.fromDevice ? ''custom'' : ''library'';
                		    /*this.updateState()
                		    .then(()=>{
                		        if(args.fromDevice === false){
                	                this.c8o.httpPublic.get(args.url, {responseType: ''blob'' })
                	                .subscribe(resp => {
                	                    resolve({"put_attach": true, "content": resp,"type": resp.type });
                	                });
                	            }
                		        else if(args.fromDevice === true){
                		            resolve({"put_attach": true, "content": page.global.filePrev, "type" : page.global.filePrevType });
                		        }
                		    })*/
                		    
                		    
                		    
                '
        isEnabled: false
        ↓arg [ngx.components.UIControlVariable-1594641752204]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:stack['root'].out
        ↓If [ngx.components.UIDynamicAction-1594641752207]: 
          beanData: '{"ionBean":"IfAction","condition":"script:parent.out.put_attach == true"}'
          isEnabled: false
          ↓PutAttachment [ngx.components.UIDynamicAction-1594641752210]: 
            beanData: |
              '{
               "ionBean": "FullSyncPutAttachmentAction",
               "requestable": "plain:C8Oforms.c8oforms_fs",
               "noLoading": "plain:true",
               "docid": "script:this.form._id",
               "name": "plain:thumbnail",
               "content_type": "script:stack[''SaveProperties''].out.type",
               "content": "script:stack[''SaveProperties''].out.content"
              }'
            ↓refreshThumbnail [ngx.components.UICustomAction-1594641752213]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      		    this.resetImageCache();
                      		resolve();
                      
      ↓PostData [ngx.components.UIDynamicAction-1594829724364]: 
        beanData: |
          '{
           "ionBean": "FullSyncPostAction",
           "requestable": "plain:C8Oforms.c8oforms_fs",
           "noLoading": "plain:true",
           "_id": "script:stack[''root''].out._id",
           "_use_policy": "plain:merge",
           "RootKey": "plain:thumbnail"
          }'
        ↓index [ngx.components.UIControlVariable-1594829838383]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:stack['root'].out.realIndex
        ↓enabled [ngx.components.UIControlVariable-1594829843294]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:stack['root'].out.enabledThumbTemp
        ↓type [ngx.components.UIControlVariable-1594829846526]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: 'script:stack[''root''].out.fromDevice == ''color'' ? ''color'' : (stack[''root''].out.fromDevice ? ''custom'' : ''library'')'
        ↓random [ngx.components.UIControlVariable-1594830959680]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:stack['GetData'].out.wallpaper.random
        ↓checkAttachment [ngx.components.UICustomAction-1594831107305]: 
          actionValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '		    let args = vars.arg;
                  	        if(args.fromDevice === false){
                                  this.c8o.httpPublic.get(args.url, {responseType: ''blob'' })
                                  .subscribe(resp => {
                                      resolve({"put_attach": true, "content": resp,"type": resp.type });
                                  });
                              }
                  	        else if(args.fromDevice === true){
                  	            resolve({"put_attach": true, "content": page.global.filePrev, "type" : page.global.filePrevType });
                  	        }
                  	        else {
                                  resolve({"put_attach": false});
                              }
                  '
          ↓arg [ngx.components.UIControlVariable-1594831107308]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:stack['root'].out
          ↓If [ngx.components.UIDynamicAction-1594831107311]: 
            beanData: '{"ionBean":"IfAction","condition":"script:parent.out.put_attach == true"}'
            ↓PutAttachment [ngx.components.UIDynamicAction-1594831107314]: 
              beanData: |
                '{
                 "ionBean": "FullSyncPutAttachmentAction",
                 "requestable": "plain:C8Oforms.c8oforms_fs",
                 "noLoading": "plain:true",
                 "docid": "script:stack[''root''].out._id",
                 "name": "plain:thumbnail",
                 "content_type": "script:stack[''checkAttachment''].out.type",
                 "content": "script:stack[''checkAttachment''].out.content"
                }'
              ↓refreshThumbnail [ngx.components.UICustomAction-1594831107317]: 
                actionValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        		    this.resetImageCache();
                        		resolve();
                        
        ↓color [ngx.components.UIControlVariable-1603357211310]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:stack['root'].out.colorPicker
↓Subscribe_Handler [ngx.components.UIEventSubscriber-1604007513115]: 
  topic: toastPWA
  ↓Toast [ngx.components.UIDynamicAction-1604007345722]: 
    beanData: |
      '{
       "ionBean": "ToastAction",
       "message": "script:this.translate.instant(''notify_when_ready'')",
       "duration": "plain:10000",
       "cssClass": "plain:toastPending"
      }'
↓Subscribe_Handler21 [ngx.components.UIEventSubscriber-1605260781973]: 
  topic: ngxTagInputNgModelChange
  ↓setTags [ngx.components.UICustomAction-1605260781976]: 
    actionValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            		    if(event.ref == 'searchTags' || event.ref == 'searchSubTags'){
            		        let arrTmp = [];
            	            for(let elem of event["event"]){
            	                if(elem instanceof Object){
            	                    arrTmp.push(elem["value"]);
            	                }
            	                else{
            	                    arrTmp.push(elem);
            	                }
            	            }
            	            page.local["_"+event['ref']] = arrTmp;
            		    }
            		    resolve();
            		    
            		    
            