scriptContent: 
  - xmlizable: 
    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
    - com.twinsoft.convertigo.beans.common.FormatedContent: 
      →: |
        '/*Begin_c8o_PageImport*/
        /*End_c8o_PageImport*/
        /*Begin_c8o_PageDeclaration*/
        	/*End_c8o_PageDeclaration*/
        /*Begin_c8o_PageConstructor*/
        		this.local.visible = [];
        		this.local.multipleField = {radio_group: true, checkbox_group: true, checkbox: true};
                this.local.simpleField = {date: true, select: true, datetime: true, time: true, radio: true, text: true, barcode: true, slider: true};
                this.local.fileField = {file: true};
                this.local.camSignField = {img: true, signature:true};
        
        
                this.local.multipleFieldGoToPage = {radio_group: true, checkbox_group: true, checkbox: true, select: true, radio: true};
                this.local.simpleFieldGoToPage = {date: true, datetime: true, time: true, text: true, barcode: true, slider: true};
                this.local.fileFieldGoToPage = {file: true};
                this.local.camSignFieldGoToPage = {img: true, signature:true};
                
                this.local.showVisible = false;
        		this.local.condVisible = "and";
        		this.local.showGoToPage = false;
        		/*End_c8o_PageConstructor*/
        /*Begin_c8o_PageFunction*/
        	/**
        	 * returns type of field (simple, multiple, file, or camSign)
        	 * @param type
        	 */
        	public getType(type: string): string{
        	    if(this.local.multipleField[type] == true){
        	        return "multiple";
        	    }
        	    else if(this.local.simpleField[type] == true){
        	        return "simple";
        	    }
        	    else if(this.local.fileField[type] == true){
        	        return "file";
        	    }
                else if(this.local.camSignField[type] == true){
                    return "camSign"; 
                }
                else{
                    return "";
                }
        	    
        	}
        	public getGoToPageType(type: string): string{
                if(this.local.multipleFieldGoToPage[type] == true){
                    return "multiple";
                }
                else if(this.local.simpleFieldGoToPage[type] == true){
                    return "simple";
                }
                else if(this.local.fileFieldGoToPage[type] == true){
                    return "file";
                }
                else if(this.local.camSignFieldGoToPage[type] == true){
                    return "camSign"; 
                }
                else{
                    return "";
                }
                
            }
        	/**
        	 * convert a string to an array
        	 * @param e
        	 */
        	public strToArr(e){
        	    if(typeof(e)== "string"){
        	        return [e];
        	    }
        	    else{
        	       return e; 
        	    }
        	}
        	
        	/**
        	 * 
        	 * @param name
        	 */
        	public getItemNameById(field: any){
        	    if(field.source == true){
        	        for(let key of Object.keys(this.navParams.data.form.formulaire)){
        	            if(this.navParams.data.form.formulaire[key].id == field.str){
        	                //console.log(this.navParams.data.form.formulaire[key]);
        	                return this.navParams.data.form.formulaire[key].name;
        	            }
        	            else if(this.navParams.data.form.formulaire[key].type == "ion-card"){
        	                for(let keyChild of Object.keys(this.navParams.data.form.formulaire[key]["children"])){
        	                    if(this.navParams.data.form.formulaire[key]["children"][keyChild].id == field.str){
        	                        return this.navParams.data.form.formulaire[key]["children"][keyChild].name;
        	                    }
        	                }
        	            }
        	        }
        	    }
        	    else{
        	        return field.str;
        	    }
        	    
                return "";
        	}
        	
        	public getItemNameByIdStr(str: any){
        	    for(let key of Object.keys(this.navParams.data.form.formulaire)){
                        if(this.navParams.data.form.formulaire[key].id == str){
                            return this.navParams.data.form.formulaire[key].name;
                        }
                        else if(this.navParams.data.form.formulaire[key].type == "ion-card"){
                            for(let keyChild of Object.keys(this.navParams.data.form.formulaire[key]["children"])){
                                if(this.navParams.data.form.formulaire[key]["children"][keyChild].id == str){
                                    return this.navParams.data.form.formulaire[key]["children"][keyChild].name;
                                }
                            }
                        }
                    }
                
                
                return "";
            }
        	
        	public getPageNameByTech(str){
        	    for(let page of this.navParams.data.form.pages){
        	        if(page.pageTechName == str){
        	            return page.name;
        	        }
        	    }
        	}
        	/*End_c8o_PageFunction*/
        '
segment: path-to-conditionalpage
title: Title for ConditionalPage
↓Content [mobile.components.UIDynamicElement-1594972595129]: 
  beanData: '{"ionBean":"Content"}'
  tagName: ion-content
  ↓Grid [mobile.components.UIDynamicElement-1594972846813]: 
    beanData: '{"ionBean":"Grid"}'
    tagName: ion-grid
    ↓GridRowVisible [mobile.components.UIDynamicElement-1594972851527]: 
      beanData: '{"ionBean":"GridRow"}'
      tagName: ion-row
      ↓GridColVisible [mobile.components.UIDynamicElement-1594972854431]: 
        beanData: '{"ionBean":"GridCol"}'
        tagName: ion-col
        ↓DivVisibleIf [mobile.components.UIDynamicElement-1594985778179]: 
          beanData: '{"ionBean":"DivTag"}'
          tagName: div
          ↓TextFormat [mobile.components.UIDynamicElement-1594985778182]: 
            beanData: '{"ionBean":"TextFormat","TextUpperCase":"plain:text-uppercase"}'
            tagName: div
            ↓Icon [mobile.components.UIDynamicElement-1595238656491]: 
              beanData: |
                '{
                 "ionBean": "Icon",
                 "IconName": "script:this.local.showVisible ? ''arrow-dropdown'' : ''arrow-dropright''",
                 "IonColor": "plain:btLight"
                }'
              comment: arrow-dropright
              tagName: ion-icon
            ↓Text [mobile.components.UIText-1594985778185]: 
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:'visible_if' | translate
            ↓Style [mobile.components.UIStyle-1594985778188]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      'color: #ff8206;
                        font-size: 14px;
                        font-weight: 600;
                        font-style: normal;
                        font-stretch: normal;
                        line-height: normal;
                        letter-spacing: normal;
                      '
        ↓Attr [mobile.components.UIAttribute-1594987567266]: 
          attrName: '*ngIf'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:this.local.visible != undefined
        ↓Directive2 [mobile.components.UIControlDirective-1595238961426]: 
          comment: edition mode for visible
          directiveName: If
          directiveSource: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
              - MobileSmartSourceType: script:this.local.showVisible == true else ElseBlock_1595246658893
          ↓Directive [mobile.components.UIControlDirective-1595232225766]: 
            directiveIndexName: l
            directiveItemName: item
            directiveSource: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.local.visible
            ↓Div [mobile.components.UIDynamicElement-1595492824098]: 
              beanData: '{"ionBean":"DivTag"}'
              tagName: div
              ↓Directive [mobile.components.UIControlDirective-1595491971166]: 
                directiveName: If
                directiveSource: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.local.showVisibleIndex == i else ElseBlock_1595491981726
                isEnabled: false
                ↓UseSharedComponent [mobile.components.UIUseShared-1595232374598]: 
                  sharedcomponent: C8Oforms.MobileApplication.Application.conditionVisibleIf
                  ↓current [mobile.components.UIControlVariable-1595232394048]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:item
                  ↓i [mobile.components.UIControlVariable-1595237255997]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:i
              ↓Tag [mobile.components.UIElement-1595491981726]: 
                identifier: ElseBlock_1595491981726
                isEnabled: false
                tagName: ng-template
                ↓UseSharedComponent [mobile.components.UIUseShared-1595492053474]: 
                  sharedcomponent: C8Oforms.MobileApplication.Application.conditionVisibleIfPrevAndEditRemove
                  ↓current [mobile.components.UIControlVariable-1595492053477]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:item
                  ↓i [mobile.components.UIControlVariable-1595492053480]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:i
              ↓Style [mobile.components.UIStyle-1595492831938]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        	margin-top:10px;
                        	margin-bottom:10px;
                        
              ↓UseSharedComponent [mobile.components.UIUseShared-1595493378459]: 
                sharedcomponent: C8Oforms.MobileApplication.Application.conditionVisibleIf
                ↓current [mobile.components.UIControlVariable-1595493378462]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:item
                ↓i [mobile.components.UIControlVariable-1595493378465]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:l
          ↓DivButtonAdd [mobile.components.UIDynamicElement-1595233525635]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓Button [mobile.components.UIDynamicElement-1595233552287]: 
              beanData: |
                '{
                 "ionBean": "Button",
                 "IonClear": "plain:clear",
                 "IconOnly": "plain:icon-only"
                }'
              tagName: button
              ↓Icon [mobile.components.UIDynamicElement-1595233572655]: 
                beanData: '{"ionBean":"Icon","IonColor":"plain:btLight"}'
                tagName: ion-icon
            ↓Event [mobile.components.UIControlEvent-1595233697374]: 
              attrName: (click)
              ↓CustomAction [mobile.components.UICustomAction-1595233702207]: 
                actionValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '		//this.local.visible.push({visibleVal:{str:"", source:false}, visibleVal2: {str:"", source:false}, operator : "", visible: {element:""}});
                        		    this.local.visible.push({
                                        type:"visibleIf",
                                        subject:""
                                    });
                        		console.log(this.local.visible);
                        		resolve();
                        '
          ↓Directive1 [mobile.components.UIControlDirective-1595238172343]: 
            directiveName: If
            directiveSource: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.local.visible.length > 1
            ↓RadioList [mobile.components.UIDynamicElement-1595237939897]: 
              beanData: '{"ionBean":"RadioList"}'
              tagName: ion-list
              ↓GenericItem [mobile.components.UIDynamicElement-1595237954657]: 
                beanData: '{"ionBean":"GenericItem"}'
                tagName: ion-item
                ↓RadioButton [mobile.components.UIDynamicElement-1595237943433]: 
                  beanData: '{"ionBean":"RadioButton","Value":"plain:and"}'
                  tagName: ion-radio
                  ↓Attr [mobile.components.UIAttribute-1595238033377]: 
                    attrName: 
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:item-left
                ↓Label [mobile.components.UIDynamicElement-1595237969737]: 
                  beanData: '{"ionBean":"Label"}'
                  tagName: ion-label
                  ↓Text [mobile.components.UIText-1595237976873]: 
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:all_cond_checked
              ↓GenericItem1 [mobile.components.UIDynamicElement-1595237956633]: 
                beanData: '{"ionBean":"GenericItem"}'
                tagName: ion-item
                ↓RadioButton1 [mobile.components.UIDynamicElement-1595237944960]: 
                  beanData: '{"ionBean":"RadioButton","Value":"plain:or"}'
                  tagName: ion-radio
                  ↓Attr [mobile.components.UIAttribute-1595238034848]: 
                    attrName: 
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:item-left
                ↓Label [mobile.components.UIDynamicElement-1595237972985]: 
                  beanData: '{"ionBean":"Label"}'
                  tagName: ion-label
                  ↓Text [mobile.components.UIText-1595237978825]: 
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:at_least_one_checked
              ↓Style [mobile.components.UIStyle-1595238072449]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        margin-left:80px;
                        
              ↓Attr [mobile.components.UIAttribute-1595238137192]: 
                attrName: 
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:no-lines
              ↓Attr1 [mobile.components.UIAttribute-1595246274200]: 
                attrName: '[(ngModel)]'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.local.condVisible
          ↓DivSave [mobile.components.UIDynamicElement-1595249578291]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓FabContainer [mobile.components.UIDynamicElement-1595249578294]: 
              beanData: |
                '{
                 "ionBean": "FabContainer",
                 "HorzPosition": "plain:right",
                 "VertPosition": "plain:bottom"
                }'
              tagName: ion-fab
              ↓FabButton [mobile.components.UIDynamicElement-1595249578297]: 
                beanData: |
                  '{
                   "ionBean": "FabButton",
                   "IonColor": "plain:btLight",
                   "Size": "plain:mini"
                  }'
                tagName: button
                ↓Icon [mobile.components.UIDynamicElement-1595249578300]: 
                  beanData: |
                    '{
                     "ionBean": "Icon",
                     "IconName": "plain:checkmark",
                     "IonColor": "plain:white"
                    }'
                  tagName: ion-icon
              ↓Event [mobile.components.UIControlEvent-1595249578303]: 
                attrName: (click)
                ↓CustomAction [mobile.components.UICustomAction-1595249678327]: 
                  actionValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          		this.local.showVisible = !this.local.showVisible;
                          		resolve();
                          
            ↓Style [mobile.components.UIStyle-1595249619013]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      margin-top:10px;
                      
        ↓Tag [mobile.components.UIElement-1595246684140]: 
          comment: preview mode for visible
          identifier: ElseBlock_1595246658893
          tagName: ng-template
          ↓Grid [mobile.components.UIDynamicElement-1595491329056]: 
            beanData: '{"ionBean":"Grid"}'
            tagName: ion-grid
            ↓GridRow [mobile.components.UIDynamicElement-1595491333839]: 
              beanData: '{"ionBean":"GridRow"}'
              tagName: ion-row
              ↓GridColShowConditions [mobile.components.UIDynamicElement-1595491338008]: 
                beanData: '{"ionBean":"GridCol","Columns":"plain:10"}'
                tagName: ion-col
                ↓Div [mobile.components.UIDynamicElement-1595491368420]: 
                  beanData: '{"ionBean":"DivTag"}'
                  tagName: div
                  ↓Directive [mobile.components.UIControlDirective-1595491368423]: 
                    directiveIndexName: m
                    directiveItemName: item
                    directiveSource: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:this.local.visible
                    ↓UseSharedComponent [mobile.components.UIUseShared-1595491368426]: 
                      sharedcomponent: C8Oforms.MobileApplication.Application.conditionVisibleIfPrev
                      ↓current [mobile.components.UIControlVariable-1595491368429]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:item
                      ↓i [mobile.components.UIControlVariable-1595491368432]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:m
              ↓GridColEdit [mobile.components.UIDynamicElement-1595491340312]: 
                beanData: '{"ionBean":"GridCol","Columns":"plain:2"}'
                tagName: ion-col
                ↓Div [mobile.components.UIDynamicElement-1595491613679]: 
                  beanData: '{"ionBean":"DivTag"}'
                  tagName: div
                  ↓Button [mobile.components.UIDynamicElement-1595491381024]: 
                    beanData: |
                      '{
                       "ionBean": "Button",
                       "IonClear": "plain:clear",
                       "IconOnly": "plain:icon-only"
                      }'
                    tagName: button
                    ↓Icon [mobile.components.UIDynamicElement-1595491398128]: 
                      beanData: |
                        '{
                         "ionBean": "Icon",
                         "IconName": "plain:ios-create-outline",
                         "IonColor": "plain:btLight"
                        }'
                      tagName: ion-icon
                    ↓Event [mobile.components.UIControlEvent-1595491495661]: 
                      attrName: (click)
                      ↓CustomAction [mobile.components.UICustomAction-1595491495664]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                		    this.local.showVisible = true;
                                		this.local.showGoToPage = false;
                                		resolve();
                                
                    ↓Attr [mobile.components.UIAttribute-1595491550807]: 
                      attrName: 
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:item-right
                    ↓Attr1 [mobile.components.UIAttribute-1595491733646]: 
                      attrName: '[title]'
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:this.translate.instant('edit')
                  ↓Style [mobile.components.UIStyle-1595491620424]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            '	display: flex!important;
                                 align-content: center!important;
                                 align-items: center!important;
                                 justify-content: center !important;
                                 height:100%;
                            '
        ↓DividerItem [mobile.components.UIDynamicElement-1595238574597]: 
          beanData: '{"ionBean":"Listdivider"}'
          tagName: ion-item-divider
    ↓GridRowGoto [mobile.components.UIDynamicElement-1595862191120]: 
      beanData: '{"ionBean":"GridRow"}'
      tagName: ion-row
      ↓GridColGoto [mobile.components.UIDynamicElement-1595862191123]: 
        beanData: '{"ionBean":"GridCol"}'
        tagName: ion-col
        ↓DivGotoIf [mobile.components.UIDynamicElement-1595862191126]: 
          beanData: '{"ionBean":"DivTag"}'
          tagName: div
          ↓TextFormat [mobile.components.UIDynamicElement-1595862191129]: 
            beanData: '{"ionBean":"TextFormat","TextUpperCase":"plain:text-uppercase"}'
            tagName: div
            ↓Icon [mobile.components.UIDynamicElement-1595862191132]: 
              beanData: |
                '{
                 "ionBean": "Icon",
                 "IconName": "script:this.local.showGoToPage ? ''arrow-dropdown'' : ''arrow-dropright''",
                 "IonColor": "plain:btLight"
                }'
              comment: arrow-dropright
              tagName: ion-icon
            ↓Text [mobile.components.UIText-1595862191135]: 
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:'goToPageIF' | translate
            ↓Style [mobile.components.UIStyle-1595862191138]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      'color: #ff8206;
                        font-size: 14px;
                        font-weight: 600;
                        font-style: normal;
                        font-stretch: normal;
                        line-height: normal;
                        letter-spacing: normal;
                      '
        ↓Attr [mobile.components.UIAttribute-1595862191141]: 
          attrName: '*ngIf'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:this.local.goToPage != undefined && this.getGoToPageType(this.local.goToPageSelf.type) != ''
        ↓Directive2 [mobile.components.UIControlDirective-1595862191144]: 
          comment: edition mode for goto
          directiveName: If
          directiveSource: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
              - MobileSmartSourceType: script:(this.local.showGoToPage || this.getGoToPageType(this.local.goToPageSelf.type) == 'multiple') else ElseBlock_1595862191603
          ↓Directive [mobile.components.UIControlDirective-1595862191480]: 
            directiveIndexName: k
            directiveItemName: item
            directiveSource: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.local.goToPage
            ↓Div [mobile.components.UIDynamicElement-1595862191483]: 
              beanData: '{"ionBean":"DivTag"}'
              tagName: div
              ↓Directive [mobile.components.UIControlDirective-1595862191486]: 
                directiveName: If
                directiveSource: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.local.showVisibleIndex == i else ElseBlock_1595491981726
                isEnabled: false
                ↓UseSharedComponent [mobile.components.UIUseShared-1595862191489]: 
                  sharedcomponent: C8Oforms.MobileApplication.Application.conditionVisibleIf
                  ↓current [mobile.components.UIControlVariable-1595862191492]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:item
                  ↓i [mobile.components.UIControlVariable-1595862191495]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:i
              ↓Tag [mobile.components.UIElement-1595862191498]: 
                identifier: ElseBlock_1595491981726
                isEnabled: false
                tagName: ng-template
                ↓UseSharedComponent [mobile.components.UIUseShared-1595862191501]: 
                  sharedcomponent: C8Oforms.MobileApplication.Application.conditionVisibleIfPrevAndEditRemove
                  ↓current [mobile.components.UIControlVariable-1595862191504]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:item
                  ↓i [mobile.components.UIControlVariable-1595862191507]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:i
              ↓Style [mobile.components.UIStyle-1595862191510]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        	margin-top:10px;
                        	margin-bottom:10px;
                        
              ↓UseSharedComponent [mobile.components.UIUseShared-1595862191513]: 
                sharedcomponent: C8Oforms.MobileApplication.Application.conditiongoToPageIf
                ↓current [mobile.components.UIControlVariable-1595862191516]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:item
                ↓i [mobile.components.UIControlVariable-1595862191519]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:k
          ↓DivButtonAdd [mobile.components.UIDynamicElement-1595862191522]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓Button [mobile.components.UIDynamicElement-1595862191525]: 
              beanData: |
                '{
                 "ionBean": "Button",
                 "IonClear": "plain:clear",
                 "IconOnly": "plain:icon-only"
                }'
              tagName: button
              ↓Icon [mobile.components.UIDynamicElement-1595862191528]: 
                beanData: '{"ionBean":"Icon","IonColor":"plain:btLight"}'
                tagName: ion-icon
            ↓Event [mobile.components.UIControlEvent-1595862191531]: 
              attrName: (click)
              ↓CustomAction [mobile.components.UICustomAction-1595862191534]: 
                actionValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '		//this.local.visible.push({visibleVal:{str:"", source:false}, visibleVal2: {str:"", source:false}, operator : "", visible: {element:""}});
                        		    let val1;
                            		if(this.navParams.data.j == undefined){
                            		    val1 = {
                                            str: this.navParams.data.form.formulaire[this.navParams.data.i].name,
                                            source: true,
                                            type: this.navParams.data.form.formulaire[this.navParams.data.i].type
                                        };
                            		}
                            		else{
                            		    val1 = {
                                            str: this.navParams.data.form.formulaire[this.navParams.data.i]["children"][this.navParams.data.j].name,
                                            source: true,
                                            type: this.navParams.data.form.formulaire[this.navParams.data.i]["children"][this.navParams.data.j].type
                                        };
                            		}
                        		
                            		this.local.goToPage.push({
                                            type:"goToPageIf",
                                            val1:val1,
                                            val2:{
                                                str: "",
                                                source: false,
                                                type: "",
                                                //arr:
                                            }
                                        });
                            		console.log(this.local.visible);
                            		resolve();
                        '
            ↓Attr [mobile.components.UIAttribute-1596532643644]: 
              attrName: '*ngIf'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:this.getGoToPageType(this.local.goToPageSelf.type) != 'multiple'
          ↓DivSave [mobile.components.UIDynamicElement-1595862191582]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓FabContainer [mobile.components.UIDynamicElement-1595862191585]: 
              beanData: |
                '{
                 "ionBean": "FabContainer",
                 "HorzPosition": "plain:right",
                 "VertPosition": "plain:bottom"
                }'
              tagName: ion-fab
              ↓FabButton [mobile.components.UIDynamicElement-1595862191588]: 
                beanData: |
                  '{
                   "ionBean": "FabButton",
                   "IonColor": "plain:btLight",
                   "Size": "plain:mini"
                  }'
                tagName: button
                ↓Icon [mobile.components.UIDynamicElement-1595862191591]: 
                  beanData: |
                    '{
                     "ionBean": "Icon",
                     "IconName": "plain:checkmark",
                     "IonColor": "plain:white"
                    }'
                  tagName: ion-icon
              ↓Event [mobile.components.UIControlEvent-1595862191594]: 
                attrName: (click)
                ↓CustomAction [mobile.components.UICustomAction-1595862191597]: 
                  actionValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          		this.local.showGoToPage = !this.local.showGoToPage;
                          		resolve();
                          
            ↓Style [mobile.components.UIStyle-1595862191600]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      margin-top:10px;
                      
            ↓Attr [mobile.components.UIAttribute-1596534061765]: 
              attrName: '*ngIf'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:this.getGoToPageType(this.local.goToPageSelf.type) != 'multiple'
        ↓Tag [mobile.components.UIElement-1595862191603]: 
          comment: preview mode for goto
          identifier: ElseBlock_1595862191603
          tagName: ng-template
          ↓Grid [mobile.components.UIDynamicElement-1595862191606]: 
            beanData: '{"ionBean":"Grid"}'
            tagName: ion-grid
            ↓GridRow [mobile.components.UIDynamicElement-1595862191609]: 
              beanData: '{"ionBean":"GridRow"}'
              tagName: ion-row
              ↓GridColShowConditions [mobile.components.UIDynamicElement-1595862191612]: 
                beanData: '{"ionBean":"GridCol","Columns":"plain:10"}'
                tagName: ion-col
                ↓Div [mobile.components.UIDynamicElement-1595862191615]: 
                  beanData: '{"ionBean":"DivTag"}'
                  tagName: div
                  ↓Directive [mobile.components.UIControlDirective-1595862191618]: 
                    directiveIndexName: n
                    directiveItemName: item
                    directiveSource: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:this.local.goToPage
                    ↓Div [mobile.components.UIDynamicElement-1596115647820]: 
                      beanData: '{"ionBean":"DivTag"}'
                      tagName: div
                      ↓Style [mobile.components.UIStyle-1596115656972]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                'margin-top: 5px;
                                '
                    ↓UseSharedComponent [mobile.components.UIUseShared-1595862191621]: 
                      sharedcomponent: C8Oforms.MobileApplication.Application.conditiongoToPageIfPrev
                      ↓current [mobile.components.UIControlVariable-1595862191624]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:item
                      ↓i [mobile.components.UIControlVariable-1595862191627]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:n
              ↓GridColEdit [mobile.components.UIDynamicElement-1595862191630]: 
                beanData: '{"ionBean":"GridCol","Columns":"plain:2"}'
                tagName: ion-col
                ↓Div [mobile.components.UIDynamicElement-1595862191633]: 
                  beanData: '{"ionBean":"DivTag"}'
                  tagName: div
                  ↓Button [mobile.components.UIDynamicElement-1595862191636]: 
                    beanData: |
                      '{
                       "ionBean": "Button",
                       "IonClear": "plain:clear",
                       "IconOnly": "plain:icon-only"
                      }'
                    tagName: button
                    ↓Icon [mobile.components.UIDynamicElement-1595862191639]: 
                      beanData: |
                        '{
                         "ionBean": "Icon",
                         "IconName": "plain:ios-create-outline",
                         "IonColor": "plain:btLight"
                        }'
                      tagName: ion-icon
                    ↓Event [mobile.components.UIControlEvent-1595862191642]: 
                      attrName: (click)
                      ↓CustomAction [mobile.components.UICustomAction-1595862191645]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                		    this.local.showVisible = false;
                                		if(this.local.showGoToPage == false){
                                		    this.local.showGoToPage = true;
                                		}
                                		if(this.local.goToPage.length == 0){
                                		    this.local.goToPage.push({subject:this.local.goToPageSubject})
                                		}
                                		resolve();
                                
                    ↓Attr [mobile.components.UIAttribute-1595862191648]: 
                      attrName: 
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:item-right
                    ↓Attr1 [mobile.components.UIAttribute-1595862191651]: 
                      attrName: '[title]'
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:this.translate.instant('edit')
                  ↓Style [mobile.components.UIStyle-1595862191654]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            '	display: flex!important;
                                 align-content: center!important;
                                 align-items: center!important;
                                 justify-content: center !important;
                                 height:100%;
                            '
              ↓Attr [mobile.components.UIAttribute-1596533573751]: 
                attrName: '*ngIf'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:this.getGoToPageType(this.local.goToPageSelf.type) != 'multiple'
            ↓GridRow1 [mobile.components.UIDynamicElement-1596533598286]: 
              beanData: '{"ionBean":"GridRow"}'
              isEnabled: false
              tagName: ion-row
              ↓GridCol [mobile.components.UIDynamicElement-1596533607203]: 
                beanData: '{"ionBean":"GridCol"}'
                tagName: ion-col
                ↓UseSharedComponent [mobile.components.UIUseShared-1596533612592]: 
                  sharedcomponent: C8Oforms.MobileApplication.Application.conditiongoToPageIf
                  ↓current [mobile.components.UIControlVariable-1596533612595]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:item
                  ↓i [mobile.components.UIControlVariable-1596533612598]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:n
              ↓Attr [mobile.components.UIAttribute-1596533621654]: 
                attrName: '*ngIf'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:this.getGoToPageType(this.local.goToPageSelf.type) == 'multiple'
        ↓DividerItem [mobile.components.UIDynamicElement-1595862191657]: 
          beanData: '{"ionBean":"Listdivider"}'
          tagName: ion-item-divider
↓Footer [mobile.components.UIDynamicElement-1594972577194]: 
  beanData: '{"ionBean":"Footer"}'
  tagName: ion-footer
  ↓ButtonSet [mobile.components.UIDynamicElement-1594972577200]: 
    beanData: '{"ionBean":"ButtonSet","SetPosition":"plain:right"}'
    tagName: ion-buttons
    ↓Button1 [mobile.components.UIDynamicElement-1594972577203]: 
      beanData: '{"ionBean":"Button"}'
      tagName: button
      ↓Text [mobile.components.UIText-1594972577206]: 
        textValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
            - MobileSmartSourceType: script:'Cancel' | translate
      ↓Attr [mobile.components.UIAttribute-1594972577209]: 
        attrName: 
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:item-left
      ↓Event [mobile.components.UIControlEvent-1594972577212]: 
        attrName: (click)
        ↓CloseModal [mobile.components.UIDynamicAction-1594972577215]: 
          beanData: '{"ionBean":"CloseModalAction"}'
    ↓Button [mobile.components.UIDynamicElement-1594972577218]: 
      beanData: '{"ionBean":"Button"}'
      tagName: button
      ↓Text [mobile.components.UIText-1594972577221]: 
        textValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
            - MobileSmartSourceType: script:'Save' | translate
      ↓Attr [mobile.components.UIAttribute-1594972577224]: 
        attrName: 
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:item-right
      ↓Event [mobile.components.UIControlEvent-1594972577227]: 
        attrName: (click)
        ↓PublishEvent [mobile.components.UIDynamicAction-1596103231976]: 
          beanData: |
            '{
             "ionBean": "PublishEventAction",
             "topic": "plain:saveFormForce",
             "data": "plain"
            }'
          isEnabled: false
        ↓CustomAction [mobile.components.UICustomAction-1596110338327]: 
          actionValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  		let i =this.navParams.data.i;
                  		let j = this.navParams.data.j;
                  		let condVisible =  this.local.condVisible;
                  		let visible = this.local.visible;
                  		let goToPage = this.local.goToPage;
                  		
                  		// if variable i is set
                  		if(i!= undefined){
                  		    // if we are not into a card item
                  		    if(j == undefined){
                  		        //save visible conditions
                  		        this.navParams.data.form.formulaire[i].conditions.visibleIf.conds = visible;
                  		        this.navParams.data.form.formulaire[i].conditions.visibleIf.condVisible = condVisible;
                  		        //save go to page conditions
                  		        this.navParams.data.form.formulaire[i].conditions.goToPageIf.conds = goToPage;
                  		    }
                  		    // if we are into a card item
                  		    else{
                  		        //save visible conditions
                  		        this.navParams.data.form.formulaire[i].children[j].conditions.visibleIf.conds = visible;
                                  this.navParams.data.form.formulaire[i].children[j].conditions.visibleIf.condVisible = condVisible;
                                  //save go to page conditions
                                  this.navParams.data.form.formulaire[i].children[j].conditions.goToPageIf.conds = goToPage;
                  		    }
                  		    
                  		}
                  		resolve();
                  
          ↓ClosePopover [mobile.components.UIDynamicAction-1595257870431]: 
            beanData: '{"ionBean":"ClosePopoverAction"}'
          ↓values [mobile.components.UIControlVariable-1596110350834]: 
    ↓Style [mobile.components.UIStyle-1594972577236]: 
      styleContent: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              'padding-bottom: 1vh;
              padding-right: 1vh;
              '
↓PageEvent [mobile.components.UIPageEvent-1594981525339]: 
  viewEvent: onWillEnter
  ↓setDefs [mobile.components.UICustomAction-1595257902664]: 
    actionValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            '		
            		    const returnTemplate = (item)=>{
            		        let template = {};
            		        for(let cond of item.conditions.goToPageIf.conds){
            		            if(item.type == "checkbox_group" || item.type == "radio_group"){
            		                template = {};
            		                for(let line of item.lines){
            		                    template[line.id] = [];
            		                    for(let child in item["children"]){
            		                        let action = cond.val2.vals != undefined ? cond.val2.vals[line.id] != undefined ?  cond.val2.vals[line.id].filter(e=>{return e.value == item["children"][child].id}) : []:[];
            		                        action = action.length > 0 ? action[0].action : null;
            		                        template[line.id].push({"value": item["children"][child].id, "action":action});
            		                    }
            		                }
            		            }
            		            else if(item.type == "checkbox" || item.type == "radio"){
                                    template = {};
                                    for(let child of item.children){
                                        let action = cond.val2.vals != undefined ? cond.val2.vals[child.id] != undefined ? cond.val2.vals[child.id]  : "" :"";
                                        template[child.id] = action;
                                    }
                                }
            		        }
            		            return template;
            		    };		    
            		    
            		    // used for CheckBoxGroup
            		    this.local.gridAndCheckboxStyleOnScroll = [];
            		    let item;
                        if(page["navParams"].data.j == undefined){
                            item = page["navParams"].data.form.formulaire[page["navParams"].data.i];
                        }
                        else{
                            item = page["navParams"].data.form.formulaire[page["navParams"].data.i]["children"][page["navParams"].data.j];
                        }
                        
                        // if condition object doesn''t exists we create it 
                        if(item.conditions == undefined){
                            item.conditions = {
                                    "visibleIf":{
                                        conds:[{
                                            type:"visibleIf",
                                            subject:""
                                        }],
                                        condVisible:"and"
                                      },
                                      "goToPageIf":{
                                          conds:[{
                                              type:"goToPageIf",
                                              val1:{
                                                  str: item.name,
                                                  source: true,
                                                  type: item.type
                                              },
                                              val2:{
                                                  str: "",
                                                  source: false,
                                                  type: ""
                                              }
                                          }],
                                        condVisible:"and"
                                      }
                                  }; 
                        };
                        
                        // set visisble if settings
                        this.local.condVisible = item.conditions.visibleIf.condVisible; 
                        this.local.visible = item.conditions.visibleIf.conds;
                        this.local.val2Visible = [];
                        for(let j in this.local.visible){
                            if(this.local.visible[j].val2 != undefined && this.local.visible[j].val2.source){
                                if(this.local.visible[j].val2.arr != undefined){
                                    for(let i in this.local.visible[j].val2.arr){
                                        this.local.visible[j].val2.arr[i].display = this.getItemNameByIdStr(this.local.visible[j].val2.arr[i].value);
                                    }
                                }
                            }
                        }
                        // set go to page if settings
                        this.local.condGoToPage = item.conditions.goToPageIf.condVisible;
                        this.local.goToPageSelf = {
                                str: item.name,
                                source: true,
                                type: item.type
                        };
                        this.local.goToPage = item.conditions.goToPageIf.conds;
                        this.local.goToPage[0].val2.vals = returnTemplate(item);
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                    /*    
                        if(item["type"] == "checkbox_group"){
                            this.local.templateValue = {};
                            for(let line of item.lines){
                                this.local.templateValue[line.id] = [];
                                for(let child in item["children"]){
                                    this.local.templateValue[line.id].push({"value": item["children"][child].id});
                                }
                            }
                        }  
                        else if(item["type"] == "radio_group"){
                            this.local.templateValue = {};
                           
                            this.local.templateValue = {"name":item["name"], "type": item["type"], "label":item["config"]["label"], children:{}, children_label:item["children"], "labelHtml":item["config"]["personalized"] ? item["config"]["html"] : item["config"]["label"]};
                         
                            for(let line of item.lines){
                                let value = "";
                                this.local.templateValue.children[line.title]= value;
                            }
                        }
            	        
            		
            		if(this.navParams.data.j == undefined){
            		    if(this.navParams.data.form.formulaire[this.navParams.data.i].conditions == undefined ){
                            this.navParams.data.form.formulaire[this.navParams.data.i].conditions = {
                                    "visibleIf":{
                                        conds:[{
                                            type:"visibleIf",
                                            subject:""
                                        }],
                                        condVisible:"and"
                                      },
                                      "goToPageIf":{
                                          conds:[{
                                              type:"goToPageIf",
                                              val1:{
                                                  str: this.navParams.data.form.formulaire[this.navParams.data.i].name,
                                                  source: true,
                                                  type: this.navParams.data.form.formulaire[this.navParams.data.i].type
                                              },
                                              val2:{
                                                  str: "",
                                                  source: false,
                                                  type: "",
                                                  vals:this.local.templateValue != undefined ? JSON.parse(JSON.stringify(updateCondsGoto(this.navParams.data.form.formulaire[this.navParams.data.i].conditions.goToPageIf.conds, item.type, item, true))): []
                                              }
                                          }],
                                        condVisible:"and"
                                      }
                                  }; 
                        }  
            		    this.local.condVisible = this.navParams.data.form.formulaire[this.navParams.data.i].conditions.visibleIf.condVisible; 
            	        this.local.visible = this.navParams.data.form.formulaire[this.navParams.data.i].conditions.visibleIf.conds;
            	        this.local.val2Visible = []
            	        for(let j in this.local.visible){
            	            
            	            if(this.local.visible[j].val2 != undefined && this.local.visible[j].val2.source){
            	                if(this.local.visible[j].val2.arr != undefined){
            	                    for(let i in this.local.visible[j].val2.arr){
            	                        this.local.visible[j].val2.arr[i].display = this.getItemNameByIdStr(this.local.visible[j].val2.arr[i].value)
            	                    }
            	                }
            	            }
            	        }
            	        
            	        
            	        this.local.condGoToPage = this.navParams.data.form.formulaire[this.navParams.data.i].conditions.goToPageIf.condVisible;
            	        
            	        this.local.goToPageSelf = {
            	                str: this.navParams.data.form.formulaire[this.navParams.data.i].name,
            	                source: true,
            	                type: this.navParams.data.form.formulaire[this.navParams.data.i].type
            	        }
            	        updateCondsGoto(this.navParams.data.form.formulaire[this.navParams.data.i].conditions.goToPageIf.conds, item.type, item);
            	        this.local.goToPage = this.navParams.data.form.formulaire[this.navParams.data.i].conditions.goToPageIf.conds;
            		}
            		else {
            		    if(this.navParams.data.form.formulaire[this.navParams.data.i].children[this.navParams.data.j].conditions == undefined){
            		    this.navParams.data.form.formulaire[this.navParams.data.i].children[this.navParams.data.j].conditions = {
                                "visibleIf":{
                                    conds:[{
                                        type:"visibleIf",
                                        subject:""
                                    }],
                                    condVisible:"and"
                                  },
                                  "goToPageIf":{
                                    conds:[{
                                        type:"goToPageIf",
                                        val1:{
                                            str: this.navParams.data.form.formulaire[this.navParams.data.i].children[this.navParams.data.j].name,
                                            source: true,
                                            type: this.navParams.data.form.formulaire[this.navParams.data.i].children[this.navParams.data.j].type
                                        },
                                        val2:{
                                            str: "",
                                            source: false,
                                            type: "",
                                            vals: this.local.templateValue != undefined ? JSON.parse(JSON.stringify(updateCondsGoto(this.navParams.data.form.formulaire[this.navParams.data.i].conditions.goToPageIf.conds, item.type, item, true))): []          
                                        }
                                    }],
                                    condVisible:"and"
                                  }
                              }; 
            		    
            		    }
            		    this.local.condVisible = this.navParams.data.form.formulaire[this.navParams.data.i].children[this.navParams.data.j].conditions.visibleIf.condVisible; 
                        this.local.visible =this.navParams.data.form.formulaire[this.navParams.data.i].children[this.navParams.data.j].conditions.visibleIf.conds;
                        this.local.condGoToPage = this.navParams.data.form.formulaire[this.navParams.data.i].children[this.navParams.data.j].conditions.goToPageIf.condVisible;
                        this.local.goToPage = this.navParams.data.form.formulaire[this.navParams.data.i].children[this.navParams.data.j].conditions.goToPageIf.conds;
                        this.local.goToPageSelf = {
                                str: this.navParams.data.form.formulaire[this.navParams.data.i].children[this.navParams.data.j].name,
                                source: true,
                                type: this.navParams.data.form.formulaire[this.navParams.data.i].children[this.navParams.data.j].type
                        }
                        updateCondsGoto(this.navParams.data.form.formulaire[this.navParams.data.i].children[this.navParams.data.j].conditions.goToPageIf.conds, item.type, item);
                        this.local.goToPage = this.navParams.data.form.formulaire[this.navParams.data.i].children[this.navParams.data.j].conditions.goToPageIf.conds
            		}*/
            		 resolve();
            		    
            '
↓Subscribe_Handler2 [mobile.components.UIEventSubscriber-1595430806693]: 
  topic: ngxTagInputNgModelChange
  ↓setTags [mobile.components.UICustomAction-1595430806696]: 
    actionValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            		    const visible = "cond_visible_";
                        const goToPage = "cond_goToPage_";
                        if(event.ref.indexOf(visible) != -1){
                            let arrTmp = [];
                            for(let elem of event["event"]){
                                if(elem instanceof Object){
                                    arrTmp.push(elem);
                                }
                                else{
                                    arrTmp.push(elem);
                                }
                            }
                            this.local.visible[+(event.ref.substring(visible.length))].val2.arr = arrTmp;
                        }
                        else if(event.ref.indexOf(goToPage) != -1){
                            let arrTmp = [];
                            for(let elem of event["event"]){
                                if(elem instanceof Object){
                                    arrTmp.push(elem);
                                }
                                else{
                                    arrTmp.push(elem);
                                }
                            }
                            this.local.goToPage[+(event.ref.substring(goToPage.length))].val2.arr = arrTmp;
                        }
                        resolve();		    
            
↓Subscribe_Handler21 [mobile.components.UIEventSubscriber-1595431922588]: 
  topic: ngxTagInputRemoved
  ↓setTags [mobile.components.UICustomAction-1595431922591]: 
    actionValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            		    const visible = "cond_visible_";
                        const goToPage = "cond_goToPage_";
                        if(event.ref.indexOf(visible) != -1){
                            this.local.visible[+(event.ref.substring(visible.length))].val2.source = false;
                        }
                        else if(event.ref.indexOf(goToPage) != -1){
                            this.local.goToPage[+(event.ref.substring(goToPage.length))].val2.source = false;
                        }
                        resolve();		    
            
↓Subscribe_Handler211 [mobile.components.UIEventSubscriber-1595432012773]: 
  topic: ngxTagInputAdded
  ↓setTags [mobile.components.UICustomAction-1595432012790]: 
    actionValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            	        const visible = "cond_visible_";
            	        const goToPage = "cond_goToPage_";
            	        if(event.ref.indexOf(visible) != -1){
            	            this.local.visible[+(event.ref.substring(visible.length))].val2.source = false;
            	        }
            	        else if(event.ref.indexOf(goToPage) != -1){
            	            this.local.goToPage[+(event.ref.substring(goToPage.length))].val2.source = false;
            	        }
            		    resolve();		    
            