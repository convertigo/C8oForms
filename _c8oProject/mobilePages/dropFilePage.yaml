scriptContent: 
  - xmlizable: 
    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
    - com.twinsoft.convertigo.beans.common.FormatedContent: 
      →: |
        '/*Begin_c8o_PageImport*/
        /*End_c8o_PageImport*/
        /*Begin_c8o_PageDeclaration*/
        	public fileSelected = false;
        	public idSession = (new Date).getTime();
        	public files = [];
        	public idFiles ="";
        	public multiple;
        	public idItem;
        	public name;
        	public max_size;
        	/*End_c8o_PageDeclaration*/
        /*Begin_c8o_PageConstructor*/
        		this.idFiles = this.global["id"];
        		this.multiple = this.global["multiple"];
        		this.idItem = this.global["__tempITEMID"];
        		this.name = this.global["__tempITEMNAME"];
        		this.local["barcoderesult"] = null;
        		this.max_size = this.navParams.data["max_size"];
        		/*End_c8o_PageConstructor*/
        /*Begin_c8o_PageFunction*/
        	
        	async post() :Promise<any>{
                for(let file of this.files){
                    let type = (file.type == undefined || file.type == "") ? "application/octet-stream":file.type;
                    await this.router.c8o.callJson("fs://c8oformstemp.put_attachment",
                            "docid",''temp_''+this.idSession,
                            "name",file.name,
                            "content_type", type,
                            "content", file)
                            .async();
                }
        	}
        	
        	public FileConvertSize(aSize){
        	    
        	    aSize = Math.abs(parseInt(aSize, 10));
        	    var def = [[1, ''octets''], [1024, ''ko''], [1024*1024, ''Mo''], [1024*1024*1024, ''Go''], [1024*1024*1024*1024, ''To'']];
        	    for(var i=0; i < def.length; i++){
        	        if(aSize < def[i][0]) return (aSize/((def[i-1][0]) as any)).toFixed(2)+'' ''+def[i-1][1];
        	    }
        	    
        	}
        	    
            async importAttachment(idForm, name, b64): Promise<any>{
                let b64Data = b64.split('','');
                if(b64Data.length == 2){
                    let matches = /data:(.*);base64/.exec(b64Data[0]);
                    let  contentType = (matches !== null) ? matches[1] : "image/jpeg";
                    try{
                        await this.c8o.callJson("fs://c8oforms_fs.put_attachment", 
                            "docid", idForm, "name", name, "content_type", contentType, "content", b64Data[1]).async();
                    }
                    catch(e){
                        console.log("Can not add attachment named " + name + " to id " + idForm);
                    }
                }
            };
        
        	public async showToast(msgKey, var1){
        		let msgFiles= "";
        		try{
        			if(var1.length > 1){
        				msgFiles = var1.join(", ");
        			}
        			else{
        				msgFiles = var1[0];
        			}
        		}
        		//slient error
        		catch(e){
        			
        		}
        		let msg:any = await new Promise((resolve)=>{this.translate.get(msgKey, {size: this.max_size != undefined ? this.max_size: 5, listFiles: msgFiles}).subscribe((res)=>{resolve(res)})})
        		let toastController = this.getInstance(ToastController);
        		(await toastController.create({
        		    message: msg,
        		    position: ''bottom'',
        			cssClass: ''toastWarn'',
        			buttons:[
        				{
        		          text: this.translate.instant("close"),
        		          role: ''cancel''
        		    	}
        			]
        		  })).present();
        	}
        	/*End_c8o_PageFunction*/
        '
segment: path-to-dropfilepage
title: Title for dropFilePage
↓Header [ngx.components.UIDynamicElement-1550681175613]: 
  beanData: '{"ionBean":"Header"}'
  tagName: ion-header
  ↓ToolBar [ngx.components.UIDynamicElement-1550681175616]: 
    beanData: '{"ionBean":"ToolBar","IonColor":"plain:primary"}'
    isEnabled: false
    tagName: ion-toolbar
    ↓BarTitle [ngx.components.UIDynamicElement-1550681175637]: 
      beanData: '{"ionBean":"BarTitle"}'
      tagName: ion-title
      ↓FormatLayout [ngx.components.UIDynamicAttr-1645090139822]: 
        beanData: '{"ionBean":"FormatLayout","TextAlignment":"plain:ion-text-left"}'
        comment: FormatLayout
        tagName: div
      ↓Text [ngx.components.UIText-1550681175643]: 
        i18n: true
        textValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:'insertFile' | translate
    ↓ButtonSet [ngx.components.UIDynamicElement-1550681175646]: 
      beanData: '{"ionBean":"ButtonSet","SetPosition":"plain:end"}'
      tagName: ion-buttons
      ↓btEdit [ngx.components.UIDynamicElement-1550681175649]: 
        beanData: |
          '{
           "ionBean": "Button",
           "ButtonFormType": "plain:false",
           "IonSize": "plain:small"
          }'
        tagName: ion-button
        ↓Icon [ngx.components.UIDynamicElement-1550681175652]: 
          beanData: '{"ionBean":"Icon","IconName":"plain:close"}'
          tagName: ion-icon
          ↓Style [ngx.components.UIStyle-1550681175655]: 
            isEnabled: false
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    'display: inline-block;
                     font-size: 35px;
                     vertical-align: middle;
                    '
        ↓Event [ngx.components.UIControlEvent-1550681175658]: 
          attrName: (click)
          ↓RootPage [ngx.components.UIDynamicAction-1550681175661]: 
            beanData: '{"ionBean":"RootPageAction","page":"plain:C8Oforms.MobileApplication.Application.editorPage"}'
            isEnabled: false
          ↓CloseModal [ngx.components.UIDynamicAction-1550745305277]: 
            beanData: '{"ionBean":"CloseModalAction"}'
      ↓Attr [ngx.components.UIAttribute-1550681175679]: 
        attrName: '*ngIf'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:this.global?.formSelected?._id != undefined && this.global?.platform?.name[0] != 'mobile' 
        isEnabled: false
  ↓UseSharedComponent [ngx.components.UIUseShared-1571668551601]: 
    sharedcomponent: C8Oforms.MobileApplication.Application.sharedHeaderFile
↓Content [ngx.components.UIDynamicElement-1550680694160]: 
  beanData: '{"ionBean":"Content"}'
  tagName: ion-content
  ↓Div [ngx.components.UIDynamicElement-1550843557848]: 
    beanData: '{"ionBean":"DivTag"}'
    tagName: div
    ↓Directive [ngx.components.UIControlDirective-1550827362232]: 
      directiveName: If
      directiveSource: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:this.files.length > 0
      ↓ListContainer [ngx.components.UIDynamicElement-1550827425164]: 
        beanData: '{"ionBean":"List"}'
        tagName: ion-list
        ↓Directive [ngx.components.UIControlDirective-1550827442238]: 
          directiveExpression: let i = index
          directiveSource: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:this.files
          ↓ListItem [ngx.components.UIDynamicElement-1550841253394]: 
            beanData: '{"ionBean":"ListItem"}'
            tagName: ion-item
            ↓Icon [ngx.components.UIDynamicElement-1550841451922]: 
              beanData: '{"ionBean":"Icon","IconName":"plain:document"}'
              tagName: ion-icon
            ↓Fragment1 [ngx.components.UICustom-1550842585013]: 
              htmlTemplate: '&nbsp;&nbsp;'
            ↓Text [ngx.components.UIText-1550841258276]: 
              i18n: true
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: source:{"filter":"Iteration","project":"C8Oforms","input":"item1550827442238.name"}
            ↓Fragment [ngx.components.UICustom-1550842316146]: 
              htmlTemplate: '&nbsp;&nbsp;'
            ↓Tag [ngx.components.UIElement-1550842226436]: 
              tagName: ion-note
              ↓Text1 [ngx.components.UIText-1550841930268]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: source:{"filter":"Iteration","project":"C8Oforms","input":"FileConvertSize(item1550827442238.size)"}
            ↓btEdit [ngx.components.UIDynamicElement-1550842413297]: 
              beanData: |
                '{
                 "ionBean": "Button",
                 "ButtonFormType": "plain:false",
                 "IonColor": "plain:dark",
                 "IonSize": "plain:small"
                }'
              tagName: ion-button
              ↓Icon [ngx.components.UIDynamicElement-1550842413300]: 
                beanData: '{"ionBean":"Icon","IconName":"plain:close"}'
                tagName: ion-icon
                ↓Style [ngx.components.UIStyle-1550842413303]: 
                  isEnabled: false
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          'display: inline-block;
                           font-size: 35px;
                           vertical-align: middle;
                          '
              ↓Event [ngx.components.UIControlEvent-1550842413306]: 
                attrName: (click)
                ↓CustomAction [ngx.components.UICustomAction-1550842695975]: 
                  actionValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          		this.files.splice(vars.i, 1);
                          		resolve();
                          
                  ↓i [ngx.components.UIControlVariable-1550842706422]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:i
              ↓Attr [ngx.components.UIAttribute-1550842544355]: 
                attrName: 
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:item-end
      ↓Div [ngx.components.UIDynamicElement-1550844560821]: 
        beanData: '{"ionBean":"DivTag"}'
        tagName: div
        ↓Directive [ngx.components.UIControlDirective-1551089185021]: 
          directiveName: If
          directiveSource: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:this.multiple
          ↓FormatLayout [ngx.components.UIDynamicAttr-1645090139830]: 
            beanData: '{"ionBean":"FormatLayout","TextAlignment":"plain:ion-text-center"}'
            comment: FormatLayout
            tagName: div
          ↓Button1 [ngx.components.UIDynamicElement-1571672225943]: 
            beanData: '{"ionBean":"Button"}'
            isEnabled: false
            tagName: ion-button
            ↓Tag [ngx.components.UIElement-1571672225946]: 
              tagName: label
              ↓Attr [ngx.components.UIAttribute-1571672225949]: 
                attrName: for
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:file-input
              ↓Text [ngx.components.UIText-1571672225952]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:'selectFileComp' | translate
            ↓Style [ngx.components.UIStyle-1571672225955]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '	border-radius: 34px;
                      	background-color: #ff8206;
                      	color:white;
                       	font-size: 14px;
                         	line-height: 1.79;
                        	letter-spacing: normal;
                        	text-align: center;
                      }
                      
                      .class1550744523916:hover {
                      	color:white !important;
                      	background-color: #333333 !important;
                      '
          ↓Tag1 [ngx.components.UIElement-1586435018202]: 
            tagName: label
            ↓Attr [ngx.components.UIAttribute-1586435018205]: 
              attrName: for
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:file-input
            ↓Text [ngx.components.UIText-1586435018208]: 
              i18n: true
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:'selectFileComp' | translate
            ↓Style [ngx.components.UIStyle-1586435018211]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '	border-radius: 34px;
                      	background-color: #ff8206;
                      	color:white;
                       	font-size: 14px;
                         	line-height: 2.5;
                        	letter-spacing: normal;
                        	text-align: center;
                      }
                      
                      .class1550826498347:hover {
                      	color:white !important;
                      	background-color: #333333 !important;
                      '
            ↓Attr1 [ngx.components.UIAttribute-1586435018214]: 
              attrName: '[ngClass]'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:['button', 'button-md', 'button-default', 'button-default-md']
          ↓Tag [ngx.components.UIElement-1550844560839]: 
            selfClose: true
            tagName: input
            ↓Attr [ngx.components.UIAttribute-1550844560842]: 
              attrName: type
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:file
            ↓Attr1 [ngx.components.UIAttribute-1550844560845]: 
              attrName: id
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:file-input
            ↓Event [ngx.components.UIControlEvent-1550844560848]: 
              attrName: (change)
              eventName: (change)
              ↓AddFIles [ngx.components.UICustomAction-1550844560851]: 
                actionValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '		
                        		const authorized_sizeMB = (this as any).max_size != undefined ? +(this as any).max_size : 5;
                        		const authorized_size = authorized_sizeMB * 1000000;
                        		var refusedSize = [];
                        		for(let file of event["srcElement"]["files"]){
                        			if(file.size <= authorized_size){
                        				(this as any).files.push(file);
                        			}
                        			else{
                        				refusedSize.push(file.name);
                        			}
                        		}
                        		if(refusedSize.length > 0){
                        			this.showToast("redused_file_max_size", refusedSize);
                        		}
                        		
                        		resolve();
                        '
                ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1571672370193]: 
                  beanData: '{"ionBean":"InvokeAction"}'
                  stack: C8Oforms.MobileApplication.Application.tick
            ↓Attr2 [ngx.components.UIAttribute-1550844560854]: 
              attrName: 
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:multiple
          ↓Attr [ngx.components.UIAttribute-1550844560863]: 
            attrName: class
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:image-upload
        ↓Directive1 [ngx.components.UIControlDirective-1551089223614]: 
          directiveName: If
          directiveSource: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:this.multiple == false && this.navParams.data['import'] == undefined
          ↓FormatLayout [ngx.components.UIDynamicAttr-1645090139832]: 
            beanData: '{"ionBean":"FormatLayout","TextAlignment":"plain:ion-text-center"}'
            comment: FormatLayout
            tagName: div
          ↓H1 [ngx.components.UIDynamicElement-1551089324590]: 
            beanData: '{"ionBean":"Heading1"}'
            tagName: h1
            ↓Text [ngx.components.UIText-1551089324593]: 
              i18n: true
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:'maxNumber' | translate
            ↓Style [ngx.components.UIStyle-1551089447381]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      'color: #ff8206;
                        font-size: 14px;
                        font-weight: 600;
                        font-style: normal;
                        font-stretch: normal;
                        line-height: normal;
                        letter-spacing: normal;
                      '
          ↓FormatLayout1 [ngx.components.UIDynamicAttr-1645090139834]: 
            beanData: '{"ionBean":"FormatLayout","TextAlignment":"plain:ion-text-center"}'
            comment: FormatLayout
            tagName: div
          ↓Button1 [ngx.components.UIDynamicElement-1571672560065]: 
            beanData: '{"ionBean":"Button"}'
            tagName: ion-button
            ↓Style [ngx.components.UIStyle-1571672560077]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '	border-radius: 34px;
                      	background-color: #ff8206;
                      	color:white;
                       	font-size: 14px;
                         	line-height: 1.79;
                        	letter-spacing: normal;
                        	text-align: center;
                      }
                      
                      .class1550744523916:hover {
                      	color:white !important;
                      	background-color: #333333 !important;
                      '
            ↓Attr [ngx.components.UIAttribute-1571672613913]: 
              attrName: '[disabled]'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:true
            ↓Text [ngx.components.UIText-1571672880562]: 
              i18n: true
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:'selectFileComp' | translate
    ↓Directive1 [ngx.components.UIControlDirective-1550827397067]: 
      directiveName: If
      directiveSource: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:this.files.length == 0
      ↓Div1 [ngx.components.UIDynamicElement-1550745120574]: 
        beanData: '{"ionBean":"DivTag"}'
        tagName: div
        ↓Style [ngx.components.UIStyle-1550745125707]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  'display: table !important;
                    width: 100% !important;
                    height: 100% !important;
                  '
        ↓Div [ngx.components.UIDynamicElement-1550743982605]: 
          beanData: '{"ionBean":"DivTag"}'
          tagName: div
          ↓Style [ngx.components.UIStyle-1550743990477]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    'display: table-cell;
                      vertical-align: middle;
                      text-align: center;
                    '
          ↓Directive [ngx.components.UIControlDirective-1606503266339]: 
            directiveName: If
            directiveSource: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:!this.global?.mobilePlat
            ↓GenericItem [ngx.components.UIDynamicElement-1550743839060]: 
              beanData: '{"ionBean":"GenericItem","IonSlot":"plain:start"}'
              isEnabled: false
              tagName: ion-item
              ↓Attr [ngx.components.UIAttribute-1550744040743]: 
                attrName: 
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:no-lines
            ↓GenericItem1 [ngx.components.UIDynamicElement-1550744446838]: 
              beanData: '{"ionBean":"GenericItem","IonSlot":"plain:start"}'
              isEnabled: false
              tagName: ion-item
              ↓FormatLayout [ngx.components.UIDynamicAttr-1645090139838]: 
                beanData: '{"ionBean":"FormatLayout","TextAlignment":"plain:ion-text-center"}'
                comment: FormatLayout
                tagName: div
              ↓H1 [ngx.components.UIDynamicElement-1550744446844]: 
                beanData: '{"ionBean":"Heading1"}'
                tagName: h1
                ↓Text [ngx.components.UIText-1550744446847]: 
                  i18n: true
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:'-- ' + ('or' | translate) + ' --'
                ↓Style [ngx.components.UIStyle-1550744446853]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          'color: #aaa;
                          '
              ↓Attr [ngx.components.UIAttribute-1550744446850]: 
                attrName: 
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:no-lines
            ↓H1 [ngx.components.UIDynamicElement-1550743864082]: 
              beanData: '{"ionBean":"Heading1"}'
              tagName: h1
              ↓Text [ngx.components.UIText-1550743870532]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:'dragHere' | translate
              ↓FormatLayout [ngx.components.UIDynamicAttr-1645090139836]: 
                beanData: '{"ionBean":"FormatLayout","TextAlignment":"plain:ion-text-center"}'
                comment: FormatLayout
                tagName: div
              ↓Style [ngx.components.UIStyle-1550744055828]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        'color: #aaa;
                        '
            ↓H11 [ngx.components.UIDynamicElement-1646751332755]: 
              beanData: '{"ionBean":"Heading1"}'
              tagName: h1
              ↓Text [ngx.components.UIText-1646751332758]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:'-- ' + ('or' | translate) + ' --'
              ↓Style [ngx.components.UIStyle-1646751332761]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        'color: #aaa;
                        '
          ↓Div [ngx.components.UIDynamicElement-1550824678510]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓FormatLayout [ngx.components.UIDynamicAttr-1645090139841]: 
              beanData: '{"ionBean":"FormatLayout","TextAlignment":"plain:ion-text-center"}'
              comment: FormatLayout
              tagName: div
            ↓Tag [ngx.components.UIElement-1550826498347]: 
              tagName: label
              ↓Attr [ngx.components.UIAttribute-1550826510177]: 
                attrName: for
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:file-input
              ↓Text [ngx.components.UIText-1550744610182]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:'selectFileComp' | translate
              ↓Style [ngx.components.UIStyle-1571670123227]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '	border-radius: 34px;
                        	background-color: #ff8206;
                        	color:white;
                         	font-size: 14px;
                           	line-height: 2.5;
                          	letter-spacing: normal;
                          	text-align: center;
                        }
                        
                        .class1550826498347:hover {
                        	color:white !important;
                        	background-color: #333333 !important;
                        '
              ↓Attr1 [ngx.components.UIAttribute-1586428596058]: 
                attrName: '[ngClass]'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:['button', 'button-md', 'button-default', 'button-default-md']
            ↓Attr [ngx.components.UIAttribute-1550824692316]: 
              attrName: class
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:image-upload
            ↓Directive [ngx.components.UIControlDirective-1551088562298]: 
              directiveName: If
              directiveSource: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:this.multiple
              ↓Tag [ngx.components.UIElement-1550769987021]: 
                selfClose: true
                tagName: input
                ↓Attr [ngx.components.UIAttribute-1550769997151]: 
                  attrName: type
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:file
                ↓Attr1 [ngx.components.UIAttribute-1550826605293]: 
                  attrName: id
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:file-input
                ↓Event [ngx.components.UIControlEvent-1550827104057]: 
                  attrName: (change)
                  eventName: (change)
                  ↓AddFIles [ngx.components.UICustomAction-1550827125213]: 
                    actionValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            '		
                            		const authorized_sizeMB = (this as any).max_size != undefined ? +(this as any).max_size : 5;
                            		const authorized_size = authorized_sizeMB * 1000000;
                            		var refusedSize = [];
                            		for(let file of event["srcElement"]["files"]){
                            			if(file.size <= authorized_size){
                            				(this as any).files.push(file);
                            			}
                            			else{
                            				refusedSize.push(file.name);
                            			}
                            		}
                            		if(refusedSize.length > 0){
                            			this.showToast("redused_file_max_size", refusedSize);
                            		}
                            		
                            		resolve();
                            '
                ↓Attr2 [ngx.components.UIAttribute-1550833129410]: 
                  attrName: 
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:multiple
            ↓Directive1 [ngx.components.UIControlDirective-1551088592324]: 
              directiveName: If
              directiveSource: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:this.multiple == false && this.navParams.data['import'] == undefined
              ↓Tag [ngx.components.UIElement-1551090330459]: 
                selfClose: true
                tagName: input
                ↓Attr [ngx.components.UIAttribute-1551090330462]: 
                  attrName: type
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:file
                ↓Attr1 [ngx.components.UIAttribute-1551090330465]: 
                  attrName: id
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:file-input
                ↓Event [ngx.components.UIControlEvent-1551090330468]: 
                  attrName: (change)
                  eventName: (change)
                  ↓AddFIles [ngx.components.UICustomAction-1551090330471]: 
                    actionValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            '		const authorized_sizeMB = (this as any).max_size != undefined ? +(this as any).max_size : 5;
                            		const authorized_size = authorized_sizeMB * 1000000;
                            		var refusedSize = [];
                            		for(let file of event["srcElement"]["files"]){
                            			if(file.size <= authorized_size){
                            				(this as any).files.push(file);
                            			}
                            			else{
                            				refusedSize.push(file.name);
                            			}
                            		}
                            		if(refusedSize.length > 0){
                            			this.showToast("redused_file_max_size", refusedSize);
                            		}
                            		
                            		resolve();
                            '
                    ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1571672387783]: 
                      beanData: '{"ionBean":"InvokeAction"}'
                      stack: C8Oforms.MobileApplication.Application.tick
                ↓Attr2 [ngx.components.UIAttribute-1574357568727]: 
                  attrName: accept
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:file
            ↓Directive11 [ngx.components.UIControlDirective-1574357701999]: 
              directiveName: If
              directiveSource: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:this.navParams.data['import'] != undefined
              ↓Tag [ngx.components.UIElement-1574357702002]: 
                selfClose: true
                tagName: input
                ↓Attr [ngx.components.UIAttribute-1574357702005]: 
                  attrName: type
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:file
                ↓Attr1 [ngx.components.UIAttribute-1574357702008]: 
                  attrName: id
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:file-input
                ↓Event [ngx.components.UIControlEvent-1574357702011]: 
                  attrName: (change)
                  eventName: (change)
                  ↓AddFIles [ngx.components.UICustomAction-1574357702014]: 
                    actionValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            		
                            		for(let file of event["srcElement"]["files"]){
                            		    this.files.push(file);
                            		}
                            		
                            		resolve();
                            
                    ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1574357702017]: 
                      beanData: '{"ionBean":"InvokeAction"}'
                      stack: C8Oforms.MobileApplication.Application.tick
                ↓Attr2 [ngx.components.UIAttribute-1574357702020]: 
                  attrName: accept
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:.c8oforms
            ↓Fragment [ngx.components.UICustom-1550825975584]: 
              htmlTemplate: |
                <div class="image-upload">
                    <input id="file-input" type="file"/>
                </div>
    ↓Event [ngx.components.UIControlEvent-1550842982420]: 
      attrName: (dragover)
      eventName: (dragover)
      ↓allowDrop [ngx.components.UICustomAction-1550842982423]: 
        actionValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                		    event.preventDefault();
                		    if (event.dataTransfer.types) {
                		        for (var i = 0; i < event.dataTransfer.types.length; i++) {
                		            if (event.dataTransfer.types[i] == "Files") {
                		                if(this.multiple || this.files.length == 0){
                		                   
                		                    document.getElementById("__C8oCOntent").classList.add("shadow2");
                		                }
                		                else{
                		                    resolve(false);
                		                    return false;   
                		                }
                		            }
                		        }
                		    }
                		resolve();
                
    ↓Event1 [ngx.components.UIControlEvent-1550842982426]: 
      attrName: (drop)
      eventName: (drop)
      ↓drop [ngx.components.UICustomAction-1550842982429]: 
        actionValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '		    if(this.navParams.data["import"] == true){
                		        event.preventDefault();
                		        console.log(event["dataTransfer"]);
                		        console.log(event["dataTransfer"].types);
                		        console.log(event["dataTransfer"].files);
                		        document.getElementById("__C8oCOntent").classList.remove("shadow2");
                                
                		        if(event["dataTransfer"].files != undefined){
                		            for (let item of event["dataTransfer"].files){
                		                if(item.name.endsWith(".c8oforms")){
                		                    (this as any).files.push(item);
                		                }
                		            }
                		        }
                		    }
                		    else{
                				const authorized_sizeMB = (this as any).max_size != undefined ? +(this as any).max_size : 5;
                				const authorized_size = authorized_sizeMB * 1000000;
                		        event.preventDefault();
                	            document.getElementById("__C8oCOntent").classList.remove("shadow2");
                	            if((this as any).multiple || (this as any).files.length == 0){
                	                var refusedSize = [];
                					if(event["dataTransfer"].files != undefined){
                		            	for (let file of event["dataTransfer"].files){
                							if(file.size <= authorized_size){
                								(this as any).files.push(file);
                							}
                							else{
                								refusedSize.push(file.name);
                							}
                						}
                					}	
                					if(refusedSize.length > 0){
                						this.showToast("redused_file_max_size", refusedSize);
                					}
                	            }
                	            else{
                	                return;
                	            }
                		    }
                
                		    
                		resolve();
                '
    ↓Attr [ngx.components.UIAttribute-1550843281343]: 
      attrName: id
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: plain:__C8oCOntent
    ↓Style [ngx.components.UIStyle-1550743943953]: 
      styleContent: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              height:100%;
              
    ↓Event2 [ngx.components.UIControlEvent-1550843824568]: 
      attrName: (dragleave)
      eventName: (dragleave)
      ↓dragleave [ngx.components.UICustomAction-1550843824571]: 
        actionValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                		    document.getElementById("__C8oCOntent").classList.remove("shadow2");
                
                
↓Footer [ngx.components.UIDynamicElement-1550740387799]: 
  beanData: '{"ionBean":"Footer"}'
  tagName: ion-footer
  ↓Attr [ngx.components.UIAttribute-1550743176042]: 
    attrName: 
    attrValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: plain:shadow
  ↓Div2 [ngx.components.UIDynamicElement-1550742585665]: 
    beanData: '{"ionBean":"DivTag"}'
    tagName: div
    ↓Div [ngx.components.UIDynamicElement-1550742466160]: 
      beanData: '{"ionBean":"DivTag"}'
      tagName: div
      ↓Style [ngx.components.UIStyle-1550742481458]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                'display: inline-block;
                '
      ↓Button [ngx.components.UIDynamicElement-1550742378713]: 
        beanData: '{"ionBean":"Button"}'
        isEnabled: false
        tagName: ion-button
        ↓Text [ngx.components.UIText-1550742387521]: 
          i18n: true
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'import' | translate
        ↓Event [ngx.components.UIControlEvent-1550829585722]: 
          attrName: (click)
          ↓CallFullSync [ngx.components.UIDynamicAction-1550829639959]: 
            beanData: '{"ionBean":"CallFullSyncAction","verb":"plain:put_attachment"}'
            isEnabled: false
          ↓postLocal [ngx.components.UICustomAction-1550829753238]: 
            actionValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    		    /*
                    		    let cpt = this.files.length;
                    		    let cpt2 = 0;
                    		    for(let file of this.files){
                    
                    		        let type = (file.type == undefined || file.type == "") ? "application/octet-stream":file.type;
                    		        let resultGet = await this.router.c8o.callJson("fs://c8oformstemp.put_attachment",
                    		                "docid",'temp_'+this.idSession,
                    		                "name",file.name,
                    		                "content_type", type,
                    		                "content", file)
                    		                .async();
                                		        cpt2 = cpt2 +1;
                                                if(cpt == cpt2){
                                                    resolve();
                                                }
                    		    }
                    		*/
                    		    /*this.post()
                    		    .then(()=>{
                    		        resolve();
                    		    })*/
                    		    /*if(this.files.length > 0){
                    		        this.global['inst'].unsetred(this.global["__tempITEMNAME"]);
                    		    }*/
                    		    this.global[this.idFiles][this.idItem] = this.global[this.idFiles][this.idItem].concat(this.files.slice(0));
                    		    resolve();
                    
            ↓If [ngx.components.UIDynamicAction-1551176286872]: 
              beanData: '{"ionBean":"IfAction","condition":"script:this.files.length > 0"}'
              ↓PublishEvent [ngx.components.UIDynamicAction-1551104826325]: 
                beanData: |
                  '{
                   "ionBean": "PublishEventAction",
                   "topic": "plain:updateRed",
                   "data": "script:this.name"
                  }'
            ↓CloseModal [ngx.components.UIDynamicAction-1550848503121]: 
              beanData: '{"ionBean":"CloseModalAction"}'
      ↓Button1 [ngx.components.UIDynamicElement-1550742407459]: 
        beanData: '{"ionBean":"Button"}'
        isEnabled: false
        tagName: ion-button
        ↓Event [ngx.components.UIControlEvent-1550745348101]: 
          attrName: (click)
          ↓CloseModal [ngx.components.UIDynamicAction-1550745355797]: 
            beanData: '{"ionBean":"CloseModalAction"}'
        ↓Text [ngx.components.UIText-1550742407462]: 
          i18n: true
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'cancel' | translate
      ↓Button2 [ngx.components.UIDynamicElement-1571672683357]: 
        beanData: '{"ionBean":"Button"}'
        tagName: ion-button
        ↓Style [ngx.components.UIStyle-1571672683369]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '	border-radius: 34px;
                  	background-color: #ff8206;
                  	color:white;
                   	font-size: 14px;
                     	line-height: 1.79;
                    	letter-spacing: normal;
                    	text-align: center;
                  }
                  
                  .class1571672683357:hover {
                  	color:white !important;
                  	background-color: #333333 !important;
                  '
        ↓Text [ngx.components.UIText-1571672697318]: 
          i18n: true
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'import' | translate
        ↓Event [ngx.components.UIControlEvent-1571672728752]: 
          attrName: (click)
          ↓postLocal [ngx.components.UICustomAction-1571672728758]: 
            actionValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    '		    if(this.navParams.data["import"]== true){
                    		        for(let elem of this.files){
                    		            try{
                    		                const reader = new FileReader();
                    
                    	                     // This fires after the blob has been read/loaded.
                    	                     reader.addEventListener(''loadend'', (e) => {
                    	                       const text = e.srcElement["result"];
                    	                       let form = JSON.parse(text);
                    	                       delete form._id;
                    	                       delete form._attachments;
                    	                       delete form.creator;
                    							// remove collabs and shared people
                    							form["collabs"] = [];
                    							form["collabsResponse"] = [];
                    							form["shared"] = [];
                    							form["c8oGrp"] = {};
                    							form["creator"] = page.global.settings["~c8oAcl"];
                    	                       
                    	                       form._id = ""+new Date().getTime();
                    	                       if(form.c8o_view_type_published_form != undefined){
                    	                           delete form.c8o_view_type_published_form;
                    	                       }
                    	                       form.c8o_view_type_drafts_form = true;
                    	                       if(form.wallpaper && form.wallpaper.enabled == true && form.wallpaper.type && form.wallpaper.type != "color" && form.wallpaper.b64 === undefined){
                    	                           form.wallpaper.enabled = false;
                    	                       }
                    	                       if(form.thumbnail && form.thumbnail.enabled == true && form.thumbnail.type && form.thumbnail.type != "color" && form.thumbnail.b64 === undefined){
                                                   form.thumbnail.enabled = false;
                                               }
                    	                       page.c8o.callJsonObject("fs://c8oforms_fs.post", form)
                    	                       .then((res)=>{
                    	                           new Promise(async (resolve1, reject1)=>{
                    	                               try{
                    	                                   if(res["id"] && form.wallpaper && form.wallpaper.enabled == true && form.wallpaper.b64)
                    	                                       await this.importAttachment(res["id"], "wallpaper", form.wallpaper.b64);
                    	                               }
                    	                               catch(e){
                    	                                   page.c8o.log.debug("Error: ", e);
                    	                               }
                    	                               try{
                    	                                   if(res["id"] && form.thumbnail && form.thumbnail.enabled == true && form.thumbnail.b64)
                    	                                       await this.importAttachment(res["id"], "thumbnail", form.thumbnail.b64);
                        	                           }
                                                       catch(e){
                                                           page.c8o.log.debug("Error: ", e);
                                                       }
                    	                               resolve1();
                    	                           })
                    	                           .then(()=>{
                    	                               resolve();
                    	                            })
                    	                            .catch(()=>{
                    	                                resolve();
                    	                            });
                    	                           return null;
                    	                       })
                    	                       .fail((err)=>{
                    	                           page.c8o.log.debug("Error: ", err);
                    	                       })
                    	                       
                    	                     });
                    	                     reader.readAsText(elem);
                    		            }
                    		            catch(e){
                    		                page.c8o.log.debug("Error: ", e);
                    		            }
                    		            
                    		        }
                    		    }
                    		    else if (this.navParams.data["pwa"] == true){
                                    this.global["pwafile"] = this.files.slice(0);
                                        
                                }
                    		    else if (this.navParams.data["barcode"] == true){
                    		        page.global["barcoderesult"] = this.files.slice(0);
                    		    }
                    		    else{
                    		        this.global[this.idFiles][this.idItem] = this.global[this.idFiles][this.idItem].concat(this.files.slice(0));
                    	                
                    		    }
                    		    resolve();
                    '
            ↓If [ngx.components.UIDynamicAction-1571672728761]: 
              beanData: '{"ionBean":"IfAction","condition":"script:this.files.length > 0"}'
              ↓PublishEvent [ngx.components.UIDynamicAction-1571672728764]: 
                beanData: |
                  '{
                   "ionBean": "PublishEventAction",
                   "topic": "plain:updateRed",
                   "data": "script:this.name"
                  }'
            ↓CloseModal [ngx.components.UIDynamicAction-1571672728767]: 
              beanData: '{"ionBean":"CloseModalAction"}'
      ↓Button21 [ngx.components.UIDynamicElement-1571672702219]: 
        beanData: '{"ionBean":"Button"}'
        tagName: ion-button
        ↓Style [ngx.components.UIStyle-1571672702222]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '	border-radius: 34px;
                  	background-color: #ff8206;
                  	color:white;
                   	font-size: 14px;
                     	line-height: 1.79;
                    	letter-spacing: normal;
                    	text-align: center;
                  }
                  
                  .class1571672702219:hover {
                  	color:white !important;
                  	background-color: #333333 !important;
                  '
        ↓Event [ngx.components.UIControlEvent-1571672702225]: 
          attrName: (click)
          ↓CloseModal [ngx.components.UIDynamicAction-1571672764713]: 
            beanData: '{"ionBean":"CloseModalAction"}'
        ↓Text [ngx.components.UIText-1571672772935]: 
          i18n: true
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'Cancel' | translate
    ↓Style [ngx.components.UIStyle-1550742597576]: 
      styleContent: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              ' position: relative;
               margin:10px;
              '
    ↓Directive [ngx.components.UIControlDirective-1606503360823]: 
      directiveName: If
      directiveSource: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:this.navParams?.data?.import != true
      ↓Div1 [ngx.components.UIDynamicElement-1550742474856]: 
        beanData: '{"ionBean":"DivTag"}'
        tagName: div
        ↓Style [ngx.components.UIStyle-1550742500074]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  'display: inline-block;
                  vertical-align: middle;
                  float:right;
                  
                  '
        ↓GenericItem1 [ngx.components.UIDynamicElement-1550742762978]: 
          beanData: '{"ionBean":"GenericItem","IonSlot":"plain:end"}'
          tagName: ion-item
          ↓FormatLayout [ngx.components.UIDynamicAttr-1645090139846]: 
            beanData: '{"ionBean":"FormatLayout","TextAlignment":"plain:ion-text-nowrap"}'
            comment: FormatLayout
            tagName: div
          ↓Text [ngx.components.UIText-1550741611277]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:'copie' | translate
          ↓Attr [ngx.components.UIAttribute-1550743406217]: 
            attrName: 
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:no-lines
          ↓Style [ngx.components.UIStyle-1550743742936]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    'color: #aaa;
                    '