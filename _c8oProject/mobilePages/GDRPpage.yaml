inAutoMenu: false
scriptContent: 
  - xmlizable: 
    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
    - com.twinsoft.convertigo.beans.common.FormatedContent: 
      →: |
        '/*Begin_c8o_PageImport*/
        /*End_c8o_PageImport*/
        /*Begin_c8o_PageDeclaration*/
        	public eList = (event: any)=>{
        		if(event.key === "Escape"){
        			//do something
        			console.log("esapce !!!");
        			let modalController = this.getInstance(ModalController);
                    modalController.dismiss(null);
        		}
        	}
        	/*End_c8o_PageDeclaration*/
        /*Begin_c8o_PageConstructor*/
        		document.addEventListener(''keydown'', this.eList);
        		/*End_c8o_PageConstructor*/
        /*Begin_c8o_PageFunction*/
        	/*End_c8o_PageFunction*/
        '
segment: path-to-gdrppage
title: Title for GDRPpage
↓Header [ngx.components.UIDynamicElement-1624961752459]: 
  beanData: '{"ionBean":"Header"}'
  tagName: ion-header
  ↓ToolBar [ngx.components.UIDynamicElement-1624961761369]: 
    beanData: '{"ionBean":"ToolBar"}'
    tagName: ion-toolbar
    ↓BarTitle [ngx.components.UIDynamicElement-1624961778430]: 
      beanData: '{"ionBean":"BarTitle"}'
      tagName: ion-title
      ↓Text [ngx.components.UIText-1624961778433]: 
        i18n: true
        textValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:gdrp
    ↓Attr [ngx.components.UIAttribute-1624961849180]: 
      attrName: 
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: plain:text-center
    ↓ButtonSetRight [ngx.components.UIDynamicElement-1666274238244]: 
      beanData: '{"ionBean":"ButtonSet","SetPosition":"plain:end"}'
      tagName: ion-buttons
      ↓ButtonRefresh [ngx.components.UIDynamicElement-1666274238406]: 
        beanData: |
          '{
           "ionBean": "Button",
           "ButtonFormType": "plain",
           "IonFill": "plain:clear"
          }'
        tagName: ion-button
        ↓Event [ngx.components.UIControlEvent-1666274238409]: 
          ↓CloseModal [ngx.components.UIDynamicAction-1666274317865]: 
            beanData: '{"ionBean":"CloseModalAction"}'
        ↓Icon [ngx.components.UIDynamicElement-1666274238418]: 
          beanData: '{"ionBean":"Icon","IconName":"plain:close-outline"}'
          tagName: ion-icon
          ↓Attr [ngx.components.UIAttribute-1666274238421]: 
            attrName: '[color]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: 'script:this.global.pwa ? this.local.policyColor : ''primary'''
          ↓Attr4 [ngx.components.UIAttribute-1666274238424]: 
            attrName: '[attr.aria-label]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.translate.instant('close')
        ↓Attr1 [ngx.components.UIAttribute-1666274238430]: 
          attrName: 
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:arrow
        ↓Attr2 [ngx.components.UIAttribute-1666274238433]: 
          attrName: placement
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:bottom
        ↓Span [ngx.components.UIDynamicElement-1666274238439]: 
          beanData: '{"ionBean":"SpanTag"}'
          tagName: span
          ↓Attr [ngx.components.UIAttribute-1666274238442]: 
            attrName: class
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:sr-only
          ↓Text [ngx.components.UIText-1666274238445]: 
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:'close' | translate
↓Content [ngx.components.UIDynamicElement-1624960848027]: 
  beanData: '{"ionBean":"Content"}'
  tagName: ion-content
  ↓Directive [ngx.components.UIControlDirective-1624960883907]: 
    directiveName: If
    directiveSource: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:this.global.c8oGDRPmenu != null
    ↓Div [ngx.components.UIDynamicElement-1624960962305]: 
      beanData: '{"ionBean":"DivTag"}'
      tagName: div
      ↓Attr [ngx.components.UIAttribute-1624960973841]: 
        attrName: '[innerHTML]'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:this.global.c8oGDRPmenu.text
↓PageEvent [ngx.components.UIPageEvent-1666273990492]: 
  viewEvent: onWillLeave
  ↓removeEscapeListener [ngx.components.UICustomAsyncAction-1666274006371]: 
    actionValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            		try {
            			document.removeEventListener('keydown', page.eList);
            		} catch (e) {
            		
            		} finally {
            			return;
            		}
            