segment: path-to-wallpaperselectioncustom
title: Title for WallpaperSelectionCustom
↓Content [ngx.components.UIDynamicElement-1586163442857]: 
  beanData: '{"ionBean":"Content"}'
  tagName: ion-content
  ↓Grid [ngx.components.UIDynamicElement-1586167281268]: 
    beanData: '{"ionBean":"Grid"}'
    tagName: ion-grid
    ↓GridRow [ngx.components.UIDynamicElement-1586167285603]: 
      beanData: '{"ionBean":"GridRow"}'
      tagName: ion-row
      ↓GridCol [ngx.components.UIDynamicElement-1586167288261]: 
        beanData: '{"ionBean":"GridCol"}'
        tagName: ion-col
        ↓FormatLayout [ngx.components.UIDynamicAttr-1645090139961]: 
          beanData: '{"ionBean":"FormatLayout","TextAlignment":"plain:ion-text-center"}'
          comment: FormatLayout
          tagName: div
        ↓Tag1 [ngx.components.UIElement-1586432279886]: 
          tagName: label
          ↓Attr [ngx.components.UIAttribute-1586432279889]: 
            attrName: for
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:file-input
          ↓Style [ngx.components.UIStyle-1586432279895]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    '	border-radius: 34px;
                    	background-color: #ff8206;
                    	color:white;
                     	font-size: 14px;
                       	line-height: 2.5;
                      	letter-spacing: normal;
                      	text-align: center;
                    }
                    
                    .class1550826498347:hover {
                    	color:white !important;
                    	background-color: #333333 !important;
                    '
          ↓Attr1 [ngx.components.UIAttribute-1586432279898]: 
            attrName: '[ngClass]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:['button', 'button-md', 'button-default', 'button-default-md']
          ↓Text [ngx.components.UIText-1586432293995]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:'selectImageComp' | translate
        ↓Tag [ngx.components.UIElement-1586167371009]: 
          selfClose: true
          tagName: input
          ↓Attr [ngx.components.UIAttribute-1586167371012]: 
            attrName: type
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:file
          ↓Attr1 [ngx.components.UIAttribute-1586167371015]: 
            attrName: id
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:file-input
          ↓Event [ngx.components.UIControlEvent-1586167371018]: 
            attrName: (change)
            eventName: (change)
            ↓CustomAction [ngx.components.UICustomAction-1586175070309]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      		   let file  = event["srcElement"]["files"][0];
                      		   var reader = new FileReader();
                      		    
                      		    reader.onload = function(e) {
                      		        page.global.filePrev = e.target["result"];
                      		    }
                      		    reader.readAsDataURL(file);
                      		    page.global.filePrevType = file.type;
                      		resolve();
                      
          ↓Attr2 [ngx.components.UIAttribute-1586167371027]: 
            attrName: accept
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:image/*
        ↓Fragment [ngx.components.UICustom-1586167453335]: 
          htmlTemplate: |
            <div class="image-upload">
                <input id="file-input" type="file"/>
            </div>
        ↓Attr [ngx.components.UIAttribute-1586167477314]: 
          attrName: class
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:image-upload
    ↓GridRow1 [ngx.components.UIDynamicElement-1586182722155]: 
      beanData: '{"ionBean":"GridRow"}'
      tagName: ion-row
      ↓GridCol [ngx.components.UIDynamicElement-1586182722158]: 
        beanData: '{"ionBean":"GridCol"}'
        tagName: ion-col
        ↓Directive [ngx.components.UIControlDirective-1586190758089]: 
          directiveName: If
          directiveSource: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:this.global.showO && this.global.filePrev == undefined
          ↓FSImage [ngx.components.UIDynamicElement-1586190862953]: 
            beanData: |
              '{
               "ionBean": "FSImage",
               "docid": "script:this.global.imgIndex",
               "attachment": "plain:wallpaper",
               "requestable": "plain:C8Oforms_NGX.c8oforms_fs"
              }'
            selfClose: true
            tagName: img
            ↓Style [ngx.components.UIStyle-1586190890638]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '	margin-left: auto;
                      	margin-right: auto;
                      	display: block;
                      	max-height: 55vh;
                      '
        ↓Directive1 [ngx.components.UIControlDirective-1586190784669]: 
          directiveName: If
          directiveSource: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:this.global.filePrev != undefined
          ↓Image [ngx.components.UIDynamicElement-1586182731844]: 
            beanData: '{"ionBean":"Image","url":"plain"}'
            selfClose: true
            tagName: img
            ↓Style [ngx.components.UIStyle-1586182922115]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '	margin-left: auto;
                      	margin-right: auto;
                      	display: block;
                      	max-height: 55vh;
                      '
            ↓Attr [ngx.components.UIAttribute-1634605725815]: 
              attrName: '[src]'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.router.sanitizer.bypassSecurityTrustResourceUrl(this.global.filePrev)