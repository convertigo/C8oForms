comment: Page to share a form, or add collaborators
scriptContent: 
  - xmlizable: 
    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
    - com.twinsoft.convertigo.beans.common.FormatedContent: 
      →: |
        /*Begin_c8o_PageImport*/
        /*End_c8o_PageImport*/
        /*Begin_c8o_PageDeclaration*/
        	/*End_c8o_PageDeclaration*/
        /*Begin_c8o_PageConstructor*/
        		this.local.form = this.navParams.data["selectedForm"];
        		this.local.emailSubject = this.local.form.name;
        		this.local.newUsersOrGroups = [];
        		this.local.collab = this.navParams.data["collab"] == true;
        		this.local.validators = [];
        		this.local.errorMessages = {
            	};
        		/*End_c8o_PageConstructor*/
        /*Begin_c8o_PageFunction*/
        	
        	
        	public isAcollab(id){
        		
        		if(this.local.collab == false && this.local.form.c8oCollabs != undefined && this.local.form.c8oCollabs[id] != undefined && this.local.form.c8oCollabs[id] == true){
        			return true
        		}
        		return false;
        	}
        	public ObjectKeys(obj:any){
        	    if(obj != undefined){
        	        return Object.keys(obj);
        	    }
        	    else{
        	        return []
        	        }
        	    
        	}
        	
        	public getTinyLang(lang){
        		switch(lang){
        			case "fr":
        				return "fr_FR";
        			case undefined:
        				return "en";
        			default:
        				return lang;
        		}
        	}
        	
        	public getTinyPathLang(lang){
        		switch(lang){
        			case "fr":
        				return "assets/i18n/fr_FR.js"
        			case "en":
        				return null;
        			case undefined:
        				return null;
        			default:
        				return "assets/i18n/" + lang+ ".js";
        		}
        	}
        	/*End_c8o_PageFunction*/
        
segment: path-to-manageaccessrights
title: Title for ManageAccessRights
↓Header [ngx.components.UIDynamicElement-1706106673203]: 
  beanData: '{"ionBean":"Header"}'
  tagName: ion-header
  ↓ToolBar [ngx.components.UIDynamicElement-1706106673206]: 
    beanData: '{"ionBean":"ToolBar"}'
    tagName: ion-toolbar
    ↓ButtonSetIcon [ngx.components.UIDynamicElement-1706107040551]: 
      beanData: '{"ionBean":"ButtonSet","SetPosition":"plain:start"}'
      tagName: ion-buttons
      ↓tag [ngx.components.UIControlDirective-1706107261233]: 
        directiveName: If
        directiveSource: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:this.local.collab else ElseBlock_1706107267419
        ↓Icon [ngx.components.UIDynamicElement-1706107343811]: 
          beanData: |
            '{
             "ionBean": "Icon",
             "IconName": "plain:key",
             "IconSlot": "plain:start"
            }'
          tagName: ion-icon
      ↓tag1 [ngx.components.UIElement-1706107267419]: 
        identifier: ElseBlock_1706107267419
        tagName: ng-template
        ↓Icon [ngx.components.UIDynamicElement-1706107253553]: 
          beanData: |
            '{
             "ionBean": "Icon",
             "IconName": "plain:share-social-outline",
             "IconSlot": "plain:start"
            }'
          tagName: ion-icon
    ↓BarTitle [ngx.components.UIDynamicElement-1706106673224]: 
      beanData: '{"ionBean":"BarTitle"}'
      tagName: ion-title
      ↓Text [ngx.components.UIText-1706106673227]: 
        i18n: true
        textValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: 'script:(this.local.collab ? ''Add_collaborators'' : ''share_form'') | translate'
    ↓ButtonSetClose [ngx.components.UIDynamicElement-1706106673209]: 
      beanData: '{"ionBean":"ButtonSet","SetPosition":"plain:end"}'
      tagName: ion-buttons
      ↓Button [ngx.components.UIDynamicElement-1706106673212]: 
        beanData: '{"ionBean":"Button"}'
        tagName: ion-button
        ↓Icon [ngx.components.UIDynamicElement-1706106673215]: 
          beanData: '{"ionBean":"Icon","IconName":"plain:close"}'
          tagName: ion-icon
        ↓Event [ngx.components.UIControlEvent-1706106673218]: 
          ↓CloseModal [ngx.components.UIDynamicAction-1706106673221]: 
            beanData: '{"ionBean":"CloseModalAction"}'
↓Content [ngx.components.UIDynamicElement-1591801107968]: 
  beanData: '{"ionBean":"Content"}'
  tagName: ion-content
  ↓Grid1Spinner [ngx.components.UIDynamicElement-1591962005113]: 
    beanData: '{"ionBean":"Grid","Height":"plain:100%"}'
    tagName: ion-grid
    ↓GridRow [ngx.components.UIDynamicElement-1591962005116]: 
      beanData: |
        '{
         "ionBean": "GridRow",
         "FlexJustifyContent": "plain:ion-justify-content-center",
         "FlexAlignement": "plain:ion-align-items-center"
        }'
      tagName: ion-row
      ↓GridCol [ngx.components.UIDynamicElement-1591962005119]: 
        beanData: |
          '{
           "ionBean": "GridCol",
           "FlexAlignement": "plain:ion-align-self-center",
           "Size": "plain:12"
          }'
        tagName: ion-col
        ↓Div [ngx.components.UIDynamicElement-1591962005122]: 
          beanData: '{"ionBean":"DivTag"}'
          tagName: div
          ↓FragmentSpinner [ngx.components.UICustom-1591962005125]: 
            htmlTemplate: <div  class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>
          ↓Style [ngx.components.UIStyle-1591962005128]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    text-align:center;
                    
    ↓Attr [ngx.components.UIAttribute-1591962005131]: 
      attrName: '*ngIf'
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: plain:this.local.spinner == true
    ↓Style [ngx.components.UIStyle-1591962005134]: 
      styleContent: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              height:100%;
              
  ↓Directive [ngx.components.UIControlDirective-1591962014581]: 
    directiveName: If
    directiveSource: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:this.local.spinner == false && this.local.grp != undefined
    ↓Directive2 [ngx.components.UIControlDirective-1619512288919]: 
      directiveName: If
      directiveSource: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:this.local.collab else ElseBlock_1619512311396
      ↓FormatLayout [ngx.components.UIDynamicAttr-1645090139984]: 
        beanData: '{"ionBean":"FormatLayout","TextAlignment":"plain:ion-text-justify"}'
        comment: FormatLayout
        tagName: div
      ↓Icon1 [ngx.components.UIDynamicElement-1619512400529]: 
        beanData: '{"ionBean":"Icon","IconName":"plain:md-send"}'
        tagName: ion-icon
      ↓H2 [ngx.components.UIDynamicElement-1619512400532]: 
        beanData: '{"ionBean":"Heading2"}'
        tagName: h2
        ↓Text [ngx.components.UIText-1619512400535]: 
          i18n: true
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:translate.instant(this.local.collab ? 'Add_collaborators_to_this_form':'share_the_form')
        ↓Style [ngx.components.UIStyle-1619512400538]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  display:inline-block;
                  
                  
      ↓Div [ngx.components.UIDynamicElement-1621411644791]: 
        beanData: '{"ionBean":"DivTag"}'
        tagName: div
        ↓Attr [ngx.components.UIAttribute-1621411656863]: 
          attrName: '[innerHTML]'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:this.router.sanitizer.bypassSecurityTrustHtml(this.translate.instant('desc_sharing_collab'))
        ↓Attr1 [ngx.components.UIAttribute-1621412148085]: 
          attrName: '[ngClass]'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'styledivnormal'
      ↓DivAddPersonOrGRP [ngx.components.UIDynamicElement-1619512400541]: 
        beanData: '{"ionBean":"DivTag"}'
        tagName: div
        ↓UseSharedComponent [ngx.components.UIUseShared-1619512400544]: 
          sharedcomponent: C8Oforms.MobileApplication.Application.ngxTagInputCustomC8oForms
          ↓items [ngx.components.UIUseVariable-1619512400547]: 
            binding: twoWayBinding
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.local.newUsersOrGroups
          ↓inputtext [ngx.components.UIUseVariable-1619512400550]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:''
          ↓theme [ngx.components.UIUseVariable-1619512400553]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:'bootstrap'
          ↓maxItems [ngx.components.UIUseVariable-1619512400556]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:100
          ↓placeholder [ngx.components.UIUseVariable-1619512400559]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:translate.instant('Add_people_and_groups')
          ↓secondaryPlaceholder [ngx.components.UIUseVariable-1619512400562]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:translate.instant('Add_people_and_groups')
          ↓editableTag [ngx.components.UIUseVariable-1619512400565]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:true
          ↓removableTag [ngx.components.UIUseVariable-1619512400568]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:true
          ↓itemIdentifyBy [ngx.components.UIUseVariable-1619512400571]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:'value'
          ↓itemDisplayBy [ngx.components.UIUseVariable-1619512400574]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:'display'
          ↓autocompleteItems [ngx.components.UIUseVariable-1619512400577]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.local.grp
          ↓onlyFromAutocomplete [ngx.components.UIUseVariable-1619512400580]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.local.collab
          ↓showAutoCompleteDropdownIfEmpty [ngx.components.UIUseVariable-1619512400583]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:true
          ↓errorMessages [ngx.components.UIUseVariable-1619512400589]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.local.errorMessages
          ↓validators [ngx.components.UIUseVariable-1619512400592]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.local.validators
          ↓Event1 [ngx.components.UIControlEvent-1646929701366]: 
            attrName: (ngxTagInputAdded)
            eventName: ngxTagInputAdded
            ↓CustomAsyncAction [ngx.components.UICustomAsyncAction-1646929795322]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      		var toast = false;
                      		try {
                      			//_this.local.grp == users from dropdown list
                      			// _this.local.existingGrpsOrUsersArray == user already shared
                      			// this.local.newUsersOrGroups users added
                      			// this was added without auto complete
                      			if(event.type == undefined){
                      				// prevent from adding a user already existing
                      				let founded = false;
                      				this.local.existingGrpsOrUsersArray.forEach((element, index)=>{
                      					if(element.type == "user"){
                      						if(event.value == element.displayMail){
                      							founded = true;
                      						}
                      					}
                      				})
                      				if(founded){
                      					let indexToSplice = null;
                      					this.local.newUsersOrGroups.forEach((element, index)=>{
                      						if(element.value == event.value){
                      							indexToSplice = index;
                      						}
                      					})
                      					if(indexToSplice != null){
                      						this.local.newUsersOrGroups.splice(indexToSplice, 1);
                      						// toast it users already exists in list
                      						toast = true;
                      					}
                      				}
                      				else{
                      					founded = false;
                      					var elemToReplace = null;
                      					this.local.grp.forEach((element, index)=>{
                      						if(element.type == "user"){
                      							if(event.value == element.displayMail){
                      								founded = true;
                      								elemToReplace = element;
                      							}
                      						}
                      					});
                      					if(founded){
                      						let indexToSplice = null;
                      						this.local.newUsersOrGroups.forEach((element, index)=>{
                      							if(element.display == event.value){
                      								indexToSplice = index;
                      							}
                      						})
                      						if(indexToSplice != null){
                      							this.local.newUsersOrGroups.splice(indexToSplice, 1, elemToReplace);
                      							// toast it users already exists in list
                      						}
                      					}
                      				}	
                      			}
                      		} catch (e) {
                      		
                      		} finally {
                      			return toast;
                      		}
                      
              ↓If [ngx.components.UIDynamicAction-1646929912244]: 
                beanData: '{"ionBean":"IfAction"}'
                ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1646929912247]: 
                  beanData: '{"ionBean":"InvokeAction"}'
                  stack: C8Oforms.MobileApplication.Application.showToast
                  ↓msg [ngx.components.UIControlVariable-1646929912250]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:this.translate.instant('form_has_already_been_shared')
                  ↓duration [ngx.components.UIControlVariable-1646929912253]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'3000'
                  ↓position [ngx.components.UIControlVariable-1646929912256]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'bottom'
                  ↓cssClass [ngx.components.UIControlVariable-1646929912259]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'toastError'
        ↓Style [ngx.components.UIStyle-1619512400595]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '.ng2-tag-input{
                  	border-bottom: unset !important;
                  }
                  box-shadow: inset 0 -1px 0 0 var(--ion-color-greyButton) !important;
                  border-bottom-color: var(--ion-color-greyButton);
                  width:100%;
                  '
        ↓Attr1 [ngx.components.UIAttribute-1619512400598]: 
          attrName: '[ngClass]'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'styledivnormal c8o-ngxTag-larger'
      ↓FormatLayout1 [ngx.components.UIDynamicAttr-1645090139995]: 
        beanData: '{"ionBean":"FormatLayout","TextAlignment":"plain:ion-text-center"}'
        comment: FormatLayout
        tagName: div
      ↓Directive1 [ngx.components.UIControlDirective-1619512480263]: 
        directiveItemName: item
        directiveSource: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:this.local.newUsersOrGroups
        ↓GenericItem [ngx.components.UIDynamicElement-1619512480266]: 
          beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
          tagName: ion-item
          ↓AvatarItem [ngx.components.UIDynamicElement-1619512480269]: 
            beanData: '{"ionBean":"Avatar","IonSlot":"plain:start"}'
            tagName: ion-avatar
            ↓Image [ngx.components.UIDynamicElement-1619512480275]: 
              beanData: '{"ionBean":"Image","url":"script:item.picture != undefined && item.picture != '''' ? item.picture :  ''assets\/images\/svg\/icon\/icn_people_add.svg''"}'
              selfClose: true
              tagName: img
            ↓Style [ngx.components.UIStyle-1646931961299]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '/**
                       * Custom properties (sometimes referred to as CSS variables or cascading variables)
                       * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                       * They are set using custom property notation, e.g.: --main-color: black;
                       * and are accessed using the var() function, e.g.: color: var(--main-color);
                       * You can find below your component''s properties you can customize within the page.
                       * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                       * For more informations see https://ionicframework.com/docs/theming.
                      **/
                      //--border-radius	//Border radius of the avatar and inner image
                      margin-right:5px;
                      '
          ↓Label [ngx.components.UIDynamicElement-1619512480278]: 
            beanData: '{"ionBean":"Label"}'
            tagName: ion-label
            ↓Directive [ngx.components.UIControlDirective-1619512480281]: 
              directiveName: If
              directiveSource: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:item.type == 'user' else ElseBlock_1613496369569
              ↓H2 [ngx.components.UIDynamicElement-1619512480284]: 
                beanData: '{"ionBean":"Heading2"}'
                tagName: h2
                ↓Text [ngx.components.UIText-1619512480287]: 
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:item.displayName
              ↓Paragraph [ngx.components.UIDynamicElement-1619512480290]: 
                beanData: '{"ionBean":"Paragraph"}'
                tagName: p
                ↓Text [ngx.components.UIText-1619512480293]: 
                  i18n: true
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:item.displayMail
            ↓Tag [ngx.components.UIElement-1619512480296]: 
              identifier: ElseBlock_1613496369569
              tagName: ng-template
              ↓H2 [ngx.components.UIDynamicElement-1619512480299]: 
                beanData: '{"ionBean":"Heading2"}'
                tagName: h2
                ↓Text [ngx.components.UIText-1619512480302]: 
                  i18n: true
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:item.display
          ↓Attr [ngx.components.UIAttribute-1619512480305]: 
            attrName: 
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:no-lines
          ↓Style [ngx.components.UIStyle-1619512480308]: 
          ↓SelectContainer [ngx.components.UIDynamicElement-1619512480314]: 
            beanData: '{"ionBean":"Select","Interface":"plain:popover"}'
            tagName: ion-select
            ↓SelectOption [ngx.components.UIDynamicElement-1619512480317]: 
              beanData: '{"ionBean":"SelectOption","Value":"plain:Responses"}'
              tagName: ion-select-option
              ↓Text [ngx.components.UIText-1619512480320]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:Responses
            ↓SelectOption1 [ngx.components.UIDynamicElement-1619512480323]: 
              beanData: '{"ionBean":"SelectOption","Value":"plain:Edition"}'
              tagName: ion-select-option
              ↓Text [ngx.components.UIText-1619512480326]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:Edition
            ↓SelectOption2 [ngx.components.UIDynamicElement-1619512480329]: 
              beanData: '{"ionBean":"SelectOption","Value":"plain:Edition_Responses"}'
              tagName: ion-select-option
              ↓Text [ngx.components.UIText-1619512480332]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:Edition_Responses
            ↓Attr [ngx.components.UIAttribute-1619512480335]: 
              attrName: 
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:item-right
            ↓Attr1 [ngx.components.UIAttribute-1619512480338]: 
              attrName: '*ngIf'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:this.local.collab == true
            ↓Attr2 [ngx.components.UIAttribute-1619512480341]: 
              attrName: '[(ngModel)]'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:item.rights
          ↓Button [ngx.components.UIDynamicElement-1619512480344]: 
            beanData: '{"ionBean":"Button","IonFill":"plain:clear"}'
            tagName: ion-button
            ↓Attr [ngx.components.UIAttribute-1619512480347]: 
              attrName: slot
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:right
            ↓Icon [ngx.components.UIDynamicElement-1619512480350]: 
              beanData: '{"ionBean":"Icon","IconName":"plain:trash"}'
              tagName: ion-icon
            ↓Attr1 [ngx.components.UIAttribute-1619512480353]: 
              attrName: '[matTooltip]'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:'Revoke_rights' | translate
            ↓Attr11 [ngx.components.UIAttribute-1619512480356]: 
              attrName: 
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:arrow
            ↓Attr2 [ngx.components.UIAttribute-1619512480359]: 
              attrName: positionV
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:top
            ↓Event [ngx.components.UIControlEvent-1619512480362]: 
              ↓revokeRights [ngx.components.UICustomAction-1619512480365]: 
                actionValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '			let grpOrUserToRemove = {[vars.item.value]: false};
                        			
                        			page.c8o.callJsonObject("fs://c8oforms_fs.post",{
                                        "c8oGrp": grpOrUserToRemove,
                                        "_use_policy": "merge",
                                        "_id": page["navParams"]["data"]["existingGrps"]["_id"]
                                    })
                                    .then((res)=>{
                        				this.local.getFormUpdated(resolve)
                                        return null;
                                    })
                                    .fail((res)=>{
                                        resolve();
                                        console.log(res);
                                    })
                        '
                ↓item [ngx.components.UIControlVariable-1619512480368]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:item
            ↓Attr3 [ngx.components.UIAttribute-1619512480371]: 
              attrName: '[disabled]'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.isAcollab(item.value)
            ↓Style [ngx.components.UIStyle-1646933643526]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '/**
                       * Custom properties (sometimes referred to as CSS variables or cascading variables)
                       * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                       * They are set using custom property notation, e.g.: --main-color: black;
                       * and are accessed using the var() function, e.g.: color: var(--main-color);
                       * You can find below your component''s properties you can customize within the page.
                       * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                       * For more informations see https://ionicframework.com/docs/theming.
                      **/
                      //--background	//Background of the button
                      //--background-activated	//Background of the button when pressed. Note: setting this will interfere with the Material Design ripple
                      //--background-activated-opacity	//Opacity of the button when pressed
                      //--background-focused	//Background of the button when focused with the tab key
                      //--background-focused-opacity	//Opacity of the button when focused with the tab key
                      //--background-hover	//Background of the button on hover
                      //--background-hover-opacity	//Opacity of the background on hover
                      //--border-color	//Border color of the button
                      //--border-radius	//Border radius of the button
                      //--border-style	//Border style of the button
                      //--border-width	//Border width of the button
                      //--box-shadow	//Box shadow of the button
                      //--color	//Text color of the button
                      //--color-activated	//Text color of the button when pressed
                      //--color-focused	//Text color of the button when focused with the tab key
                      //--color-hover	//Text color of the button when hover
                      //--opacity	//Opacity of the button
                      //--padding-bottom	//Bottom padding of the button
                      //--padding-end	//Right padding if direction is left-to-right, and left padding if direction is right-to-left of the button
                      //--padding-start	//Left padding if direction is left-to-right, and right padding if direction is right-to-left of the button
                      //--padding-top	//Top padding of the button
                      //--ripple-color	//Color of the button ripple effect
                      //--transition	//Transition of the button
                      ion-icon{
                      	color: var(--ion-color-danger)
                      }
                      '
          ↓Attr1 [ngx.components.UIAttribute-1619512480374]: 
            attrName: '*ngIf'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:item.value != 'C8Oreserved_' + this.local.form.creator
      ↓Directive [ngx.components.UIControlDirective-1619512480377]: 
        directiveIndexName: i
        directiveItemName: item
        directiveSource: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:this.local.existingGrpsOrUsersArray
        ↓GenericItem [ngx.components.UIDynamicElement-1619512480380]: 
          beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
          tagName: ion-item
          ↓AvatarItem [ngx.components.UIDynamicElement-1619512480383]: 
            beanData: '{"ionBean":"Avatar"}'
            tagName: ion-avatar
            ↓Icon [ngx.components.UIDynamicElement-1619512480386]: 
              beanData: '{"ionBean":"Icon","IconName":"script:item.type == ''user'' ? ''md-person'' : ''md-people''"}'
              isEnabled: false
              tagName: ion-icon
            ↓Image [ngx.components.UIDynamicElement-1619512480389]: 
              beanData: '{"ionBean":"Image","url":"script:item.picture != undefined && item.picture != '''' ? item.picture :  ''assets\/images\/svg\/icon\/icn_people_add.svg''"}'
              selfClose: true
              tagName: img
          ↓Label [ngx.components.UIDynamicElement-1619512480392]: 
            beanData: '{"ionBean":"Label"}'
            tagName: ion-label
            ↓Directive [ngx.components.UIControlDirective-1619512480395]: 
              directiveName: If
              directiveSource: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:item.type == 'user' else ElseBlock_1613496369569
              ↓H2 [ngx.components.UIDynamicElement-1619512480398]: 
                beanData: '{"ionBean":"Heading2"}'
                tagName: h2
                ↓Text [ngx.components.UIText-1619512480401]: 
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:item.displayName
              ↓Paragraph [ngx.components.UIDynamicElement-1619512480404]: 
                beanData: '{"ionBean":"Paragraph"}'
                tagName: p
                ↓Text [ngx.components.UIText-1619512480407]: 
                  i18n: true
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:item.displayMail
            ↓Tag [ngx.components.UIElement-1619512480410]: 
              identifier: ElseBlock_1613496369569
              tagName: ng-template
              ↓H2 [ngx.components.UIDynamicElement-1619512480413]: 
                beanData: '{"ionBean":"Heading2"}'
                tagName: h2
                ↓Text [ngx.components.UIText-1619512480416]: 
                  i18n: true
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:item.display
          ↓Attr [ngx.components.UIAttribute-1619512480419]: 
            attrName: 
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:no-lines
          ↓Style [ngx.components.UIStyle-1619512480422]: 
          ↓SelectContainer [ngx.components.UIDynamicElement-1619512480425]: 
            beanData: '{"ionBean":"Select","Interface":"plain:popover"}'
            tagName: ion-select
            ↓SelectOption [ngx.components.UIDynamicElement-1619512480428]: 
              beanData: '{"ionBean":"SelectOption","Value":"plain:Responses"}'
              tagName: ion-select-option
              ↓Text [ngx.components.UIText-1619512480431]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:Responses
            ↓SelectOption1 [ngx.components.UIDynamicElement-1619512480434]: 
              beanData: '{"ionBean":"SelectOption","Value":"plain:Edition"}'
              tagName: ion-select-option
              ↓Text [ngx.components.UIText-1619512480437]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:Edition
            ↓SelectOption2 [ngx.components.UIDynamicElement-1619512480440]: 
              beanData: '{"ionBean":"SelectOption","Value":"plain:Edition_Responses"}'
              tagName: ion-select-option
              ↓Text [ngx.components.UIText-1619512480443]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:Edition_Responses
            ↓Attr [ngx.components.UIAttribute-1619512480446]: 
              attrName: 
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:item-right
            ↓Attr1 [ngx.components.UIAttribute-1619512480449]: 
              attrName: '*ngIf'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:this.local.collab == true
            ↓Attr2 [ngx.components.UIAttribute-1619512480452]: 
              attrName: '[(ngModel)]'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:item.rights
          ↓Button [ngx.components.UIDynamicElement-1619512480455]: 
            beanData: '{"ionBean":"Button","IonFill":"plain:clear"}'
            tagName: ion-button
            ↓Attr [ngx.components.UIAttribute-1619512480458]: 
              attrName: 
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:item-right
            ↓Icon [ngx.components.UIDynamicElement-1619512480461]: 
              beanData: '{"ionBean":"Icon","IconName":"plain:trash"}'
              tagName: ion-icon
            ↓Attr1 [ngx.components.UIAttribute-1619512480464]: 
              attrName: '[matTooltip]'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:'Revoke_rights' | translate
            ↓Attr11 [ngx.components.UIAttribute-1619512480467]: 
              attrName: 
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:arrow
            ↓Attr2 [ngx.components.UIAttribute-1619512480470]: 
              attrName: positionV
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:top
            ↓Event [ngx.components.UIControlEvent-1619512480473]: 
              ↓revokeRights [ngx.components.UICustomAction-1619512480476]: 
                actionValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        			this.local.grp.push(this.local.existingGrpsOrUsersArray[vars.index])
                        			this.local.existingGrpsOrUsersArray.splice(vars.index, 1);
                        			
                        
                ↓item [ngx.components.UIControlVariable-1619512480479]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:item
                ↓index [ngx.components.UIControlVariable-1619512480482]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:i
            ↓Attr3 [ngx.components.UIAttribute-1619512480485]: 
              attrName: '[disabled]'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.isAcollab(item.value)
            ↓Style [ngx.components.UIStyle-1646933567629]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '/**
                       * Custom properties (sometimes referred to as CSS variables or cascading variables)
                       * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                       * They are set using custom property notation, e.g.: --main-color: black;
                       * and are accessed using the var() function, e.g.: color: var(--main-color);
                       * You can find below your component''s properties you can customize within the page.
                       * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                       * For more informations see https://ionicframework.com/docs/theming.
                      **/
                      //--background	//Background of the button
                      //--background-activated	//Background of the button when pressed. Note: setting this will interfere with the Material Design ripple
                      //--background-activated-opacity	//Opacity of the button when pressed
                      //--background-focused	//Background of the button when focused with the tab key
                      //--background-focused-opacity	//Opacity of the button when focused with the tab key
                      //--background-hover	//Background of the button on hover
                      //--background-hover-opacity	//Opacity of the background on hover
                      //--border-color	//Border color of the button
                      //--border-radius	//Border radius of the button
                      //--border-style	//Border style of the button
                      //--border-width	//Border width of the button
                      //--box-shadow	//Box shadow of the button
                      //--color	//Text color of the button
                      //--color-activated	//Text color of the button when pressed
                      //--color-focused	//Text color of the button when focused with the tab key
                      //--color-hover	//Text color of the button when hover
                      //--opacity	//Opacity of the button
                      //--padding-bottom	//Bottom padding of the button
                      //--padding-end	//Right padding if direction is left-to-right, and left padding if direction is right-to-left of the button
                      //--padding-start	//Left padding if direction is left-to-right, and right padding if direction is right-to-left of the button
                      //--padding-top	//Top padding of the button
                      //--ripple-color	//Color of the button ripple effect
                      //--transition	//Transition of the button
                      	ion-icon{
                      		color: var(--ion-color-danger)
                      	}
                      '
          ↓Attr1 [ngx.components.UIAttribute-1619512480488]: 
            attrName: '*ngIf'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:item.value != 'C8Oreserved_' + this.local.form.creator
      ↓FormatLayout2 [ngx.components.UIDynamicAttr-1645090139997]: 
        beanData: '{"ionBean":"FormatLayout","TextAlignment":"plain:ion-text-center"}'
        comment: FormatLayout
        tagName: div
      ↓Directive2 [ngx.components.UIControlDirective-1619512480494]: 
        directiveIndexName: index2
        directiveItemName: item2
        directiveSource: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:this.local.invite_new
        ↓GenericItem [ngx.components.UIDynamicElement-1619512480497]: 
          beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
          tagName: ion-item
          ↓AvatarItem [ngx.components.UIDynamicElement-1619512480500]: 
            beanData: '{"ionBean":"Avatar"}'
            tagName: ion-avatar
            ↓Image [ngx.components.UIDynamicElement-1619512480503]: 
              beanData: '{"ionBean":"Image","url":"script:''assets\/images\/svg\/icon\/icn_people_add.svg''"}'
              selfClose: true
              tagName: img
          ↓Attr [ngx.components.UIAttribute-1619512480506]: 
            attrName: 
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:no-lines
          ↓Style [ngx.components.UIStyle-1619512480509]: 
          ↓H2 [ngx.components.UIDynamicElement-1619512480512]: 
            beanData: '{"ionBean":"Heading2"}'
            tagName: h2
            ↓Text [ngx.components.UIText-1619512480515]: 
              i18n: true
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:item2 + ' ' + this.translate.instant('invited')
          ↓Button [ngx.components.UIDynamicElement-1619512480518]: 
            beanData: '{"ionBean":"Button","IonFill":"plain:clear"}'
            tagName: ion-button
            ↓Attr [ngx.components.UIAttribute-1619512480521]: 
              attrName: 
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:item-end
            ↓Icon [ngx.components.UIDynamicElement-1619512480524]: 
              beanData: '{"ionBean":"Icon","IconName":"plain:trash"}'
              tagName: ion-icon
            ↓Attr1 [ngx.components.UIAttribute-1619512480527]: 
              attrName: '[matTooltip]'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:'Revoke_rights' | translate
            ↓Attr11 [ngx.components.UIAttribute-1619512480530]: 
              attrName: 
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:arrow
            ↓Attr2 [ngx.components.UIAttribute-1619512480533]: 
              attrName: positionV
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:top
            ↓Event [ngx.components.UIControlEvent-1619512480536]: 
              ↓revokeRights [ngx.components.UICustomAction-1619512480539]: 
                actionValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '			//let grpOrUserToRemove = {[vars.item.value]: false};
                        			let params = {
                                        "_use_policy": "merge",
                                        "_id": page["navParams"]["data"]["existingGrps"]["_id"]
                                    };
                        			const idToremove = this.local.invite_new[vars.index] + "_"+params["_id"];
                        			this.local.invite_new.splice(vars.index, 1);
                        			if(this.local.invite_new.length == 0){
                        				params["_use_merge_invited"] = "delete"
                        			}
                        			else{
                        				params["invited"] = this.local.invite_new;
                        				params["_use_merge_invited"] = "override"
                        			}
                        			
                        			page.c8o.callJsonObject("fs://c8oforms_fs.post",params)
                                    .then((res)=>{
                        				this.local.getFormUpdated(resolve);
                        				this.c8o.callJson("C8Oforms.RemoveNewUserSharing", "id", idToremove);
                                        return null;
                                    })
                                    .fail((res)=>{
                                        resolve();
                                        console.log(res);
                                    })
                        '
                ↓index [ngx.components.UIControlVariable-1619512480542]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:index2
            ↓Attr3 [ngx.components.UIAttribute-1619512480545]: 
              attrName: '[disabled]'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.isAcollab(item.value)
              isEnabled: false
            ↓Style [ngx.components.UIStyle-1646933662108]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '/**
                       * Custom properties (sometimes referred to as CSS variables or cascading variables)
                       * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                       * They are set using custom property notation, e.g.: --main-color: black;
                       * and are accessed using the var() function, e.g.: color: var(--main-color);
                       * You can find below your component''s properties you can customize within the page.
                       * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                       * For more informations see https://ionicframework.com/docs/theming.
                      **/
                      //--background	//Background of the button
                      //--background-activated	//Background of the button when pressed. Note: setting this will interfere with the Material Design ripple
                      //--background-activated-opacity	//Opacity of the button when pressed
                      //--background-focused	//Background of the button when focused with the tab key
                      //--background-focused-opacity	//Opacity of the button when focused with the tab key
                      //--background-hover	//Background of the button on hover
                      //--background-hover-opacity	//Opacity of the background on hover
                      //--border-color	//Border color of the button
                      //--border-radius	//Border radius of the button
                      //--border-style	//Border style of the button
                      //--border-width	//Border width of the button
                      //--box-shadow	//Box shadow of the button
                      //--color	//Text color of the button
                      //--color-activated	//Text color of the button when pressed
                      //--color-focused	//Text color of the button when focused with the tab key
                      //--color-hover	//Text color of the button when hover
                      //--opacity	//Opacity of the button
                      //--padding-bottom	//Bottom padding of the button
                      //--padding-end	//Right padding if direction is left-to-right, and left padding if direction is right-to-left of the button
                      //--padding-start	//Left padding if direction is left-to-right, and right padding if direction is right-to-left of the button
                      //--padding-top	//Top padding of the button
                      //--ripple-color	//Color of the button ripple effect
                      //--transition	//Transition of the button
                      ion-icon{
                      	color: var(--ion-color-danger)
                      }
                      '
    ↓Tag1 [ngx.components.UIElement-1619512311396]: 
      identifier: ElseBlock_1619512311396
      tagName: ng-template
      ↓DivFlexHeaderExplaination [ngx.components.UIDynamicElement-1706106548084]: 
        beanData: '{"ionBean":"DivTag"}'
        tagName: div
        ↓Style [ngx.components.UIStyle-1706106581972]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '	display: flex;
                  	flex-direction: column;
                  	border: 1px solid var(--ion-color-convertigo);
                  	border-radius:10px;
                  	margin: 10px 0;
                  	padding: 30px;
                  '
        ↓DivFlexTitle [ngx.components.UIDynamicElement-1706107586369]: 
          beanData: '{"ionBean":"DivTag"}'
          tagName: div
          ↓Style [ngx.components.UIStyle-1706107586372]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    '	display: flex;
                    	align-items: center;
                    '
          ↓DivIcon [ngx.components.UIDynamicElement-1706107601992]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓Icon [ngx.components.UIDynamicElement-1706107627640]: 
              beanData: '{"ionBean":"Icon","IconName":"script:this.local.pwa?.notAnonymous == true ? ''lock-closed-outline'' : ''lock-open-outline''"}'
              tagName: ion-icon
              ↓Style [ngx.components.UIStyle-1706107627643]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '	font-size: 26px;
                        	margin-right:20px;
                        '
          ↓DivTitle [ngx.components.UIDynamicElement-1706107607679]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓Heading [ngx.components.UIDynamicTag-1706107640537]: 
              beanData: '{"ionBean":"Heading"}'
              tagName: h1
              ↓Style [ngx.components.UIStyle-1706107640540]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        margin:0 !important;
                        
                        
              ↓Attr [ngx.components.UIAttribute-1706107640543]: 
                attrName: '[innerHTML]'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: 'script:this.router.sanitizer.bypassSecurityTrustHtml(this.local.pwa?.notAnonymous ? (''text_header_share_app'' | translate) : (''text_header_share_app_ano'' | translate))'
        ↓DivContent [ngx.components.UIDynamicElement-1706108106292]: 
          beanData: '{"ionBean":"DivTag"}'
          tagName: div
          ↓Tag [ngx.components.UIElement-1706108111580]: 
            tagName: ul
            ↓Tag [ngx.components.UIElement-1706108111583]: 
              tagName: li
              ↓Attr [ngx.components.UIAttribute-1706108111586]: 
                attrName: '[innerHTML]'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: 'script:this.router.sanitizer.bypassSecurityTrustHtml(this.local.pwa?.notAnonymous ? (''text_header_share_app_who_can_access'' | translate) : (''text_header_share_app_who_can_access_ano'' | translate))'
            ↓Tag2 [ngx.components.UIElement-1706108111589]: 
              tagName: li
              ↓Attr [ngx.components.UIAttribute-1706108111592]: 
                attrName: '[innerHTML]'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:'text_header_share_app_who_can_access_auth' | translate
              ↓Attr1 [ngx.components.UIAttribute-1706108111595]: 
                attrName: '*ngIf'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:this.local.collab == false && this.local.pwa?.notAnonymous == true
            ↓Tag1 [ngx.components.UIElement-1706108111598]: 
              tagName: li
              ↓Span [ngx.components.UIDynamicElement-1706108111601]: 
                beanData: '{"ionBean":"SpanTag"}'
                tagName: span
                ↓Attr [ngx.components.UIAttribute-1706108111604]: 
                  attrName: '[innerHTML]'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: 'script:this.router.sanitizer.bypassSecurityTrustHtml(this.local.pwa?.notAnonymous ? (''text_header_share_app_change_level_app_1'' | translate) : (''text_header_share_app_change_level_app_ano_1'' | translate))'
              ↓Tag [ngx.components.UIElement-1706108111607]: 
                tagName: a
                ↓Text [ngx.components.UIText-1706108111610]: 
                  i18n: true
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:text_header_share_app_change_level_app_2
                ↓Style [ngx.components.UIStyle-1706108111613]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          'color: var(--ion-color-convertigo);
                          cursor:pointer;
                          '
                ↓Event [ngx.components.UIControlEvent-1706108111616]: 
                  ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1706108111619]: 
                    beanData: '{"ionBean":"InvokeAction"}'
                    stack: C8Oforms.MobileApplication.Application.popOverCreatePwa
                    ↓selectedForm [ngx.components.UIControlVariable-1706108111622]: 
                      varValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:this.navParams.data.existingGrps
              ↓Span1 [ngx.components.UIDynamicElement-1706108111625]: 
                beanData: '{"ionBean":"SpanTag"}'
                tagName: span
                ↓Attr [ngx.components.UIAttribute-1706108111628]: 
                  attrName: '[innerHTML]'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: 'script:this.router.sanitizer.bypassSecurityTrustHtml(this.local.pwa?.notAnonymous ? (''text_header_share_app_change_level_app_3'' | translate) : (''text_header_share_app_change_level_app_ano_3'' | translate))'
          ↓Style [ngx.components.UIStyle-1706110053913]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    	margin-left:46px;
                    
      ↓DivFlexShareWithUserOrGroups [ngx.components.UIDynamicElement-1706108357527]: 
        beanData: '{"ionBean":"DivTag"}'
        tagName: div
        ↓Style [ngx.components.UIStyle-1706108357530]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '	display: flex;
                  	flex-direction: column;
                  	border: 1px solid var(--ion-color-btLight);
                  	border-radius:10px;
                  	margin: 10px 0;
                  	padding: 30px;
                  '
        ↓DivFlexTitle [ngx.components.UIDynamicElement-1706108357533]: 
          beanData: '{"ionBean":"DivTag"}'
          tagName: div
          ↓Style [ngx.components.UIStyle-1706108357536]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    '	display: flex;
                    	align-items: center;
                    '
          ↓DivIcon [ngx.components.UIDynamicElement-1706108357539]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓Icon [ngx.components.UIDynamicElement-1706108357542]: 
              beanData: '{"ionBean":"Icon","IconName":"plain:share-social-outline"}'
              tagName: ion-icon
              ↓Style [ngx.components.UIStyle-1706108357545]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '	font-size: 26px;
                        	margin-right:20px;
                        '
          ↓DivTitle [ngx.components.UIDynamicElement-1706108357548]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓Heading [ngx.components.UIDynamicTag-1706108357551]: 
              beanData: '{"ionBean":"Heading"}'
              tagName: h1
              ↓Style [ngx.components.UIStyle-1706108357554]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        margin:0 !important;
                        
                        
              ↓Attr1 [ngx.components.UIAttribute-1706109302723]: 
                attrName: '[innerHTML]'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:translate.instant('text_share_with_group_or_user')
        ↓DivContent [ngx.components.UIDynamicElement-1706108357560]: 
          beanData: '{"ionBean":"DivTag"}'
          tagName: div
          ↓Tag1 [ngx.components.UIElement-1706109376404]: 
            tagName: ul
            ↓Tag [ngx.components.UIElement-1706109376407]: 
              tagName: li
              ↓Attr [ngx.components.UIAttribute-1706109376410]: 
                attrName: '[innerHTML]'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:translate.instant('text_share_with_group_arg1')
            ↓Tag1 [ngx.components.UIElement-1706109376413]: 
              tagName: li
              ↓Attr [ngx.components.UIAttribute-1706109376416]: 
                attrName: '[innerHTML]'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:translate.instant('text_share_with_group_arg2')
          ↓DivAddPersonOrGRP [ngx.components.UIDynamicElement-1706109405552]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓UseSharedComponent [ngx.components.UIUseShared-1706109405555]: 
              sharedcomponent: C8Oforms.MobileApplication.Application.ngxTagInputCustomC8oForms
              ↓items [ngx.components.UIUseVariable-1706109405558]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.local.newUsersOrGroups
              ↓inputtext [ngx.components.UIUseVariable-1706109405561]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:''
              ↓theme [ngx.components.UIUseVariable-1706109405564]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:''
              ↓maxItems [ngx.components.UIUseVariable-1706109405567]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:100
              ↓placeholder [ngx.components.UIUseVariable-1706109405570]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:translate.instant('Add_people_and_groups')
              ↓secondaryPlaceholder [ngx.components.UIUseVariable-1706109405573]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:translate.instant('Add_people_and_groups')
              ↓editableTag [ngx.components.UIUseVariable-1706109405576]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:true
              ↓removableTag [ngx.components.UIUseVariable-1706109405579]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:true
              ↓itemIdentifyBy [ngx.components.UIUseVariable-1706109405582]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:'value'
              ↓itemDisplayBy [ngx.components.UIUseVariable-1706109405585]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:'display'
              ↓autocompleteItems [ngx.components.UIUseVariable-1706109405588]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.local.grp
              ↓onlyFromAutocomplete [ngx.components.UIUseVariable-1706109405591]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.local.collab
              ↓showAutoCompleteDropdownIfEmpty [ngx.components.UIUseVariable-1706109405594]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:true
              ↓errorMessages [ngx.components.UIUseVariable-1706109405597]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.local.errorMessages
              ↓validators [ngx.components.UIUseVariable-1706109405600]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.local.validators
            ↓Style [ngx.components.UIStyle-1706109405603]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '	display:block !important;
                      .ng2-tag-input{
                      	border-bottom: unset !important;
                      }
                      box-shadow: inset 0 -1px 0 0 var(--ion-color-greyButton) !important;
                      border-bottom-color: var(--ion-color-greyButton);
                      width:80%;
                      margin-left:0 !important;
                      '
            ↓Attr1 [ngx.components.UIAttribute-1706109405606]: 
              attrName: '[ngClass]'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:'styledivnormal c8o-ngxTag-larger'
          ↓Directive1 [ngx.components.UIControlDirective-1706109405609]: 
            directiveName: If
            directiveSource: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.local.newUsersOrGroups?.length > 0 && this.local.collab == false
            ↓Span [ngx.components.UIDynamicElement-1706109405612]: 
              beanData: '{"ionBean":"SpanTag"}'
              isEnabled: false
              tagName: span
              ↓Text [ngx.components.UIText-1706109405615]: 
                i18n: true
              ↓Attr [ngx.components.UIAttribute-1706109405618]: 
                attrName: '*ngIf'
            ↓Paragraph [ngx.components.UIDynamicElement-1706109405621]: 
              beanData: '{"ionBean":"Paragraph"}'
              isEnabled: false
              tagName: p
              ↓Text [ngx.components.UIText-1706109405624]: 
                comment: Faites glisser les éléments ci dessous vers la partie droite de l'écran pour les ajouter au formulaire
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:pwa_not_public
              ↓Style [ngx.components.UIStyle-1706109405627]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '	text-overflow: ellipsis !important;
                         	--max-lines: 3;
                         	color: #856404;
                            background-color: #fff3cd;
                            position: relative;
                            padding: .75rem 1.25rem;
                            margin-bottom: 1rem;
                            border: 1px solid transparent;
                            border-radius: .25rem;
                            position: -webkit-sticky;
                        	position: sticky;
                        	top: 0px;
                        	z-index:1000;
                        	 overflow: hidden;
                            display: -webkit-box;
                            -webkit-line-clamp: 3;
                            -webkit-box-orient: vertical;
                        '
              ↓Attr [ngx.components.UIAttribute-1706109405630]: 
                attrName: '*ngIf'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: 'plain: this.local.pwa?.notAnonymous'
              ↓Button [ngx.components.UIDynamicElement-1706109405633]: 
                beanData: '{"ionBean":"Button"}'
                isEnabled: false
                tagName: ion-button
                ↓Text [ngx.components.UIText-1706109405636]: 
                  i18n: true
              ↓Tag [ngx.components.UIElement-1706109405639]: 
                tagName: a
                ↓Text [ngx.components.UIText-1706109405642]: 
                  i18n: true
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:please_click_here
                ↓Style [ngx.components.UIStyle-1706109405645]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          'color: #856404;
                          }
                          .class1614601713621:hover {
                          	cursor:pointer;
                          '
                ↓Event [ngx.components.UIControlEvent-1706109405648]: 
                  ↓ModalPage [ngx.components.UIDynamicAction-1706109405651]: 
                    beanData: |
                      '{
                       "ionBean": "ModalAction",
                       "page": "plain:C8Oforms.MobileApplication.Application.CreatePwa",
                       "cssClass": "plain:"
                      }'
                    isEnabled: false
                  ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1706109405654]: 
                    beanData: '{"ionBean":"InvokeAction"}'
                    stack: C8Oforms.MobileApplication.Application.popOverCreatePwa
                    ↓selectedForm [ngx.components.UIControlVariable-1706109405657]: 
                      varValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:this.navParams.data.existingGrps
            ↓DivSendNotif [ngx.components.UIDynamicElement-1706109405660]: 
              beanData: '{"ionBean":"DivTag"}'
              tagName: div
              ↓GenericItem [ngx.components.UIDynamicElement-1706109405663]: 
                beanData: '{"ionBean":"GenericItem"}'
                tagName: ion-item
                ↓CheckBox [ngx.components.UIDynamicElement-1706109405666]: 
                  beanData: '{"ionBean":"CheckBox","ControlName":"plain:name1706109405666"}'
                  tagName: ion-checkbox
                  ↓Attr [ngx.components.UIAttribute-1706109405669]: 
                    attrName: '[(ngModel)]'
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:this.local.notif
                ↓Label [ngx.components.UIDynamicElement-1706109405672]: 
                  beanData: '{"ionBean":"Label"}'
                  tagName: ion-label
                  ↓Text [ngx.components.UIText-1706109405675]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:Send_a_notification
                  ↓Attr2 [ngx.components.UIAttribute-1706109405678]: 
                    attrName: '[ngClass]'
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'stylegenerictextnormalWithoutBorderBottom'
                    isEnabled: false
                ↓Attr2 [ngx.components.UIAttribute-1706109405681]: 
                  attrName: '[ngClass]'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:'stylegenerictextnormalWithoutBorderBottom'
                  isEnabled: false
                ↓Attr21 [ngx.components.UIAttribute-1706109405684]: 
                  attrName: '[ngClass]'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:'stylegenericcheckboxnormal'
                  isEnabled: false
                ↓Style [ngx.components.UIStyle-1706109405687]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          	.checkbox {
                          		opacity:1 !important;
                          	}
                          	.label{
                          		opacity:1 !important;
                          	}
                          
                          
                ↓Attr [ngx.components.UIAttribute-1706109405690]: 
                  attrName: 
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:no-lines
                ↓Style1 [ngx.components.UIStyle-1706109405693]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          	padding-left:0 !important;
                          	margin-left:0 !important;
                          
          ↓Directive [ngx.components.UIControlDirective-1706109405696]: 
            directiveName: If
            directiveSource: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.local.newUsersOrGroups?.length > 0 && this.local.notif == true && this.local.collab == false else ElseBlock_1613473667506
            ↓DivEmailSubject [ngx.components.UIDynamicElement-1706109405699]: 
              beanData: '{"ionBean":"DivTag"}'
              tagName: div
              ↓GenericItem1 [ngx.components.UIDynamicElement-1706109405702]: 
                beanData: '{"ionBean":"GenericItem"}'
                tagName: ion-item
                ↓Label [ngx.components.UIDynamicElement-1706109405705]: 
                  beanData: '{"ionBean":"Label","Position":"plain:stacked"}'
                  tagName: ion-label
                  ↓FormatLayout [ngx.components.UIDynamicAttr-1706109405708]: 
                    beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-capitalize"}'
                    comment: FormatLayout
                    tagName: div
                  ↓Text [ngx.components.UIText-1706109405711]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:subject
                  ↓Style [ngx.components.UIStyle-1706109405714]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            '/**
                             * Custom properties (sometimes referred to as CSS variables or cascading variables)
                             * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                             * They are set using custom property notation, e.g.: --main-color: black;
                             * and are accessed using the var() function, e.g.: color: var(--main-color);
                             * You can find below your component''s properties you can customize within the page.
                             * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                             * For more informations see https://ionicframework.com/docs/theming.
                            **/
                            //--color	//Color of the label
                            '
                ↓Attr2 [ngx.components.UIAttribute-1706109405717]: 
                  attrName: '[ngClass]'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:'stylegenerictexteditor'
                ↓Style [ngx.components.UIStyle-1706109405720]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          'width: 90%;
                          .label{
                          		margin-top: 0px !important;	
                          		margin-bottom: 0px !important;	
                          	}
                          '
                ↓TextInput [ngx.components.UIDynamicElement-1706109405723]: 
                  beanData: |
                    '{
                     "ionBean": "Input",
                     "ControlName": "plain:name1706109405723",
                     "Debounce": "plain:0"
                    }'
                  tagName: ion-input
                  ↓Attr [ngx.components.UIAttribute-1706109405726]: 
                    attrName: '[(ngModel)]'
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:this.local.emailSubject
                ↓Style1 [ngx.components.UIStyle-1706109405729]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          	padding-left:0 !important;
                          	margin-left:0 !important;
                          
            ↓DivEmailBody [ngx.components.UIDynamicElement-1706109405732]: 
              beanData: '{"ionBean":"DivTag"}'
              tagName: div
              ↓Label [ngx.components.UIDynamicElement-1706109405735]: 
                beanData: '{"ionBean":"Label"}'
                tagName: ion-label
                ↓FormatLayout [ngx.components.UIDynamicAttr-1706109405738]: 
                  beanData: '{"ionBean":"FormatLayout"}'
                  comment: FormatLayout
                  tagName: div
                ↓Text [ngx.components.UIText-1706109405741]: 
                  i18n: true
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:Email_body
                ↓Style [ngx.components.UIStyle-1706109405744]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '/**
                           * Custom properties (sometimes referred to as CSS variables or cascading variables)
                           * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                           * They are set using custom property notation, e.g.: --main-color: black;
                           * and are accessed using the var() function, e.g.: color: var(--main-color);
                           * You can find below your component''s properties you can customize within the page.
                           * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                           * For more informations see https://ionicframework.com/docs/theming.
                          **/
                          //--color	//Color of the label
                          '
              ↓UseSharedComponent [ngx.components.UIUseShared-1706109405747]: 
                sharedcomponent: lib_ExtendedComponents_ui_ngx.MobileApplication.Application.tinyMce
                ↓model [ngx.components.UIUseVariable-1706109405750]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this.local.emailBody
                ↓init [ngx.components.UIUseVariable-1706109405753]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: |
                          'script:{
                              plugins: ''preview paste importcss searchreplace autolink autosave save directionality code visualblocks visualchars fullscreen image link media template codesample table charmap hr pagebreak nonbreaking anchor toc insertdatetime advlist lists wordcount imagetools textpattern noneditable help charmap quickbars emoticons'',
                              imagetools_cors_hosts: [''picsum.photos''],
                              menubar: ''file edit view insert format tools table help'',
                              toolbar: ''undo redo | bold italic underline strikethrough | fontselect fontsizeselect formatselect | alignleft aligncenter alignright alignjustify | outdent indent |  numlist bullist | forecolor backcolor removeformat | pagebreak | charmap emoticons | fullscreen  preview save print | insertfile image media template link anchor codesample | ltr rtl'',
                              toolbar_sticky: true,
                              autosave_ask_before_unload: true,
                              autosave_interval: ''30s'',
                              autosave_prefix: ''{path}{query}-{id}-'',
                              autosave_restore_when_empty: false,
                              autosave_retention: ''2m'',
                              image_advtab: true,
                              content_css: [
                              ],
                              link_list: [
                                  { title: ''My page 1'', value: ''http://www.tinymce.com'' },
                                  { title: ''My page 2'', value: ''http://www.moxiecode.com'' }
                              ],
                              image_list: [
                                  { title: ''My page 1'', value: ''http://www.tinymce.com'' },
                                  { title: ''My page 2'', value: ''http://www.moxiecode.com'' }
                              ],
                              image_class_list: [
                                  { title: ''None'', value: '''' },
                                  { title: ''Some class'', value: ''class-name'' }
                              ],
                              importcss_append: true,
                              template_cdate_format: ''[Date Created (CDATE): %m/%d/%Y : %H:%M:%S]'',
                              template_mdate_format: ''[Date Modified (MDATE): %m/%d/%Y : %H:%M:%S]'',
                              height: 400,
                              image_caption: true,
                              quickbars_selection_toolbar: ''bold italic | quicklink h2 h3 blockquote quickimage quicktable'',
                              noneditable_noneditable_class: ''mceNonEditable'',
                              toolbar_mode: ''sliding'',
                              contextmenu: ''link image imagetools table'',
                              language: getTinyLang(this.global.settings.language),
                              language_url: getTinyPathLang(this.global.settings.language),
                             convert_urls: false
                          }'
                ↓disabled [ngx.components.UIUseVariable-1706109405756]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:''
                ↓apiKey [ngx.components.UIUseVariable-1706109405759]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:''
                ↓cloudChannel [ngx.components.UIUseVariable-1706109405762]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:''
                ↓disabled1 [ngx.components.UIUseVariable-1706109405765]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:''
                ↓id [ngx.components.UIUseVariable-1706109405768]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:''
                ↓initialValue [ngx.components.UIUseVariable-1706109405771]: 
                  isEnabled: false
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:''
                ↓inline [ngx.components.UIUseVariable-1706109405774]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:false
                ↓tagName [ngx.components.UIUseVariable-1706109405777]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:'div'
                ↓plugins [ngx.components.UIUseVariable-1706109405780]: 
                  isEnabled: false
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:['advlist autolink lists link image charmap print preview anchor','searchreplace visualblocks code fullscreen','insertdatetime media table paste code imagetools help wordcount']
                ↓toolbar [ngx.components.UIUseVariable-1706109405783]: 
                  isEnabled: false
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:'undo redo | formatselect | bold italic backcolor | alignleft aligncenter alignright alignjustify | \bullist numlist outdent indent | removeformat | link image | help'
                ↓ref [ngx.components.UIUseVariable-1706109405786]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:'emailSubject'
              ↓Attr2 [ngx.components.UIAttribute-1706109405789]: 
                attrName: '[ngClass]'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:'stylegenerictexteditor'
              ↓Style [ngx.components.UIStyle-1706109405792]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        	padding-left:0 !important;
                        	margin-left:0 !important;
                        
          ↓Tag2 [ngx.components.UIElement-1706109405795]: 
            identifier: ElseBlock_1613473667506
            tagName: ng-template
            ↓FormatLayout [ngx.components.UIDynamicAttr-1706109405798]: 
              beanData: '{"ionBean":"FormatLayout","TextAlignment":"plain:ion-text-center"}'
              comment: FormatLayout
              tagName: div
            ↓Directive1 [ngx.components.UIControlDirective-1706109405801]: 
              directiveItemName: item
              directiveSource: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.local.newUsersOrGroups
              ↓GenericItem [ngx.components.UIDynamicElement-1706109405804]: 
                beanData: '{"ionBean":"GenericItem"}'
                tagName: ion-item
                ↓AvatarItem [ngx.components.UIDynamicElement-1706109405807]: 
                  beanData: '{"ionBean":"Avatar"}'
                  tagName: ion-avatar
                  ↓Icon [ngx.components.UIDynamicElement-1706109405810]: 
                    beanData: '{"ionBean":"Icon","IconName":"script:item.type == ''user'' ? ''md-person'' : ''md-people''"}'
                    isEnabled: false
                    tagName: ion-icon
                  ↓Image [ngx.components.UIDynamicElement-1706109405813]: 
                    beanData: '{"ionBean":"Image","url":"script:item.picture != undefined && item.picture != '''' ? item.picture :  ''assets\/images\/svg\/icon\/icn_people_add.svg''"}'
                    selfClose: true
                    tagName: img
                ↓Label [ngx.components.UIDynamicElement-1706109405816]: 
                  beanData: '{"ionBean":"Label"}'
                  tagName: ion-label
                  ↓Directive [ngx.components.UIControlDirective-1706109405819]: 
                    directiveName: If
                    directiveSource: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:item.type == 'user' else ElseBlock_1613496369569
                    ↓H2 [ngx.components.UIDynamicElement-1706109405822]: 
                      beanData: '{"ionBean":"Heading2"}'
                      tagName: h2
                      ↓Text [ngx.components.UIText-1706109405825]: 
                        textValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:item.displayName
                    ↓Paragraph [ngx.components.UIDynamicElement-1706109405828]: 
                      beanData: '{"ionBean":"Paragraph"}'
                      tagName: p
                      ↓Text [ngx.components.UIText-1706109405831]: 
                        i18n: true
                        textValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:item.displayMail
                  ↓Tag [ngx.components.UIElement-1706109405834]: 
                    identifier: ElseBlock_1613496369569
                    tagName: ng-template
                    ↓H2 [ngx.components.UIDynamicElement-1706109405837]: 
                      beanData: '{"ionBean":"Heading2"}'
                      tagName: h2
                      ↓Text [ngx.components.UIText-1706109405840]: 
                        i18n: true
                        textValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:item.display
                ↓Attr [ngx.components.UIAttribute-1706109405843]: 
                  attrName: 
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:no-lines
                ↓Style [ngx.components.UIStyle-1706109405846]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '/**
                           * Custom properties (sometimes referred to as CSS variables or cascading variables)
                           * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                           * They are set using custom property notation, e.g.: --main-color: black;
                           * and are accessed using the var() function, e.g.: color: var(--main-color);
                           * You can find below your component''s properties you can customize within the page.
                           * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                           * For more informations see https://ionicframework.com/docs/theming.
                          **/
                          //--background	//Background of the item
                          //--background-activated	//Background of the item when pressed. Note: setting this will interfere with the Material Design ripple
                          //--background-activated-opacity	//Opacity of the item background when pressed
                          //--background-focused	//Background of the item when focused with the tab key
                          //--background-focused-opacity	//Opacity of the item background when focused with the tab key
                          //--background-hover	//Background of the item on hover
                          //--background-hover-opacity	//Opacity of the background of the item on hover
                          //--border-color	//Color of the item border
                          //--border-radius	//Radius of the item border
                          //--border-style	//Style of the item border
                          //--border-width	//Width of the item border
                          //--color	//Color of the item
                          //--color-activated	//Color of the item when pressed
                          //--color-focused	//Color of the item when focused with the tab key
                          //--color-hover	//Color of the item on hover
                          //--detail-icon-color	//Color of the item detail icon
                          //--detail-icon-font-size	//Font size of the item detail icon
                          //--detail-icon-opacity	//Opacity of the item detail icon
                          //--highlight-color-focused	//The color of the highlight on the item when focused
                          //--highlight-color-invalid	//The color of the highlight on the item when invalid
                          //--highlight-color-valid	//The color of the highlight on the item when valid
                          //--highlight-height	//The height of the highlight on the item
                          //--inner-border-width	//Width of the item inner border
                          //--inner-box-shadow	//Box shadow of the item inner
                          //--inner-padding-bottom	//Bottom padding of the item inner
                          //--inner-padding-end	//Right padding if direction is left-to-right, and left padding if direction is right-to-left of the item inner
                          //--inner-padding-start	//Left padding if direction is left-to-right, and right padding if direction is right-to-left of the item inner
                          //--inner-padding-top	//Top padding of the item inner
                          //--min-height	//Minimum height of the item
                          //--padding-bottom	//Bottom padding of the item
                          //--padding-end	//Right padding if direction is left-to-right, and left padding if direction is right-to-left of the item
                          //--padding-start	//Left padding if direction is left-to-right, and right padding if direction is right-to-left of the item
                          //--padding-top	//Top padding of the item
                          //--ripple-color	//Color of the item ripple effect
                          //--transition	//Transition of the item
                          '
                ↓Icon [ngx.components.UIDynamicElement-1706109405849]: 
                  beanData: '{"ionBean":"Icon"}'
                  isEnabled: false
                  tagName: ion-icon
                ↓SelectContainer [ngx.components.UIDynamicElement-1706109405852]: 
                  beanData: |
                    '{
                     "ionBean": "Select",
                     "ControlName": "plain:name1706109405852",
                     "Interface": "plain:popover"
                    }'
                  tagName: ion-select
                  ↓SelectOption [ngx.components.UIDynamicElement-1706109405855]: 
                    beanData: '{"ionBean":"SelectOption","Value":"plain:Responses"}'
                    tagName: ion-select-option
                    ↓Text [ngx.components.UIText-1706109405858]: 
                      i18n: true
                      textValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:Responses
                  ↓SelectOption1 [ngx.components.UIDynamicElement-1706109405861]: 
                    beanData: '{"ionBean":"SelectOption","Value":"plain:Edition"}'
                    tagName: ion-select-option
                    ↓Text [ngx.components.UIText-1706109405864]: 
                      i18n: true
                      textValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:Edition
                  ↓SelectOption2 [ngx.components.UIDynamicElement-1706109405867]: 
                    beanData: '{"ionBean":"SelectOption","Value":"plain:Edition_Responses"}'
                    tagName: ion-select-option
                    ↓Text [ngx.components.UIText-1706109405870]: 
                      i18n: true
                      textValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:Edition_Responses
                  ↓Attr [ngx.components.UIAttribute-1706109405873]: 
                    attrName: 
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:item-right
                  ↓Attr1 [ngx.components.UIAttribute-1706109405876]: 
                    attrName: '*ngIf'
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:this.local.collab == true
                  ↓Attr2 [ngx.components.UIAttribute-1706109405879]: 
                    attrName: '[(ngModel)]'
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:item.rights
                ↓Button [ngx.components.UIDynamicElement-1706109405882]: 
                  beanData: '{"ionBean":"Button"}'
                  tagName: ion-button
                  ↓Attr [ngx.components.UIAttribute-1706109405885]: 
                    attrName: 
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:item-right
                  ↓Icon [ngx.components.UIDynamicElement-1706109405888]: 
                    beanData: '{"ionBean":"Icon","IconName":"plain:trash"}'
                    tagName: ion-icon
                  ↓Attr1 [ngx.components.UIAttribute-1706109405891]: 
                    attrName: '[matTooltip]'
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'Revoke_rights' | translate
                  ↓Attr11 [ngx.components.UIAttribute-1706109405894]: 
                    attrName: 
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:arrow
                  ↓Attr2 [ngx.components.UIAttribute-1706109405897]: 
                    attrName: positionV
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:top
                  ↓Event [ngx.components.UIControlEvent-1706109405900]: 
                    ↓revokeRights [ngx.components.UICustomAction-1706109405903]: 
                      actionValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '			let grpOrUserToRemove = {[vars.item.value]: false};
                              			
                              			page.c8o.callJsonObject("fs://c8oforms_fs.post",{
                                              "c8oGrp": grpOrUserToRemove,
                                              "_use_policy": "merge",
                                              "_id": page["navParams"]["data"]["existingGrps"]["_id"]
                                          })
                                          .then((res)=>{
                              				this.local.getFormUpdated(resolve)
                                              return null;
                                          })
                                          .fail((res)=>{
                                              resolve();
                                              console.log(res);
                                          })
                              '
                      ↓item [ngx.components.UIControlVariable-1706109405906]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:item
                  ↓Attr3 [ngx.components.UIAttribute-1706109405909]: 
                    attrName: '[disabled]'
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:this.isAcollab(item.value)
                ↓Attr1 [ngx.components.UIAttribute-1706109405912]: 
                  attrName: '*ngIf'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:item.value != 'C8Oreserved_' + this.local.form.creator
            ↓Directive [ngx.components.UIControlDirective-1706109405915]: 
              directiveIndexName: i
              directiveItemName: item
              directiveSource: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.local.existingGrpsOrUsersArray
              ↓GenericItem [ngx.components.UIDynamicElement-1706109405918]: 
                beanData: '{"ionBean":"GenericItem"}'
                tagName: ion-item
                ↓AvatarItem [ngx.components.UIDynamicElement-1706109405921]: 
                  beanData: '{"ionBean":"Avatar"}'
                  tagName: ion-avatar
                  ↓Icon [ngx.components.UIDynamicElement-1706109405924]: 
                    beanData: '{"ionBean":"Icon","IconName":"script:item.type == ''user'' ? ''md-person'' : ''md-people''"}'
                    isEnabled: false
                    tagName: ion-icon
                  ↓Image [ngx.components.UIDynamicElement-1706109405927]: 
                    beanData: '{"ionBean":"Image","url":"script:item.picture != undefined && item.picture != '''' ? item.picture :  ''assets\/images\/svg\/icon\/icn_people_add.svg''"}'
                    selfClose: true
                    tagName: img
                ↓Label [ngx.components.UIDynamicElement-1706109405930]: 
                  beanData: '{"ionBean":"Label"}'
                  tagName: ion-label
                  ↓Directive [ngx.components.UIControlDirective-1706109405933]: 
                    directiveName: If
                    directiveSource: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:item.type == 'user' else ElseBlock_1613496369569
                    ↓H2 [ngx.components.UIDynamicElement-1706109405936]: 
                      beanData: '{"ionBean":"Heading2"}'
                      tagName: h2
                      ↓Text [ngx.components.UIText-1706109405939]: 
                        textValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:item.displayName
                    ↓Paragraph [ngx.components.UIDynamicElement-1706109405942]: 
                      beanData: '{"ionBean":"Paragraph"}'
                      tagName: p
                      ↓Text [ngx.components.UIText-1706109405945]: 
                        i18n: true
                        textValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:item.displayMail
                  ↓Tag [ngx.components.UIElement-1706109405948]: 
                    identifier: ElseBlock_1613496369569
                    tagName: ng-template
                    ↓H2 [ngx.components.UIDynamicElement-1706109405951]: 
                      beanData: '{"ionBean":"Heading2"}'
                      tagName: h2
                      ↓Text [ngx.components.UIText-1706109405954]: 
                        i18n: true
                        textValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:item.display
                ↓Attr [ngx.components.UIAttribute-1706109405957]: 
                  attrName: 
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:no-lines
                ↓Style [ngx.components.UIStyle-1706109405960]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '/**
                           * Custom properties (sometimes referred to as CSS variables or cascading variables)
                           * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                           * They are set using custom property notation, e.g.: --main-color: black;
                           * and are accessed using the var() function, e.g.: color: var(--main-color);
                           * You can find below your component''s properties you can customize within the page.
                           * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                           * For more informations see https://ionicframework.com/docs/theming.
                          **/
                          //--background	//Background of the item
                          //--background-activated	//Background of the item when pressed. Note: setting this will interfere with the Material Design ripple
                          //--background-activated-opacity	//Opacity of the item background when pressed
                          //--background-focused	//Background of the item when focused with the tab key
                          //--background-focused-opacity	//Opacity of the item background when focused with the tab key
                          //--background-hover	//Background of the item on hover
                          //--background-hover-opacity	//Opacity of the background of the item on hover
                          //--border-color	//Color of the item border
                          //--border-radius	//Radius of the item border
                          //--border-style	//Style of the item border
                          //--border-width	//Width of the item border
                          //--color	//Color of the item
                          //--color-activated	//Color of the item when pressed
                          //--color-focused	//Color of the item when focused with the tab key
                          //--color-hover	//Color of the item on hover
                          //--detail-icon-color	//Color of the item detail icon
                          //--detail-icon-font-size	//Font size of the item detail icon
                          //--detail-icon-opacity	//Opacity of the item detail icon
                          //--highlight-color-focused	//The color of the highlight on the item when focused
                          //--highlight-color-invalid	//The color of the highlight on the item when invalid
                          //--highlight-color-valid	//The color of the highlight on the item when valid
                          //--highlight-height	//The height of the highlight on the item
                          //--inner-border-width	//Width of the item inner border
                          //--inner-box-shadow	//Box shadow of the item inner
                          //--inner-padding-bottom	//Bottom padding of the item inner
                          //--inner-padding-end	//Right padding if direction is left-to-right, and left padding if direction is right-to-left of the item inner
                          //--inner-padding-start	//Left padding if direction is left-to-right, and right padding if direction is right-to-left of the item inner
                          //--inner-padding-top	//Top padding of the item inner
                          //--min-height	//Minimum height of the item
                          //--padding-bottom	//Bottom padding of the item
                          //--padding-end	//Right padding if direction is left-to-right, and left padding if direction is right-to-left of the item
                          //--padding-start	//Left padding if direction is left-to-right, and right padding if direction is right-to-left of the item
                          //--padding-top	//Top padding of the item
                          //--ripple-color	//Color of the item ripple effect
                          //--transition	//Transition of the item
                          '
                ↓SelectContainer [ngx.components.UIDynamicElement-1706109405963]: 
                  beanData: |
                    '{
                     "ionBean": "Select",
                     "ControlName": "plain:name1706109405963",
                     "Interface": "plain:popover"
                    }'
                  tagName: ion-select
                  ↓SelectOption [ngx.components.UIDynamicElement-1706109405966]: 
                    beanData: '{"ionBean":"SelectOption","Value":"plain:Responses"}'
                    tagName: ion-select-option
                    ↓Text [ngx.components.UIText-1706109405969]: 
                      i18n: true
                      textValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:Responses
                  ↓SelectOption1 [ngx.components.UIDynamicElement-1706109405972]: 
                    beanData: '{"ionBean":"SelectOption","Value":"plain:Edition"}'
                    tagName: ion-select-option
                    ↓Text [ngx.components.UIText-1706109405975]: 
                      i18n: true
                      textValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:Edition
                  ↓SelectOption2 [ngx.components.UIDynamicElement-1706109405978]: 
                    beanData: '{"ionBean":"SelectOption","Value":"plain:Edition_Responses"}'
                    tagName: ion-select-option
                    ↓Text [ngx.components.UIText-1706109405981]: 
                      i18n: true
                      textValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:Edition_Responses
                  ↓Attr [ngx.components.UIAttribute-1706109405984]: 
                    attrName: 
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:item-right
                  ↓Attr1 [ngx.components.UIAttribute-1706109405987]: 
                    attrName: '*ngIf'
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:this.local.collab == true
                  ↓Attr2 [ngx.components.UIAttribute-1706109405990]: 
                    attrName: '[(ngModel)]'
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:item.rights
                ↓Button [ngx.components.UIDynamicElement-1706109405993]: 
                  beanData: '{"ionBean":"Button"}'
                  tagName: ion-button
                  ↓Attr [ngx.components.UIAttribute-1706109405996]: 
                    attrName: 
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:item-right
                  ↓Icon [ngx.components.UIDynamicElement-1706109405999]: 
                    beanData: '{"ionBean":"Icon","IconName":"plain:trash"}'
                    tagName: ion-icon
                  ↓Attr1 [ngx.components.UIAttribute-1706109406002]: 
                    attrName: '[matTooltip]'
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'Revoke_rights' | translate
                  ↓Attr11 [ngx.components.UIAttribute-1706109406005]: 
                    attrName: 
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:arrow
                  ↓Attr2 [ngx.components.UIAttribute-1706109406008]: 
                    attrName: positionV
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:top
                  ↓Event [ngx.components.UIControlEvent-1706109406011]: 
                    ↓revokeRights [ngx.components.UICustomAction-1706109406014]: 
                      actionValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              			this.local.grp.push(this.local.existingGrpsOrUsersArray[vars.index])
                              			this.local.existingGrpsOrUsersArray.splice(vars.index, 1);
                              			
                              
                      ↓item [ngx.components.UIControlVariable-1706109406017]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:item
                      ↓index [ngx.components.UIControlVariable-1706109406020]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:i
                  ↓Attr3 [ngx.components.UIAttribute-1706109406023]: 
                    attrName: '[disabled]'
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:this.isAcollab(item.value)
                ↓Attr1 [ngx.components.UIAttribute-1706109406026]: 
                  attrName: '*ngIf'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:item.value != 'C8Oreserved_' + this.local.form.creator
            ↓FormatLayout1 [ngx.components.UIDynamicAttr-1706109406029]: 
              beanData: '{"ionBean":"FormatLayout","TextAlignment":"plain:ion-text-center"}'
              comment: FormatLayout
              tagName: div
            ↓Directive2 [ngx.components.UIControlDirective-1706109406032]: 
              directiveIndexName: index2
              directiveItemName: item2
              directiveSource: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.local.invite_new
              ↓GenericItem [ngx.components.UIDynamicElement-1706109406035]: 
                beanData: '{"ionBean":"GenericItem"}'
                tagName: ion-item
                ↓AvatarItem [ngx.components.UIDynamicElement-1706109406038]: 
                  beanData: '{"ionBean":"Avatar"}'
                  tagName: ion-avatar
                  ↓Image [ngx.components.UIDynamicElement-1706109406041]: 
                    beanData: '{"ionBean":"Image","url":"script:''assets\/images\/svg\/icon\/icn_people_add.svg''"}'
                    selfClose: true
                    tagName: img
                ↓Attr [ngx.components.UIAttribute-1706109406044]: 
                  attrName: 
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:no-lines
                ↓Style [ngx.components.UIStyle-1706109406047]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '/**
                           * Custom properties (sometimes referred to as CSS variables or cascading variables)
                           * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                           * They are set using custom property notation, e.g.: --main-color: black;
                           * and are accessed using the var() function, e.g.: color: var(--main-color);
                           * You can find below your component''s properties you can customize within the page.
                           * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                           * For more informations see https://ionicframework.com/docs/theming.
                          **/
                          //--background	//Background of the item
                          //--background-activated	//Background of the item when pressed. Note: setting this will interfere with the Material Design ripple
                          //--background-activated-opacity	//Opacity of the item background when pressed
                          //--background-focused	//Background of the item when focused with the tab key
                          //--background-focused-opacity	//Opacity of the item background when focused with the tab key
                          //--background-hover	//Background of the item on hover
                          //--background-hover-opacity	//Opacity of the background of the item on hover
                          //--border-color	//Color of the item border
                          //--border-radius	//Radius of the item border
                          //--border-style	//Style of the item border
                          //--border-width	//Width of the item border
                          //--color	//Color of the item
                          //--color-activated	//Color of the item when pressed
                          //--color-focused	//Color of the item when focused with the tab key
                          //--color-hover	//Color of the item on hover
                          //--detail-icon-color	//Color of the item detail icon
                          //--detail-icon-font-size	//Font size of the item detail icon
                          //--detail-icon-opacity	//Opacity of the item detail icon
                          //--highlight-color-focused	//The color of the highlight on the item when focused
                          //--highlight-color-invalid	//The color of the highlight on the item when invalid
                          //--highlight-color-valid	//The color of the highlight on the item when valid
                          //--highlight-height	//The height of the highlight on the item
                          //--inner-border-width	//Width of the item inner border
                          //--inner-box-shadow	//Box shadow of the item inner
                          //--inner-padding-bottom	//Bottom padding of the item inner
                          //--inner-padding-end	//Right padding if direction is left-to-right, and left padding if direction is right-to-left of the item inner
                          //--inner-padding-start	//Left padding if direction is left-to-right, and right padding if direction is right-to-left of the item inner
                          //--inner-padding-top	//Top padding of the item inner
                          //--min-height	//Minimum height of the item
                          //--padding-bottom	//Bottom padding of the item
                          //--padding-end	//Right padding if direction is left-to-right, and left padding if direction is right-to-left of the item
                          //--padding-start	//Left padding if direction is left-to-right, and right padding if direction is right-to-left of the item
                          //--padding-top	//Top padding of the item
                          //--ripple-color	//Color of the item ripple effect
                          //--transition	//Transition of the item
                          '
                ↓H2 [ngx.components.UIDynamicElement-1706109406050]: 
                  beanData: '{"ionBean":"Heading2"}'
                  tagName: h2
                  ↓Text [ngx.components.UIText-1706109406053]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:item2 + ' ' + this.translate.instant('invited')
                ↓Button [ngx.components.UIDynamicElement-1706109406056]: 
                  beanData: '{"ionBean":"Button"}'
                  tagName: ion-button
                  ↓Attr [ngx.components.UIAttribute-1706109406059]: 
                    attrName: 
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:item-end
                  ↓Icon [ngx.components.UIDynamicElement-1706109406062]: 
                    beanData: '{"ionBean":"Icon","IconName":"plain:trash"}'
                    tagName: ion-icon
                  ↓Attr1 [ngx.components.UIAttribute-1706109406065]: 
                    attrName: '[matTooltip]'
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'Revoke_rights' | translate
                  ↓Attr11 [ngx.components.UIAttribute-1706109406068]: 
                    attrName: 
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:arrow
                  ↓Attr2 [ngx.components.UIAttribute-1706109406071]: 
                    attrName: positionV
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:top
                  ↓Event [ngx.components.UIControlEvent-1706109406074]: 
                    ↓revokeRights [ngx.components.UICustomAction-1706109406077]: 
                      actionValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '			//let grpOrUserToRemove = {[vars.item.value]: false};
                              			let params = {
                                              "_use_policy": "merge",
                                              "_id": page["navParams"]["data"]["existingGrps"]["_id"]
                                          };
                              			const idToremove = this.local.invite_new[vars.index] + "_"+params["_id"];
                              			this.local.invite_new.splice(vars.index, 1);
                              			if(this.local.invite_new.length == 0){
                              				params["_use_merge_invited"] = "delete"
                              			}
                              			else{
                              				params["invited"] = this.local.invite_new;
                              				params["_use_merge_invited"] = "override"
                              			}
                              			
                              			page.c8o.callJsonObject("fs://c8oforms_fs.post",params)
                                          .then((res)=>{
                              				this.local.getFormUpdated(resolve);
                              				this.c8o.callJson("C8Oforms.RemoveNewUserSharing", "id", idToremove);
                                              return null;
                                          })
                                          .fail((res)=>{
                                              resolve();
                                              console.log(res);
                                          })
                              '
                      ↓index [ngx.components.UIControlVariable-1706109406080]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:index2
                  ↓Attr3 [ngx.components.UIAttribute-1706109406083]: 
                    attrName: '[disabled]'
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:this.isAcollab(item.value)
                    isEnabled: false
          ↓Style [ngx.components.UIStyle-1706109988105]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    	margin-left:46px;
                    
      ↓DivFlexLink [ngx.components.UIDynamicElement-1706110119765]: 
        beanData: '{"ionBean":"DivTag"}'
        tagName: div
        ↓Style [ngx.components.UIStyle-1706110119768]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '	display: flex;
                  	flex-direction: column;
                  	border: 1px solid var(--ion-color-btLight);
                  	border-radius:10px;
                  	margin: 10px 0;
                  	padding: 30px;
                  '
        ↓DivFlexTitle [ngx.components.UIDynamicElement-1706110119771]: 
          beanData: '{"ionBean":"DivTag"}'
          tagName: div
          ↓Style [ngx.components.UIStyle-1706110119774]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    '	display: flex;
                    	align-items: center;
                    '
          ↓DivIcon [ngx.components.UIDynamicElement-1706110119777]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓Icon [ngx.components.UIDynamicElement-1706110119780]: 
              beanData: '{"ionBean":"Icon","IconName":"plain:link-outline"}'
              tagName: ion-icon
              ↓Style [ngx.components.UIStyle-1706110119783]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '	font-size: 26px;
                        	margin-right:20px;
                        '
          ↓DivTitle [ngx.components.UIDynamicElement-1706110119786]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓Heading [ngx.components.UIDynamicTag-1706110119789]: 
              beanData: '{"ionBean":"Heading"}'
              tagName: h1
              ↓Style [ngx.components.UIStyle-1706110119792]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        margin:0 !important;
                        
                        
              ↓Text [ngx.components.UIText-1706110190986]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:text_share_link_auth
        ↓DivFlexContent [ngx.components.UIDynamicElement-1706110119798]: 
          beanData: '{"ionBean":"DivTag"}'
          tagName: div
          ↓Style [ngx.components.UIStyle-1706110120350]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    '	margin-left:46px;
                    	display: flex;
                    	align-items: center;
                    '
          ↓DivText [ngx.components.UIDynamicElement-1706110345243]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓Tag [ngx.components.UIElement-1706110212939]: 
              tagName: ul
              ↓Tag [ngx.components.UIElement-1706110212942]: 
                tagName: li
                ↓Attr [ngx.components.UIAttribute-1706110212945]: 
                  attrName: '[innerHTML]'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: 'script:translate.instant(this.local.pwa?.notAnonymous ? ''text_share_link_private_arg1'' : ''text_share_link_anonymous_arg1'')'
              ↓Tag1 [ngx.components.UIElement-1706110212948]: 
                tagName: li
                ↓Attr [ngx.components.UIAttribute-1706110212951]: 
                  attrName: '[innerHTML]'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: 'script:translate.instant(this.local.pwa?.notAnonymous ? ''text_share_link_private_arg2'' : ''text_share_link_anonymous_arg2'')'
            ↓Style [ngx.components.UIStyle-1706110514585]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '	flex-grow: 1;
                      '
            ↓DivFlexButtons [ngx.components.UIDynamicElement-1706110937268]: 
              beanData: '{"ionBean":"DivTag"}'
              tagName: div
              ↓Style [ngx.components.UIStyle-1706110945370]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '	display: flex;
                        	align-items: center;
                        	justify-content: space-evenly;
                        '
              ↓ButtonCopyLink [ngx.components.UIDynamicElement-1706110800271]: 
                beanData: '{"ionBean":"Button"}'
                tagName: ion-button
                ↓Icon [ngx.components.UIDynamicElement-1706110808070]: 
                  beanData: |
                    '{
                     "ionBean": "Icon",
                     "IconName": "plain:copy-outline",
                     "IconSlot": "plain:start"
                    }'
                  tagName: ion-icon
                ↓Text [ngx.components.UIText-1706110800274]: 
                  i18n: true
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:copy_the_link
                ↓Style [ngx.components.UIStyle-1706110800277]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          'vertical-align: middle;
                          text-transform: none !important;
                          flex: initial;
                          '
                ↓Event [ngx.components.UIControlEvent-1706110800280]: 
                  ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1706110800283]: 
                    beanData: '{"ionBean":"InvokeAction"}'
                    stack: C8Oforms.MobileApplication.Application.CopyLinkToClipBoard
                    ↓link [ngx.components.UIControlVariable-1706110800286]: 
                      varValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:this.local.linkAuth
              ↓ButtonOpen [ngx.components.UIDynamicElement-1706110979044]: 
                beanData: '{"ionBean":"Button"}'
                tagName: ion-button
                ↓Icon [ngx.components.UIDynamicElement-1706110979047]: 
                  beanData: |
                    '{
                     "ionBean": "Icon",
                     "IconName": "plain:open-outline",
                     "IconSlot": "plain:start"
                    }'
                  tagName: ion-icon
                ↓Text [ngx.components.UIText-1706110979050]: 
                  i18n: true
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:open_the_link
                ↓Style [ngx.components.UIStyle-1706110979053]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          'vertical-align: middle;
                          text-transform: none !important;
                          flex: initial;
                          '
                ↓Event [ngx.components.UIControlEvent-1706110979056]: 
                  ↓OpenLink [ngx.components.UICustomAsyncAction-1706111005003]: 
                    actionValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            		try {
                            			window.open(this.local.linkAuth, "_blank");
                            		} catch (e) {
                            		
                            		} finally {
                            			return;
                            		}
                            
          ↓DivLinkAndQR [ngx.components.UIDynamicElement-1706110363419]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓UseSharedComponent [ngx.components.UIUseShared-1706110399913]: 
              sharedcomponent: lib_ExtendedComponents_ui_ngx.MobileApplication.Application.angularxQRCode
              ↓qrdata [ngx.components.UIUseVariable-1706110399916]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.local.linkAuth
              ↓colordark [ngx.components.UIUseVariable-1706110399919]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:'#000000'
              ↓colorlight [ngx.components.UIUseVariable-1706110399922]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:'#FFFFFF'
              ↓allowEmptyString [ngx.components.UIUseVariable-1706110399925]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:false
              ↓imageHeight [ngx.components.UIUseVariable-1706110399928]: 
                comment: height of your image
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:128
              ↓imageWidth [ngx.components.UIUseVariable-1706110399931]: 
                comment: width of your image
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:128
              ↓errorCorrectionLevel [ngx.components.UIUseVariable-1706110399934]: 
                comment: QR Correction level ('L', 'M', 'Q', 'H')
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:'M'
              ↓elementType [ngx.components.UIUseVariable-1706110399937]: 
                comment: '''canvas'', ''svg'', ''img'', ''url'' (alias for ''img'')'
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:'svg'
              ↓alt [ngx.components.UIUseVariable-1706110399940]: 
                comment: HTML alt attribute (supported by img, url)
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:null
              ↓ariaLabel [ngx.components.UIUseVariable-1706110399943]: 
                comment: HTML aria-label attribute (supported by canvas, img, url)
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:null
              ↓cssClass [ngx.components.UIUseVariable-1706110399946]: 
                comment: CSS Class
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:null
              ↓imageSrc [ngx.components.UIUseVariable-1706110399949]: 
                comment: Link to your image
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:null
              ↓margin [ngx.components.UIUseVariable-1706110399952]: 
                comment: Define how much wide the quiet zone should be.
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:4
              ↓scale [ngx.components.UIUseVariable-1706110399955]: 
                comment: Scale factor. A value of 1 means 1px per modules (black dots).
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:4
              ↓title [ngx.components.UIUseVariable-1706110399958]: 
                comment: HTML title attribute (supported by canvas, img, url)
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:null
              ↓width [ngx.components.UIUseVariable-1706110399961]: 
                comment: Height/Width (any value)
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:128
            ↓Style [ngx.components.UIStyle-1706110608754]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '	cursor: pointer;
                      	flex-shrink: 0;
                      '
        ↓Attr [ngx.components.UIAttribute-1706175602010]: 
          attrName: '*ngIf'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:this.local.pwa?.notAnonymous == true
      ↓DivFlexLinkAno [ngx.components.UIDynamicElement-1706175050815]: 
        beanData: '{"ionBean":"DivTag"}'
        tagName: div
        ↓Style [ngx.components.UIStyle-1706175050818]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '	display: flex;
                  	flex-direction: column;
                  	border: 1px solid var(--ion-color-btLight);
                  	border-radius:10px;
                  	margin: 10px 0;
                  	padding: 30px;
                  '
        ↓DivFlexTitle [ngx.components.UIDynamicElement-1706175050821]: 
          beanData: '{"ionBean":"DivTag"}'
          tagName: div
          ↓Style [ngx.components.UIStyle-1706175050824]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    '	display: flex;
                    	align-items: center;
                    '
          ↓DivIcon [ngx.components.UIDynamicElement-1706175050827]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓Icon [ngx.components.UIDynamicElement-1706175050830]: 
              beanData: '{"ionBean":"Icon","IconName":"plain:link-outline"}'
              tagName: ion-icon
              ↓Style [ngx.components.UIStyle-1706175050833]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '	font-size: 26px;
                        	margin-right:20px;
                        '
          ↓DivTitle [ngx.components.UIDynamicElement-1706175050836]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓Heading [ngx.components.UIDynamicTag-1706175050839]: 
              beanData: '{"ionBean":"Heading"}'
              tagName: h1
              ↓Style [ngx.components.UIStyle-1706175050842]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        margin:0 !important;
                        
                        
              ↓Text [ngx.components.UIText-1706175050845]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:text_share_link_anonymous
        ↓DivFlexContent [ngx.components.UIDynamicElement-1706175050848]: 
          beanData: '{"ionBean":"DivTag"}'
          tagName: div
          ↓Style [ngx.components.UIStyle-1706175050851]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    '	margin-left:46px;
                    	display: flex;
                    	align-items: center;
                    '
          ↓DivText [ngx.components.UIDynamicElement-1706175050854]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓Style [ngx.components.UIStyle-1706175050872]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '	flex-grow: 1;
                      '
            ↓Tag [ngx.components.UIElement-1706175119720]: 
              tagName: ul
              ↓Tag [ngx.components.UIElement-1706175119723]: 
                tagName: li
                ↓Attr [ngx.components.UIAttribute-1706175119726]: 
                  attrName: '[innerHTML]'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: 'script:translate.instant(this.local.pwa?.notAnonymous ? ''text_share_link_private_arg1'' : ''text_share_link_anonymous_arg1'')'
              ↓Tag1 [ngx.components.UIElement-1706175119729]: 
                tagName: li
                ↓Attr [ngx.components.UIAttribute-1706175119732]: 
                  attrName: '[innerHTML]'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: 'script:translate.instant(this.local.pwa?.notAnonymous ? ''text_share_link_private_arg2'' : ''text_share_link_anonymous_arg2'')'
              ↓Tag11 [ngx.components.UIElement-1706175119735]: 
                tagName: li
                ↓Attr [ngx.components.UIAttribute-1706175119738]: 
                  attrName: '[innerHTML]'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:translate.instant('text_share_link_anonymous_arg3')
                ↓Attr1 [ngx.components.UIAttribute-1706175119741]: 
                  attrName: '*ngIf'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:this.local.pwa?.notAnonymous == true
            ↓DivFlexActivate [ngx.components.UIDynamicElement-1706176143982]: 
              beanData: '{"ionBean":"DivTag"}'
              tagName: div
              ↓Style [ngx.components.UIStyle-1706176143985]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '	display: flex;
                        	align-items: center;
                        	justify-content: flex-start;
                        '
              ↓Attr [ngx.components.UIAttribute-1706176170581]: 
                attrName: '*ngIf'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:this.local.pwa?.notAnonymous == true
              ↓DivToggle [ngx.components.UIDynamicElement-1706176205136]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓GenericItem [ngx.components.UIDynamicElement-1706176216031]: 
                  beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                  tagName: ion-item
                  ↓Label [ngx.components.UIDynamicElement-1706176216028]: 
                    beanData: '{"ionBean":"Label"}'
                    tagName: ion-label
                    ↓some_text [ngx.components.UIText-1706176216030]: 
                      textValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: 'script:(this.local.form?.sharedAnonymous ? ''linkShareDisable'': ''linkShareActive'' ) | translate'
                  ↓ToggleButton [ngx.components.UIDynamicElement-1706176223747]: 
                    beanData: |
                      '{
                       "ionBean": "Toggle",
                       "ControlName": "plain",
                       "SetPosition": "plain:start"
                      }'
                    tagName: ion-toggle
                    ↓attr [ngx.components.UIControlEvent-1706177136653]: 
                      attrName: (ngModelChange)
                      eventName: (ngModelChange)
                      ↓Show_Loading [ngx.components.UIDynamicAction-1706180343541]: 
                        beanData: |
                          '{
                           "ionBean": "ShowLoadingAction",
                           "message": "plain",
                           "duration": "plain",
                           "spinner": "plain:bubbles",
                           "cssClass": "plain:",
                           "backdropDismiss": "plain:false",
                           "keyboardClose": "plain:false"
                          }'
                        tagName: Show_Loading
                        ↓CallAPIV2_SetSharedAnonymous [ngx.components.UICustomAsyncAction-1706177151446]: 
                          actionValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  '		try {
                                  			let resp  = await page.c8o.callJsonObject("C8Oforms.APIV2_SetSharedAnonymous",{
                                  				id: page.local.form._id,
                                  				meta: JSON.stringify({sharedAnonymous : event})
                                  			}).async();
                                  			if(resp.res.unauthorized){
                                  				setTimeout(()=>{
                                  					this.local.form.sharedAnonymous = !this.local.form.sharedAnonymous;
                                  					page.ref.detectChanges();
                                  				})
                                  				return {error:"unauthorized"};
                                  			}
                                  			else{
                                  				setTimeout(()=>{
                                  					this.local.form.sharedAnonymous = resp.res.sharedAnonymous;
                                  					page.ref.detectChanges();
                                  				})
                                  			}
                                  		} catch (e) {
                                  			return {error:"unauthorized"};
                                  			setTimeout(()=>{
                                  				this.local.form.sharedAnonymous = !this.local.form.sharedAnonymous;
                                  				page.ref.detectChanges();
                                  			})
                                  			
                                  		}
                                  '
                          ↓Close_Loading [ngx.components.UIDynamicAction-1706180384880]: 
                            beanData: '{"ionBean":"CloseLoadingAction"}'
                            tagName: Close_Loading
                          ↓If [ngx.components.UIDynamicAction-1706180393843]: 
                            beanData: '{"ionBean":"IfAction","condition":"script:parent.out.error"}'
                            tagName: If
                            ↓Toast [ngx.components.UIDynamicAction-1706180417843]: 
                              beanData: |
                                '{
                                 "ionBean": "ToastAction",
                                 "message": "script:c8oPage.translate.instant(''error_occured'')",
                                 "cssClass": "plain:toastError"
                                }'
                              tagName: Toast
                    ↓_checked_ [ngx.components.UIAttribute-1706178918938]: 
                      attrName: '[(ngModel)]'
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:this.local.form.sharedAnonymous
                ↓Attr [ngx.components.UIAttribute-1706180105317]: 
                  attrName: '*ngIf'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:this.local.pwa?.notAnonymous == true
            ↓DivFlexButtons [ngx.components.UIDynamicElement-1706175050875]: 
              beanData: '{"ionBean":"DivTag"}'
              tagName: div
              ↓Style [ngx.components.UIStyle-1706175050878]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '	display: flex;
                        	align-items: center;
                        	justify-content: space-evenly;
                        '
              ↓ButtonCopyLink [ngx.components.UIDynamicElement-1706175050881]: 
                beanData: '{"ionBean":"Button","Disabled":"script:this.local.pwa?.notAnonymous == true && this.local.form?.sharedAnonymous == false"}'
                tagName: ion-button
                ↓Icon [ngx.components.UIDynamicElement-1706175050884]: 
                  beanData: |
                    '{
                     "ionBean": "Icon",
                     "IconName": "plain:copy-outline",
                     "IconSlot": "plain:start"
                    }'
                  tagName: ion-icon
                ↓Text [ngx.components.UIText-1706175050887]: 
                  i18n: true
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:copy_the_link
                ↓Style [ngx.components.UIStyle-1706175050890]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          'vertical-align: middle;
                          text-transform: none !important;
                          flex: initial;
                          '
                ↓Event [ngx.components.UIControlEvent-1706175050893]: 
                  ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1706175050896]: 
                    beanData: '{"ionBean":"InvokeAction"}'
                    stack: C8Oforms.MobileApplication.Application.CopyLinkToClipBoard
                    ↓link [ngx.components.UIControlVariable-1706175050899]: 
                      varValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:this.local.linkAnno
              ↓ButtonOpen [ngx.components.UIDynamicElement-1706175050902]: 
                beanData: '{"ionBean":"Button","Disabled":"script:this.local.pwa?.notAnonymous == true && this.local.form?.sharedAnonymous == false"}'
                tagName: ion-button
                ↓Icon [ngx.components.UIDynamicElement-1706175050905]: 
                  beanData: |
                    '{
                     "ionBean": "Icon",
                     "IconName": "plain:open-outline",
                     "IconSlot": "plain:start"
                    }'
                  tagName: ion-icon
                ↓Text [ngx.components.UIText-1706175050908]: 
                  i18n: true
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:open_the_link
                ↓Style [ngx.components.UIStyle-1706175050911]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          'vertical-align: middle;
                          text-transform: none !important;
                          flex: initial;
                          '
                ↓Event [ngx.components.UIControlEvent-1706175050914]: 
                  ↓OpenLink [ngx.components.UICustomAsyncAction-1706175050917]: 
                    actionValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            		try {
                            			window.open(this.local.linkAnno, "_blank");
                            		} catch (e) {
                            		
                            		} finally {
                            			return;
                            		}
                            
          ↓DivLinkAndQR [ngx.components.UIDynamicElement-1706175050920]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓UseSharedComponent [ngx.components.UIUseShared-1706175050923]: 
              sharedcomponent: lib_ExtendedComponents_ui_ngx.MobileApplication.Application.angularxQRCode
              ↓qrdata [ngx.components.UIUseVariable-1706175050926]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.local.linkAnno
              ↓colordark [ngx.components.UIUseVariable-1706175050929]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:'#000000'
              ↓colorlight [ngx.components.UIUseVariable-1706175050932]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:'#FFFFFF'
              ↓allowEmptyString [ngx.components.UIUseVariable-1706175050935]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:false
              ↓imageHeight [ngx.components.UIUseVariable-1706175050938]: 
                comment: height of your image
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:128
              ↓imageWidth [ngx.components.UIUseVariable-1706175050941]: 
                comment: width of your image
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:128
              ↓errorCorrectionLevel [ngx.components.UIUseVariable-1706175050944]: 
                comment: QR Correction level ('L', 'M', 'Q', 'H')
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:'M'
              ↓elementType [ngx.components.UIUseVariable-1706175050947]: 
                comment: '''canvas'', ''svg'', ''img'', ''url'' (alias for ''img'')'
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:'svg'
              ↓alt [ngx.components.UIUseVariable-1706175050950]: 
                comment: HTML alt attribute (supported by img, url)
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:null
              ↓ariaLabel [ngx.components.UIUseVariable-1706175050953]: 
                comment: HTML aria-label attribute (supported by canvas, img, url)
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:null
              ↓cssClass [ngx.components.UIUseVariable-1706175050956]: 
                comment: CSS Class
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:null
              ↓imageSrc [ngx.components.UIUseVariable-1706175050959]: 
                comment: Link to your image
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:null
              ↓margin [ngx.components.UIUseVariable-1706175050962]: 
                comment: Define how much wide the quiet zone should be.
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:4
              ↓scale [ngx.components.UIUseVariable-1706175050965]: 
                comment: Scale factor. A value of 1 means 1px per modules (black dots).
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:4
              ↓title [ngx.components.UIUseVariable-1706175050968]: 
                comment: HTML title attribute (supported by canvas, img, url)
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:null
              ↓width [ngx.components.UIUseVariable-1706175050971]: 
                comment: Height/Width (any value)
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:128
              ↓Attr [ngx.components.UIAttribute-1706175939918]: 
                attrName: '*ngIf'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:!(this.local.pwa?.notAnonymous == true && this.local.form?.sharedAnonymous == false)
            ↓Style [ngx.components.UIStyle-1706175050974]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '	cursor: pointer;
                      	flex-shrink: 0;
                      	min-width:128px;
                      '
↓PageEvent [ngx.components.UIPageEvent-1591801288472]: 
  viewEvent: onWillLoad
  ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1591962058419]: 
    beanData: '{"ionBean":"InvokeAction"}'
    stack: C8Oforms.MobileApplication.Application.setSpinner
    ↓CallAPIV2_GetManageAccessRights [ngx.components.UICustomAsyncAction-1695141150882]: 
      actionValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              '		try {
              			let resp = await page.c8o.callJsonObject("C8Oforms.APIV2_GetManageAccessRights", {id: page.navParams.data.existingGrps._id, collab: page.navParams.data.collab == true}).async();
              			if(resp.res){
              				page.local.grp = resp.res.grpsOrUsers;
              				page.local.existingGrpsOrUsersArray = resp.res.existingGrpsOrUsersArrayFormated;
              				page.local.form = resp.res.doc;
              				page.local.pwa = resp.res.pwa;
              				page.local.linkAuth = resp.res.linkAuth;
              				page.local.linkAnno = resp.res.linkAnno;
              			}
              		} catch (e) {
              		
              		} finally {
              			page.local.spinner = false;
              			return;
              		}
              '
    ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1624006739451]: 
      beanData: '{"ionBean":"InvokeAction"}'
      stack: C8Oforms.MobileApplication.Application.importNg2Tooltips
↓Footer [ngx.components.UIDynamicElement-1591882841524]: 
  beanData: '{"ionBean":"Footer"}'
  tagName: ion-footer
  ↓ToolBar [ngx.components.UIDynamicElement-1646929408095]: 
    beanData: '{"ionBean":"ToolBar"}'
    tagName: ion-toolbar
    ↓ButtonSet [ngx.components.UIDynamicElement-1591882841530]: 
      beanData: '{"ionBean":"ButtonSet","SetPosition":"plain:end"}'
      tagName: ion-buttons
      ↓Button1 [ngx.components.UIDynamicElement-1592313803198]: 
        beanData: |
          '{
           "ionBean": "Button",
           "IonColor": "plain:primary",
           "IonFill": "plain:solid"
          }'
        tagName: ion-button
        ↓Text [ngx.components.UIText-1592313803201]: 
          i18n: true
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'Cancel' | translate
        ↓Attr [ngx.components.UIAttribute-1592313803204]: 
          attrName: slot
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:left
        ↓Event [ngx.components.UIControlEvent-1592313803207]: 
          ↓CloseModal [ngx.components.UIDynamicAction-1592313803213]: 
            beanData: '{"ionBean":"CloseModalAction"}'
      ↓Button [ngx.components.UIDynamicElement-1591882841533]: 
        beanData: |
          '{
           "ionBean": "Button",
           "IonColor": "plain:primary",
           "IonFill": "plain:solid"
          }'
        tagName: ion-button
        ↓Text [ngx.components.UIText-1591882841536]: 
          i18n: true
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'Save' | translate
        ↓Attr [ngx.components.UIAttribute-1591882841539]: 
          attrName: slot
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:right
        ↓Event [ngx.components.UIControlEvent-1591882841542]: 
          ↓CallAPIV2_SetManageAccessRights [ngx.components.UICustomAsyncAction-1695157453247]: 
            actionValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    '		try {
                    			let resp = await page.c8o.callJsonObject("C8Oforms.APIV2_SetManageAccessRights", {
                    				id: page.navParams.data.existingGrps._id,
                    				collab : page.local.collab,
                    				meta: JSON.stringify({
                    					newUsersOrGroups: page.local.newUsersOrGroups,
                    					existingGrpsOrUsersArray: page.local.existingGrpsOrUsersArray,
                    					invite_new: page.local.invite_new
                    				})
                    				
                    			}).async();
                    		} catch (e) {
                    		
                    		} finally {
                    			return;
                    		}
                    '
            ↓CloseModal [ngx.components.UIDynamicAction-1695157482051]: 
              beanData: '{"ionBean":"CloseModalAction"}'