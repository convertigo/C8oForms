comment: Page to share a form, or add collaborators
scriptContent: 
  - xmlizable: 
    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
    - com.twinsoft.convertigo.beans.common.FormatedContent: 
      →: |
        /*Begin_c8o_PageImport*/
        /*End_c8o_PageImport*/
        /*Begin_c8o_PageDeclaration*/
        	/*End_c8o_PageDeclaration*/
        /*Begin_c8o_PageConstructor*/
        		this.local.form = this.navParams.data["selectedForm"];
        		this.local.emailSubject = this.local.form.name;
        		this.local.newUsersOrGroups = [];
        		this.local.collab = this.navParams.data["collab"] == true;
        		this.local.validators = [];
        		this.local.errorMessages = {
            	};
        		/*End_c8o_PageConstructor*/
        /*Begin_c8o_PageFunction*/
        	
        	
        	public isAcollab(id){
        		
        		if(this.local.collab == false && this.local.form.c8oCollabs != undefined && this.local.form.c8oCollabs[id] != undefined && this.local.form.c8oCollabs[id] == true){
        			return true
        		}
        		return false;
        	}
        	public ObjectKeys(obj:any){
        	    if(obj != undefined){
        	        return Object.keys(obj);
        	    }
        	    else{
        	        return []
        	        }
        	    
        	}
        	
        	public getTinyLang(lang){
        		switch(lang){
        			case "fr":
        				return "fr_FR";
        			case undefined:
        				return "en";
        			default:
        				return lang;
        		}
        	}
        	
        	public getTinyPathLang(lang){
        		switch(lang){
        			case "fr":
        				return "assets/i18n/fr_FR.js"
        			case "en":
        				return null;
        			case undefined:
        				return null;
        			default:
        				return "assets/i18n/" + lang+ ".js";
        		}
        	}
        	/*End_c8o_PageFunction*/
        
segment: path-to-manageaccessrights
title: Title for ManageAccessRights
↓Content [ngx.components.UIDynamicElement-1591801107968]: 
  beanData: '{"ionBean":"Content"}'
  tagName: ion-content
  ↓Grid1Spinner [ngx.components.UIDynamicElement-1591962005113]: 
    beanData: '{"ionBean":"Grid"}'
    tagName: ion-grid
    ↓GridRow [ngx.components.UIDynamicElement-1591962005116]: 
      beanData: |
        '{
         "ionBean": "GridRow",
         "FlexJustifyContent": "plain:ion-justify-content-center",
         "FlexAlignement": "plain:ion-align-items-center"
        }'
      tagName: ion-row
      ↓GridCol [ngx.components.UIDynamicElement-1591962005119]: 
        beanData: |
          '{
           "ionBean": "GridCol",
           "FlexAlignement": "plain:ion-align-self-center",
           "Size": "plain:12"
          }'
        tagName: ion-col
        ↓Div [ngx.components.UIDynamicElement-1591962005122]: 
          beanData: '{"ionBean":"DivTag"}'
          tagName: div
          ↓FragmentSpinner [ngx.components.UICustom-1591962005125]: 
            htmlTemplate: <div  class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>
          ↓Style [ngx.components.UIStyle-1591962005128]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    text-align:center;
                    
    ↓Attr [ngx.components.UIAttribute-1591962005131]: 
      attrName: '*ngIf'
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: plain:this.local.spinner == true
    ↓Style [ngx.components.UIStyle-1591962005134]: 
      styleContent: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              height:100%;
              
  ↓Directive [ngx.components.UIControlDirective-1591962014581]: 
    directiveName: If
    directiveSource: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:this.local.spinner == false && this.local.grp != undefined
    ↓Directive2 [ngx.components.UIControlDirective-1619512288919]: 
      directiveName: If
      directiveSource: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:this.local.collab else ElseBlock_1619512311396
      ↓FormatLayout [ngx.components.UIDynamicAttr-1645090139984]: 
        beanData: '{"ionBean":"FormatLayout","TextAlignment":"plain:ion-text-justify"}'
        comment: FormatLayout
        tagName: div
      ↓Icon1 [ngx.components.UIDynamicElement-1619512400529]: 
        beanData: '{"ionBean":"Icon","IconName":"plain:md-send"}'
        tagName: ion-icon
      ↓H2 [ngx.components.UIDynamicElement-1619512400532]: 
        beanData: '{"ionBean":"Heading2"}'
        tagName: h2
        ↓Text [ngx.components.UIText-1619512400535]: 
          i18n: true
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:translate.instant(this.local.collab ? 'Add_collaborators_to_this_form':'share_the_form')
        ↓Style [ngx.components.UIStyle-1619512400538]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  display:inline-block;
                  
                  
      ↓Div [ngx.components.UIDynamicElement-1621411644791]: 
        beanData: '{"ionBean":"DivTag"}'
        tagName: div
        ↓Attr [ngx.components.UIAttribute-1621411656863]: 
          attrName: '[innerHTML]'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:this.router.sanitizer.bypassSecurityTrustHtml(this.translate.instant('desc_sharing_collab'))
        ↓Attr1 [ngx.components.UIAttribute-1621412148085]: 
          attrName: '[ngClass]'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'styledivnormal'
      ↓DivAddPersonOrGRP [ngx.components.UIDynamicElement-1619512400541]: 
        beanData: '{"ionBean":"DivTag"}'
        tagName: div
        ↓UseSharedComponent [ngx.components.UIUseShared-1619512400544]: 
          sharedcomponent: C8Oforms.MobileApplication.Application.ngxTagInputCustomC8oForms
          ↓items [ngx.components.UIUseVariable-1619512400547]: 
            binding: twoWayBinding
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.local.newUsersOrGroups
          ↓inputtext [ngx.components.UIUseVariable-1619512400550]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:''
          ↓theme [ngx.components.UIUseVariable-1619512400553]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:''
          ↓maxItems [ngx.components.UIUseVariable-1619512400556]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:100
          ↓placeholder [ngx.components.UIUseVariable-1619512400559]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:translate.instant('Add_people_and_groups')
          ↓secondaryPlaceholder [ngx.components.UIUseVariable-1619512400562]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:translate.instant('Add_people_and_groups')
          ↓editableTag [ngx.components.UIUseVariable-1619512400565]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:true
          ↓removableTag [ngx.components.UIUseVariable-1619512400568]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:true
          ↓itemIdentifyBy [ngx.components.UIUseVariable-1619512400571]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:'value'
          ↓itemDisplayBy [ngx.components.UIUseVariable-1619512400574]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:'display'
          ↓autocompleteItems [ngx.components.UIUseVariable-1619512400577]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.local.grp
          ↓onlyFromAutocomplete [ngx.components.UIUseVariable-1619512400580]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.local.collab
          ↓showAutoCompleteDropdownIfEmpty [ngx.components.UIUseVariable-1619512400583]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:true
          ↓ref [ngx.components.UIUseVariable-1619512400586]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:'personOrGrp'
          ↓errorMessages [ngx.components.UIUseVariable-1619512400589]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.local.errorMessages
          ↓validators [ngx.components.UIUseVariable-1619512400592]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.local.validators
          ↓Event1 [ngx.components.UIControlEvent-1646929701366]: 
            attrName: (ngxTagInputAdded)
            eventName: ngxTagInputAdded
            ↓CustomAsyncAction [ngx.components.UICustomAsyncAction-1646929795322]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      		var toast = false;
                      		try {
                      			//_this.local.grp == users from dropdown list
                      			// _this.local.existingGrpsOrUsersArray == user already shared
                      			// this.local.newUsersOrGroups users added
                      			// this was added without auto complete
                      			if(event.type == undefined){
                      				// prevent from adding a user already existing
                      				let founded = false;
                      				this.local.existingGrpsOrUsersArray.forEach((element, index)=>{
                      					if(element.type == "user"){
                      						if(event.value == element.displayMail){
                      							founded = true;
                      						}
                      					}
                      				})
                      				if(founded){
                      					let indexToSplice = null;
                      					this.local.newUsersOrGroups.forEach((element, index)=>{
                      						if(element.value == event.value){
                      							indexToSplice = index;
                      						}
                      					})
                      					if(indexToSplice != null){
                      						this.local.newUsersOrGroups.splice(indexToSplice, 1);
                      						// toast it users already exists in list
                      						toast = true;
                      					}
                      				}
                      				else{
                      					founded = false;
                      					var elemToReplace = null;
                      					this.local.grp.forEach((element, index)=>{
                      						if(element.type == "user"){
                      							if(event.value == element.displayMail){
                      								founded = true;
                      								elemToReplace = element;
                      							}
                      						}
                      					});
                      					if(founded){
                      						let indexToSplice = null;
                      						this.local.newUsersOrGroups.forEach((element, index)=>{
                      							if(element.display == event.value){
                      								indexToSplice = index;
                      							}
                      						})
                      						if(indexToSplice != null){
                      							this.local.newUsersOrGroups.splice(indexToSplice, 1, elemToReplace);
                      							// toast it users already exists in list
                      						}
                      					}
                      				}	
                      			}
                      		} catch (e) {
                      		
                      		} finally {
                      			return toast;
                      		}
                      
              ↓If [ngx.components.UIDynamicAction-1646929912244]: 
                beanData: '{"ionBean":"IfAction"}'
                ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1646929912247]: 
                  beanData: '{"ionBean":"InvokeAction"}'
                  stack: C8Oforms.MobileApplication.Application.showToast
                  ↓msg [ngx.components.UIControlVariable-1646929912250]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:this.translate.instant('form_has_already_been_shared')
                  ↓duration [ngx.components.UIControlVariable-1646929912253]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'3000'
                  ↓position [ngx.components.UIControlVariable-1646929912256]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'bottom'
                  ↓cssClass [ngx.components.UIControlVariable-1646929912259]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'toastError'
        ↓Style [ngx.components.UIStyle-1619512400595]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '.ng2-tag-input{
                  	border-bottom: unset !important;
                  }
                  box-shadow: inset 0 -1px 0 0 var(--ion-color-greyButton) !important;
                  border-bottom-color: var(--ion-color-greyButton);
                  width:100%;
                  '
        ↓Attr1 [ngx.components.UIAttribute-1619512400598]: 
          attrName: '[ngClass]'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'styledivnormal c8o-ngxTag-larger'
      ↓FormatLayout1 [ngx.components.UIDynamicAttr-1645090139995]: 
        beanData: '{"ionBean":"FormatLayout","TextAlignment":"plain:ion-text-center"}'
        comment: FormatLayout
        tagName: div
      ↓Directive1 [ngx.components.UIControlDirective-1619512480263]: 
        directiveItemName: item
        directiveSource: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:this.local.newUsersOrGroups
        ↓GenericItem [ngx.components.UIDynamicElement-1619512480266]: 
          beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
          tagName: ion-item
          ↓AvatarItem [ngx.components.UIDynamicElement-1619512480269]: 
            beanData: '{"ionBean":"Avatar","IonSlot":"plain:start"}'
            tagName: ion-avatar
            ↓Image [ngx.components.UIDynamicElement-1619512480275]: 
              beanData: '{"ionBean":"Image","url":"script:item.picture != undefined && item.picture != '''' ? item.picture :  ''assets\/images\/svg\/icon\/icn_people_add.svg''"}'
              selfClose: true
              tagName: img
            ↓Style [ngx.components.UIStyle-1646931961299]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '/**
                       * Custom properties (sometimes referred to as CSS variables or cascading variables)
                       * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                       * They are set using custom property notation, e.g.: --main-color: black;
                       * and are accessed using the var() function, e.g.: color: var(--main-color);
                       * You can find below your component''s properties you can customize within the page.
                       * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                       * For more informations see https://ionicframework.com/docs/theming.
                      **/
                      //--border-radius	//Border radius of the avatar and inner image
                      margin-right:5px;
                      '
          ↓Label [ngx.components.UIDynamicElement-1619512480278]: 
            beanData: '{"ionBean":"Label"}'
            tagName: ion-label
            ↓Directive [ngx.components.UIControlDirective-1619512480281]: 
              directiveName: If
              directiveSource: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:item.type == 'user' else ElseBlock_1613496369569
              ↓H2 [ngx.components.UIDynamicElement-1619512480284]: 
                beanData: '{"ionBean":"Heading2"}'
                tagName: h2
                ↓Text [ngx.components.UIText-1619512480287]: 
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:item.displayName
              ↓Paragraph [ngx.components.UIDynamicElement-1619512480290]: 
                beanData: '{"ionBean":"Paragraph"}'
                tagName: p
                ↓Text [ngx.components.UIText-1619512480293]: 
                  i18n: true
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:item.displayMail
            ↓Tag [ngx.components.UIElement-1619512480296]: 
              identifier: ElseBlock_1613496369569
              tagName: ng-template
              ↓H2 [ngx.components.UIDynamicElement-1619512480299]: 
                beanData: '{"ionBean":"Heading2"}'
                tagName: h2
                ↓Text [ngx.components.UIText-1619512480302]: 
                  i18n: true
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:item.display
          ↓Attr [ngx.components.UIAttribute-1619512480305]: 
            attrName: 
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:no-lines
          ↓Style [ngx.components.UIStyle-1619512480308]: 
          ↓SelectContainer [ngx.components.UIDynamicElement-1619512480314]: 
            beanData: '{"ionBean":"Select","Interface":"plain:popover"}'
            tagName: ion-select
            ↓SelectOption [ngx.components.UIDynamicElement-1619512480317]: 
              beanData: '{"ionBean":"SelectOption","Value":"plain:Responses"}'
              tagName: ion-select-option
              ↓Text [ngx.components.UIText-1619512480320]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:Responses
            ↓SelectOption1 [ngx.components.UIDynamicElement-1619512480323]: 
              beanData: '{"ionBean":"SelectOption","Value":"plain:Edition"}'
              tagName: ion-select-option
              ↓Text [ngx.components.UIText-1619512480326]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:Edition
            ↓SelectOption2 [ngx.components.UIDynamicElement-1619512480329]: 
              beanData: '{"ionBean":"SelectOption","Value":"plain:Edition_Responses"}'
              tagName: ion-select-option
              ↓Text [ngx.components.UIText-1619512480332]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:Edition_Responses
            ↓Attr [ngx.components.UIAttribute-1619512480335]: 
              attrName: 
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:item-right
            ↓Attr1 [ngx.components.UIAttribute-1619512480338]: 
              attrName: '*ngIf'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:this.local.collab == true
            ↓Attr2 [ngx.components.UIAttribute-1619512480341]: 
              attrName: '[(ngModel)]'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:item.rights
          ↓Button [ngx.components.UIDynamicElement-1619512480344]: 
            beanData: '{"ionBean":"Button","IonFill":"plain:clear"}'
            tagName: ion-button
            ↓Attr [ngx.components.UIAttribute-1619512480347]: 
              attrName: slot
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:right
            ↓Icon [ngx.components.UIDynamicElement-1619512480350]: 
              beanData: '{"ionBean":"Icon","IconName":"plain:trash"}'
              tagName: ion-icon
            ↓Attr1 [ngx.components.UIAttribute-1619512480353]: 
              attrName: tooltip
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:'Revoke_rights' | translate
            ↓Attr11 [ngx.components.UIAttribute-1619512480356]: 
              attrName: 
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:arrow
            ↓Attr2 [ngx.components.UIAttribute-1619512480359]: 
              attrName: positionV
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:top
            ↓Event [ngx.components.UIControlEvent-1619512480362]: 
              ↓revokeRights [ngx.components.UICustomAction-1619512480365]: 
                actionValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '			let grpOrUserToRemove = {[vars.item.value]: false};
                        			
                        			page.c8o.callJsonObject("fs://c8oforms_fs.post",{
                                        "c8oGrp": grpOrUserToRemove,
                                        "_use_policy": "merge",
                                        "_id": page["navParams"]["data"]["existingGrps"]["_id"]
                                    })
                                    .then((res)=>{
                        				this.local.getFormUpdated(resolve)
                                        return null;
                                    })
                                    .fail((res)=>{
                                        resolve();
                                        console.log(res);
                                    })
                        '
                ↓item [ngx.components.UIControlVariable-1619512480368]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:item
            ↓Attr3 [ngx.components.UIAttribute-1619512480371]: 
              attrName: '[disabled]'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.isAcollab(item.value)
            ↓Style [ngx.components.UIStyle-1646933643526]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '/**
                       * Custom properties (sometimes referred to as CSS variables or cascading variables)
                       * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                       * They are set using custom property notation, e.g.: --main-color: black;
                       * and are accessed using the var() function, e.g.: color: var(--main-color);
                       * You can find below your component''s properties you can customize within the page.
                       * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                       * For more informations see https://ionicframework.com/docs/theming.
                      **/
                      //--background	//Background of the button
                      //--background-activated	//Background of the button when pressed. Note: setting this will interfere with the Material Design ripple
                      //--background-activated-opacity	//Opacity of the button when pressed
                      //--background-focused	//Background of the button when focused with the tab key
                      //--background-focused-opacity	//Opacity of the button when focused with the tab key
                      //--background-hover	//Background of the button on hover
                      //--background-hover-opacity	//Opacity of the background on hover
                      //--border-color	//Border color of the button
                      //--border-radius	//Border radius of the button
                      //--border-style	//Border style of the button
                      //--border-width	//Border width of the button
                      //--box-shadow	//Box shadow of the button
                      //--color	//Text color of the button
                      //--color-activated	//Text color of the button when pressed
                      //--color-focused	//Text color of the button when focused with the tab key
                      //--color-hover	//Text color of the button when hover
                      //--opacity	//Opacity of the button
                      //--padding-bottom	//Bottom padding of the button
                      //--padding-end	//Right padding if direction is left-to-right, and left padding if direction is right-to-left of the button
                      //--padding-start	//Left padding if direction is left-to-right, and right padding if direction is right-to-left of the button
                      //--padding-top	//Top padding of the button
                      //--ripple-color	//Color of the button ripple effect
                      //--transition	//Transition of the button
                      ion-icon{
                      	color: var(--ion-color-danger)
                      }
                      '
          ↓Attr1 [ngx.components.UIAttribute-1619512480374]: 
            attrName: '*ngIf'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:item.value != 'C8Oreserved_' + this.local.form.creator
      ↓Directive [ngx.components.UIControlDirective-1619512480377]: 
        directiveIndexName: i
        directiveItemName: item
        directiveSource: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:this.local.existingGrpsOrUsersArray
        ↓GenericItem [ngx.components.UIDynamicElement-1619512480380]: 
          beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
          tagName: ion-item
          ↓AvatarItem [ngx.components.UIDynamicElement-1619512480383]: 
            beanData: '{"ionBean":"Avatar"}'
            tagName: ion-avatar
            ↓Icon [ngx.components.UIDynamicElement-1619512480386]: 
              beanData: '{"ionBean":"Icon","IconName":"script:item.type == ''user'' ? ''md-person'' : ''md-people''"}'
              isEnabled: false
              tagName: ion-icon
            ↓Image [ngx.components.UIDynamicElement-1619512480389]: 
              beanData: '{"ionBean":"Image","url":"script:item.picture != undefined && item.picture != '''' ? item.picture :  ''assets\/images\/svg\/icon\/icn_people_add.svg''"}'
              selfClose: true
              tagName: img
          ↓Label [ngx.components.UIDynamicElement-1619512480392]: 
            beanData: '{"ionBean":"Label"}'
            tagName: ion-label
            ↓Directive [ngx.components.UIControlDirective-1619512480395]: 
              directiveName: If
              directiveSource: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:item.type == 'user' else ElseBlock_1613496369569
              ↓H2 [ngx.components.UIDynamicElement-1619512480398]: 
                beanData: '{"ionBean":"Heading2"}'
                tagName: h2
                ↓Text [ngx.components.UIText-1619512480401]: 
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:item.displayName
              ↓Paragraph [ngx.components.UIDynamicElement-1619512480404]: 
                beanData: '{"ionBean":"Paragraph"}'
                tagName: p
                ↓Text [ngx.components.UIText-1619512480407]: 
                  i18n: true
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:item.displayMail
            ↓Tag [ngx.components.UIElement-1619512480410]: 
              identifier: ElseBlock_1613496369569
              tagName: ng-template
              ↓H2 [ngx.components.UIDynamicElement-1619512480413]: 
                beanData: '{"ionBean":"Heading2"}'
                tagName: h2
                ↓Text [ngx.components.UIText-1619512480416]: 
                  i18n: true
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:item.display
          ↓Attr [ngx.components.UIAttribute-1619512480419]: 
            attrName: 
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:no-lines
          ↓Style [ngx.components.UIStyle-1619512480422]: 
          ↓SelectContainer [ngx.components.UIDynamicElement-1619512480425]: 
            beanData: '{"ionBean":"Select","Interface":"plain:popover"}'
            tagName: ion-select
            ↓SelectOption [ngx.components.UIDynamicElement-1619512480428]: 
              beanData: '{"ionBean":"SelectOption","Value":"plain:Responses"}'
              tagName: ion-select-option
              ↓Text [ngx.components.UIText-1619512480431]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:Responses
            ↓SelectOption1 [ngx.components.UIDynamicElement-1619512480434]: 
              beanData: '{"ionBean":"SelectOption","Value":"plain:Edition"}'
              tagName: ion-select-option
              ↓Text [ngx.components.UIText-1619512480437]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:Edition
            ↓SelectOption2 [ngx.components.UIDynamicElement-1619512480440]: 
              beanData: '{"ionBean":"SelectOption","Value":"plain:Edition_Responses"}'
              tagName: ion-select-option
              ↓Text [ngx.components.UIText-1619512480443]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:Edition_Responses
            ↓Attr [ngx.components.UIAttribute-1619512480446]: 
              attrName: 
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:item-right
            ↓Attr1 [ngx.components.UIAttribute-1619512480449]: 
              attrName: '*ngIf'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:this.local.collab == true
            ↓Attr2 [ngx.components.UIAttribute-1619512480452]: 
              attrName: '[(ngModel)]'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:item.rights
          ↓Button [ngx.components.UIDynamicElement-1619512480455]: 
            beanData: '{"ionBean":"Button","IonFill":"plain:clear"}'
            tagName: ion-button
            ↓Attr [ngx.components.UIAttribute-1619512480458]: 
              attrName: 
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:item-right
            ↓Icon [ngx.components.UIDynamicElement-1619512480461]: 
              beanData: '{"ionBean":"Icon","IconName":"plain:trash"}'
              tagName: ion-icon
            ↓Attr1 [ngx.components.UIAttribute-1619512480464]: 
              attrName: tooltip
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:'Revoke_rights' | translate
            ↓Attr11 [ngx.components.UIAttribute-1619512480467]: 
              attrName: 
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:arrow
            ↓Attr2 [ngx.components.UIAttribute-1619512480470]: 
              attrName: positionV
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:top
            ↓Event [ngx.components.UIControlEvent-1619512480473]: 
              ↓revokeRights [ngx.components.UICustomAction-1619512480476]: 
                actionValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        			this.local.grp.push(this.local.existingGrpsOrUsersArray[vars.index])
                        			this.local.existingGrpsOrUsersArray.splice(vars.index, 1);
                        			
                        
                ↓item [ngx.components.UIControlVariable-1619512480479]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:item
                ↓index [ngx.components.UIControlVariable-1619512480482]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:i
            ↓Attr3 [ngx.components.UIAttribute-1619512480485]: 
              attrName: '[disabled]'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.isAcollab(item.value)
            ↓Style [ngx.components.UIStyle-1646933567629]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '/**
                       * Custom properties (sometimes referred to as CSS variables or cascading variables)
                       * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                       * They are set using custom property notation, e.g.: --main-color: black;
                       * and are accessed using the var() function, e.g.: color: var(--main-color);
                       * You can find below your component''s properties you can customize within the page.
                       * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                       * For more informations see https://ionicframework.com/docs/theming.
                      **/
                      //--background	//Background of the button
                      //--background-activated	//Background of the button when pressed. Note: setting this will interfere with the Material Design ripple
                      //--background-activated-opacity	//Opacity of the button when pressed
                      //--background-focused	//Background of the button when focused with the tab key
                      //--background-focused-opacity	//Opacity of the button when focused with the tab key
                      //--background-hover	//Background of the button on hover
                      //--background-hover-opacity	//Opacity of the background on hover
                      //--border-color	//Border color of the button
                      //--border-radius	//Border radius of the button
                      //--border-style	//Border style of the button
                      //--border-width	//Border width of the button
                      //--box-shadow	//Box shadow of the button
                      //--color	//Text color of the button
                      //--color-activated	//Text color of the button when pressed
                      //--color-focused	//Text color of the button when focused with the tab key
                      //--color-hover	//Text color of the button when hover
                      //--opacity	//Opacity of the button
                      //--padding-bottom	//Bottom padding of the button
                      //--padding-end	//Right padding if direction is left-to-right, and left padding if direction is right-to-left of the button
                      //--padding-start	//Left padding if direction is left-to-right, and right padding if direction is right-to-left of the button
                      //--padding-top	//Top padding of the button
                      //--ripple-color	//Color of the button ripple effect
                      //--transition	//Transition of the button
                      	ion-icon{
                      		color: var(--ion-color-danger)
                      	}
                      '
          ↓Attr1 [ngx.components.UIAttribute-1619512480488]: 
            attrName: '*ngIf'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:item.value != 'C8Oreserved_' + this.local.form.creator
      ↓FormatLayout2 [ngx.components.UIDynamicAttr-1645090139997]: 
        beanData: '{"ionBean":"FormatLayout","TextAlignment":"plain:ion-text-center"}'
        comment: FormatLayout
        tagName: div
      ↓Directive2 [ngx.components.UIControlDirective-1619512480494]: 
        directiveIndexName: index2
        directiveItemName: item2
        directiveSource: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:this.local.invite_new
        ↓GenericItem [ngx.components.UIDynamicElement-1619512480497]: 
          beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
          tagName: ion-item
          ↓AvatarItem [ngx.components.UIDynamicElement-1619512480500]: 
            beanData: '{"ionBean":"Avatar"}'
            tagName: ion-avatar
            ↓Image [ngx.components.UIDynamicElement-1619512480503]: 
              beanData: '{"ionBean":"Image","url":"script:''assets\/images\/svg\/icon\/icn_people_add.svg''"}'
              selfClose: true
              tagName: img
          ↓Attr [ngx.components.UIAttribute-1619512480506]: 
            attrName: 
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:no-lines
          ↓Style [ngx.components.UIStyle-1619512480509]: 
          ↓H2 [ngx.components.UIDynamicElement-1619512480512]: 
            beanData: '{"ionBean":"Heading2"}'
            tagName: h2
            ↓Text [ngx.components.UIText-1619512480515]: 
              i18n: true
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:item2 + ' ' + this.translate.instant('invited')
          ↓Button [ngx.components.UIDynamicElement-1619512480518]: 
            beanData: '{"ionBean":"Button","IonFill":"plain:clear"}'
            tagName: ion-button
            ↓Attr [ngx.components.UIAttribute-1619512480521]: 
              attrName: 
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:item-end
            ↓Icon [ngx.components.UIDynamicElement-1619512480524]: 
              beanData: '{"ionBean":"Icon","IconName":"plain:trash"}'
              tagName: ion-icon
            ↓Attr1 [ngx.components.UIAttribute-1619512480527]: 
              attrName: tooltip
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:'Revoke_rights' | translate
            ↓Attr11 [ngx.components.UIAttribute-1619512480530]: 
              attrName: 
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:arrow
            ↓Attr2 [ngx.components.UIAttribute-1619512480533]: 
              attrName: positionV
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:top
            ↓Event [ngx.components.UIControlEvent-1619512480536]: 
              ↓revokeRights [ngx.components.UICustomAction-1619512480539]: 
                actionValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '			//let grpOrUserToRemove = {[vars.item.value]: false};
                        			let params = {
                                        "_use_policy": "merge",
                                        "_id": page["navParams"]["data"]["existingGrps"]["_id"]
                                    };
                        			const idToremove = this.local.invite_new[vars.index] + "_"+params["_id"];
                        			this.local.invite_new.splice(vars.index, 1);
                        			if(this.local.invite_new.length == 0){
                        				params["_use_merge_invited"] = "delete"
                        			}
                        			else{
                        				params["invited"] = this.local.invite_new;
                        				params["_use_merge_invited"] = "override"
                        			}
                        			
                        			page.c8o.callJsonObject("fs://c8oforms_fs.post",params)
                                    .then((res)=>{
                        				this.local.getFormUpdated(resolve);
                        				this.c8o.callJson("C8Oforms.RemoveNewUserSharing", "id", idToremove);
                                        return null;
                                    })
                                    .fail((res)=>{
                                        resolve();
                                        console.log(res);
                                    })
                        '
                ↓index [ngx.components.UIControlVariable-1619512480542]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:index2
            ↓Attr3 [ngx.components.UIAttribute-1619512480545]: 
              attrName: '[disabled]'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.isAcollab(item.value)
              isEnabled: false
            ↓Style [ngx.components.UIStyle-1646933662108]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '/**
                       * Custom properties (sometimes referred to as CSS variables or cascading variables)
                       * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                       * They are set using custom property notation, e.g.: --main-color: black;
                       * and are accessed using the var() function, e.g.: color: var(--main-color);
                       * You can find below your component''s properties you can customize within the page.
                       * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                       * For more informations see https://ionicframework.com/docs/theming.
                      **/
                      //--background	//Background of the button
                      //--background-activated	//Background of the button when pressed. Note: setting this will interfere with the Material Design ripple
                      //--background-activated-opacity	//Opacity of the button when pressed
                      //--background-focused	//Background of the button when focused with the tab key
                      //--background-focused-opacity	//Opacity of the button when focused with the tab key
                      //--background-hover	//Background of the button on hover
                      //--background-hover-opacity	//Opacity of the background on hover
                      //--border-color	//Border color of the button
                      //--border-radius	//Border radius of the button
                      //--border-style	//Border style of the button
                      //--border-width	//Border width of the button
                      //--box-shadow	//Box shadow of the button
                      //--color	//Text color of the button
                      //--color-activated	//Text color of the button when pressed
                      //--color-focused	//Text color of the button when focused with the tab key
                      //--color-hover	//Text color of the button when hover
                      //--opacity	//Opacity of the button
                      //--padding-bottom	//Bottom padding of the button
                      //--padding-end	//Right padding if direction is left-to-right, and left padding if direction is right-to-left of the button
                      //--padding-start	//Left padding if direction is left-to-right, and right padding if direction is right-to-left of the button
                      //--padding-top	//Top padding of the button
                      //--ripple-color	//Color of the button ripple effect
                      //--transition	//Transition of the button
                      ion-icon{
                      	color: var(--ion-color-danger)
                      }
                      '
    ↓Tag1 [ngx.components.UIElement-1619512311396]: 
      identifier: ElseBlock_1619512311396
      tagName: ng-template
      ↓GridHeader1 [ngx.components.UIDynamicElement-1621414696433]: 
        beanData: '{"ionBean":"Grid","Height":"plain:unset"}'
        tagName: ion-grid
        ↓GridRow [ngx.components.UIDynamicElement-1621414696436]: 
          beanData: |
            '{
             "ionBean": "GridRow",
             "Height": "plain:unset",
             "FlexAlignement": "plain:ion-align-items-center"
            }'
          tagName: ion-row
          ↓GridCol [ngx.components.UIDynamicElement-1621414696439]: 
            beanData: |
              '{
               "ionBean": "GridCol",
               "FlexAlignement": "plain:ion-align-self-center",
               "Size": "plain:1"
              }'
            tagName: ion-col
            ↓Style [ngx.components.UIStyle-1621414696448]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      	position:relative;
                      
            ↓Div [ngx.components.UIDynamicElement-1621415289159]: 
              beanData: '{"ionBean":"DivTag"}'
              tagName: div
              ↓Icon [ngx.components.UIDynamicElement-1621414696442]: 
                beanData: '{"ionBean":"Icon","IconName":"script:this.local.pwa?.notAnonymous == true ? ''lock'' : ''unlock''"}'
                tagName: ion-icon
                ↓Style [ngx.components.UIStyle-1621414696445]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '	font-size: 50px;
                          	/*position: absolute;
                          	top: 50%; left: 50%; 
                            	transform: translate(-50%, -50%);*/
                          
                          '
              ↓Style [ngx.components.UIStyle-1621415317951]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        	height:100%;
                        	width:100%;
                        	text-align:center;
                        
          ↓GridCol1 [ngx.components.UIDynamicElement-1621414696451]: 
            beanData: |
              '{
               "ionBean": "GridCol",
               "FlexAlignement": "plain:ion-align-self-end",
               "Size": "plain:11"
              }'
            tagName: ion-col
            ↓Heading [ngx.components.UIDynamicTag-1621417758782]: 
              beanData: '{"ionBean":"Heading"}'
              tagName: h1
              ↓Style [ngx.components.UIStyle-1621417768181]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        margin-bottom:0 !important;
                        
                        
              ↓Attr [ngx.components.UIAttribute-1621426304968]: 
                attrName: '[innerHTML]'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: 'script:this.router.sanitizer.bypassSecurityTrustHtml(this.local.pwa?.notAnonymous ? (''text_header_share_app'' | translate) : (''text_header_share_app_ano'' | translate))'
            ↓Tag [ngx.components.UIElement-1621415993258]: 
              tagName: ul
              ↓Tag [ngx.components.UIElement-1621416002048]: 
                tagName: li
                ↓Attr [ngx.components.UIAttribute-1621426682269]: 
                  attrName: '[innerHTML]'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: 'script:this.router.sanitizer.bypassSecurityTrustHtml(this.local.pwa?.notAnonymous ? (''text_header_share_app_who_can_access'' | translate) : (''text_header_share_app_who_can_access_ano'' | translate))'
              ↓Tag2 [ngx.components.UIElement-1621430444207]: 
                tagName: li
                ↓Attr [ngx.components.UIAttribute-1621430444210]: 
                  attrName: '[innerHTML]'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:'text_header_share_app_who_can_access_auth' | translate
                ↓Attr1 [ngx.components.UIAttribute-1621430497739]: 
                  attrName: '*ngIf'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:this.local.collab == false && this.local.pwa?.notAnonymous == true
              ↓Tag1 [ngx.components.UIElement-1621416005311]: 
                tagName: li
                ↓Span [ngx.components.UIDynamicElement-1621426931850]: 
                  beanData: '{"ionBean":"SpanTag"}'
                  tagName: span
                  ↓Attr [ngx.components.UIAttribute-1621426941647]: 
                    attrName: '[innerHTML]'
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: 'script:this.router.sanitizer.bypassSecurityTrustHtml(this.local.pwa?.notAnonymous ? (''text_header_share_app_change_level_app_1'' | translate) : (''text_header_share_app_change_level_app_ano_1'' | translate))'
                ↓Tag [ngx.components.UIElement-1621416852068]: 
                  tagName: a
                  ↓Text [ngx.components.UIText-1621416852071]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:text_header_share_app_change_level_app_2
                  ↓Style [ngx.components.UIStyle-1621416852074]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            'color: var(--ion-color-convertigo);
                            }
                            .class1621416852068:hover {
                            	cursor:pointer;
                            '
                  ↓Event [ngx.components.UIControlEvent-1621416852077]: 
                    ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1621416852083]: 
                      beanData: '{"ionBean":"InvokeAction"}'
                      stack: C8Oforms.MobileApplication.Application.popOverCreatePwa
                      ↓selectedForm [ngx.components.UIControlVariable-1621416852086]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:this.navParams.data.existingGrps
                ↓Span1 [ngx.components.UIDynamicElement-1621426985096]: 
                  beanData: '{"ionBean":"SpanTag"}'
                  tagName: span
                  ↓Attr [ngx.components.UIAttribute-1621426985099]: 
                    attrName: '[innerHTML]'
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: 'script:this.router.sanitizer.bypassSecurityTrustHtml(this.local.pwa?.notAnonymous ? (''text_header_share_app_change_level_app_3'' | translate) : (''text_header_share_app_change_level_app_ano_3'' | translate))'
        ↓Style [ngx.components.UIStyle-1621414696538]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  'border: 1px solid var(--ion-color-convertigo);
                  border-radius:10px;
                  padding-bottom:30px !important;
                  padding-top:30px !important;
                  margin-bottom: 10px;
                  '
      ↓GridShareWithUserOrGroups1 [ngx.components.UIDynamicElement-1621416987317]: 
        beanData: '{"ionBean":"Grid","Height":"plain:unset"}'
        tagName: ion-grid
        ↓GridRow [ngx.components.UIDynamicElement-1621416987320]: 
          beanData: |
            '{
             "ionBean": "GridRow",
             "Height": "plain:unset",
             "FlexAlignement": "plain:ion-align-items-center"
            }'
          tagName: ion-row
          ↓GridCol [ngx.components.UIDynamicElement-1621416987323]: 
            beanData: |
              '{
               "ionBean": "GridCol",
               "FlexAlignement": "plain:ion-align-self-center",
               "Size": "plain:1"
              }'
            tagName: ion-col
            ↓Style [ngx.components.UIStyle-1621416987326]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      	position:relative;
                      
            ↓Div [ngx.components.UIDynamicElement-1621416987329]: 
              beanData: '{"ionBean":"DivTag"}'
              tagName: div
              ↓Style [ngx.components.UIStyle-1621416987338]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        	height:100%;
                        	width:100%;
                        	text-align:center;
                        
              ↓Icon [ngx.components.UIDynamicElement-1621417123164]: 
                beanData: '{"ionBean":"Icon","IconName":"plain:custom-share-social"}'
                tagName: ion-icon
                ↓Style [ngx.components.UIStyle-1621417123167]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '	width: 50px !important;
                          	height: 50px !important;
                          	position: absolute;
                          	top: 50%; left: 50%; 
                            	transform: translate(-50%, -50%);
                          
                          '
          ↓GridCol1 [ngx.components.UIDynamicElement-1621416987341]: 
            beanData: |
              '{
               "ionBean": "GridCol",
               "FlexAlignement": "plain:ion-align-self-end",
               "Size": "plain:11"
              }'
            tagName: ion-col
            ↓H1 [ngx.components.UIDynamicElement-1621416987344]: 
              beanData: '{"ionBean":"Heading1"}'
              tagName: h1
              ↓Style [ngx.components.UIStyle-1621416987356]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        margin-bottom:0 !important;
                        
                        
              ↓Attr [ngx.components.UIAttribute-1621427157581]: 
                attrName: '[innerHTML]'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:translate.instant('text_share_with_group_or_user')
            ↓Tag [ngx.components.UIElement-1621416987359]: 
              tagName: ul
              ↓Tag [ngx.components.UIElement-1621416987362]: 
                tagName: li
                ↓Attr [ngx.components.UIAttribute-1621427395271]: 
                  attrName: '[innerHTML]'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:translate.instant('text_share_with_group_arg1')
              ↓Tag1 [ngx.components.UIElement-1621416987368]: 
                tagName: li
                ↓Attr [ngx.components.UIAttribute-1621427427490]: 
                  attrName: '[innerHTML]'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:translate.instant('text_share_with_group_arg2')
            ↓DivAddPersonOrGRP [ngx.components.UIDynamicElement-1621417210445]: 
              beanData: '{"ionBean":"DivTag"}'
              tagName: div
              ↓UseSharedComponent [ngx.components.UIUseShared-1621417210448]: 
                sharedcomponent: C8Oforms.MobileApplication.Application.ngxTagInputCustomC8oForms
                ↓items [ngx.components.UIUseVariable-1621417210451]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this.local.newUsersOrGroups
                ↓inputtext [ngx.components.UIUseVariable-1621417210454]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:''
                ↓theme [ngx.components.UIUseVariable-1621417210457]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:''
                ↓maxItems [ngx.components.UIUseVariable-1621417210460]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:100
                ↓placeholder [ngx.components.UIUseVariable-1621417210463]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:translate.instant('Add_people_and_groups')
                ↓secondaryPlaceholder [ngx.components.UIUseVariable-1621417210466]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:translate.instant('Add_people_and_groups')
                ↓editableTag [ngx.components.UIUseVariable-1621417210469]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:true
                ↓removableTag [ngx.components.UIUseVariable-1621417210472]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:true
                ↓itemIdentifyBy [ngx.components.UIUseVariable-1621417210475]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:'value'
                ↓itemDisplayBy [ngx.components.UIUseVariable-1621417210478]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:'display'
                ↓autocompleteItems [ngx.components.UIUseVariable-1621417210481]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this.local.grp
                ↓onlyFromAutocomplete [ngx.components.UIUseVariable-1621417210484]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this.local.collab
                ↓showAutoCompleteDropdownIfEmpty [ngx.components.UIUseVariable-1621417210487]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:true
                ↓ref [ngx.components.UIUseVariable-1621417210490]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:'personOrGrp'
                ↓errorMessages [ngx.components.UIUseVariable-1621417210493]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this.local.errorMessages
                ↓validators [ngx.components.UIUseVariable-1621417210496]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this.local.validators
              ↓Style [ngx.components.UIStyle-1621417210499]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '	display:block !important;
                        .ng2-tag-input{
                        	border-bottom: unset !important;
                        }
                        box-shadow: inset 0 -1px 0 0 var(--ion-color-greyButton) !important;
                        border-bottom-color: var(--ion-color-greyButton);
                        width:80%;
                        margin-left:0 !important;
                        '
              ↓Attr1 [ngx.components.UIAttribute-1621417210502]: 
                attrName: '[ngClass]'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:'styledivnormal c8o-ngxTag-larger'
            ↓Directive1 [ngx.components.UIControlDirective-1621429297669]: 
              directiveName: If
              directiveSource: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.local.newUsersOrGroups?.length > 0 && this.local.collab == false
              ↓Span [ngx.components.UIDynamicElement-1621429297672]: 
                beanData: '{"ionBean":"SpanTag"}'
                isEnabled: false
                tagName: span
                ↓Text [ngx.components.UIText-1621429297675]: 
                  i18n: true
                ↓Attr [ngx.components.UIAttribute-1621429297678]: 
                  attrName: '*ngIf'
              ↓Paragraph [ngx.components.UIDynamicElement-1621429297681]: 
                beanData: '{"ionBean":"Paragraph"}'
                isEnabled: false
                tagName: p
                ↓Text [ngx.components.UIText-1621429297684]: 
                  comment: Faites glisser les éléments ci dessous vers la partie droite de l'écran pour les ajouter au formulaire
                  i18n: true
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:pwa_not_public
                ↓Style [ngx.components.UIStyle-1621429297687]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '	text-overflow: ellipsis !important;
                           	--max-lines: 3;
                           	color: #856404;
                              background-color: #fff3cd;
                              position: relative;
                              padding: .75rem 1.25rem;
                              margin-bottom: 1rem;
                              border: 1px solid transparent;
                              border-radius: .25rem;
                              position: -webkit-sticky;
                          	position: sticky;
                          	top: 0px;
                          	z-index:1000;
                          	 overflow: hidden;
                              display: -webkit-box;
                              -webkit-line-clamp: 3;
                              -webkit-box-orient: vertical;
                          '
                ↓Attr [ngx.components.UIAttribute-1621429297690]: 
                  attrName: '*ngIf'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: 'plain: this.local.pwa?.notAnonymous'
                ↓Button [ngx.components.UIDynamicElement-1621429297693]: 
                  beanData: '{"ionBean":"Button"}'
                  isEnabled: false
                  tagName: ion-button
                  ↓Text [ngx.components.UIText-1621429297696]: 
                    i18n: true
                ↓Tag [ngx.components.UIElement-1621429297699]: 
                  tagName: a
                  ↓Text [ngx.components.UIText-1621429297702]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:please_click_here
                  ↓Style [ngx.components.UIStyle-1621429297705]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            'color: #856404;
                            }
                            .class1614601713621:hover {
                            	cursor:pointer;
                            '
                  ↓Event [ngx.components.UIControlEvent-1621429297708]: 
                    ↓ModalPage [ngx.components.UIDynamicAction-1621429297711]: 
                      beanData: '{"ionBean":"ModalAction","page":"plain:C8Oforms.MobileApplication.Application.CreatePwa"}'
                      isEnabled: false
                    ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1621429297714]: 
                      beanData: '{"ionBean":"InvokeAction"}'
                      stack: C8Oforms.MobileApplication.Application.popOverCreatePwa
                      ↓selectedForm [ngx.components.UIControlVariable-1621429297717]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:this.navParams.data.existingGrps
              ↓DivSendNotif [ngx.components.UIDynamicElement-1621429297720]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓GenericItem [ngx.components.UIDynamicElement-1621429297723]: 
                  beanData: '{"ionBean":"GenericItem"}'
                  tagName: ion-item
                  ↓CheckBox [ngx.components.UIDynamicElement-1621429297726]: 
                    beanData: '{"ionBean":"CheckBox"}'
                    tagName: ion-checkbox
                    ↓Attr [ngx.components.UIAttribute-1621429297729]: 
                      attrName: '[(ngModel)]'
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:this.local.notif
                  ↓Label [ngx.components.UIDynamicElement-1621429297732]: 
                    beanData: '{"ionBean":"Label"}'
                    tagName: ion-label
                    ↓Text [ngx.components.UIText-1621429297735]: 
                      i18n: true
                      textValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:Send_a_notification
                    ↓Attr2 [ngx.components.UIAttribute-1621429297738]: 
                      attrName: '[ngClass]'
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:'stylegenerictextnormalWithoutBorderBottom'
                      isEnabled: false
                  ↓Attr2 [ngx.components.UIAttribute-1621429297741]: 
                    attrName: '[ngClass]'
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'stylegenerictextnormalWithoutBorderBottom'
                    isEnabled: false
                  ↓Attr21 [ngx.components.UIAttribute-1621429297744]: 
                    attrName: '[ngClass]'
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'stylegenericcheckboxnormal'
                    isEnabled: false
                  ↓Style [ngx.components.UIStyle-1621429297747]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            	.checkbox {
                            		opacity:1 !important;
                            	}
                            	.label{
                            		opacity:1 !important;
                            	}
                            
                            
                  ↓Attr [ngx.components.UIAttribute-1621429297750]: 
                    attrName: 
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:no-lines
                  ↓Style1 [ngx.components.UIStyle-1621429297753]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            	padding-left:0 !important;
                            	margin-left:0 !important;
                            
            ↓Directive [ngx.components.UIControlDirective-1621429297756]: 
              directiveName: If
              directiveSource: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.local.newUsersOrGroups?.length > 0 && this.local.notif == true && this.local.collab == false else ElseBlock_1613473667506
              ↓DivEmailSubject [ngx.components.UIDynamicElement-1621429297759]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓GenericItem1 [ngx.components.UIDynamicElement-1621429297762]: 
                  beanData: '{"ionBean":"GenericItem"}'
                  tagName: ion-item
                  ↓Label [ngx.components.UIDynamicElement-1621429297765]: 
                    beanData: '{"ionBean":"Label","Position":"plain:stacked"}'
                    tagName: ion-label
                    ↓FormatLayout [ngx.components.UIDynamicAttr-1645090140020]: 
                      beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-capitalize"}'
                      comment: FormatLayout
                      tagName: div
                    ↓Text [ngx.components.UIText-1621429297771]: 
                      i18n: true
                      textValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:subject
                    ↓Style [ngx.components.UIStyle-1621429297774]: 
                  ↓Attr2 [ngx.components.UIAttribute-1621429297777]: 
                    attrName: '[ngClass]'
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'stylegenerictexteditor'
                  ↓Style [ngx.components.UIStyle-1621429297780]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            'width: 90%;
                            .label{
                            		margin-top: 0px !important;	
                            		margin-bottom: 0px !important;	
                            	}
                            '
                  ↓TextInput [ngx.components.UIDynamicElement-1621429297783]: 
                    beanData: '{"ionBean":"Input","Debounce":"plain:0"}'
                    tagName: ion-input
                    ↓Attr [ngx.components.UIAttribute-1621429297786]: 
                      attrName: '[(ngModel)]'
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:this.local.emailSubject
                  ↓Style1 [ngx.components.UIStyle-1621429297789]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            	padding-left:0 !important;
                            	margin-left:0 !important;
                            
              ↓DivEmailBody [ngx.components.UIDynamicElement-1621429297792]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓Label [ngx.components.UIDynamicElement-1621429297795]: 
                  beanData: '{"ionBean":"Label"}'
                  tagName: ion-label
                  ↓FormatLayout [ngx.components.UIDynamicAttr-1645090140022]: 
                    beanData: '{"ionBean":"FormatLayout"}'
                    comment: FormatLayout
                    tagName: div
                  ↓Text [ngx.components.UIText-1621429297801]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:Email_body
                  ↓Style [ngx.components.UIStyle-1621429297804]: 
                ↓UseSharedComponent [ngx.components.UIUseShared-1621429297807]: 
                  sharedcomponent: lib_ExtendedComponents_ui_ngx.MobileApplication.Application.tinyMce
                  ↓model [ngx.components.UIUseVariable-1621429297810]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:this.local.emailBody
                  ↓init [ngx.components.UIUseVariable-1621429297813]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: |
                            'script:{
                                plugins: ''preview paste importcss searchreplace autolink autosave save directionality code visualblocks visualchars fullscreen image link media template codesample table charmap hr pagebreak nonbreaking anchor toc insertdatetime advlist lists wordcount imagetools textpattern noneditable help charmap quickbars emoticons'',
                                imagetools_cors_hosts: [''picsum.photos''],
                                menubar: ''file edit view insert format tools table help'',
                                toolbar: ''undo redo | bold italic underline strikethrough | fontselect fontsizeselect formatselect | alignleft aligncenter alignright alignjustify | outdent indent |  numlist bullist | forecolor backcolor removeformat | pagebreak | charmap emoticons | fullscreen  preview save print | insertfile image media template link anchor codesample | ltr rtl'',
                                toolbar_sticky: true,
                                autosave_ask_before_unload: true,
                                autosave_interval: ''30s'',
                                autosave_prefix: ''{path}{query}-{id}-'',
                                autosave_restore_when_empty: false,
                                autosave_retention: ''2m'',
                                image_advtab: true,
                                content_css: [
                                ],
                                link_list: [
                                    { title: ''My page 1'', value: ''http://www.tinymce.com'' },
                                    { title: ''My page 2'', value: ''http://www.moxiecode.com'' }
                                ],
                                image_list: [
                                    { title: ''My page 1'', value: ''http://www.tinymce.com'' },
                                    { title: ''My page 2'', value: ''http://www.moxiecode.com'' }
                                ],
                                image_class_list: [
                                    { title: ''None'', value: '''' },
                                    { title: ''Some class'', value: ''class-name'' }
                                ],
                                importcss_append: true,
                                template_cdate_format: ''[Date Created (CDATE): %m/%d/%Y : %H:%M:%S]'',
                                template_mdate_format: ''[Date Modified (MDATE): %m/%d/%Y : %H:%M:%S]'',
                                height: 400,
                                image_caption: true,
                                quickbars_selection_toolbar: ''bold italic | quicklink h2 h3 blockquote quickimage quicktable'',
                                noneditable_noneditable_class: ''mceNonEditable'',
                                toolbar_mode: ''sliding'',
                                contextmenu: ''link image imagetools table'',
                                language: getTinyLang(this.global.settings.language),
                                language_url: getTinyPathLang(this.global.settings.language)
                            }'
                  ↓disabled [ngx.components.UIUseVariable-1621429297816]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:''
                  ↓apiKey [ngx.components.UIUseVariable-1621429297819]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:''
                  ↓cloudChannel [ngx.components.UIUseVariable-1621429297822]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:''
                  ↓disabled1 [ngx.components.UIUseVariable-1621429297825]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:''
                  ↓id [ngx.components.UIUseVariable-1621429297828]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:''
                  ↓initialValue [ngx.components.UIUseVariable-1621429297831]: 
                    isEnabled: false
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:''
                  ↓inline [ngx.components.UIUseVariable-1621429297834]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:false
                  ↓tagName [ngx.components.UIUseVariable-1621429297837]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'div'
                  ↓plugins [ngx.components.UIUseVariable-1621429297840]: 
                    isEnabled: false
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:['advlist autolink lists link image charmap print preview anchor','searchreplace visualblocks code fullscreen','insertdatetime media table paste code imagetools help wordcount']
                  ↓toolbar [ngx.components.UIUseVariable-1621429297843]: 
                    isEnabled: false
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'undo redo | formatselect | bold italic backcolor | alignleft aligncenter alignright alignjustify | \bullist numlist outdent indent | removeformat | link image | help'
                  ↓ref [ngx.components.UIUseVariable-1621429297846]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'emailSubject'
                ↓Attr2 [ngx.components.UIAttribute-1621429297849]: 
                  attrName: '[ngClass]'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:'stylegenerictexteditor'
                ↓Style [ngx.components.UIStyle-1621429297852]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          	padding-left:0 !important;
                          	margin-left:0 !important;
                          
            ↓Tag1 [ngx.components.UIElement-1621429297855]: 
              identifier: ElseBlock_1613473667506
              tagName: ng-template
              ↓FormatLayout [ngx.components.UIDynamicAttr-1645090140031]: 
                beanData: '{"ionBean":"FormatLayout","TextAlignment":"plain:ion-text-center"}'
                comment: FormatLayout
                tagName: div
              ↓Directive1 [ngx.components.UIControlDirective-1621429297861]: 
                directiveItemName: item
                directiveSource: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.local.newUsersOrGroups
                ↓GenericItem [ngx.components.UIDynamicElement-1621429297864]: 
                  beanData: '{"ionBean":"GenericItem"}'
                  tagName: ion-item
                  ↓AvatarItem [ngx.components.UIDynamicElement-1621429297867]: 
                    beanData: '{"ionBean":"Avatar"}'
                    tagName: ion-avatar
                    ↓Icon [ngx.components.UIDynamicElement-1621429297870]: 
                      beanData: '{"ionBean":"Icon","IconName":"script:item.type == ''user'' ? ''md-person'' : ''md-people''"}'
                      isEnabled: false
                      tagName: ion-icon
                    ↓Image [ngx.components.UIDynamicElement-1621429297873]: 
                      beanData: '{"ionBean":"Image","url":"script:item.picture != undefined && item.picture != '''' ? item.picture :  ''assets\/images\/svg\/icon\/icn_people_add.svg''"}'
                      selfClose: true
                      tagName: img
                  ↓Label [ngx.components.UIDynamicElement-1621429297876]: 
                    beanData: '{"ionBean":"Label"}'
                    tagName: ion-label
                    ↓Directive [ngx.components.UIControlDirective-1621429297879]: 
                      directiveName: If
                      directiveSource: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:item.type == 'user' else ElseBlock_1613496369569
                      ↓H2 [ngx.components.UIDynamicElement-1621429297882]: 
                        beanData: '{"ionBean":"Heading2"}'
                        tagName: h2
                        ↓Text [ngx.components.UIText-1621429297885]: 
                          textValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:item.displayName
                      ↓Paragraph [ngx.components.UIDynamicElement-1621429297888]: 
                        beanData: '{"ionBean":"Paragraph"}'
                        tagName: p
                        ↓Text [ngx.components.UIText-1621429297891]: 
                          i18n: true
                          textValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:item.displayMail
                    ↓Tag [ngx.components.UIElement-1621429297894]: 
                      identifier: ElseBlock_1613496369569
                      tagName: ng-template
                      ↓H2 [ngx.components.UIDynamicElement-1621429297897]: 
                        beanData: '{"ionBean":"Heading2"}'
                        tagName: h2
                        ↓Text [ngx.components.UIText-1621429297900]: 
                          i18n: true
                          textValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:item.display
                  ↓Attr [ngx.components.UIAttribute-1621429297903]: 
                    attrName: 
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:no-lines
                  ↓Style [ngx.components.UIStyle-1621429297906]: 
                  ↓Icon [ngx.components.UIDynamicElement-1621429297909]: 
                    beanData: '{"ionBean":"Icon"}'
                    isEnabled: false
                    tagName: ion-icon
                  ↓SelectContainer [ngx.components.UIDynamicElement-1621429297912]: 
                    beanData: '{"ionBean":"Select","Interface":"plain:popover"}'
                    tagName: ion-select
                    ↓SelectOption [ngx.components.UIDynamicElement-1621429297915]: 
                      beanData: '{"ionBean":"SelectOption","Value":"plain:Responses"}'
                      tagName: ion-select-option
                      ↓Text [ngx.components.UIText-1621429297918]: 
                        i18n: true
                        textValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: plain:Responses
                    ↓SelectOption1 [ngx.components.UIDynamicElement-1621429297921]: 
                      beanData: '{"ionBean":"SelectOption","Value":"plain:Edition"}'
                      tagName: ion-select-option
                      ↓Text [ngx.components.UIText-1621429297924]: 
                        i18n: true
                        textValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: plain:Edition
                    ↓SelectOption2 [ngx.components.UIDynamicElement-1621429297927]: 
                      beanData: '{"ionBean":"SelectOption","Value":"plain:Edition_Responses"}'
                      tagName: ion-select-option
                      ↓Text [ngx.components.UIText-1621429297930]: 
                        i18n: true
                        textValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: plain:Edition_Responses
                    ↓Attr [ngx.components.UIAttribute-1621429297933]: 
                      attrName: 
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:item-right
                    ↓Attr1 [ngx.components.UIAttribute-1621429297936]: 
                      attrName: '*ngIf'
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:this.local.collab == true
                    ↓Attr2 [ngx.components.UIAttribute-1621429297939]: 
                      attrName: '[(ngModel)]'
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:item.rights
                  ↓Button [ngx.components.UIDynamicElement-1621429297942]: 
                    beanData: '{"ionBean":"Button"}'
                    tagName: ion-button
                    ↓Attr [ngx.components.UIAttribute-1621429297945]: 
                      attrName: 
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:item-right
                    ↓Icon [ngx.components.UIDynamicElement-1621429297948]: 
                      beanData: '{"ionBean":"Icon","IconName":"plain:trash"}'
                      tagName: ion-icon
                    ↓Attr1 [ngx.components.UIAttribute-1621429297951]: 
                      attrName: tooltip
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:'Revoke_rights' | translate
                    ↓Attr11 [ngx.components.UIAttribute-1621429297954]: 
                      attrName: 
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:arrow
                    ↓Attr2 [ngx.components.UIAttribute-1621429297957]: 
                      attrName: positionV
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:top
                    ↓Event [ngx.components.UIControlEvent-1621429297960]: 
                      ↓revokeRights [ngx.components.UICustomAction-1621429297963]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '			let grpOrUserToRemove = {[vars.item.value]: false};
                                			
                                			page.c8o.callJsonObject("fs://c8oforms_fs.post",{
                                                "c8oGrp": grpOrUserToRemove,
                                                "_use_policy": "merge",
                                                "_id": page["navParams"]["data"]["existingGrps"]["_id"]
                                            })
                                            .then((res)=>{
                                				this.local.getFormUpdated(resolve)
                                                return null;
                                            })
                                            .fail((res)=>{
                                                resolve();
                                                console.log(res);
                                            })
                                '
                        ↓item [ngx.components.UIControlVariable-1621429297966]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:item
                    ↓Attr3 [ngx.components.UIAttribute-1621429297969]: 
                      attrName: '[disabled]'
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:this.isAcollab(item.value)
                  ↓Attr1 [ngx.components.UIAttribute-1621429297972]: 
                    attrName: '*ngIf'
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:item.value != 'C8Oreserved_' + this.local.form.creator
              ↓Directive [ngx.components.UIControlDirective-1621429297975]: 
                directiveIndexName: i
                directiveItemName: item
                directiveSource: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.local.existingGrpsOrUsersArray
                ↓GenericItem [ngx.components.UIDynamicElement-1621429297978]: 
                  beanData: '{"ionBean":"GenericItem"}'
                  tagName: ion-item
                  ↓AvatarItem [ngx.components.UIDynamicElement-1621429297981]: 
                    beanData: '{"ionBean":"Avatar"}'
                    tagName: ion-avatar
                    ↓Icon [ngx.components.UIDynamicElement-1621429297984]: 
                      beanData: '{"ionBean":"Icon","IconName":"script:item.type == ''user'' ? ''md-person'' : ''md-people''"}'
                      isEnabled: false
                      tagName: ion-icon
                    ↓Image [ngx.components.UIDynamicElement-1621429297987]: 
                      beanData: '{"ionBean":"Image","url":"script:item.picture != undefined && item.picture != '''' ? item.picture :  ''assets\/images\/svg\/icon\/icn_people_add.svg''"}'
                      selfClose: true
                      tagName: img
                  ↓Label [ngx.components.UIDynamicElement-1621429297990]: 
                    beanData: '{"ionBean":"Label"}'
                    tagName: ion-label
                    ↓Directive [ngx.components.UIControlDirective-1621429297993]: 
                      directiveName: If
                      directiveSource: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:item.type == 'user' else ElseBlock_1613496369569
                      ↓H2 [ngx.components.UIDynamicElement-1621429297996]: 
                        beanData: '{"ionBean":"Heading2"}'
                        tagName: h2
                        ↓Text [ngx.components.UIText-1621429297999]: 
                          textValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:item.displayName
                      ↓Paragraph [ngx.components.UIDynamicElement-1621429298002]: 
                        beanData: '{"ionBean":"Paragraph"}'
                        tagName: p
                        ↓Text [ngx.components.UIText-1621429298005]: 
                          i18n: true
                          textValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:item.displayMail
                    ↓Tag [ngx.components.UIElement-1621429298008]: 
                      identifier: ElseBlock_1613496369569
                      tagName: ng-template
                      ↓H2 [ngx.components.UIDynamicElement-1621429298011]: 
                        beanData: '{"ionBean":"Heading2"}'
                        tagName: h2
                        ↓Text [ngx.components.UIText-1621429298014]: 
                          i18n: true
                          textValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:item.display
                  ↓Attr [ngx.components.UIAttribute-1621429298017]: 
                    attrName: 
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:no-lines
                  ↓Style [ngx.components.UIStyle-1621429298020]: 
                  ↓SelectContainer [ngx.components.UIDynamicElement-1621429298023]: 
                    beanData: '{"ionBean":"Select","Interface":"plain:popover"}'
                    tagName: ion-select
                    ↓SelectOption [ngx.components.UIDynamicElement-1621429298026]: 
                      beanData: '{"ionBean":"SelectOption","Value":"plain:Responses"}'
                      tagName: ion-select-option
                      ↓Text [ngx.components.UIText-1621429298029]: 
                        i18n: true
                        textValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: plain:Responses
                    ↓SelectOption1 [ngx.components.UIDynamicElement-1621429298032]: 
                      beanData: '{"ionBean":"SelectOption","Value":"plain:Edition"}'
                      tagName: ion-select-option
                      ↓Text [ngx.components.UIText-1621429298035]: 
                        i18n: true
                        textValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: plain:Edition
                    ↓SelectOption2 [ngx.components.UIDynamicElement-1621429298038]: 
                      beanData: '{"ionBean":"SelectOption","Value":"plain:Edition_Responses"}'
                      tagName: ion-select-option
                      ↓Text [ngx.components.UIText-1621429298041]: 
                        i18n: true
                        textValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: plain:Edition_Responses
                    ↓Attr [ngx.components.UIAttribute-1621429298044]: 
                      attrName: 
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:item-right
                    ↓Attr1 [ngx.components.UIAttribute-1621429298047]: 
                      attrName: '*ngIf'
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:this.local.collab == true
                    ↓Attr2 [ngx.components.UIAttribute-1621429298050]: 
                      attrName: '[(ngModel)]'
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:item.rights
                  ↓Button [ngx.components.UIDynamicElement-1621429298053]: 
                    beanData: '{"ionBean":"Button"}'
                    tagName: ion-button
                    ↓Attr [ngx.components.UIAttribute-1621429298056]: 
                      attrName: 
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:item-right
                    ↓Icon [ngx.components.UIDynamicElement-1621429298059]: 
                      beanData: '{"ionBean":"Icon","IconName":"plain:trash"}'
                      tagName: ion-icon
                    ↓Attr1 [ngx.components.UIAttribute-1621429298062]: 
                      attrName: tooltip
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:'Revoke_rights' | translate
                    ↓Attr11 [ngx.components.UIAttribute-1621429298065]: 
                      attrName: 
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:arrow
                    ↓Attr2 [ngx.components.UIAttribute-1621429298068]: 
                      attrName: positionV
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:top
                    ↓Event [ngx.components.UIControlEvent-1621429298071]: 
                      ↓revokeRights [ngx.components.UICustomAction-1621429298074]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                			this.local.grp.push(this.local.existingGrpsOrUsersArray[vars.index])
                                			this.local.existingGrpsOrUsersArray.splice(vars.index, 1);
                                			
                                
                        ↓item [ngx.components.UIControlVariable-1621429298077]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:item
                        ↓index [ngx.components.UIControlVariable-1621429298080]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:i
                    ↓Attr3 [ngx.components.UIAttribute-1621429298083]: 
                      attrName: '[disabled]'
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:this.isAcollab(item.value)
                  ↓Attr1 [ngx.components.UIAttribute-1621429298086]: 
                    attrName: '*ngIf'
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:item.value != 'C8Oreserved_' + this.local.form.creator
              ↓FormatLayout1 [ngx.components.UIDynamicAttr-1645090140035]: 
                beanData: '{"ionBean":"FormatLayout","TextAlignment":"plain:ion-text-center"}'
                comment: FormatLayout
                tagName: div
              ↓Directive2 [ngx.components.UIControlDirective-1621429298092]: 
                directiveIndexName: index2
                directiveItemName: item2
                directiveSource: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.local.invite_new
                ↓GenericItem [ngx.components.UIDynamicElement-1621429298095]: 
                  beanData: '{"ionBean":"GenericItem"}'
                  tagName: ion-item
                  ↓AvatarItem [ngx.components.UIDynamicElement-1621429298098]: 
                    beanData: '{"ionBean":"Avatar"}'
                    tagName: ion-avatar
                    ↓Image [ngx.components.UIDynamicElement-1621429298101]: 
                      beanData: '{"ionBean":"Image","url":"script:''assets\/images\/svg\/icon\/icn_people_add.svg''"}'
                      selfClose: true
                      tagName: img
                  ↓Attr [ngx.components.UIAttribute-1621429298104]: 
                    attrName: 
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:no-lines
                  ↓Style [ngx.components.UIStyle-1621429298107]: 
                  ↓H2 [ngx.components.UIDynamicElement-1621429298110]: 
                    beanData: '{"ionBean":"Heading2"}'
                    tagName: h2
                    ↓Text [ngx.components.UIText-1621429298113]: 
                      i18n: true
                      textValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:item2 + ' ' + this.translate.instant('invited')
                  ↓Button [ngx.components.UIDynamicElement-1621429298116]: 
                    beanData: '{"ionBean":"Button"}'
                    tagName: ion-button
                    ↓Attr [ngx.components.UIAttribute-1621429298119]: 
                      attrName: 
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:item-end
                    ↓Icon [ngx.components.UIDynamicElement-1621429298122]: 
                      beanData: '{"ionBean":"Icon","IconName":"plain:trash"}'
                      tagName: ion-icon
                    ↓Attr1 [ngx.components.UIAttribute-1621429298125]: 
                      attrName: tooltip
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:'Revoke_rights' | translate
                    ↓Attr11 [ngx.components.UIAttribute-1621429298128]: 
                      attrName: 
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:arrow
                    ↓Attr2 [ngx.components.UIAttribute-1621429298131]: 
                      attrName: positionV
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:top
                    ↓Event [ngx.components.UIControlEvent-1621429298134]: 
                      ↓revokeRights [ngx.components.UICustomAction-1621429298137]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '			//let grpOrUserToRemove = {[vars.item.value]: false};
                                			let params = {
                                                "_use_policy": "merge",
                                                "_id": page["navParams"]["data"]["existingGrps"]["_id"]
                                            };
                                			const idToremove = this.local.invite_new[vars.index] + "_"+params["_id"];
                                			this.local.invite_new.splice(vars.index, 1);
                                			if(this.local.invite_new.length == 0){
                                				params["_use_merge_invited"] = "delete"
                                			}
                                			else{
                                				params["invited"] = this.local.invite_new;
                                				params["_use_merge_invited"] = "override"
                                			}
                                			
                                			page.c8o.callJsonObject("fs://c8oforms_fs.post",params)
                                            .then((res)=>{
                                				this.local.getFormUpdated(resolve);
                                				this.c8o.callJson("C8Oforms.RemoveNewUserSharing", "id", idToremove);
                                                return null;
                                            })
                                            .fail((res)=>{
                                                resolve();
                                                console.log(res);
                                            })
                                '
                        ↓index [ngx.components.UIControlVariable-1621429298140]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:index2
                    ↓Attr3 [ngx.components.UIAttribute-1621429298143]: 
                      attrName: '[disabled]'
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:this.isAcollab(item.value)
                      isEnabled: false
        ↓Style [ngx.components.UIStyle-1621416987398]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  'border: 1px solid var(--ion-color-btLight);
                  border-radius:10px;
                  padding-bottom:30px !important;
                  padding-top:30px !important;
                  margin-bottom:10px;
                  '
      ↓GridLinkAuthAuth [ngx.components.UIDynamicElement-1621429494253]: 
        beanData: '{"ionBean":"Grid","Height":"plain:unset"}'
        tagName: ion-grid
        ↓GridRow [ngx.components.UIDynamicElement-1621429494256]: 
          beanData: |
            '{
             "ionBean": "GridRow",
             "Height": "plain:unset",
             "FlexAlignement": "plain:ion-align-items-center"
            }'
          tagName: ion-row
          ↓GridCol [ngx.components.UIDynamicElement-1621429494259]: 
            beanData: |
              '{
               "ionBean": "GridCol",
               "FlexAlignement": "plain:ion-align-self-center",
               "Size": "plain:1"
              }'
            tagName: ion-col
            ↓Style [ngx.components.UIStyle-1621429494262]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      	position:relative;
                      
            ↓Div [ngx.components.UIDynamicElement-1621429494265]: 
              beanData: '{"ionBean":"DivTag"}'
              tagName: div
              ↓Style [ngx.components.UIStyle-1621429494268]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        	height:100%;
                        	width:100%;
                        	text-align:center;
                        
              ↓Icon [ngx.components.UIDynamicElement-1621429494271]: 
                beanData: '{"ionBean":"Icon","IconName":"plain:ios-link"}'
                tagName: ion-icon
                ↓Style [ngx.components.UIStyle-1621429494274]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '	font-size: 50px;
                          	position: absolute;
                          	top: 50%; left: 50%; 
                            	transform: translate(-50%, -50%);
                          
                          '
          ↓GridCol1 [ngx.components.UIDynamicElement-1621429494277]: 
            beanData: |
              '{
               "ionBean": "GridCol",
               "FlexAlignement": "plain:ion-align-self-end",
               "Size": "plain:9"
              }'
            tagName: ion-col
            ↓H1 [ngx.components.UIDynamicElement-1621429494280]: 
              beanData: '{"ionBean":"Heading1"}'
              tagName: h1
              ↓Text [ngx.components.UIText-1621429494283]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:text_share_link_auth
              ↓Style [ngx.components.UIStyle-1621429494286]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        margin-bottom:0 !important;
                        
                        
            ↓Tag [ngx.components.UIElement-1621429494289]: 
              tagName: ul
              ↓Tag [ngx.components.UIElement-1621429494292]: 
                tagName: li
                ↓Attr [ngx.components.UIAttribute-1621429494295]: 
                  attrName: '[innerHTML]'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: 'script:translate.instant(this.local.pwa?.notAnonymous ? ''text_share_link_private_arg1'' : ''text_share_link_anonymous_arg1'')'
              ↓Tag1 [ngx.components.UIElement-1621429494298]: 
                tagName: li
                ↓Attr [ngx.components.UIAttribute-1621429494301]: 
                  attrName: '[innerHTML]'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: 'script:translate.instant(this.local.pwa?.notAnonymous ? ''text_share_link_private_arg2'' : ''text_share_link_anonymous_arg2'')'
            ↓Grid [ngx.components.UIDynamicElement-1621429494304]: 
              beanData: '{"ionBean":"Grid"}'
              tagName: ion-grid
              ↓GridRow [ngx.components.UIDynamicElement-1621429494307]: 
                beanData: '{"ionBean":"GridRow"}'
                tagName: ion-row
                ↓GridColLinkAndCopy [ngx.components.UIDynamicElement-1621429494310]: 
                  beanData: '{"ionBean":"GridCol","Size":"plain:12"}'
                  tagName: ion-col
                  ↓Div [ngx.components.UIDynamicElement-1621429494313]: 
                    beanData: '{"ionBean":"DivTag"}'
                    tagName: div
                    ↓TextInput [ngx.components.UIDynamicElement-1621429494316]: 
                      beanData: '{"ionBean":"Input","Debounce":"plain:0"}'
                      tagName: ion-input
                      ↓Style [ngx.components.UIStyle-1621429494319]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '	/*width:470px;*/
                                	display:inline-block;
                                	flex: auto;
                                	input{
                                		margin-left:0 !important;
                                	}
                                '
                      ↓Attr [ngx.components.UIAttribute-1621429494322]: 
                        attrName: '[ngModel]'
                        attrValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:this.local.linkAuth
                    ↓Button [ngx.components.UIDynamicElement-1621429494325]: 
                      beanData: '{"ionBean":"Button"}'
                      tagName: ion-button
                      ↓Text [ngx.components.UIText-1621429494328]: 
                        i18n: true
                        textValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: plain:copy_the_link
                      ↓Style [ngx.components.UIStyle-1621429494331]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                'vertical-align: middle;
                                text-transform: none !important;
                                flex: initial;
                                '
                      ↓Event [ngx.components.UIControlEvent-1621429494334]: 
                        ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1621429494337]: 
                          beanData: '{"ionBean":"InvokeAction"}'
                          stack: C8Oforms.MobileApplication.Application.CopyLinkToClipBoard
                          ↓link [ngx.components.UIControlVariable-1621429494340]: 
                            varValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: script:this.local.linkAuth
                    ↓Style [ngx.components.UIStyle-1621429494343]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '	display: flex;
                              '
                    ↓Style1 [ngx.components.UIStyle-1621429494346]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              	padding-left:0 !important;
                              	margin-left:0 !important;
                              
                  ↓Attr1 [ngx.components.UIAttribute-1621429494349]: 
                    attrName: '*ngIf'
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:this.local.sharedAnonymous == 'true' && this.local.notUsed
                    isEnabled: false
          ↓GridColQR [ngx.components.UIDynamicElement-1621429494394]: 
            beanData: '{"ionBean":"GridCol","Size":"plain:2"}'
            tagName: ion-col
            ↓Div [ngx.components.UIDynamicElement-1621429494397]: 
              beanData: '{"ionBean":"DivTag"}'
              tagName: div
              ↓Style [ngx.components.UIStyle-1621429494400]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '
                            width:120px;
                            height:120px;
                            -webkit-border-radius: 50%;
                            border-radius: 50%;
                            margin-left: auto;
                            margin-right: auto;
                            canvas{
                            width:100px !important;
                            height:100px !important;
                            }
                        
                        }
                        
                        .class1604598394437:hover {
                        	cursor: pointer;
                        '
              ↓UseSharedComponent [ngx.components.UIUseShared-1621429494403]: 
                sharedcomponent: lib_ExtendedComponents_ui_ngx.MobileApplication.Application.angularxQRCode
                ↓qrdata [ngx.components.UIUseVariable-1621429494406]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this.local.linkAuth
                ↓size [ngx.components.UIUseVariable-1621429494409]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:256
                ↓level [ngx.components.UIUseVariable-1621429494412]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:'M'
                ↓usesvg [ngx.components.UIUseVariable-1621429494415]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:false
                ↓colordark [ngx.components.UIUseVariable-1621429494418]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:'#000000'
                ↓colorlight [ngx.components.UIUseVariable-1621429494421]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:'#FFFFFF'
                ↓allowEmptyString [ngx.components.UIUseVariable-1621429494424]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:false
            ↓Attr1 [ngx.components.UIAttribute-1621429494427]: 
              attrName: '*ngIf'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:this.local.sharedAnonymous == 'true' && this.local.notUsed
              isEnabled: false
        ↓Style [ngx.components.UIStyle-1621429494430]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '//border-bottom: 1px solid var(--ion-color-convertigo);
                  border: 1px solid var(--ion-color-btLight);
                  border-radius:10px;
                  padding-bottom:30px !important;
                  padding-top:30px !important;
                  margin-bottom:10px;
                  '
        ↓Attr [ngx.components.UIAttribute-1621429518263]: 
          attrName: '*ngIf'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:this.local.collab == false && this.local.pwa?.notAnonymous == true
      ↓GridLinkAuthAnno [ngx.components.UIDynamicElement-1621417331537]: 
        beanData: '{"ionBean":"Grid","Height":"plain:unset"}'
        tagName: ion-grid
        ↓GridRow [ngx.components.UIDynamicElement-1621417331540]: 
          beanData: |
            '{
             "ionBean": "GridRow",
             "Height": "plain:unset",
             "FlexAlignement": "plain:ion-align-items-center"
            }'
          tagName: ion-row
          ↓GridCol [ngx.components.UIDynamicElement-1621417331543]: 
            beanData: |
              '{
               "ionBean": "GridCol",
               "FlexAlignement": "plain:ion-align-self-center",
               "Size": "plain:1"
              }'
            tagName: ion-col
            ↓Style [ngx.components.UIStyle-1621417331546]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      	position:relative;
                      	height:100%;
                      	width:100%;
                      
            ↓Div [ngx.components.UIDynamicElement-1621417331549]: 
              beanData: '{"ionBean":"DivTag"}'
              tagName: div
              ↓Style [ngx.components.UIStyle-1621417331552]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        	height:100%;
                        	width:100%;
                        	text-align:center;
                        
              ↓Icon [ngx.components.UIDynamicElement-1621417422247]: 
                beanData: '{"ionBean":"Icon","IconName":"plain:ios-link"}'
                tagName: ion-icon
                ↓Style [ngx.components.UIStyle-1621417422250]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '	font-size: 50px;
                          	position: absolute;
                          	top: 50%; left: 50%; 
                            	transform: translate(-50%, -50%);
                          
                          '
          ↓GridCol1 [ngx.components.UIDynamicElement-1621417331561]: 
            beanData: |
              '{
               "ionBean": "GridCol",
               "FlexAlignement": "plain:ion-align-self-end",
               "Size": "plain:9"
              }'
            tagName: ion-col
            ↓H1 [ngx.components.UIDynamicElement-1621417331564]: 
              beanData: '{"ionBean":"Heading1"}'
              tagName: h1
              ↓Text [ngx.components.UIText-1621417331567]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:text_share_link_anonymous
              ↓Style [ngx.components.UIStyle-1621417331570]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        margin-bottom:0 !important;
                        
                        
            ↓Tag [ngx.components.UIElement-1621417331573]: 
              tagName: ul
              ↓Tag [ngx.components.UIElement-1621417331576]: 
                tagName: li
                ↓Attr [ngx.components.UIAttribute-1621427828847]: 
                  attrName: '[innerHTML]'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: 'script:translate.instant(this.local.pwa?.notAnonymous ? ''text_share_link_private_arg1'' : ''text_share_link_anonymous_arg1'')'
              ↓Tag1 [ngx.components.UIElement-1621427952277]: 
                tagName: li
                ↓Attr [ngx.components.UIAttribute-1621427952292]: 
                  attrName: '[innerHTML]'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: 'script:translate.instant(this.local.pwa?.notAnonymous ? ''text_share_link_private_arg2'' : ''text_share_link_anonymous_arg2'')'
              ↓Tag11 [ngx.components.UIElement-1621429967145]: 
                tagName: li
                ↓Attr [ngx.components.UIAttribute-1621429967148]: 
                  attrName: '[innerHTML]'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:translate.instant('text_share_link_anonymous_arg3')
                ↓Attr1 [ngx.components.UIAttribute-1621430017943]: 
                  attrName: '*ngIf'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:this.local.pwa?.notAnonymous == true
            ↓Grid [ngx.components.UIDynamicElement-1621417940282]: 
              beanData: '{"ionBean":"Grid"}'
              tagName: ion-grid
              ↓GridRow [ngx.components.UIDynamicElement-1621417940285]: 
                beanData: '{"ionBean":"GridRow"}'
                tagName: ion-row
                ↓GridColLinkAndCopy [ngx.components.UIDynamicElement-1621417940342]: 
                  beanData: '{"ionBean":"GridCol","Size":"plain:12"}'
                  tagName: ion-col
                  ↓Div [ngx.components.UIDynamicElement-1621417940345]: 
                    beanData: '{"ionBean":"DivTag"}'
                    tagName: div
                    ↓TextInput [ngx.components.UIDynamicElement-1621417940348]: 
                      beanData: '{"ionBean":"Input","Debounce":"plain:0"}'
                      tagName: ion-input
                      ↓Style [ngx.components.UIStyle-1621417940351]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '	/*width:470px;*/
                                	display:inline-block;
                                	flex: auto;
                                	input{
                                		margin-left:0 !important;
                                	}
                                '
                      ↓Attr [ngx.components.UIAttribute-1621417940354]: 
                        attrName: '[ngModel]'
                        attrValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:this.local.linkAnno
                    ↓Button [ngx.components.UIDynamicElement-1621417940357]: 
                      beanData: '{"ionBean":"Button"}'
                      tagName: ion-button
                      ↓Text [ngx.components.UIText-1621417940360]: 
                        i18n: true
                        textValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: plain:copy_the_link
                      ↓Style [ngx.components.UIStyle-1621417940363]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                'vertical-align: middle;
                                text-transform: none !important;
                                flex: initial;
                                '
                      ↓Event [ngx.components.UIControlEvent-1621417940366]: 
                        ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1621417940369]: 
                          beanData: '{"ionBean":"InvokeAction"}'
                          stack: C8Oforms.MobileApplication.Application.CopyLinkToClipBoard
                          ↓link [ngx.components.UIControlVariable-1621417940372]: 
                            varValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: script:this.local.linkAnno
                    ↓Style [ngx.components.UIStyle-1621417940375]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '	display: flex;
                              '
                    ↓Style1 [ngx.components.UIStyle-1621417940378]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              	padding-left:0 !important;
                              	margin-left:0 !important;
                              
                  ↓Attr1 [ngx.components.UIAttribute-1621417940381]: 
                    attrName: '*ngIf'
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:this.local.sharedAnonymous == 'true' && this.local.notUsed
                    isEnabled: false
              ↓Attr1 [ngx.components.UIAttribute-1621431916543]: 
                attrName: '*ngIf'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:this.local.sharedAnonymous == 'true' && this.local.notUsed
            ↓ToggleButton [ngx.components.UIDynamicElement-1621431048222]: 
              beanData: '{"ionBean":"Toggle"}'
              tagName: ion-toggle
              ↓Style [ngx.components.UIStyle-1621431048225]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '	position:absolute;
                        	top:0;
                        	right:-50px;
                        	transform: translateY(-15%);
                        '
              ↓Event [ngx.components.UIControlEvent-1621431048228]: 
                attrName: (ngModelChange)
                eventName: (ngModelChange)
                ↓IfElse [ngx.components.UIDynamicIf-1621431048231]: 
                  beanData: '{"ionBean":"IfElseAction","condition":"script:stack.root.out"}'
                  ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1621431048234]: 
                    beanData: '{"ionBean":"InvokeAction"}'
                    stack: C8Oforms.MobileApplication.Application.popOverGetLinkSharePublic
                    ↓selectedForm [ngx.components.UIControlVariable-1621431048237]: 
                      varValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:this.local.selectedForm
                  ↓Else_Handler [ngx.components.UIActionElseEvent-1621431048240]: 
                    ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1621431048243]: 
                      beanData: '{"ionBean":"InvokeAction"}'
                      stack: C8Oforms.MobileApplication.Application.popOverDisableSharePublic
                      ↓selectedForm [ngx.components.UIControlVariable-1621431048246]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:this.local.selectedForm
                ↓ManuelSet [ngx.components.UICustomAction-1621431048249]: 
                  actionValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          		//page.local.manualSet = props.stack.root.out;
                          		resolve();
                          
              ↓Attr [ngx.components.UIAttribute-1621431048252]: 
                attrName: '[(ngModel)]'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.local.notUsed
              ↓Attr1 [ngx.components.UIAttribute-1621431048255]: 
                attrName: '*ngIf'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:this.local.pwa.notAnonymous
          ↓GridColQR [ngx.components.UIDynamicElement-1621418392899]: 
            beanData: '{"ionBean":"GridCol","Size":"plain:2"}'
            tagName: ion-col
            ↓Div [ngx.components.UIDynamicElement-1621418392902]: 
              beanData: '{"ionBean":"DivTag"}'
              tagName: div
              ↓Style [ngx.components.UIStyle-1621418392905]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '
                            width:120px;
                            height:120px;
                            -webkit-border-radius: 50%;
                            border-radius: 50%;
                            margin-left: auto;
                            margin-right: auto;
                            canvas{
                            width:100px !important;
                            height:100px !important;
                            }
                        
                        }
                        
                        .class1604598394437:hover {
                        	cursor: pointer;
                        '
              ↓UseSharedComponent [ngx.components.UIUseShared-1621418392908]: 
                sharedcomponent: lib_ExtendedComponents_ui_ngx.MobileApplication.Application.angularxQRCode
                ↓qrdata [ngx.components.UIUseVariable-1621418392911]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this.local.linkAnno
                ↓size [ngx.components.UIUseVariable-1621418392914]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:256
                ↓level [ngx.components.UIUseVariable-1621418392917]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:'M'
                ↓usesvg [ngx.components.UIUseVariable-1621418392920]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:false
                ↓colordark [ngx.components.UIUseVariable-1621418392923]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:'#000000'
                ↓colorlight [ngx.components.UIUseVariable-1621418392926]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:'#FFFFFF'
                ↓allowEmptyString [ngx.components.UIUseVariable-1621418392929]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:false
            ↓Attr1 [ngx.components.UIAttribute-1621418392932]: 
              attrName: '*ngIf'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:this.local.sharedAnonymous == 'true' && this.local.notUsed
              isEnabled: false
            ↓Attr11 [ngx.components.UIAttribute-1621431909519]: 
              attrName: '*ngIf'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:this.local.sharedAnonymous == 'true' && this.local.notUsed
        ↓Style [ngx.components.UIStyle-1621417331648]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '//border-bottom: 1px solid var(--ion-color-convertigo);
                  border: 1px solid var(--ion-color-btLight);
                  border-radius:10px;
                  padding-bottom:30px !important;
                  padding-top:30px !important;
                  '
↓PageEvent [ngx.components.UIPageEvent-1591801288472]: 
  ↓Finally_Handler [ngx.components.UIActionFinallyEvent-1613123631329]: 
    ↓GetData [ngx.components.UIDynamicAction-1614601072784]: 
      beanData: |
        '{
         "ionBean": "FullSyncGetAction",
         "requestable": "plain:C8Oforms.c8oforms_fs",
         "_id": "script:this.navParams.data.existingGrps._id+''_pwa_document''"
        }'
      ↓Failure_Handler [ngx.components.UIActionFailureEvent-1614601072787]: 
      ↓SetPwaValues [ngx.components.UICustomAction-1614601072793]: 
        actionValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                		    if(props.parent.out != undefined){
                		        this.local.pwa = props.parent.out;
                		    }
                		    resolve();
                
    ↓SetValue [ngx.components.UICustomAction-1591801527704]: 
      actionValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              '			page.local.manualSet = "false";
                			// get existing groups or users ids
                			this.local.getFormUpdated = (resolve1)=>{
              				resolve1();
              			};
              			page.c8o.callJsonObject("fs://c8oforms_fs.view",{
              				"ddoc":"allFormsV2",
              				"view":"all",
                              "key": page["navParams"]["data"]["existingGrps"]["_id"],
              				"__live":"CTS1591801527704"
              				
                          })
                          .then((res:any)=>{
              				
              				res = res.rows[0].value.doc;
              				
              				var newHash = sha256(JSON.stringify(res));
              				if(newHash != page.local.hash){
              					page.local.hash = newHash;
              					//get pwa vals
              					page.c8o.callJsonObject("fs://c8oforms_fs.get",{"docid": this.navParams.data.existingGrps._id+''_pwa_document''})
              					.then((res)=>{
              						debugger;
              						page.local.pwa = res;
              						return null;
              					})
              					.fail((err)=>{
              						this.c8o.log.debug("No existing pwa for now");
              					})
              					let baseUrl = (window.location.href.substring(0, window.location.href.indexOf("mobile/index.html")) != "" ? window.location.href.substring(0, window.location.href.indexOf("mobile/index.html")) : "http://localhost:18080/convertigo/projects/C8Oforms/DisplayObjects/");
                					this.local.form = res;
                					let InvitUse_App = page["translate"].instant("InvitUse_App")
                					let formName = this.local.form.name;
                					let link = this.local.currentLink = baseUrl + res["pwa_subPath"]; //+ "#/viewer/" + res["_id"] + "/:edit/:i";
                					let openApp = page["translate"].instant("OpenApp");
                					this.local.emailBody = `<div style="padding: 3pt 0; text-align: center; font-size: 14pt; color: #fff; background-color: #0cbbe7;">Convertigo Forms</div> 
                									<p style="text-align: center;">`+ InvitUse_App +`</p>
                									<p style="text-align: center;"><strong>`+formName+`</strong></p>
                									<p style="text-align: center;"><strong><a title="`+formName+`" href="`+link+`" target="_blank" rel="noopener">`+openApp+`</a></strong></p>`
                					
                					this.local.selectedForm = res;
                					this.local.sharedAnonymous = res["sharedAnonymous"] != undefined ? res["sharedAnonymous"] : page.local.manualSet; 
              					this.local.notUsed = this.local.sharedAnonymous == "true";
                					if(this.local.sharedAnonymous == "true"){
                						let userName = sha256(res["_id"]);
                						this.local.linkAnno = baseUrl + res["pwa_subPath"] + "#/s/" + userName;
              						this.local.linkAuth = baseUrl + res["pwa_subPath"] + "#/viewer/" + res["_id"] + "/:edit/:i";
                			        	//let prefix2: string = window.location.href.substring(0, window.location.href.indexOf("#/"));
                			        	//this.local.currentLink = prefix2 + "#/s/" + userName;
                					}
                					else{
                						this.local.linkAuth = baseUrl + res["pwa_subPath"] + "#/viewer/" + res["_id"] + "/:edit/:i";
                						//let prefix: string = window.location.href.substring(0, window.location.href.indexOf("#/"));
                            			//this.local.currentLink = prefix + "#/viewer/" + res["_id"] + "/:edit/:i";
                					}
                					
                					page.ref.detectChanges(); 
                					let grpOrUsers = [];
                					let originalGroups = [];
                					let originalUsers = [];
                					
                					// if we want to add collabs
                					let existingGrpsOrUsersArray = [];  
                					
              					let existingGrps = res[''c8oGrp''] != undefined ? res[''c8oGrp''] : [];
              			        for(let i in existingGrps){
              						if(existingGrps[i] == true || existingGrps[i] == "true"){
              							existingGrpsOrUsersArray.push(i);
              						}
              			        }
              					// add also referenced responses collabs that has no acces to non publish doc
              					if(res["collabsResponse"] != undefined){
              						for(let elem of res["collabsResponse"]){
              							if(existingGrpsOrUsersArray.indexOf(elem) == -1){
              								existingGrpsOrUsersArray.push(elem)
              							}
              						}
              					}
                					
                					this.local.existingGrpsOrUsersArray = [];
                					// set default value to share notifs
                					page.local.notif = true;
                					//
                					page.local.grp = [];
                					//
                				    page.local.share_mail = page["navParams"]["data"]["share_mail"];
                					
                					
                					let groups;
                					let doGroups = true;
                					try{
                						groups = props.stack["CallSequence"]["out"]["sequence"]["document"]["group"];
                					}
                					catch(e){
                						page.c8o.log.error("Can''''t retrive groups", e);
                						doGroups = false;
                					}
                				    if(doGroups){
                						//prevent from non array when there is only one group
                				        if(!(groups instanceof Array)){
                				             grpOrUsers = [groups];
                				        } 
                				        else{
                			                grpOrUsers = groups;
                			            }
                						// hide C8Oforms technicals groups
                						grpOrUsers = grpOrUsers.filter((x)=>{
                							return x.indexOf("_C8O_HIDDEN_") == -1 && x.indexOf("C8Oreserved_") == -1;
                						})
                						
                						//format grp
                						grpOrUsers = grpOrUsers.map((x)=>{
              							const type = {
              								"type":"group",
              								"value": x,
              								"display": x.indexOf("ad:") == 0 ? x.substring(3) : x,
              								"picture": "assets/images/svg/icon/icn_people.svg"
              							};
              							return type
              						
              						});
                						
                						page.local.grp = grpOrUsers;
                				    }
                		
                					let users;
                					let doUsers = true;
                					try{
                						users = props.stack["CallSequence1"]["out"]["transaction"]["document"]["couchdb_output"]["rows"];
                					}
                					catch(e){
                						page.c8o.log.error("Can''''t retrive users", e);
                						doUsers = false;
                					}
                					if(doUsers){
                						//prevent from non array when there is only one group
                				        if(!(users instanceof Array)){
                				             users = [users];
                				        } 
                				        else{
                			                users = users;
                			            }
                						users = users.map((x)=>{
                							return {
                								"value": x.id,
                								"displayName": x.value.displayName != undefined ? x.value.displayName : "",
                								"displayMail": x.value.mail != undefined ? x.value.mail : "",
                								"display": x.value.displayName + (x.value.displayName != undefined && x.value.mail != undefined ? " ": "") + x.value.mail,
                								"picture": x.value.picture,
                								"type": "user"
                							}
                						}); 
                						
                		
                						page.local.grp = page.local.grp.concat(users);
                					}					
                					//remove existing users or group and push it to another array to display it
              					page.local.grp = page.local.grp.reduce((filtered, x) =>{
              						if(existingGrpsOrUsersArray.indexOf(x.value) == -1){
              							if(this.local.collab == true){
              								x.rights = "Edition_Responses";
              							}
                							filtered.push(x);
                						}
                						else{
                							this.local.existingGrpsOrUsersArray.push(x);
                						}
              						return filtered;
              					},[]);
              					
              					// migration
              					if(this.local.form.shared == undefined){
              						try{
              							page.c8o.callJsonObject("fs://c8oforms_fs.post",{
              			  	                "_id": page["navParams"]["data"]["existingGrps"]["_id"],
              								"_use_policy":"merge",
              								"shared":existingGrpsOrUsersArray
              			  	            })
              						}
              						catch(e){
              							
              						}
              						
              						this.local.form.shared = existingGrpsOrUsersArray;
              					}
              					if(this.local.form.c8oGrp == undefined || this.local.form.c8oGrp[this.global.settings._id] == undefined || this.local.form.c8oGrp[this.global.settings._id] == false){
              						try{
              							page.c8o.callJsonObject("fs://c8oforms_fs.post",{
              			  	                "_id": page["navParams"]["data"]["existingGrps"]["_id"],
              								"_use_policy":"merge",
              								"c8oGrp":{[this.global.settings._id]: true}
              			  	            })
              }
              						catch(e){
              							
              						}
              					}
                					// end migration
              					page.local.invite_new = [];
                					if(res["invited"] != undefined){
                						page.local.invite_new = res["invited"];
                					}
              					// filter for collab or not
                					if(!this.local.collab){
              						this.local.existingGrpsOrUsersArray = this.local.existingGrpsOrUsersArray.filter((x)=>{
              							let isSimpleShare = true;
              							if(this.local.form.collabs != undefined){
              								isSimpleShare = !(this.local.form.collabs.indexOf(x.value) != -1);
              							}
              							if(this.local.form.collabsResponse != undefined && isSimpleShare == true){
              								isSimpleShare = !(this.local.form.collabsResponse.indexOf(x.value) != -1);
              							}
              							if(!isSimpleShare){
              								page.local.grp.push(x);
              							}
              							return isSimpleShare;
              						})
              					}
              					else{
              						this.local.existingGrpsOrUsersArray = this.local.existingGrpsOrUsersArray.reduce((filtered, x) =>{
              							let isCollab = false;
              							let isCollabResponse = false;
              						  	if(this.local.form.collabs != undefined){
              								isCollab = (this.local.form.collabs.indexOf(x.value) != -1);
              							}
              							if(this.local.form.collabsResponse != undefined ){
              								isCollabResponse = (this.local.form.collabsResponse.indexOf(x.value) != -1);
              							}
              							if(isCollab && isCollabResponse){
              								x.rights = "Edition_Responses";
              								filtered.push(x);
              							}
              							else if (isCollab && !isCollabResponse){
              								x.rights = "Edition";
              								filtered.push(x);
              							}
              							else if(!isCollab && isCollabResponse){
              								x.rights = "Responses";
              								filtered.push(x);
              							}
              							else{
              								if(this.local.collab == true){
              									x.rights = "Edition_Responses";
              								}
              								page.local.grp.push(x);
              							}
              							return filtered;
              						}, []);
              					}
              					// sort alphabetically by display name
                					page.local.grp.sort((a, b)=> {
                			            return a.display.toLowerCase().localeCompare(b.display.toLowerCase());
                			        });
              					page.local.grp = page.local.grp.filter((val)=>{
              							if(val.value == "C8Oreserved_"+this.local.form.creator){
              								return false;
              							}
              							// don''t include bug that includes annonymous users (to be investigated)
              							else if(val.value.length == 76 && val.value.indexOf("@") == -1){
              								return false;
              							}
              							else{
              								return true;
              							}
              					})
                					page.ref.detectChanges();
                					
                				}	
              				page.local.spinner = false;
                              return null;
                          })
                          .fail((res)=>{
                              resolve();
              				page.local.spinner = false;
              				page.ref.detectChanges();
                              console.log(res);
                          })
                			
                			this.local.getFormUpdated(resolve);
              '
      page_ts_imports: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
              - com.twinsoft.convertigo.beans.common.XMLVector: 
                - java.lang.String: 
                  - ↑value: sha256
                - java.lang.String: 
                  - ↑value: js-sha256
  ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1591962058419]: 
    beanData: '{"ionBean":"InvokeAction"}'
    stack: C8Oforms.MobileApplication.Application.setSpinner
    ↓CallSequence [ngx.components.UIDynamicAction-1613582093649]: 
      beanData: |
        '{
         "ionBean": "CallSequenceAction",
         "requestable": "plain:C8Oforms.GroupsOf",
         "noLoading": "plain:true"
        }'
      ↓user [ngx.components.UIControlVariable-1613582093652]: 
        comment: new variable
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:this.global.user
    ↓CallSequence1 [ngx.components.UIDynamicAction-1613582093655]: 
      beanData: '{"ionBean":"CallSequenceAction","requestable":"plain:C8Oforms.getKnownUsers"}'
    ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1624006739451]: 
      beanData: '{"ionBean":"InvokeAction"}'
      stack: C8Oforms.MobileApplication.Application.importNg2Tooltips
↓Footer [ngx.components.UIDynamicElement-1591882841524]: 
  beanData: '{"ionBean":"Footer"}'
  tagName: ion-footer
  ↓ToolBar [ngx.components.UIDynamicElement-1646929408095]: 
    beanData: '{"ionBean":"ToolBar"}'
    tagName: ion-toolbar
    ↓ButtonSet [ngx.components.UIDynamicElement-1591882841530]: 
      beanData: '{"ionBean":"ButtonSet","SetPosition":"plain:end"}'
      tagName: ion-buttons
      ↓Button1 [ngx.components.UIDynamicElement-1592313803198]: 
        beanData: |
          '{
           "ionBean": "Button",
           "IonColor": "plain:primary",
           "IonFill": "plain:solid"
          }'
        tagName: ion-button
        ↓Text [ngx.components.UIText-1592313803201]: 
          i18n: true
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'Cancel' | translate
        ↓Attr [ngx.components.UIAttribute-1592313803204]: 
          attrName: slot
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:left
        ↓Event [ngx.components.UIControlEvent-1592313803207]: 
          ↓CloseModal [ngx.components.UIDynamicAction-1592313803213]: 
            beanData: '{"ionBean":"CloseModalAction"}'
      ↓Button [ngx.components.UIDynamicElement-1591882841533]: 
        beanData: |
          '{
           "ionBean": "Button",
           "IonColor": "plain:primary",
           "IonFill": "plain:solid"
          }'
        tagName: ion-button
        ↓Text [ngx.components.UIText-1591882841536]: 
          i18n: true
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'Save' | translate
        ↓Attr [ngx.components.UIAttribute-1591882841539]: 
          attrName: slot
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:right
        ↓Event [ngx.components.UIControlEvent-1591882841542]: 
          ↓SaveProperties [ngx.components.UICustomAction-1591882841545]: 
            actionValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    '		setTimeout(()=>{
                    			let groupsToAdd = {};
                    			let invite_new = [];
                    			if(this.local.collab == false){
                    				let newSharedGrp = this.local.newUsersOrGroups;
                    				let modifiedExistingSharedGrp = this.local.existingGrpsOrUsersArray;
                    				let newShared = [];
                    				
                    				let oldCollabs = this.local.form.collabs != undefined ? JSON.parse(JSON.stringify(this.local.form.collabs)) : [];
                    				let oldCollabsResponse = this.local.form.collabsResponse != undefined ? JSON.parse(JSON.stringify(this.local.form.collabsResponse)) : [];
                    				let oldShared = this.local.form.shared != undefined ? JSON.parse(JSON.stringify(this.local.form.shared)) : [];
                    				
                    				this.local.newUsersOrGroups.forEach((elem)=>{
                    					if(elem.type != undefined){
                    						groupsToAdd[elem.value] = true;
                    						
                    					}
                    					else{
                    						invite_new.push(elem.value);
                    					}
                    					
                    				});
                    				// define new objects collabs collabsResponse
                    				newSharedGrp.concat(modifiedExistingSharedGrp).forEach((elem, index)=>{
                    					newShared.push(elem.value);
                    					groupsToAdd[elem.value] = true;
                    				});
                    
                    				
                    				// search if still exists to any one group (included to collabs or collabsResponse ones)
                    				oldShared.forEach((elem)=>{
                    					if(!(oldCollabs.concat(oldCollabsResponse).concat(newSharedGrp.map((x)=>{return x.value})).concat(modifiedExistingSharedGrp.map((x)=>{return x.value})).indexOf(elem) == -1)){
                    						groupsToAdd[elem] = true;						
                    					}
                    					else{
                    						groupsToAdd[elem] = false;	
                    					}
                    				})
                    				if(groupsToAdd == undefined){
                    					groupsToAdd = {};
                    				}
                    				groupsToAdd["C8Oreserved_"+ this.local.form.creator] = true;
                    				
                    				let removedGrps = [];
                    				if(this.local.form.c8oGrp != undefined){
                    					Object.keys(this.local.form.c8oGrp).forEach((key)=>{
                    						if(this.local.form.c8oGrp[key] == true && groupsToAdd[key] == false){
                    							removedGrps.push(key);
                    						}
                    					})
                    				}
                    				page.c8o.callJsonObject("fs://c8oforms_fs.post",{
                    	                "c8oGrp": groupsToAdd,
                    					"shared":newShared,
                    					"_use_merge_shared":"override",
                    					"invited":invite_new.concat(this.local.invite_new),
                    	                "_use_policy": "merge",
                    	                "_id": page["navParams"]["data"]["existingGrps"]["_id"]
                    	            })
                    	            .then((res)=>{
                    	                resolve();
                    	                return null;
                    	            })
                    	            .fail((res)=>{
                    	                resolve();
                    	                console.log(res);
                    	            })
                    				page.c8o.callJsonObject("fs://c8oforms_fs.post",{
                    		                "groups": JSON.stringify(removedGrps),
                    		                "id": page["navParams"]["data"]["existingGrps"]["_id"],
                    		                "_id":"control_documents_check_for_deletion"+ new Date().getTime()
                    		            })
                    		            .then((res)=>{
                    						console.log("succesfully insertControl doc")
                    		                return null;
                    		            })
                    		            .fail((res)=>{
                    		                resolve();
                    		                console.log(res);
                    		            })
                    			}
                    			else{
                    				let newCollabsGrp = this.local.newUsersOrGroups;
                    				let modifiedExistingCollabsGrp = this.local.existingGrpsOrUsersArray;
                    				let newCollabs = [];
                    				let newCollabsResponse = [];
                    				let oldCollabs = this.local.form.collabs != undefined ? JSON.parse(JSON.stringify(this.local.form.collabs)) : [];
                    				let oldCollabsResponse = this.local.form.collabsResponse != undefined ? JSON.parse(JSON.stringify(this.local.form.collabsResponse)) : [];
                    						
                    				
                    				let hasLostRightsToCollab = [];
                    				let hasWonRightsToCollab = [];
                    				let hasLostRightsToResponses = [];
                    				let hasWonRightsToResponses = [];
                    								
                    				// define new objects collabs collabsResponse
                    				newCollabsGrp.concat(modifiedExistingCollabsGrp).forEach((elem, index)=>{
                    					if(elem.rights == "Responses"){
                    						newCollabsResponse.push(elem.value);
                    					}
                    					else if (elem.rights == "Edition"){
                    						newCollabs.push(elem.value);
                    					}
                    					else if (elem.rights == "Edition_Responses"){
                    						newCollabsResponse.push(elem.value);
                    						newCollabs.push(elem.value);
                    					}
                    					groupsToAdd[elem.value] = true;
                    				});
                    				
                    				// compare with olds ones
                    				
                    				// search if has lost rights to responses
                    				oldCollabsResponse.forEach((elem, index)=>{
                    					if(newCollabsResponse.indexOf(elem) == -1){
                    						hasLostRightsToResponses.push(elem);
                    					}
                    				})
                    				// search if has won rights to responses
                    				newCollabsResponse.forEach((elem, index)=>{
                    					if(oldCollabsResponse.indexOf(elem) == -1){
                    						hasWonRightsToResponses.push(elem);
                    					}
                    				})
                    				
                    				// search if has lost rights to responses
                    				oldCollabs.forEach((elem, index)=>{
                    					if(newCollabs.indexOf(elem) == -1){
                    						hasLostRightsToCollab.push(elem);
                    					}
                    				})
                    				// search if has won rights to responses
                    				newCollabs.forEach((elem, index)=>{
                    					if(oldCollabs.indexOf(elem) == -1){
                    						hasWonRightsToCollab.push(elem);
                    					}
                    				})
                    				
                    				// search if still exists to any one group (included normal ones)
                    				oldCollabsResponse.concat(oldCollabs).forEach((elem)=>{
                    					if(!(newCollabsResponse.concat(newCollabs).concat(this.local.shared).indexOf(elem) == -1)){
                    						groupsToAdd[elem] = true;						
                    					}
                    					else{
                    						groupsToAdd[elem] = false;	
                    					}
                    				})
                    				/*console.log("hasLostRightsToResponses",hasLostRightsToResponses);
                    				console.log("hasWonRightsToResponses",hasWonRightsToResponses);
                    				console.log("hasLostRightsToCollab",hasLostRightsToCollab);
                    				console.log("hasWonRightsToCollab",hasWonRightsToCollab);*/
                    				if(groupsToAdd == undefined){
                    					groupsToAdd = {};
                    				}
                    				let removedGrps = [];
                    				if(this.local.form.c8oGrp != undefined){
                    					Object.keys(this.local.form.c8oGrp).forEach((key)=>{
                    						if(this.local.form.c8oGrp[key] == true && groupsToAdd[key] == false){
                    							removedGrps.push(key);
                    						}
                    					})
                    				}
                    				groupsToAdd["C8Oreserved_"+ this.local.form.creator] = true;
                    				if(newCollabs.indexOf("C8Oreserved_"+ this.local.form.creator) == -1){
                    					newCollabs.push("C8Oreserved_"+ this.local.form.creator);
                    				}
                    				if(newCollabsResponse.indexOf("C8Oreserved_"+ this.local.form.creator) == -1){
                    					newCollabsResponse.push("C8Oreserved_"+ this.local.form.creator);
                    				}
                    				let currentIsPublished = page["navParams"]["data"]["existingGrps"]["_id"].indexOf("published_") == 0;
                    				let idPublished;
                    				let idEdition;
                    				let idPwaDoc;
                    				if(currentIsPublished){
                    					idPublished = page["navParams"]["data"]["existingGrps"]["_id"];
                    					idEdition = page["navParams"]["data"]["existingGrps"]["_id"].substring((page["navParams"]["data"]["existingGrps"]["_id"].indexOf("published_") + 10));
                    					idPwaDoc = idPublished + "_pwa_document";
                    				} 
                    				else{
                    					idPublished = "published_" + page["navParams"]["data"]["existingGrps"]["_id"];
                    					idEdition = page["navParams"]["data"]["existingGrps"]["_id"];
                    					idPwaDoc = idPublished + "_pwa_document";
                    				}
                    				/*console.log("currentIsPublished", currentIsPublished);
                    				console.log("idPublished",idPublished);
                    				console.log("idEdition",idEdition);
                    				console.log("idPwaDoc",idPwaDoc);*/
                    				
                    				//check wich document exists
                    				let existsPublished = false;
                    				let existsEdition = false;
                    				let existsPWAdoc = false;
                    				let p = new Promise(async (resolve)=>{
                    					try{
                    						await page.c8o.callJsonObject("fs://c8oforms_fs.get",{
                    							"docid":idPublished
                    						}).async();
                    						existsPublished = true;
                    					}
                    					catch(e){
                    						existsPublished = false;
                    					}
                    					try{
                    						await page.c8o.callJsonObject("fs://c8oforms_fs.get",{
                    							"docid":idEdition
                    						}).async();
                    						existsEdition = true;
                    					}
                    					catch(e){
                    						existsEdition = false;
                    					}
                    					try{
                    						await page.c8o.callJsonObject("fs://c8oforms_fs.get",{
                    							"docid":idPwaDoc
                    						}).async();
                    						existsPWAdoc = true;
                    					}
                    					catch(e){
                    						existsPWAdoc = false;
                    					}
                    					resolve();
                    				});
                    				p.then(()=>{
                    					if(existsPublished){
                    						//share published form
                    						page.c8o.callJsonObject("fs://c8oforms_fs.post",{
                    			                "c8oGrp": groupsToAdd,
                    							"collabs":newCollabs,
                    							"collabsResponse":newCollabsResponse,
                    							"_use_merge_collabs":"override",
                    							"_use_merge_collabsResponse":"override",
                    			                "_use_policy": "merge",
                    			                "_id": idPublished
                    			            })
                    			            .then((res)=>{
                    							console.log("succesfully shared with idPublished")
                    			                return null;
                    			            })
                    			            .fail((res)=>{
                    			                resolve();
                    			                console.log(res);
                    			            })
                    					}
                    					
                    					// share responses
                    					let grpResponses = {};
                    					hasWonRightsToResponses.forEach((e)=>{
                    						grpResponses[e] = true;
                    					})
                    					hasLostRightsToResponses.forEach((e)=>{
                    						grpResponses[e] = false;
                    					})
                    					
                    					
                    					page.c8o.callJsonObject("fs://c8oforms_fs.post",{
                    		                "groups": JSON.stringify(grpResponses),
                    		                "id": idPublished,
                    		                "_id":"control_document_set_groups_in_responses"+ new Date().getTime()
                    		            })
                    		            .then((res)=>{
                    						console.log("succesfully shared with responses")
                    		                return null;
                    		            })
                    		            .fail((res)=>{
                    		                resolve();
                    		                console.log(res);
                    		            })
                    					
                    					
                    					var grpEdition = {};
                    					newCollabs.forEach((e)=>{
                    						grpEdition[e] = true;
                    					})
                    					hasLostRightsToCollab.forEach((e)=>{
                    						grpEdition[e] = false;
                    					})
                    					grpEdition["C8Oreserved_"+ this.local.form.creator] = true;
                    					
                    					if(existsEdition){
                    						// share edition form
                    						page.c8o.callJsonObject("fs://c8oforms_fs.post",{
                    			                "c8oGrp": grpEdition,
                    							"collabs":newCollabs,
                    							"collabsResponse":newCollabsResponse,
                    							"_use_merge_collabs":"override",
                    							"_use_merge_collabsResponse":"override",
                    			                "_use_policy": "merge",
                    			                "_id": idEdition
                    			            })
                    			            .then((res)=>{
                    							console.log("succesfully shared with idEdition")
                    			                return null;
                    			            })
                    			            .fail((res)=>{
                    			                resolve();
                    			                console.log(res);
                    			            })
                    					}
                    					
                    					
                    
                    					if(existsPWAdoc){
                    						// share pwa doc
                    						page.c8o.callJsonObject("fs://c8oforms_fs.post",{
                    			                "c8oGrp": grpEdition,
                    							"collabs":newCollabs,
                    							"collabsResponse":newCollabsResponse,
                    							"_use_merge_collabs":"override",
                    							"_use_merge_collabsResponse":"override",
                    			                "_use_policy": "merge",
                    			                "_id": idPwaDoc
                    			            })
                    			            .then((res)=>{
                    							console.log("succesfully shared with idPwaDoc")
                    			                return null;
                    			            })
                    			            .fail((res)=>{
                    			                resolve();
                    			                console.log(res);
                    			            })
                    					}
                    					
                    				});
                    				
                    				//checkDeletion Users
                    				page.c8o.callJsonObject("fs://c8oforms_fs.post",{
                    		                "groups": JSON.stringify(hasLostRightsToCollab.concat(hasLostRightsToResponses)),
                    		                "id": idPublished,
                    		                "_id":"control_documents_check_for_deletion"+ new Date().getTime()
                    		            })
                    		            .then((res)=>{
                    						console.log("succesfully insertControl doc")
                    		                return null;
                    		            })
                    		            .fail((res)=>{
                    		                resolve();
                    		                console.log(res);
                    		            })
                    
                    
                    				resolve();
                    				
                    			}
                    			if(this.local.notif && this.local.collab == false){
                    				let existingNewUsersOrGroups = this.local.newUsersOrGroups.reduce((filtered, x) =>{
                    						if(x.type != undefined){
                    							filtered.push(x.value);
                    						}
                    						return filtered;
                    					},[]);
                    					//this.local.newUsersOrGroups.map((x)=>{return x.value})
                    				page.c8o.callJson("C8Oforms.NotifyUsersSharing", "grps", JSON.stringify(existingNewUsersOrGroups), "subject", this.local.emailSubject, "body", this.local.emailBody)
                    				.then((res)=>{
                    					return null;
                    				})
                    				.fail((err)=>{
                    		            resolve();
                    		         	page.c8o.log.error("An error occured inviting people to consult app", err)
                    		         })
                    				if(invite_new.length > 0){
                    					page.c8o.callJson("C8Oforms.NotifyNewUsersSharing", "emails", JSON.stringify(invite_new), "subject", this.local.emailSubject, "body", this.local.emailBody, "idDoc", page["navParams"]["data"]["existingGrps"]["_id"] )
                    					.then((res)=>{
                    						return null;
                    					})
                    					.fail((err)=>{
                    			            resolve();
                    			         	page.c8o.log.error("An error occured inviting people to consult app", err)
                    			         })
                    				}
                    			}
                    			
                    		},100);
                                
                                
                    '
            ↓CloseModal [ngx.components.UIDynamicAction-1591882841548]: 
              beanData: '{"ionBean":"CloseModalAction"}'
↓Subscribe_Handler [ngx.components.UIEventSubscriber-1613471372161]: 
  isEnabled: false
  topic: ngxTagInputNgModelChange
  ↓CustomAction [ngx.components.UICustomAction-1613471384551]: 
    actionValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            		//_this.local.grp == users from dropdown list
            		// _this.local.existingGrpsOrUsersArray == user already shared
            		
            		if(event.ref == "personOrGrp"){
            			this.local.newUsersOrGroups = event.event;
            		}
            		resolve();
            
↓Subscribe_Handler1 [ngx.components.UIEventSubscriber-1614596161640]: 
  isEnabled: false
  topic: ngxTagInputAdded
  ↓CustomAction [ngx.components.UICustomAction-1614596204250]: 
    actionValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            		
            		var toast = false;
            		//_this.local.grp == users from dropdown list
            		// _this.local.existingGrpsOrUsersArray == user already shared
            		// this.local.newUsersOrGroups users added
            		if(event.ref == "personOrGrp"){
            			// this was added without auto complete
            			if(event.event.type == undefined){
            				// prevent from adding a user already existing
            				let founded = false;
            				this.local.existingGrpsOrUsersArray.forEach((element, index)=>{
            					if(element.type == "user"){
            						if(event.event.value == element.displayMail){
            							founded = true;
            						}
            					}
            				})
            				if(founded){
            					let indexToSplice = null;
            					this.local.newUsersOrGroups.forEach((element, index)=>{
            						if(element.value == event.event.value){
            							indexToSplice = index;
            						}
            					})
            					if(indexToSplice != null){
            						this.local.newUsersOrGroups.splice(indexToSplice, 1);
            						// toast it users already exists in list
            						toast = true;
            					}
            				}
            				else{
            					founded = false;
            					var elemToReplace = null;
            					this.local.grp.forEach((element, index)=>{
            						if(element.type == "user"){
            							if(event.event.value == element.displayMail){
            								founded = true;
            								elemToReplace = element;
            							}
            						}
            					});
            					if(founded){
            						let indexToSplice = null;
            						this.local.newUsersOrGroups.forEach((element, index)=>{
            							if(element.display == event.event.value){
            								indexToSplice = index;
            							}
            						})
            						if(indexToSplice != null){
            							this.local.newUsersOrGroups.splice(indexToSplice, 1, elemToReplace);
            							// toast it users already exists in list
            						}
            					}
            				}	
            			}
            			
            		}
            		resolve(toast);
            
    ↓If [ngx.components.UIDynamicAction-1614597709107]: 
      beanData: '{"ionBean":"IfAction"}'
      ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1614597669711]: 
        beanData: '{"ionBean":"InvokeAction"}'
        stack: C8Oforms.MobileApplication.Application.showToast
        ↓msg [ngx.components.UIControlVariable-1614597693604]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:this.translate.instant('form_has_already_been_shared')
        ↓duration [ngx.components.UIControlVariable-1614597693606]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'3000'
        ↓position [ngx.components.UIControlVariable-1614597693608]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'bottom'
        ↓cssClass [ngx.components.UIControlVariable-1614597693610]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'toastError'