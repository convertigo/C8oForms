scriptContent: 
  - xmlizable: 
    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
    - com.twinsoft.convertigo.beans.common.FormatedContent: 
      →: |
        '/*Begin_c8o_PageImport*/
        /*End_c8o_PageImport*/
        /*Begin_c8o_PageDeclaration*/
        	public idselected = "";
        	public form: any = null;
        	public segment = "";
        	public color: any = ''#ffffff'';
        	public filePreview: any = {source: null, type: null};
        	public hasAnImage = false;
        	public wallpaper: any = null;
        	public key: string = "wallpaper";
        	/*End_c8o_PageDeclaration*/
        /*Begin_c8o_PageConstructor*/
        		/** empty structure
        		"wallpaper": {
        		    "link": null,
        		    "enabled": false,
        		    "index": null,
        		    "random": "assets/images/svg/imgplaceholder/placeholder2.svg"
        		  },
        		
        		 */
        		 
        		 /** color
        		 
        		 "wallpaper": {
        		    "link": null,
        		    "enabled": true,
        		    "index": null,
        		    "random": "assets/images/svg/imgplaceholder/placeholder2.svg",
        		    "type": "color",
        		    "color": "#14c883"
        		  },
        		  */
        		  /** custom
        		  "wallpaper": {
        		    "enabled": true,
        		    "index": 0,
        		    "random": "assets/images/svg/imgplaceholder/placeholder2.svg",
        		    "type": "custom",
        		    "color": "#14c883",
        		    "link": null
        		  },
        		   */
        		   /**modele 
        		   
        		   "wallpaper": {
        			    "enabled": true,
        			    "index": 0,
        			    "random": "assets/images/svg/imgplaceholder/placeholder2.svg",
        			    "type": "library",
        			    "color": "#14c883",
        			    "link": null
        			  },
        		   */
        		
        		
        		
        		
        		
        		
        		// new 
        		this.form = this.navParams.get("form");
        		this.wallpaper = this.navParams.get("wallpaper");
        		this.key = this.wallpaper === true ? "wallpaper" : "thumbnail";
        		switch(this.form[this.key].type){
        			// not supported anymore, now we redirect old library as if they were custom images
        			case "library":
        				this.hasAnImage = true;
        				this.segment = "custom";
        			break;
        			case "custom":
        				this.hasAnImage = true;
        				this.segment = "custom";
        			break;
        			case "color":
        				this.segment = "color";
        			break;
        			default:
        				this.segment = "color";
        			break;
        		}
        		if(this.form[this.key].color != undefined){
        			this.color = this.form[this.key].color;
        		}
        		console.log("this.segment", this.segment)
        		console.log(this.form);
        		// old
        		/*if(!this.global.enabledTemp){
        			this.global.enabledTemp = true;
        			this.global.indexwall = 0;
        		}
        		this.global.showO = false;
        		this.local.selectedTabI = 0;
                if(this.global.wallType != undefined && this.global.wallType == ''custom''){
                    this.local.selectedTabI = 1;
                    this.global.showO = true;
                }
                if(this.global.wallType != undefined && this.global.wallType == ''color''){
                    this.local.selectedTabI = 2;
                    this.global.showO = true;
                }*/
        		/*End_c8o_PageConstructor*/
        /*Begin_c8o_PageFunction*/
        	/*End_c8o_PageFunction*/
        '
segment: wallPaperSelection
title: Title for wallPaperSelection
↓Content [ngx.components.UIDynamicElement-1569837350632]: 
  beanData: '{"ionBean":"Content"}'
  tagName: ion-content
  ↓Grid [ngx.components.UIDynamicElement-1585928636214]: 
    beanData: '{"ionBean":"Grid"}'
    isEnabled: false
    tagName: ion-grid
    ↓GridRow [ngx.components.UIDynamicElement-1585928640630]: 
      beanData: '{"ionBean":"GridRow","FlexJustifyContent":"plain:ion-justify-content-end"}'
      tagName: ion-row
      ↓GridCol [ngx.components.UIDynamicElement-1585928644661]: 
        beanData: '{"ionBean":"GridCol","Size":"plain:12"}'
        tagName: ion-col
        ↓Button [ngx.components.UIDynamicElement-1585928732790]: 
          beanData: '{"ionBean":"Button"}'
          tagName: ion-button
          ↓Icon [ngx.components.UIDynamicElement-1585928685078]: 
            beanData: '{"ionBean":"Icon","IconName":"plain:close"}'
            tagName: ion-icon
          ↓Style [ngx.components.UIStyle-1585928772109]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    float:right;
                    
          ↓Event [ngx.components.UIControlEvent-1585928853028]: 
            ↓CloseModal [ngx.components.UIDynamicAction-1585928853040]: 
              beanData: '{"ionBean":"CloseModalAction"}'
        ↓FormatLayout [ngx.components.UIDynamicAttr-1645090139904]: 
          beanData: '{"ionBean":"FormatLayout","TextAlignment":"plain:ion-text-center"}'
          comment: FormatLayout
          tagName: div
        ↓H2 [ngx.components.UIDynamicElement-1585928985325]: 
          beanData: '{"ionBean":"Heading2"}'
          tagName: h2
          ↓Text [ngx.components.UIText-1585929010940]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:'define_wallpaper' | translate
      ↓GridCol1 [ngx.components.UIDynamicElement-1646658679043]: 
        beanData: '{"ionBean":"GridCol"}'
        tagName: ion-col
        ↓ItemWallpaperChecked [ngx.components.UIDynamicElement-1646658679046]: 
          beanData: '{"ionBean":"ListItem"}'
          tagName: ion-item
          ↓Label [ngx.components.UIDynamicElement-1646658679049]: 
            beanData: '{"ionBean":"Label","Position":"plain:stacked"}'
            tagName: ion-label
            ↓FormatLayout [ngx.components.UIDynamicAttr-1646658679052]: 
              beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-capitalize"}'
              comment: FormatLayout
              tagName: div
            ↓Text [ngx.components.UIText-1646658679055]: 
              i18n: true
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:'wallpaper' | translate
          ↓ToggleButton [ngx.components.UIDynamicElement-1646658679058]: 
            beanData: '{"ionBean":"Toggle","ControlName":"plain:name1646658679058"}'
            tagName: ion-toggle
            ↓Attr [ngx.components.UIAttribute-1646658679061]: 
              attrName: '[(ngModel)]'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.global.enabledTemp
    ↓GridRow1 [ngx.components.UIDynamicElement-1585929213540]: 
      beanData: '{"ionBean":"GridRow"}'
      isEnabled: false
      tagName: ion-row
      ↓GridCol [ngx.components.UIDynamicElement-1585929219356]: 
        beanData: '{"ionBean":"GridCol"}'
        tagName: ion-col
        ↓ItemWallpaperChecked [ngx.components.UIDynamicElement-1586164970425]: 
          beanData: '{"ionBean":"ListItem"}'
          tagName: ion-item
          ↓Label [ngx.components.UIDynamicElement-1586164970428]: 
            beanData: '{"ionBean":"Label","Position":"plain:stacked"}'
            tagName: ion-label
            ↓FormatLayout [ngx.components.UIDynamicAttr-1645090139906]: 
              beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-capitalize"}'
              comment: FormatLayout
              tagName: div
            ↓Text [ngx.components.UIText-1586164970434]: 
              i18n: true
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:'wallpaper' | translate
          ↓ToggleButton [ngx.components.UIDynamicElement-1586164970437]: 
            beanData: '{"ionBean":"Toggle"}'
            tagName: ion-toggle
            ↓Attr [ngx.components.UIAttribute-1586164970440]: 
              attrName: '[(ngModel)]'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.global.enabledTemp
  ↓Directive [ngx.components.UIControlDirective-1586165313875]: 
    directiveName: If
    directiveSource: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:true
    isEnabled: false
  ↓SegmentContainer [ngx.components.UIDynamicElement-1648553973174]: 
    beanData: |
      '{
       "ionBean": "Segment",
       "ControlName": "plain:segment1",
       "DoubleBinding": "script:this.segment"
      }'
    tagName: ion-segment
    ↓SegmentButton [ngx.components.UIDynamicElement-1648553976686]: 
      beanData: |
        '{
         "ionBean": "SegmentButton",
         "Layout": "plain:icon-start",
         "Value": "plain:color"
        }'
      tagName: ion-segment-button
      ↓Label [ngx.components.UIDynamicElement-1648554046454]: 
        beanData: '{"ionBean":"Label"}'
        tagName: ion-label
        ↓Text [ngx.components.UIText-1648554046456]: 
          i18n: true
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:color_picker_palette
      ↓Icon [ngx.components.UIDynamicElement-1648554254643]: 
        beanData: '{"ionBean":"Icon","IconName":"plain:color-palette-outline"}'
        tagName: ion-icon
    ↓SegmentButton1 [ngx.components.UIDynamicElement-1648553979967]: 
      beanData: |
        '{
         "ionBean": "SegmentButton",
         "Layout": "plain:icon-start",
         "Value": "plain:custom"
        }'
      tagName: ion-segment-button
      ↓Label [ngx.components.UIDynamicElement-1648554048806]: 
        beanData: '{"ionBean":"Label"}'
        tagName: ion-label
        ↓Text [ngx.components.UIText-1648554048808]: 
          i18n: true
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:custom
      ↓Icon [ngx.components.UIDynamicElement-1648554648916]: 
        beanData: '{"ionBean":"Icon","IconName":"plain:image-outline"}'
        tagName: ion-icon
  ↓Directive1 [ngx.components.UIControlDirective-1648556377237]: 
    directiveName: Switch
    directiveSource: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:this.segment
    ↓Directive [ngx.components.UIControlDirective-1648556388723]: 
      directiveExpression: '''color'''
      directiveName: SwitchCase
      ↓Div [ngx.components.UIDynamicElement-1648556938950]: 
        beanData: '{"ionBean":"DivTag"}'
        tagName: div
        ↓Div [ngx.components.UIDynamicElement-1648557383788]: 
          beanData: '{"ionBean":"DivTag"}'
          tagName: div
          ↓UseSharedComponent [ngx.components.UIUseShared-1648556509874]: 
            sharedcomponent: C8Oforms.MobileApplication.Application.colorPicker
            ↓color [ngx.components.UIUseVariable-1648556537205]: 
              binding: twoWayBinding
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.color
            ↓width [ngx.components.UIUseVariable-1648556537207]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:'230px'
            ↓Attr [ngx.components.UIAttribute-1648557772460]: 
              attrName: style
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: 'plain:vertical-align: middle'
          ↓Style [ngx.components.UIStyle-1648557870750]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    'display: inline-block;
                    '
        ↓Style [ngx.components.UIStyle-1648558226562]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  'display: flex;
                  justify-content:center;
                  '
    ↓Directive1 [ngx.components.UIControlDirective-1648556416115]: 
      directiveExpression: '''custom'''
      directiveName: SwitchCase
      ↓Div1 [ngx.components.UIDynamicElement-1648559655925]: 
        beanData: '{"ionBean":"DivTag"}'
        tagName: div
        ↓Div [ngx.components.UIDynamicElement-1648558626340]: 
          beanData: '{"ionBean":"DivTag"}'
          tagName: div
          ↓Div [ngx.components.UIDynamicElement-1648559776929]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓Tag [ngx.components.UIElement-1648558675956]: 
              selfClose: true
              tagName: input
              ↓Attr [ngx.components.UIAttribute-1648558675959]: 
                attrName: type
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:file
              ↓Attr1 [ngx.components.UIAttribute-1648558675962]: 
                attrName: id
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:file-input
              ↓Event [ngx.components.UIControlEvent-1648558675965]: 
                attrName: (change)
                eventName: (change)
                ↓CustomAction [ngx.components.UICustomAction-1648558675968]: 
                  actionValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          		   	const file  = event["srcElement"]["files"][0];
                          		   	var reader = new FileReader();
                          			reader.onload = function(e) {
                          			    page.filePreview.source = e.target["result"];
                          			}
                          		    reader.readAsDataURL(file);
                          		    page.filePreview.type = file.type;
                          			resolve();
                          
              ↓Attr2 [ngx.components.UIAttribute-1648558675971]: 
                attrName: accept
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:image/*
          ↓Button [ngx.components.UIDynamicElement-1648559089674]: 
            beanData: '{"ionBean":"Button","IonColor":"plain:btLight"}'
            tagName: ion-button
            ↓Label [ngx.components.UIDynamicElement-1648559089676]: 
              beanData: '{"ionBean":"Label"}'
              tagName: ion-label
              ↓Text [ngx.components.UIText-1648559089678]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:selectImageComp
            ↓Event [ngx.components.UIControlEvent-1648559089680]: 
              ↓emulateClickOnInput [ngx.components.UICustomAction-1648559432790]: 
                actionValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        		document.getElementById("file-input").click()
                        		resolve();
                        
            ↓Icon [ngx.components.UIDynamicElement-1648559630170]: 
              beanData: |
                '{
                 "ionBean": "Icon",
                 "IconName": "plain:image-outline",
                 "IconSlot": "plain:end"
                }'
              tagName: ion-icon
          ↓Style [ngx.components.UIStyle-1648559690055]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    'display: inline-block;
                    '
        ↓Style1 [ngx.components.UIStyle-1648559679345]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  'display: flex;
                  justify-content:center;
                  '
      ↓Div2 [ngx.components.UIDynamicElement-1648559893701]: 
        beanData: '{"ionBean":"DivTag"}'
        tagName: div
        ↓Style [ngx.components.UIStyle-1648560023755]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '	display: flex;
                  	justify-content:center;
                  	margin-top: 10px;
                  '
        ↓Div [ngx.components.UIDynamicElement-1648560585180]: 
          beanData: '{"ionBean":"DivTag"}'
          tagName: div
          ↓Style [ngx.components.UIStyle-1648560609725]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    'display: inline-block;
                    height:50%;
                    width:50%;
                    '
          ↓Directive [ngx.components.UIControlDirective-1648561534933]: 
            directiveName: If
            directiveSource: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.hasAnImage && this.filePreview.source == null else ElseBlock_1648561546007
            ↓FSImage [ngx.components.UIDynamicElement-1648565596861]: 
              beanData: |
                '{
                 "ionBean": "FSImage",
                 "docid": "script:this.form._id",
                 "attachment": "plain:wallpaper",
                 "requestable": "plain:C8Oforms.c8oforms_fs"
                }'
              selfClose: true
              tagName: img
              ↓Style [ngx.components.UIStyle-1648565596864]: 
                isEnabled: false
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '	margin-left: auto;
                        	margin-right: auto;
                        	display: block;
                        	max-height: 55vh;
                        '
          ↓Tag [ngx.components.UIElement-1648561546007]: 
            identifier: ElseBlock_1648561546007
            tagName: ng-template
            ↓Directive [ngx.components.UIControlDirective-1648561860183]: 
              directiveName: If
              directiveSource: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.filePreview.source != null
              ↓Image1 [ngx.components.UIDynamicElement-1648559900078]: 
                beanData: '{"ionBean":"Image","url":"plain"}'
                selfClose: true
                tagName: img
                ↓Attr [ngx.components.UIAttribute-1648561319078]: 
                  attrName: '[src]'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this.router.sanitizer.bypassSecurityTrustResourceUrl(this.filePreview.source)
↓PageEvent [ngx.components.UIPageEvent-1569923664753]: 
  isEnabled: false
  ↓CustomAction [ngx.components.UICustomAction-1569923671796]: 
    actionValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            	        if(this.global.indexwall == 0 || this.global.indexwall == undefined){
                            this.global.indexwall = 0;
                        }           
            	        resolve();
            
    isEnabled: false
↓Footer [ngx.components.UIDynamicElement-1586166828021]: 
  beanData: '{"ionBean":"Footer"}'
  tagName: ion-footer
  ↓ToolBar [ngx.components.UIDynamicElement-1648562800328]: 
    beanData: '{"ionBean":"ToolBar"}'
    tagName: ion-toolbar
    ↓ButtonSet [ngx.components.UIDynamicElement-1586166864660]: 
      beanData: '{"ionBean":"ButtonSet","SetPosition":"plain:end"}'
      tagName: ion-buttons
      ↓Button [ngx.components.UIDynamicElement-1586166864663]: 
        beanData: '{"ionBean":"Button","IonColor":"plain:primary"}'
        tagName: ion-button
        ↓Event [ngx.components.UIControlEvent-1586166864672]: 
          ↓SavePropertiesOLD [ngx.components.UICustomAction-1586166864678]: 
            actionValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    '		const result: any = {
                    			enabled: true
                    		};
                    		switch(page.segment){
                    			
                    			case "color":
                    				result.type = "color";
                    				result.color = page.color;
                    			break;
                    			case "custom":
                    				result.type = "custom";
                    				result.filePreview = page.filePreview;
                    			break;
                    		}
                    		 /*if(page.pageOwner.slidingTabs == undefined){
                    	        this.global.transmit = {};
                    	        this.global.transmit.enabledTemp = this.global.enabledTemp;
                    	        resolve(this.global.transmit);
                    		}
                    		else  if(page.pageOwner.slidingTabs.selectedTabIndex == 0){
                    		    if(this.global.transmit == undefined){
                                    this.global.transmit = {};
                                }
                    		    this.global.transmit.fromDevice = false;
                                this.global.transmit.enabledTemp = this.global.enabledTemp;
                                resolve(this.global.transmit);
                    		}
                    		else  if(page.pageOwner.slidingTabs.selectedTabIndex == 1){
                                if(this.global.transmit == undefined){
                                    this.global.transmit = {};
                                }
                                this.global.transmit.fromDevice = true;
                                this.global.transmit.enabledTemp = this.global.enabledTemp;
                                resolve(this.global.transmit);
                            }
                    		else  if(page.pageOwner.slidingTabs.selectedTabIndex == 2){
                                if(this.global.transmit == undefined){
                                    this.global.transmit = {};
                                }
                                this.global.transmit.fromDevice = ''color'';
                                this.global.transmit.enabledTemp = this.global.enabledTemp;
                                this.global.transmit.colorPicker=this.global.colorPicker;
                                this.global.colorPicker = undefined;
                                resolve(this.global.transmit);
                            }*/
                            
                            /*
                            let args = vars.arg;
                    		    this.form["wallpaper"]["enabled"] = args.enabledTemp;
                    		    if(args.colorPicker){
                    		        this.form["wallpaper"]["type"] = ''color'';
                    		        this.form["wallpaper"]["color"] = args.colorPicker;
                    		    }else{
                    		        this.form["wallpaper"]["link"] = undefined;
                    	            this.form["wallpaper"]["index"]= args.realIndex;
                    	            this.form["wallpaper"]["type"] = args.fromDevice ? ''custom'' : ''library'';
                    		    }
                    		    this.updateState()
                    		    .then(()=>{
                    		        if(args.fromDevice === false){
                    	                this.c8o.httpPublic.get(args.url, {responseType: ''blob'' })
                    	                .subscribe(resp => {
                    	                    resolve({"put_attach": true, "content": resp,"type": resp.type });
                    	                });
                    	            }
                    		        else if(args.fromDevice === true){
                    		            resolve({"put_attach": true, "content": page.global.filePrev, "type" : page.global.filePrevType });
                    		        }
                    		        else {
                    		            resolve({"put_attach": false});
                    		        }
                    		    })*/
                    '
            isEnabled: false
          ↓saveProperties [ngx.components.UICustomAsyncAction-1648564118134]: 
            actionValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    '		const result: any = {
                    				enabled: true
                    			};
                    		try {
                    			switch(page.segment){
                    				
                    				case "color":
                    					result.type = "color";
                    					result.color = page.color;
                    				break;
                    				case "custom":
                    					result.type = "custom";
                    					result.filePreview = page.filePreview;
                    				break;
                    			}
                    		} catch (e) {
                    		
                    		} finally {
                    			return result;
                    		}
                    '
            ↓CloseModal [ngx.components.UIDynamicAction-1586166864684]: 
              beanData: '{"ionBean":"CloseModalAction","data":"script:parent.out"}'
        ↓Label [ngx.components.UIDynamicElement-1648562945590]: 
          beanData: '{"ionBean":"Label"}'
          tagName: ion-label
          ↓Text [ngx.components.UIText-1648562945592]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:Save
        ↓Icon [ngx.components.UIDynamicElement-1648562983490]: 
          beanData: |
            '{
             "ionBean": "Icon",
             "IconName": "plain:save-outline",
             "IconSlot": "plain:start"
            }'
          tagName: ion-icon
      ↓Style [ngx.components.UIStyle-1586173738307]: 
        isEnabled: false
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                'padding-bottom: 1vh;
                padding-right: 1vh;
                '
↓TabsContainer [ngx.components.UIDynamicElement-1646664737653]: 
  beanData: '{"ionBean":"Tabs"}'
  isEnabled: false
  tagName: ion-tabs
  ↓TabBar [ngx.components.UIDynamicElement-1646664834495]: 
    beanData: '{"ionBean":"TabBar","IonSlot":"plain:top"}'
    tagName: ion-tab-bar
    ↓TabButton [ngx.components.UIDynamicTabButton-1646664837808]: 
      beanData: '{"ionBean":"TabButton"}'
      tabpage: C8Oforms.MobileApplication.Application.wallpaperSelectionColorPicker
      tagName: ion-tab-button
      ↓Label1 [ngx.components.UIDynamicElement-1646820288049]: 
        beanData: '{"ionBean":"Label"}'
        tagName: ion-label
        ↓Text [ngx.components.UIText-1646820288052]: 
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:some text page 2
    ↓TabButton1 [ngx.components.UIDynamicTabButton-1646664841041]: 
      beanData: '{"ionBean":"TabButton"}'
      tabpage: C8Oforms.MobileApplication.Application.wallpaperSelectionCustom
      tagName: ion-tab-button
      ↓Label [ngx.components.UIDynamicElement-1646820190509]: 
        beanData: '{"ionBean":"Label"}'
        tagName: ion-label
        ↓Text [ngx.components.UIText-1646820190512]: 