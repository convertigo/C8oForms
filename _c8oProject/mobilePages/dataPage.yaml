scriptContent: 
  - xmlizable: 
    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
    - com.twinsoft.convertigo.beans.common.FormatedContent: 
      →: |
        '/*Begin_c8o_PageImport*/
        /*End_c8o_PageImport*/
        /*Begin_c8o_PageDeclaration*/
        	/*End_c8o_PageDeclaration*/
        /*Begin_c8o_PageConstructor*/
        		/*End_c8o_PageConstructor*/
        /*Begin_c8o_PageFunction*/
        	public processResults(){
        	    let length = this.local.index.length;
                let currentIndex = this.local.currentIndex;
                this.local.flatObj = [];
                this.local.show = [];
                this.local.currentResponses = this.local.versions[this.local.index[this.local.currentIndex]];
                let i  = 0;
                let flatenize = (Obj: any) => {
                    
                    for(let firstElem of Obj){
                        this.local.countResponses = Obj.length;
                        let j = 0;
                        for(let elem in firstElem.resp){
                            if(i == 0){
                                this.local.flatObj[j] = {"type":"", value: [], "name": firstElem.resp[elem]["name"]};
                                this.local.flatObj[j]["type"] = firstElem.resp[elem].type;
                                this.local.show[firstElem.resp[elem]["name"]] = false;
                                
                            }
                            if(firstElem.resp[elem].value != ""){
                                this.local.flatObj[j]["value"]["push"](firstElem.resp[elem]);    
                            }
                            j++;
                            
                        } 
                        i++;
                    }
                   
                    
                };
                flatenize(this.local.currentResponses)
                console.log("flatObj",this.local.flatObj);
                //page.local.versions[version_number] = elem.value;
        	}
        	/*End_c8o_PageFunction*/
        '
segment: datapage/:formId/:version
title: Title for dataPage
↓Header [mobile.components.UIDynamicElement-1580149563645]: 
  beanData: '{"ionBean":"Header"}'
  tagName: ion-header
  ↓UseSharedComponent [mobile.components.UIUseShared-1580149563714]: 
    sharedcomponent: C8Oforms.MobileApplication.Application.sharedHeaderData
↓Content [mobile.components.UIDynamicElement-1580149551037]: 
  beanData: '{"ionBean":"Content"}'
  tagName: ion-content
  ↓Grid [mobile.components.UIDynamicElement-1580302368230]: 
    beanData: '{"ionBean":"Grid"}'
    tagName: ion-grid
    ↓GridRow [mobile.components.UIDynamicElement-1580302368233]: 
      beanData: '{"ionBean":"GridRow"}'
      tagName: ion-row
      ↓GridCol [mobile.components.UIDynamicElement-1580302368236]: 
        beanData: |
          '{
           "ionBean": "GridCol",
           "ColumnsMedium": "plain:1",
           "ColumnsLarge": "plain:2",
           "ColumnsXLarge": "plain:3"
          }'
        tagName: ion-col
      ↓GridCol1 [mobile.components.UIDynamicElement-1580302368239]: 
        beanData: |
          '{
           "ionBean": "GridCol",
           "ColumnsXSmall": "plain:12",
           "ColumnsSmall": "plain:12",
           "ColumnsMedium": "plain:10",
           "ColumnsLarge": "plain:8",
           "ColumnsXLarge": "plain:6"
          }'
        tagName: ion-col
        ↓Directive1 [mobile.components.UIControlDirective-1580388124895]: 
          directiveName: If
          directiveSource: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
              - MobileSmartSourceType: script:this.local.spinner == false
          ↓CardContainer1 [mobile.components.UIDynamicElement-1580302368242]: 
            beanData: '{"ionBean":"Card"}'
            tagName: ion-card
            ↓Style [mobile.components.UIStyle-1580302368497]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      'background-color: rgba(255,255,255,0.9);
                      border-radius: 5px;
                      
                      '
            ↓CardHeader [mobile.components.UIDynamicElement-1580304910773]: 
              beanData: '{"ionBean":"CardHeader"}'
              tagName: ion-card-header
              ↓Grid [mobile.components.UIDynamicElement-1580304934697]: 
                beanData: '{"ionBean":"Grid"}'
                tagName: ion-grid
                ↓GridRow1 [mobile.components.UIDynamicElement-1580319898069]: 
                  beanData: '{"ionBean":"GridRow"}'
                  tagName: ion-row
                  ↓GridCol [mobile.components.UIDynamicElement-1580319911410]: 
                    beanData: '{"ionBean":"GridCol"}'
                    tagName: ion-col
                    ↓GenericItem [mobile.components.UIDynamicElement-1580319920036]: 
                      beanData: '{"ionBean":"GenericItem"}'
                      tagName: ion-item
                      ↓H2 [mobile.components.UIDynamicElement-1580319925705]: 
                        beanData: '{"ionBean":"Heading2"}'
                        tagName: h2
                        ↓Style [mobile.components.UIStyle-1580320346789]: 
                          styleContent: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  color:#0cbbe7;
                                  
                        ↓Text [mobile.components.UIText-1580319936703]: 
                          textValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:(this.local.formName?.substring(0,1)?.toUpperCase() + this.local.formName?.substring(1))
                      ↓Paragraph [mobile.components.UIDynamicElement-1580319931159]: 
                        beanData: '{"ionBean":"Paragraph"}'
                        tagName: p
                        ↓Text [mobile.components.UIText-1580319938685]: 
                          textValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:this.local.countResponses + '  '+ translate.instant('answer_s')
                ↓GridRow [mobile.components.UIDynamicElement-1580304938302]: 
                  beanData: '{"ionBean":"GridRow"}'
                  tagName: ion-row
                  ↓GridCol [mobile.components.UIDynamicElement-1580304945330]: 
                    beanData: '{"ionBean":"GridCol","Columns":"plain:2"}'
                    tagName: ion-col
                    ↓Icon [mobile.components.UIDynamicElement-1580304984729]: 
                      beanData: '{"ionBean":"Icon","IconName":"plain:arrow-back"}'
                      tagName: ion-icon
                      ↓Style [mobile.components.UIStyle-1580305741636]: 
                      ↓Event [mobile.components.UIControlEvent-1580305785138]: 
                        attrName: (click)
                        ↓moveBackward [mobile.components.UICustomAction-1580305791430]: 
                          actionValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  		let length = page.local.index.length;
                                  		let currentIndex = page.local.currentIndex;
                                  		if(currentIndex == 0){
                                  		    //then we can't move backward
                                  		}
                                  		else{
                                  		    page.local.currentIndex = page.local.currentIndex - 1;
                                  		    this.processResults();
                                  		}
                                  		resolve();
                                  
                      ↓Attr [mobile.components.UIAttribute-1580307018382]: 
                        attrName: '[ngClass]'
                        attrValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                            - MobileSmartSourceType: 'script:this.local.currentIndex == 0 ? ''arrowNonAuthorised'' : ''arrowAuthorised'' '
                      ↓Attr1 [mobile.components.UIAttribute-1580307227015]: 
                        attrName: '[attr.disabled]'
                        attrValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:this.local.currentIndex == 0
                  ↓GridCol1 [mobile.components.UIDynamicElement-1580304956599]: 
                    beanData: '{"ionBean":"GridCol","Columns":"plain:8"}'
                    tagName: ion-col
                    ↓TextFormat [mobile.components.UIDynamicElement-1580305016674]: 
                      beanData: '{"ionBean":"TextFormat","TextCenter":"plain:text-center"}'
                      tagName: div
                      ↓Directive [mobile.components.UIControlDirective-1580305559626]: 
                        directiveName: If
                        directiveSource: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:this.local.currentIndex != undefined
                        ↓Text [mobile.components.UIText-1580305019119]: 
                          i18n: false
                          textValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:translate.instant('version')+this.local.index[this.local.currentIndex] 
                  ↓GridCol2 [mobile.components.UIDynamicElement-1580304958407]: 
                    beanData: '{"ionBean":"GridCol","Columns":"plain:2"}'
                    tagName: ion-col
                    ↓Icon [mobile.components.UIDynamicElement-1580305001795]: 
                      beanData: '{"ionBean":"Icon","IconName":"plain:arrow-forward"}'
                      tagName: ion-icon
                      ↓Style [mobile.components.UIStyle-1580305704231]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                position:relative;
                                float:right;
                                
                      ↓Event [mobile.components.UIControlEvent-1580306549138]: 
                        attrName: (click)
                        ↓moveForward [mobile.components.UICustomAction-1580306549141]: 
                          actionValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  		let length = page.local.index.length;
                                  		let currentIndex = page.local.currentIndex;
                                  		if(currentIndex == length){
                                  		    //then we can't move forward
                                  		}
                                  		else{
                                  		    page.local.currentIndex = page.local.currentIndex + 1;
                                  		    this.processResults();
                                  		}
                                  		resolve();
                                  
                      ↓Attr [mobile.components.UIAttribute-1580307304084]: 
                        attrName: '[ngClass]'
                        attrValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                            - MobileSmartSourceType: 'script:this.local.currentIndex == this.local.index?.length -1 ? ''arrowNonAuthorised'' : ''arrowAuthorised'' '
            ↓CardContent [mobile.components.UIDynamicElement-1580313167065]: 
              beanData: '{"ionBean":"CardContent"}'
              isEnabled: false
              tagName: ion-card-content
              ↓Directive [mobile.components.UIControlDirective-1580313178238]: 
                directiveItemName: item1
                directiveSource: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.local.flatObj
                ↓UseSharedComponent [mobile.components.UIUseShared-1580314240061]: 
                  sharedcomponent: C8Oforms.MobileApplication.Application.sharedStatsInputText
                  ↓element [mobile.components.UIControlVariable-1580314249813]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:item1
          ↓Directive [mobile.components.UIControlDirective-1580314535530]: 
            directiveItemName: item1
            directiveSource: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.local.flatObj
            ↓UseSharedComponent [mobile.components.UIUseShared-1580314535533]: 
              sharedcomponent: C8Oforms.MobileApplication.Application.sharedStatsInputText
              ↓element [mobile.components.UIControlVariable-1580314535536]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:item1
        ↓Grid1Spinner [mobile.components.UIDynamicElement-1580302368500]: 
          beanData: '{"ionBean":"Grid"}'
          tagName: ion-grid
          ↓GridRow [mobile.components.UIDynamicElement-1580302368503]: 
            beanData: |
              '{
               "ionBean": "GridRow",
               "Height": "plain:height:100%",
               "AlignItemsCenter": "plain:align-items-center",
               "JustifyContentCenter": "plain:justify-content-center"
              }'
            tagName: ion-row
            ↓GridCol [mobile.components.UIDynamicElement-1580302368506]: 
              beanData: |
                '{
                 "ionBean": "GridCol",
                 "AlignItemsCenter": "plain:align-self-center",
                 "Columns": "plain:12"
                }'
              tagName: ion-col
              ↓Div [mobile.components.UIDynamicElement-1580302368509]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓FragmentSpinner [mobile.components.UICustom-1580302368512]: 
                  htmlTemplate: <div  class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>
                ↓Style [mobile.components.UIStyle-1580302368515]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          text-align:center;
                          
          ↓Attr [mobile.components.UIAttribute-1580302368518]: 
            attrName: '*ngIf'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:this.local.spinner == true
          ↓Style [mobile.components.UIStyle-1580302368521]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    height:100%;
                    
      ↓GridCol2 [mobile.components.UIDynamicElement-1580302368524]: 
        beanData: |
          '{
           "ionBean": "GridCol",
           "ColumnsMedium": "plain:1",
           "ColumnsLarge": "plain:2",
           "ColumnsXLarge": "plain:3"
          }'
        tagName: ion-col
↓PageEvent [mobile.components.UIPageEvent-1580149618480]: 
  viewEvent: onWillEnter
  ↓Finally_Handler [mobile.components.UIActionFinallyEvent-1580226996069]: 
    ↓sync [mobile.components.UICustomAction-1580218526317]: 
      actionValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              '		    /*let changeListener : C8oFullSyncChangeListener = new C8oFullSyncChangeListener((changes:Object)=>{
              		        console.log(changes);
              		    });
              		    
              		    page.c8o.addFullSyncChangeListener("c8oforms_fs", changeListener); // add this listener for the database "base" ; null or "" while use the default database.
              		    */
              		    let parameters = {
              		            "ddoc":"Design_document",
              		            "view":"getResponseByVersion",
              		            "live": "dataPageView",
              		            "startkey":  page.local.formId,
              		            "endkey":  page.local.formId + "ZZZ",
              		            "group": true
              		            };
              		    page.c8o.callJsonObject("fs://c8oforms_response_fs.view", parameters)
              		    .then((response, params)=>{
              		        console.dir(response);
              		        return null;
              		    })
              		    .fail((error)=>{
              		        console.error(error);
              		    })
              		    
              		    resolve();
              '
      isEnabled: false
      page_ts_imports: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
              - com.twinsoft.convertigo.beans.common.XMLVector: 
                - java.lang.String: 
                  - ↑value: C8oFullSyncChangeListener
                - java.lang.String: 
                  - ↑value: c8osdkangular
  ↓SetSPinner [mobile.components.UICustomAction-1580149618483]: 
    actionValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            		page.local.spinner = true;
            		resolve();
            
  ↓CallSequence [mobile.components.UIDynamicAction-1580149618486]: 
    beanData: '{"ionBean":"CallSequenceAction","requestable":"plain:C8Oforms.SetLanguage"}'
    ↓email [mobile.components.UIControlVariable-1580149618507]: 
      varValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
          - MobileSmartSourceType: script:this.global.user
    ↓language [mobile.components.UIControlVariable-1580149618510]: 
      varValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
          - MobileSmartSourceType: script:this.global.language
    ↓Log [mobile.components.UIDynamicAction-1580149618513]: 
      beanData: '{"ionBean":"LogAction","message":"plain:Language has been saved to profile"}'
    ↓SyncDataResponses [mobile.components.UIDynamicAction-1580226984294]: 
      beanData: '{"ionBean":"FullSyncSyncAction","requestable":"plain:C8Oforms.c8oforms_response_fs"}'
      ↓sync [mobile.components.UICustomAction-1580301887001]: 
        actionValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '		    /*let changeListener : C8oFullSyncChangeListener = new C8oFullSyncChangeListener((changes:Object)=>{
                		        console.log(changes);
                		    });
                		    
                		    page.c8o.addFullSyncChangeListener("c8oforms_fs", changeListener); // add this listener for the database "base" ; null or "" while use the default database.
                		    */
                		    page.local.versions = {};
                		    page.local.index = [];
                		    page.local.currentIndex = 0;
                		    let parameters = {
                		            "ddoc":"Design_document",
                		            "view":"getResponseByVersion",
                		            "live": "dataPageView",
                		            "startkey":  page.local.formId,
                		            "endkey":  page.local.formId + "\ufff0",
                		            "group": true
                		            };
                		    
                		    
                		    page.c8o.callJsonObject("fs://c8oforms_response_fs.view", parameters)
                		    .then((response: any, params)=>{
                		        console.dir(response);
                		        for (let elem of response["rows"]){
                		            let version_number = elem.key.substring(elem.key.length -1);
                		            version_number == "t"? "test": version_number;
                		            page.local.versions[version_number] = elem.value;
                		            page.local.index.push(version_number);
                		            
                		        }
                		        
                		        console.log("page.local.versions", page.local.versions);
                		        this.processResults();
                		        resolve();
                		        return null;
                		    })
                		    .fail((error)=>{
                		        console.error(error);
                		    })
                		    let params = {"docid": this.local.formId};
                		    page.c8o.callJsonObject("fs://c8oforms_fs.get", params)
                		    .then((resp:any, parameters:any)=>{
                		        this.local.formName = resp.name;
                		        console.log("resp get", resp);
                		        return null;
                		    })
                		    .fail((error)=>{
                		        console.error(error);
                		    })
                		    
                '
        page_ts_imports: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
            - com.twinsoft.convertigo.beans.common.XMLVector: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
                - com.twinsoft.convertigo.beans.common.XMLVector: 
                  - java.lang.String: 
                    - ↑value: C8oFullSyncChangeListener
                  - java.lang.String: 
                    - ↑value: c8osdkangular
        ↓RemoveSpinner [mobile.components.UICustomAction-1580303001030]: 
          actionValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  		page.local.spinner = false;
                  		resolve();
                  
    ↓SyncData [mobile.components.UIDynamicAction-1580226984303]: 
      beanData: '{"ionBean":"FullSyncSyncAction","requestable":"plain:C8Oforms.c8oforms_fs"}'
↓PageEvent1 [mobile.components.UIPageEvent-1580149618531]: 
  viewEvent: onCanEnter
  ↓CheckUser1 [mobile.components.UICustomAction-1580149618534]: 
    actionValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            		    const request = window["indexedDB"]["open"]("MyTestDatabase", 3);
                        request.onerror = (event)=> {
                            resolve(false);
                            setTimeout(()=>{
                                page.routerProvider.setRoot("loginPage", {page:'editorPage', formId:page.local.formId}, null); 
                            }, 200);
                            return;
                          };
                          request.onsuccess = (event)=> {
            		    page.local.formId = 'published_1580388428836'//this.navParams.get('formId');
            		    // Getting user status (whenever he is logged or not)
            		    page.c8o.httpInterface.getUserServiceStatus()
            		    .then((res)=>{
            		        if(res.user.length == 64 || res.user.authenticated == false){
            		            setTimeout(()=>{
            	                    page.routerProvider.setRoot("loginPage", {page:'dataPage'}, null); 
            	                }, 200);
                                resolve(false);
                            }
                            else{
                                page.local.user = res.user;
                                resolve(true);
                            }
            		    })
            		    .catch((err)=>{
            		        setTimeout(()=>{
            		            page.routerProvider.setRoot("loginPage", {page:'historyPage'}, null); 
            		        }, 200);
            		        resolve(false);
            		    })
                          };
            		   /* this.local.debug = {};
                        let formId = this.navParams.get('formId');
                        if(formId != undefined){
                            this.local.formId = formId;
                            resolve(true);
                        }
                        else{
                            resolve(true);
                        }*/
                       
                        
            		/*
            		if(this.global.user == '' || this.global.user == undefined){
            		    window.location.href = './';
            		    resolve(false);
            		}
            		else{
            		    resolve(true);
            		}*/
            