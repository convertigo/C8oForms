scriptContent: 
  - xmlizable: 
    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
    - com.twinsoft.convertigo.beans.common.FormatedContent: 
      →: |
        '/*Begin_c8o_PageImport*/
        /*End_c8o_PageImport*/
        /*Begin_c8o_PageDeclaration*/
        	/*End_c8o_PageDeclaration*/
        /*Begin_c8o_PageConstructor*/
        		/*End_c8o_PageConstructor*/
        /*Begin_c8o_PageFunction*/
        	public async getResponses(version? : string){
        		try {
        			this.local.spinner = true;
        			this.local.formId = this.navParams.get(''formId'');
        		    this.local.offset = new Date().getTimezoneOffset() * 60000 * -1;
        			let responses = (await this.c8o.callJsonObject("C8Oforms.APIV2_getResponses", {formId: this.local.formId, version: version}).async()).res;
        			if(this.local.currentIndex == null){
        				if(version == null){
        					this.local.currentIndex = responses?.versions?.length - 1;
        				}
        				else{
        					this.local.currentIndex = responses?.versions.indexOf(+version);
        				}
        			}
        			this.local.versions = responses?.versions;
        			this.local.responses[this.local.currentIndex] = responses?.response;
        			this.local.published_form =  responses?.published_form;
        			
        		} catch (e) {
        			console.log("error", e)
        		} finally {
        			this.local.spinner = false;
        			this.local.noresponse = false;
        			return;
        		}
        	}
        	/*End_c8o_PageFunction*/
        '
segment: datapage/:formId/:version
title: Title for dataPage
↓Header [ngx.components.UIDynamicElement-1580149563645]: 
  beanData: '{"ionBean":"Header"}'
  tagName: ion-header
  ↓ToolBar [ngx.components.UIDynamicElement-1646924981941]: 
    beanData: '{"ionBean":"ToolBar"}'
    tagName: ion-toolbar
    ↓ButtonSetLeft [ngx.components.UIDynamicElement-1646924981944]: 
      beanData: '{"ionBean":"ButtonSet","SetPosition":"plain:start"}'
      tagName: ion-buttons
      ↓MenuButton [ngx.components.UIDynamicElement-1646924981947]: 
        beanData: '{"ionBean":"MenuButton"}'
        tagName: ion-menu-button
    ↓BarTitle1 [ngx.components.UIDynamicElement-1693907223223]: 
      beanData: '{"ionBean":"BarTitle"}'
      tagName: ion-title
      ↓Style1 [ngx.components.UIStyle-1693907223226]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '/*margin-top:0.75rem;
                margin-bottom:0.8rem;*/
                
                font-size: 14px;
                  font-weight: 800;
                  font-style: normal;
                  font-stretch: normal;
                  line-height: normal;
                  letter-spacing: normal;
                  white-space: nowrap;
                  overflow: hidden;
                  text-overflow: ellipsis;
                	
                '
      ↓ImageConvertigo2 [ngx.components.UIDynamicElement-1693907223229]: 
        beanData: '{"ionBean":"Image","url":"script:''assets\/images\/svg\/logo\/logo_no_code_studio.svg''"}'
        selfClose: true
        tagName: img
        ↓Style [ngx.components.UIStyle-1693907223232]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  	margin-left:0.5em;
                  	margin-right:0.5em;
                  
    ↓ButtonSetRight [ngx.components.UIDynamicElement-1646924981962]: 
      beanData: '{"ionBean":"ButtonSet","SetPosition":"plain:end"}'
      tagName: ion-buttons
      ↓Button1 [ngx.components.UIDynamicElement-1646924981965]: 
        beanData: '{"ionBean":"Button","IonSize":"plain:small"}'
        tagName: ion-button
        ↓Event [ngx.components.UIControlEvent-1646924981968]: 
          ↓RootPage [ngx.components.UIDynamicAction-1646924981971]: 
            beanData: |
              '{
               "ionBean": "RootPageAction",
               "page": "plain:C8Oforms.MobileApplication.Application.selectorPage",
               "data": "script:{''published'':false}"
              }'
        ↓Icon [ngx.components.UIDynamicElement-1646924981974]: 
          beanData: '{"ionBean":"Icon","IconName":"plain:home-outline"}'
          tagName: ion-icon
          ↓Attr [ngx.components.UIAttribute-1646924981977]: 
            attrName: color
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:convertigo
↓Content [ngx.components.UIDynamicElement-1580149551037]: 
  beanData: '{"ionBean":"Content"}'
  tagName: ion-content
  ↓Grid [ngx.components.UIDynamicElement-1580302368230]: 
    beanData: '{"ionBean":"Grid"}'
    tagName: ion-grid
    ↓GridRow [ngx.components.UIDynamicElement-1580302368233]: 
      beanData: '{"ionBean":"GridRow"}'
      tagName: ion-row
      ↓GridCol [ngx.components.UIDynamicElement-1580302368236]: 
        beanData: |
          '{
           "ionBean": "GridCol",
           "SizeLg": "plain:2",
           "SizeMd": "plain:1",
           "SizeXl": "plain:3"
          }'
        tagName: ion-col
      ↓GridCol1 [ngx.components.UIDynamicElement-1580302368239]: 
        beanData: |
          '{
           "ionBean": "GridCol",
           "SizeLg": "plain:8",
           "SizeMd": "plain:10",
           "SizeSm": "plain:12",
           "SizeXl": "plain:6",
           "SizeXs": "plain:12"
          }'
        tagName: ion-col
        ↓CardContainer [ngx.components.UIDynamicElement-1580302368242]: 
          beanData: '{"ionBean":"Card"}'
          tagName: ion-card
          ↓Style [ngx.components.UIStyle-1580302368497]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    'background-color: rgba(255,255,255,0.9);
                    border-radius: 5px;
                    
                    '
          ↓CardContent [ngx.components.UIDynamicElement-1698247234128]: 
            beanData: '{"ionBean":"CardContent"}'
            tagName: ion-card-content
            ↓DivContainer [ngx.components.UIDynamicElement-1698246872796]: 
              beanData: '{"ionBean":"DivTag"}'
              tagName: div
              ↓Style [ngx.components.UIStyle-1698246877936]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '	display: flex;
                        	flex-direction: column;
                        	padding: 0 16px 16px 16px;
                        '
              ↓DivHeader [ngx.components.UIDynamicElement-1698246939003]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓Style [ngx.components.UIStyle-1698246969282]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '	display: flex;
                          	flex-direction: row;
                          	justify-content: space-between;
                          	align-items: center;
                          '
                ↓H1 [ngx.components.UIDynamicElement-1698247038119]: 
                  beanData: '{"ionBean":"Heading1"}'
                  tagName: h1
                  ↓some_text [ngx.components.UIText-1698247038118]: 
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:local?.published_form?.name
                  ↓Style [ngx.components.UIStyle-1698247103192]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            	color:var(--ion-color-primary);
                            
                ↓DivButtons [ngx.components.UIDynamicElement-1698247122522]: 
                  beanData: '{"ionBean":"DivTag"}'
                  tagName: div
                  ↓Style [ngx.components.UIStyle-1698247140232]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            'ion-button{
                            		--padding-start: 0px !important;
                            		--padding-end: 0px !important;
                            	}
                            '
                  ↓Button1 [ngx.components.UIDynamicElement-1698247163843]: 
                    beanData: |
                      '{
                       "ionBean": "Button",
                       "IonFill": "plain:clear",
                       "IonSize": "plain:large",
                       "IconSlot": "plain:end"
                      }'
                    tagName: ion-button
                    ↓Icon [ngx.components.UIDynamicElement-1698247163846]: 
                      beanData: '{"ionBean":"Icon","IconName":"plain:trash"}'
                      tagName: ion-icon
                    ↓Style [ngx.components.UIStyle-1698247163849]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '/**
                               * Custom properties (sometimes referred to as CSS variables or cascading variables)
                               * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                               * They are set using custom property notation, e.g.: --main-color: black;
                               * and are accessed using the var() function, e.g.: color: var(--main-color);
                               * You can find below your component''s properties you can customize within the page.
                               * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                               * For more informations see https://ionicframework.com/docs/theming.
                              **/
                              //--background	//Background of the button
                              //--background-activated	//Background of the button when pressed. Note: setting this will interfere with the Material Design ripple
                              //--background-activated-opacity	//Opacity of the button when pressed
                              //--background-focused	//Background of the button when focused with the tab key
                              //--background-focused-opacity	//Opacity of the button when focused with the tab key
                              //--background-hover	//Background of the button on hover
                              //--background-hover-opacity	//Opacity of the background on hover
                              //--border-color	//Border color of the button
                              //--border-radius	//Border radius of the button
                              //--border-style	//Border style of the button
                              //--border-width	//Border width of the button
                              //--box-shadow	//Box shadow of the button
                              //--color	//Text color of the button
                              //--color-activated	//Text color of the button when pressed
                              //--color-focused	//Text color of the button when focused with the tab key
                              //--color-hover	//Text color of the button when hover
                              //--opacity	//Opacity of the button
                              //--padding-bottom	//Bottom padding of the button
                              //--padding-end	//Right padding if direction is left-to-right, and left padding if direction is right-to-left of the button
                              //--padding-start	//Left padding if direction is left-to-right, and right padding if direction is right-to-left of the button
                              //--padding-top	//Top padding of the button
                              //--ripple-color	//Color of the button ripple effect
                              //--transition	//Transition of the button
                              
                              ion-icon{
                              	color: var(--ion-color-danger);
                              }
                              '
                    ↓Event [ngx.components.UIControlEvent-1698247163852]: 
                      ↓Alert [ngx.components.UIDynamicAction-1698247163855]: 
                        beanData: |
                          '{
                           "ionBean": "AlertAction",
                           "header": "script:this.translate.instant(''delete_for_version'') + '' ?''",
                           "subHeader": "script:this.translate.instant(''Supprimer'')",
                           "message": "plain:",
                           "cssClass": "plain:alertCustom c8o-alert-create-form",
                           "button1": "script:this.translate.instant(''non'')",
                           "button2": "script:this.translate.instant(''oui'')",
                           "value1": "script:0",
                           "value2": "script:1",
                           "cancel1": "plain:cancel",
                           "css1": "plain:yesnobt",
                           "css2": "plain:yesnobt"
                          }'
                        ↓If [ngx.components.UIDynamicAction-1698247163858]: 
                          beanData: '{"ionBean":"IfAction","condition":"script:parent.out.data == 1"}'
                          ↓CustomAsyncAction [ngx.components.UICustomAsyncAction-1698247163861]: 
                            actionValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    		try {
                                    			for(let elem of this.local.versions[this.local.index[this.local.currentIndex]]){
                                    			    this.c8o.callJson("fs://c8oforms_response_fs.delete", "docid", elem._id)
                                    			    .then((res)=>{
                                    			        return null;
                                    			    })
                                    			    .fail((err)=>{
                                    			    })
                                    			}
                                    		} catch (e) {
                                    		
                                    		} finally {
                                    			return;
                                    		}
                                    
                  ↓Button11 [ngx.components.UIDynamicElement-1698247163864]: 
                    beanData: |
                      '{
                       "ionBean": "Button",
                       "IonFill": "plain:clear",
                       "IonSize": "plain:large",
                       "IconSlot": "plain:end"
                      }'
                    tagName: ion-button
                    ↓Icon [ngx.components.UIDynamicElement-1698247163867]: 
                      beanData: |
                        '{
                         "ionBean": "Icon",
                         "IconName": "plain:trash",
                         "IconSource": "plain:assets\/images\/svg\/icon\/csv.svg"
                        }'
                      tagName: ion-icon
                    ↓Style [ngx.components.UIStyle-1698247163870]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '/**
                               * Custom properties (sometimes referred to as CSS variables or cascading variables)
                               * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                               * They are set using custom property notation, e.g.: --main-color: black;
                               * and are accessed using the var() function, e.g.: color: var(--main-color);
                               * You can find below your component''s properties you can customize within the page.
                               * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                               * For more informations see https://ionicframework.com/docs/theming.
                              **/
                              //--background	//Background of the button
                              //--background-activated	//Background of the button when pressed. Note: setting this will interfere with the Material Design ripple
                              //--background-activated-opacity	//Opacity of the button when pressed
                              //--background-focused	//Background of the button when focused with the tab key
                              //--background-focused-opacity	//Opacity of the button when focused with the tab key
                              //--background-hover	//Background of the button on hover
                              //--background-hover-opacity	//Opacity of the background on hover
                              //--border-color	//Border color of the button
                              //--border-radius	//Border radius of the button
                              //--border-style	//Border style of the button
                              //--border-width	//Border width of the button
                              //--box-shadow	//Box shadow of the button
                              //--color	//Text color of the button
                              //--color-activated	//Text color of the button when pressed
                              //--color-focused	//Text color of the button when focused with the tab key
                              //--color-hover	//Text color of the button when hover
                              //--opacity	//Opacity of the button
                              //--padding-bottom	//Bottom padding of the button
                              //--padding-end	//Right padding if direction is left-to-right, and left padding if direction is right-to-left of the button
                              //--padding-start	//Left padding if direction is left-to-right, and right padding if direction is right-to-left of the button
                              //--padding-top	//Top padding of the button
                              //--ripple-color	//Color of the button ripple effect
                              //--transition	//Transition of the button
                              
                              ion-icon{
                              	color: var(--ion-color-greenCsv);
                              }
                              '
                    ↓Event [ngx.components.UIControlEvent-1698247163873]: 
                      ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1698247163876]: 
                        beanData: '{"ionBean":"InvokeAction"}'
                        stack: C8Oforms.MobileApplication.Application.replaceEmptyFunction
                        ↓name [ngx.components.UIControlVariable-1698247163879]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:this.local.formName
                        ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1698247163882]: 
                          beanData: '{"ionBean":"InvokeAction"}'
                          stack: C8Oforms.MobileApplication.Application.getOffsetFunction
                          ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1698247163885]: 
                            beanData: '{"ionBean":"InvokeAction"}'
                            stack: C8Oforms.MobileApplication.Application.popOverDownloadCsv
                            ↓selectedForm [ngx.components.UIControlVariable-1698247163888]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:this.local.form
                            ↓name [ngx.components.UIControlVariable-1698247163891]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: source:{"filter":"Action","project":"C8Oforms","input":"","model":{"data":[{"priority":1646918916933,"rootEvent":false,"pageLocals":false},{"priority":1646917477567,"rootEvent":true,"pageLocals":false}],"path":"?.out","prefix":"","suffix":"","custom":"","useCustom":false}}
                            ↓offset [ngx.components.UIControlVariable-1698247163894]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: source:{"filter":"Action","project":"C8Oforms","input":"","model":{"data":[{"priority":1646918998232,"rootEvent":false,"pageLocals":false},{"priority":1646917477567,"rootEvent":true,"pageLocals":false},{"priority":1646918916933,"rootEvent":false,"pageLocals":false}],"path":"?.out","prefix":"","suffix":"","custom":"","useCustom":false}}
                            ↓version [ngx.components.UIControlVariable-1698247163897]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:"" + this.local.index[this.local.currentIndex]
              ↓DivVersion [ngx.components.UIDynamicElement-1698308687717]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓Style [ngx.components.UIStyle-1698308701317]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '	display: flex;
                          	flex-direction: row;
                          	justify-content: space-between;
                          	align-items: center;
                          '
                ↓DivArrowLeft [ngx.components.UIDynamicElement-1698308711079]: 
                  beanData: '{"ionBean":"DivTag"}'
                  tagName: div
                  ↓Icon [ngx.components.UIDynamicElement-1698308772083]: 
                    beanData: '{"ionBean":"Icon","IconName":"plain:arrow-back"}'
                    tagName: ion-icon
                    ↓Style [ngx.components.UIStyle-1698308772086]: 
                    ↓Event [ngx.components.UIControlEvent-1698308772089]: 
                      ↓moveBackward [ngx.components.UICustomAction-1698308772092]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                		if(page.local.currentIndex == 0){
                                		    //then we can't move backward
                                		}
                                		else{
                                		    page.local.currentIndex = page.local.currentIndex - 1;
                                		    if(page.local.responses[page.local.currentIndex] == null){
                                				page.getResponses(page.local.versions[page.local.currentIndex]);
                                			}
                                		}
                                		resolve();
                                
                    ↓Attr [ngx.components.UIAttribute-1698308772095]: 
                      attrName: '[ngClass]'
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: 'script:this.local.currentIndex == 0 ? ''arrowNonAuthorised'' : ''arrowAuthorised'' '
                    ↓Attr1 [ngx.components.UIAttribute-1698308772098]: 
                      attrName: '[attr.disabled]'
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:this.local.currentIndex == 0
                ↓DivVersion [ngx.components.UIDynamicElement-1698308752659]: 
                  beanData: '{"ionBean":"DivTag"}'
                  tagName: div
                  ↓Paragraph [ngx.components.UIDynamicElement-1698308865227]: 
                    beanData: '{"ionBean":"Paragraph"}'
                    tagName: p
                    ↓some_text [ngx.components.UIText-1698308865226]: 
                      textValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:('version' | translate) + (local?.versions?.[local?.currentIndex] ?? '...')
                    ↓Style [ngx.components.UIStyle-1698680616958]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '	font-size: 16px;
                              '
                ↓DivArrowRight [ngx.components.UIDynamicElement-1698308721063]: 
                  beanData: '{"ionBean":"DivTag"}'
                  tagName: div
                  ↓Icon [ngx.components.UIDynamicElement-1698308793009]: 
                    beanData: '{"ionBean":"Icon","IconName":"plain:arrow-forward"}'
                    tagName: ion-icon
                    ↓Style [ngx.components.UIStyle-1698308793012]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              position:relative;
                              float:right;
                              
                    ↓Event [ngx.components.UIControlEvent-1698308793015]: 
                      ↓moveForward [ngx.components.UICustomAction-1698308793018]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                		let last = page.local.versions.length -1;
                                		let currentIndex = page.local.currentIndex;
                                		if(currentIndex == last){
                                		    //then we can't move forward
                                		}
                                		else{
                                		    page.local.currentIndex = page.local.currentIndex + 1;
                                		    if(page.local.responses[page.local.currentIndex] == null){
                                				page.getResponses(page.local.versions[page.local.currentIndex]);
                                			}
                                		}
                                		resolve();
                                
                    ↓Attr [ngx.components.UIAttribute-1698308793021]: 
                      attrName: '[ngClass]'
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: 'script:this.local.currentIndex == local.versions?.length -1 ? ''arrowNonAuthorised'' : ''arrowAuthorised'' '
              ↓DivCountResponses [ngx.components.UIDynamicElement-1698308316948]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓Paragraph [ngx.components.UIDynamicElement-1698308362318]: 
                  beanData: '{"ionBean":"Paragraph"}'
                  tagName: p
                  ↓some_text [ngx.components.UIText-1698308362317]: 
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:(local?.responses?.[local?.currentIndex]?.length ?? '...' ) + ' ' + ('answer_s' | translate)
          ↓Style1 [ngx.components.UIStyle-1698680728756]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    '	--color: black;
                    '
        ↓Directive2 [ngx.components.UIControlDirective-1698309099889]: 
          directiveItemName: item1
          directiveSource: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:local?.responses?.[local?.currentIndex]?.value
          ↓UseSharedComponent [ngx.components.UIUseShared-1698309099892]: 
            sharedcomponent: C8Oforms.MobileApplication.Application.sharedStatsInputText
            ↓element [ngx.components.UIUseVariable-1698309099895]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:item1
          ↓UseSharedComponent1 [ngx.components.UIUseShared-1698309099898]: 
            sharedcomponent: C8Oforms.MobileApplication.Application.sharedStatsCheckbox
            ↓element [ngx.components.UIUseVariable-1698309099901]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:item1
            ↓total [ngx.components.UIUseVariable-1698416982189]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:local?.responses?.[local?.currentIndex]?.length
          ↓UseSharedComponent2 [ngx.components.UIUseShared-1698309099904]: 
            sharedcomponent: C8Oforms.MobileApplication.Application.sharedStatsRadio
            ↓element [ngx.components.UIUseVariable-1698309099907]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:item1
            ↓total [ngx.components.UIUseVariable-1698420442201]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:local?.responses?.[local?.currentIndex]?.length
          ↓UseSharedComponent3 [ngx.components.UIUseShared-1698309099910]: 
            sharedcomponent: C8Oforms.MobileApplication.Application.sharedStatsCheckboxGroup
            ↓element [ngx.components.UIUseVariable-1698309099913]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:item1
            ↓total [ngx.components.UIUseVariable-1698657122140]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:local?.responses?.[local?.currentIndex]?.length
          ↓UseSharedComponent41 [ngx.components.UIUseShared-1698309099922]: 
            sharedcomponent: C8Oforms.MobileApplication.Application.sharedStatsImg
            ↓element [ngx.components.UIUseVariable-1698309099925]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:item1
          ↓UseSharedComponent5 [ngx.components.UIUseShared-1698750581988]: 
            sharedcomponent: C8Oforms.MobileApplication.Application.sharedStatsFiles
            ↓element [ngx.components.UIUseVariable-1698750581991]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:item1
          ↓UseSharedComponent6 [ngx.components.UIUseShared-1698753167698]: 
            sharedcomponent: C8Oforms.MobileApplication.Application.sharedStatsLocation
            ↓element [ngx.components.UIUseVariable-1698753167701]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:item1
        ↓Grid1Spinner [ngx.components.UIDynamicElement-1580302368500]: 
          beanData: '{"ionBean":"Grid","Height":"plain"}'
          tagName: ion-grid
          ↓GridRow [ngx.components.UIDynamicElement-1580302368503]: 
            beanData: |
              '{
               "ionBean": "GridRow",
               "FlexJustifyContent": "plain:ion-justify-content-center",
               "FlexAlignement": "plain:ion-align-items-center"
              }'
            tagName: ion-row
            ↓GridCol [ngx.components.UIDynamicElement-1580302368506]: 
              beanData: |
                '{
                 "ionBean": "GridCol",
                 "FlexAlignement": "plain:ion-align-self-center",
                 "Size": "plain:12"
                }'
              tagName: ion-col
              ↓Div [ngx.components.UIDynamicElement-1580302368509]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓FragmentSpinner [ngx.components.UICustom-1580302368512]: 
                  htmlTemplate: <div  class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>
                ↓Style [ngx.components.UIStyle-1580302368515]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          text-align:center;
                          
          ↓Attr [ngx.components.UIAttribute-1580302368518]: 
            attrName: '*ngIf'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:this.local.spinner == true
          ↓Style [ngx.components.UIStyle-1580302368521]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    height:100%;
                    
        ↓Grid1Spinner1 [ngx.components.UIDynamicElement-1581947465320]: 
          beanData: '{"ionBean":"Grid"}'
          tagName: ion-grid
          ↓GridRow [ngx.components.UIDynamicElement-1581947465323]: 
            beanData: |
              '{
               "ionBean": "GridRow",
               "FlexJustifyContent": "plain:ion-justify-content-center",
               "FlexAlignement": "plain:ion-align-items-center"
              }'
            tagName: ion-row
            ↓GridCol [ngx.components.UIDynamicElement-1581947465326]: 
              beanData: |
                '{
                 "ionBean": "GridCol",
                 "FlexAlignement": "plain:ion-align-self-center",
                 "Size": "plain:12"
                }'
              tagName: ion-col
              ↓Div [ngx.components.UIDynamicElement-1581947465329]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓Style [ngx.components.UIStyle-1581947465335]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          text-align:center;
                          
                ↓Text [ngx.components.UIText-1581947491049]: 
                  i18n: true
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:No responses yet
          ↓Attr [ngx.components.UIAttribute-1581947465338]: 
            attrName: '*ngIf'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:this.local.noresponse == true
          ↓Style [ngx.components.UIStyle-1581947465341]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    height:100%;
                    
      ↓GridCol2 [ngx.components.UIDynamicElement-1580302368524]: 
        beanData: |
          '{
           "ionBean": "GridCol",
           "SizeLg": "plain:2",
           "SizeMd": "plain:1",
           "SizeXl": "plain:3"
          }'
        tagName: ion-col
↓PageEvent [ngx.components.UIPageEvent-1580149618480]: 
  viewEvent: onWillEnter
  ↓getResponses [ngx.components.UICustomAsyncAction-1698242506324]: 
    actionValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            '		page.local.responses = [];
            		let target_version = page.navParams.get(''version'');
            		target_version = target_version != null && target_version != ":version" ? target_version : null;
            		await page.getResponses(target_version);
            '