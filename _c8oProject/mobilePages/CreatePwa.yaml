scriptContent: 
  - xmlizable: 
    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
    - com.twinsoft.convertigo.beans.common.FormatedContent: 
      →: |
        '/*Begin_c8o_PageImport*/
        import { sha256 } from ''js-sha256'';
        /*End_c8o_PageImport*/
        /*Begin_c8o_PageDeclaration*/
        	public form;
        	public pwa;
        	public isFirstPWA;
        	/*End_c8o_PageDeclaration*/
        /*Begin_c8o_PageConstructor*/
        		this.form = this.navParams.data.form;
        		this.isFirstPWA = this.navParams.data.isFirstPWA != undefined && this.navParams.data.isFirstPWA
        		
        		/*End_c8o_PageConstructor*/
        /*Begin_c8o_PageFunction*/
        	public async showToast(msg: string){
        	    let toastController = this.getInstance(ToastController);
                (await toastController.create({
                    message: msg,
                    duration: 3000,
                    position: ''bottom''
                  })).present();
        	}
        	
        	public makeid(length) {
                var result           = '''';
                var characters       = ''ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'';
                var charactersLength = characters.length;
                for ( var i = 0; i < length; i++ ) {
                   result += characters.charAt(Math.floor(Math.random() * charactersLength));
                }
                return result;
            }
        	
        	public detectContentType(base64Content) {
                // base64 encoded data doesn''t contain commas    
               let base64ContentArray = base64Content.split(",")
               // base64 content cannot contain whitespaces but nevertheless skip if there are!
               return [base64ContentArray[0].match(/[^:\s*]\w+\/[\w-+\d.]+(?=[;| ])/)[0], base64ContentArray[1]];
            }
        	
        	public b64toBlob(b64Data, contentType='''', sliceSize=512){
               const byteCharacters = atob(b64Data);
               const byteArrays = [];
        
               for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {
                 const slice = byteCharacters.slice(offset, offset + sliceSize);
        
                 const byteNumbers = new Array(slice.length);
                 for (let i = 0; i < slice.length; i++) {
                   byteNumbers[i] = slice.charCodeAt(i);
                 }
        
                 const byteArray = new Uint8Array(byteNumbers);
                 byteArrays.push(byteArray);
               }
        
               const blob = new Blob(byteArrays, {type: contentType});
               return blob;
             }
           
           
        	/*End_c8o_PageFunction*/
        '
segment: path-to-createpwa
title: Title for CreatePwa
↓Header [ngx.components.UIDynamicElement-1613726447950]: 
  beanData: '{"ionBean":"Header"}'
  tagName: ion-header
  ↓FormatLayout [ngx.components.UIDynamicAttr-1645090140120]: 
    beanData: '{"ionBean":"FormatLayout","TextAlignment":"plain:ion-text-center"}'
    comment: FormatLayout
    tagName: div
  ↓Heading [ngx.components.UIDynamicTag-1613727025938]: 
    beanData: '{"ionBean":"Heading"}'
    tagName: h2
    ↓Text [ngx.components.UIText-1613726466628]: 
      i18n: true
      textValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: plain:app_properties
  ↓Attr [ngx.components.UIAttribute-1613726681942]: 
    attrName: '*ngIf'
    attrValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: plain:this.navParams.data.header === true
↓Content [ngx.components.UIDynamicElement-1603800553816]: 
  beanData: '{"ionBean":"Content"}'
  tagName: ion-content
  ↓Button [ngx.components.UIDynamicElement-1603880720943]: 
    beanData: |
      '{
       "ionBean": "Button",
       "IonFill": "plain:clear",
       "IonSize": "plain:large"
      }'
    tagName: ion-button
    ↓Icon [ngx.components.UIDynamicElement-1603880720946]: 
      beanData: '{"ionBean":"Icon","IconName":"plain:close"}'
      tagName: ion-icon
    ↓Style [ngx.components.UIStyle-1603880720949]: 
      styleContent: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              float:right;
              top:0;
              right:0;
              position:absolute;
              
    ↓Event [ngx.components.UIControlEvent-1603880720952]: 
      ↓CloseModal [ngx.components.UIDynamicAction-1603880720955]: 
        beanData: '{"ionBean":"CloseModalAction"}'
  ↓Directive [ngx.components.UIControlDirective-1603807348592]: 
    directiveName: If
    directiveSource: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: plain:this.pwa != undefined
    ↓Grid1 [ngx.components.UIDynamicElement-1603804083537]: 
      beanData: '{"ionBean":"Grid"}'
      tagName: ion-grid
      ↓GridRow [ngx.components.UIDynamicElement-1603804090879]: 
        beanData: '{"ionBean":"GridRow"}'
        tagName: ion-row
        ↓GridCol [ngx.components.UIDynamicElement-1603804094922]: 
          beanData: |
            '{
             "ionBean": "GridCol",
             "Size": "plain:3",
             "SizeLg": "plain:3",
             "SizeMd": "plain:3",
             "SizeSm": "plain:12",
             "SizeXl": "plain:3",
             "SizeXs": "plain:12"
            }'
          tagName: ion-col
          ↓Div1 [ngx.components.UIDynamicElement-1603819151178]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓DivImg [ngx.components.UIDynamicElement-1603800885985]: 
              beanData: '{"ionBean":"DivTag"}'
              tagName: div
              ↓Style [ngx.components.UIStyle-1603800885988]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '	z-index: 100;
                        	display: flex;
                        	justify-content: center;
                        	
                        }
                        .class1603800885985:hover{
                        	cursor: pointer;
                        '
              ↓Directive [ngx.components.UIControlDirective-1603800886024]: 
                directiveName: If
                directiveSource: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:(this.pwa._id != undefined && this.local.updatedImg != true) else ElseBlock_1603808476027
                ↓FSImage [ngx.components.UIDynamicElement-1603800886027]: 
                  beanData: |
                    '{
                     "ionBean": "FSImage",
                     "docid": "script:this.pwa._id",
                     "attachment": "script:''icon''",
                     "placeholder": "script:''assets\/images\/category.png''",
                     "requestable": "plain:C8Oforms.c8oforms_fs"
                    }'
                  selfClose: true
                  tagName: img
                  ↓Style [ngx.components.UIStyle-1603800886030]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            '    width:182px;
                                height:182px;
                                -webkit-border-radius: 50%;
                                border-radius: 50%;
                                border: solid 9px #ffffff;
                              background-color: #d8d8d8;
                            
                            '
                  ↓Event [ngx.components.UIControlEvent-1603800885991]: 
                    ↓CustomAction [ngx.components.UICustomAction-1603882432356]: 
                      actionValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              		this.global.multiple = false;
                              		resolve();
                              
                      ↓ModalPage [ngx.components.UIDynamicAction-1603881988935]: 
                        beanData: |
                          '{
                           "ionBean": "ModalAction",
                           "page": "plain:C8Oforms.MobileApplication.Application.dropFilePage",
                           "data": "script:{pwa: true}",
                           "blockWhileDisplayed": "plain:true",
                           "cssClass": "plain:modalCSV"
                          }'
                        ↓CustomAction [ngx.components.UICustomAction-1603889340298]: 
                          actionValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  '		if(page.global.pwafile != undefined){
                                  		    var reader = new FileReader();
                                              reader.readAsDataURL(page.global.pwafile[0]); 
                                              reader.onloadend = () => {
                                                  var base64data: any = reader.result;                
                                                  page.pwa.img = {data: base64data, url: this.router.sanitizer.bypassSecurityTrustUrl(base64data), blob : page.global.pwafile[0]};
                                                  this.local.updatedImg = true;
                                                  page.global.pwafile = undefined;
                                              }  
                                  		}
                                  		
                                  		resolve();
                                  '
              ↓Tag [ngx.components.UIElement-1603808476027]: 
                identifier: ElseBlock_1603808476027
                tagName: ng-template
                ↓Image [ngx.components.UIDynamicElement-1603808539173]: 
                  beanData: '{"ionBean":"Image","url":"script:this.pwa?.img?.url"}'
                  selfClose: true
                  tagName: img
                  ↓Style [ngx.components.UIStyle-1603808539180]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            '    width:182px;
                                height:182px;
                                -webkit-border-radius: 50%;
                                border-radius: 50%;
                                border: solid 9px #ffffff;
                              background-color: #d8d8d8;
                            
                            '
                  ↓Event [ngx.components.UIControlEvent-1606903357140]: 
                    ↓CustomAction [ngx.components.UICustomAction-1606903357173]: 
                      actionValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              		this.global.multiple = false;
                              		resolve();
                              
                      ↓ModalPage [ngx.components.UIDynamicAction-1606903357176]: 
                        beanData: |
                          '{
                           "ionBean": "ModalAction",
                           "page": "plain:C8Oforms.MobileApplication.Application.dropFilePage",
                           "data": "script:{pwa: true}",
                           "blockWhileDisplayed": "plain:true",
                           "cssClass": "plain:modalCSV"
                          }'
                        ↓CustomAction [ngx.components.UICustomAction-1606903357179]: 
                          actionValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  '		if(page.global.pwafile != undefined){
                                  		    var reader = new FileReader();
                                              reader.readAsDataURL(page.global.pwafile[0]); 
                                              reader.onloadend = () => {
                                                  var base64data: any = reader.result;                
                                                  page.pwa.img = {data: base64data, url: this.router.sanitizer.bypassSecurityTrustUrl(base64data), blob : page.global.pwafile[0]};
                                                  this.local.updatedImg = true;
                                                  page.global.pwafile = undefined;
                                              }  
                                  		}
                                  		
                                  		resolve();
                                  '
          ↓Style [ngx.components.UIStyle-1603877105100]: 
        ↓GridCol1 [ngx.components.UIDynamicElement-1603804096879]: 
          beanData: '{"ionBean":"GridCol","Size":"plain:9"}'
          tagName: ion-col
          ↓GenericItem [ngx.components.UIDynamicElement-1603801682352]: 
            beanData: '{"ionBean":"GenericItem","Lines":"plain:inset"}'
            tagName: ion-item
            ↓Style [ngx.components.UIStyle-1603801858466]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      	display:inline-block !important;
                      
            ↓Label [ngx.components.UIDynamicElement-1603802392857]: 
              beanData: '{"ionBean":"Label","Position":"plain:stacked"}'
              tagName: ion-label
              ↓Text [ngx.components.UIText-1603802401069]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:name
              ↓Style [ngx.components.UIStyle-1603802426222]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        'color: #ff8206 !important;
                          font-size: 14px !important;
                          text-transform: capitalize !important;
                          font-weight: 600;
                          font-style: normal;
                          font-stretch: normal;
                          line-height: normal;
                          letter-spacing: normal;
                        '
            ↓TextInput [ngx.components.UIDynamicElement-1603802354868]: 
              beanData: '{"ionBean":"Input","Debounce":"plain:0"}'
              tagName: ion-input
              ↓Attr [ngx.components.UIAttribute-1603806797892]: 
                attrName: '[(ngModel)]'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.pwa.name
          ↓GenericItem1 [ngx.components.UIDynamicElement-1603803008189]: 
            beanData: '{"ionBean":"GenericItem","Lines":"plain:inset"}'
            tagName: ion-item
            ↓Style [ngx.components.UIStyle-1603803008192]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      	margin-top:2vh;
                      
            ↓Label [ngx.components.UIDynamicElement-1603803008195]: 
              beanData: '{"ionBean":"Label","Position":"plain:stacked"}'
              tagName: ion-label
              ↓Text [ngx.components.UIText-1603803008198]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:short_name
              ↓Style [ngx.components.UIStyle-1603803008201]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        'color: #ff8206 !important;
                          font-size: 14px !important;
                          font-weight: 600;
                          font-style: normal;
                          font-stretch: normal;
                          line-height: normal;
                          letter-spacing: normal;
                        '
            ↓TextInput [ngx.components.UIDynamicElement-1603803008204]: 
              beanData: |
                '{
                 "ionBean": "Input",
                 "Debounce": "plain:0",
                 "Value": "script:this.form?.name"
                }'
              tagName: ion-input
              ↓Attr [ngx.components.UIAttribute-1603806794517]: 
                attrName: '[(ngModel)]'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.pwa.shortName
        ↓GridCol2 [ngx.components.UIDynamicElement-1646907928185]: 
          beanData: '{"ionBean":"GridCol","Size":"plain:6"}'
          tagName: ion-col
          ↓Div [ngx.components.UIDynamicElement-1646907928188]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓Text [ngx.components.UIText-1646907928191]: 
              i18n: true
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:background_color
            ↓Style [ngx.components.UIStyle-1646907928194]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      'color: #ff8206 !important;
                        font-size: 14px !important;
                        font-weight: 600;
                        font-style: normal;
                        font-stretch: normal;
                        line-height: normal;
                        letter-spacing: normal;
                        text-align: center;
                      '
          ↓Div1 [ngx.components.UIDynamicElement-1646907928197]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓Style [ngx.components.UIStyle-1646907928200]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '	margin-left:auto;
                      	margin-right:auto;
                      	margin-top:10px;
                      	border-radius: 50%;
                       	width: 50px;
                          height: 50px;
                          border: 5px solid var(--ion-color-greyButton);
                          text-align:center;
                      }
                      .class1603815913689:hover {
                      	cursor:pointer;
                      '
            ↓Event1 [ngx.components.UIControlEvent-1646907928203]: 
              ↓Popover [ngx.components.UIDynamicAction-1646907928206]: 
                beanData: |
                  '{
                   "ionBean": "PopoverAction",
                   "page": "plain:C8Oforms.MobileApplication.Application.colorPage",
                   "data": "script:{''label_color'': this.pwa.backgroundColor}"
                  }'
                ↓CustomAsyncAction [ngx.components.UICustomAsyncAction-1646926834448]: 
                  actionValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          		try {
                          			 page.pwa.backgroundColor = page.global.colorPageColor;
                          		} catch (e) {
                          		
                          		} finally {
                          			return;
                          		}
                          
            ↓Attr [ngx.components.UIAttribute-1646907928212]: 
              attrName: '[ngStyle]'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: 'script:{''background-color'': this.pwa.backgroundColor}'
          ↓Style [ngx.components.UIStyle-1646907928215]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    '	margin-top: 31px;
                    '
        ↓GridCol11 [ngx.components.UIDynamicElement-1646907928218]: 
          beanData: '{"ionBean":"GridCol","Size":"plain:6"}'
          tagName: ion-col
          ↓Div [ngx.components.UIDynamicElement-1646907928221]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓Text [ngx.components.UIText-1646907928224]: 
              i18n: true
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:theme_color
            ↓Style [ngx.components.UIStyle-1646907928227]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      'color: #ff8206 !important;
                        font-size: 14px !important;
                        font-weight: 600;
                        font-style: normal;
                        font-stretch: normal;
                        line-height: normal;
                        letter-spacing: normal;
                        text-align: center;
                      '
          ↓Div1 [ngx.components.UIDynamicElement-1646907928230]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓Style [ngx.components.UIStyle-1646907928233]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '	margin-left:auto;
                      	margin-right:auto;
                      	margin-top:10px;
                      	border-radius: 50%;
                       	width: 50px;
                          height: 50px;
                          border: 5px solid var(--ion-color-greyButton);
                          text-align:center;
                      }
                      .class1603816675490:hover {
                      	cursor:pointer;
                      '
            ↓Event1 [ngx.components.UIControlEvent-1646907928236]: 
              ↓Popover [ngx.components.UIDynamicAction-1646907928239]: 
                beanData: |
                  '{
                   "ionBean": "PopoverAction",
                   "page": "plain:C8Oforms.MobileApplication.Application.colorPage",
                   "data": "script:{''label_color'': this.pwa.themeColor}"
                  }'
                ↓CustomAsyncAction [ngx.components.UICustomAsyncAction-1646926970191]: 
                  actionValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          		try {
                          			 page.pwa.themeColor = page.global.colorPageColor;
                          		} catch (e) {
                          		
                          		} finally {
                          			return;
                          		}
                          
            ↓Attr [ngx.components.UIAttribute-1646907928242]: 
              attrName: '[ngStyle]'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: 'script:{''background-color'': this.pwa.themeColor}'
          ↓Style [ngx.components.UIStyle-1646907928245]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    '	margin-top: 31px;
                    '
        ↓GridCol3 [ngx.components.UIDynamicElement-1646907933292]: 
          beanData: '{"ionBean":"GridCol","Size":"plain:12"}'
          tagName: ion-col
          ↓Style [ngx.components.UIStyle-1646907933304]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    '	margin-top: 31px;
                    '
          ↓GenericItem [ngx.components.UIDynamicElement-1646907933307]: 
            beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
            tagName: ion-item
            ↓CheckBox [ngx.components.UIDynamicElement-1646907933319]: 
              beanData: |
                '{
                 "ionBean": "CheckBox",
                 "ControlName": "plain:name1646907933319",
                 "SetPosition": "plain"
                }'
              tagName: ion-checkbox
              ↓Attr [ngx.components.UIAttribute-1646907933322]: 
                attrName: '[(ngModel)]'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.pwa.notAnonymous
              ↓Attr1 [ngx.components.UIAttribute-1646911496398]: 
                attrName: slot
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:start
            ↓Label [ngx.components.UIDynamicElement-1646907933310]: 
              beanData: '{"ionBean":"Label","Position":"plain:stacked"}'
              tagName: ion-label
              ↓Text [ngx.components.UIText-1646907933313]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:require_auth_form
              ↓Style [ngx.components.UIStyle-1646907933316]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        'color: #ff8206 !important;
                          font-size: 14px !important;
                          font-weight: 600;
                          font-style: normal;
                          font-stretch: normal;
                          line-height: normal;
                          letter-spacing: normal;
                        '
        ↓GridCol4 [ngx.components.UIDynamicElement-1646907938581]: 
          beanData: '{"ionBean":"GridCol","Size":"plain:12"}'
          tagName: ion-col
          ↓Div [ngx.components.UIDynamicElement-1646907938584]: 
            beanData: '{"ionBean":"DivTag"}'
            isEnabled: false
            tagName: div
            ↓Text [ngx.components.UIText-1646907938587]: 
              i18n: true
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:define_default_values_for_forms_element
            ↓Style [ngx.components.UIStyle-1646907938590]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      'color: #ff8206 !important;
                        font-size: 14px !important;
                        font-weight: 600;
                        font-style: normal;
                        font-stretch: normal;
                        line-height: normal;
                        letter-spacing: normal;
                      '
          ↓Style [ngx.components.UIStyle-1646907938593]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    '	margin-top: 15px;
                    '
          ↓GenericItem1 [ngx.components.UIDynamicElement-1646907938596]: 
            beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
            tagName: ion-item
            ↓FormatLayout [ngx.components.UIDynamicAttr-1646907938599]: 
              beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-uppercase"}'
              comment: FormatLayout
              tagName: div
            ↓Icon [ngx.components.UIDynamicElement-1646907938602]: 
              beanData: '{"ionBean":"Icon","IconName":"script:this.global.showAdvanced ? ''caret-down-outline'' : ''caret-forward-outline''"}'
              comment: arrow-dropright
              tagName: ion-icon
              ↓Style [ngx.components.UIStyle-1646907938605]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        'margin-left: 5px;
                        }
                        
                        .class1646907938602:hover {
                        cursor: pointer;
                        '
            ↓Text [ngx.components.UIText-1646907938608]: 
              i18n: true
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:advanced
            ↓Style [ngx.components.UIStyle-1646907938611]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      'color: #ff8206;
                        font-size: 14px;
                        font-weight: 600;
                        font-style: normal;
                        font-stretch: normal;
                        line-height: normal;
                        letter-spacing: normal;
                      }
                      
                      .class1646907938596:hover {
                      	cursor:pointer;
                      '
            ↓Style1 [ngx.components.UIStyle-1646907938614]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '	.label{
                      		margin-top: 0px !important;	
                      		margin-bottom: 0px !important;	
                      	}
                      	.item-inner {
                      		border-bottom: 0px solid #ffffff !important;
                      	}
                      '
            ↓Event [ngx.components.UIControlEvent-1646907938617]: 
              ↓SetGlobal [ngx.components.UIDynamicAction-1646907938620]: 
                beanData: |
                  '{
                   "ionBean": "SetGlobalAction",
                   "Property": "plain:showAdvanced",
                   "Value": "script:this.global.showAdvanced == undefined ? true : !this.global.showAdvanced"
                  }'
          ↓GenericItem [ngx.components.UIDynamicElement-1646907938623]: 
            beanData: '{"ionBean":"GenericItem","Lines":"plain:inset"}'
            tagName: ion-item
            ↓Label [ngx.components.UIDynamicElement-1646907938626]: 
              beanData: '{"ionBean":"Label","Position":"plain:stacked"}'
              tagName: ion-label
              ↓Text [ngx.components.UIText-1646907938629]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:define_default_values_for_forms_element
              ↓Style [ngx.components.UIStyle-1646907938632]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        'color: #ff8206 !important;
                          font-size: 14px !important;
                          font-weight: 600;
                          font-style: normal;
                          font-stretch: normal;
                          line-height: normal;
                          letter-spacing: normal;
                        '
            ↓TextInput [ngx.components.UIDynamicElement-1646907938635]: 
              beanData: |
                '{
                 "ionBean": "Input",
                 "ControlName": "plain:name1646907938635",
                 "Debounce": "plain:0"
                }'
              tagName: ion-input
              ↓Attr [ngx.components.UIAttribute-1646907938638]: 
                attrName: '[(ngModel)]'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.pwa.querystr
            ↓Attr [ngx.components.UIAttribute-1646907938641]: 
              attrName: '*ngIf'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:this.global.showAdvanced == true
  ↓Style [ngx.components.UIStyle-1603877977568]: 
    styleContent: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            '	.scroll-content{
            		padding-left: 3vw !important;
            		padding-right: 3vw !important;
            	}
            '
↓PageEvent [ngx.components.UIPageEvent-1603806039997]: 
  viewEvent: onWillEnter
  ↓Finally_Handler [ngx.components.UIActionFinallyEvent-1603900407522]: 
    ↓CustomAction [ngx.components.UICustomAction-1603900416360]: 
      actionValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              		this.local.initDone = true;
              		resolve();
              
  ↓If [ngx.components.UIDynamicAction-1603900448853]: 
    beanData: '{"ionBean":"IfAction","condition":"script:!this.local.initDone && !this.isFirstPWA"}'
    ↓GetData [ngx.components.UIDynamicAction-1603806047577]: 
      beanData: |
        '{
         "ionBean": "FullSyncGetAction",
         "requestable": "plain:C8Oforms.c8oforms_fs",
         "_id": "script:this.navParams.data.form._id+''_pwa_document''"
        }'
      ↓Failure_Handler [ngx.components.UIActionFailureEvent-1603806180470]: 
        ↓LoadDefaultValues [ngx.components.UICustomAction-1603806712006]: 
          actionValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '		new Promise(async(resolveGet)=>{
                  		    if(page.pwa == undefined){
                  		        this.local.new = true;
                  		        page.pwa = {name : page.form.name, shortName: page.form.name, backgroundColor: "#ffffff", themeColor: "#0cbbe7", "notAnonymous": true, "querystr": "", originalFormId: page.form._id, "c8o_view_type_pwa_document": true};
                  		        try{
                  		            var tryWallPaper = false;
                  		            let response = await this.c8o.callJson("fs://c8oforms_fs.get_attachment", "docid", page.form._id, "name", "thumbnail").async();
                  		            if(!(response["size"] > 0)){
                  		                tryWallPaper = true;
                                      }
                                      else{
                                          var reader = new FileReader();
                                          reader.readAsDataURL(response); 
                                          reader.onloadend = () => {
                                              var base64data: any = reader.result;                
                                              page.pwa.img = {data: base64data, url: this.router.sanitizer.bypassSecurityTrustUrl(base64data)};
                                              resolveGet();
                                          }
                                          
                                      }
                  		        }
                  		        catch(e){
                  		            tryWallPaper = true;
                  		        }
                  		        
                  		        if(tryWallPaper){
                  		            try{
                      		            let response2 = await this.c8o.callJson("fs://c8oforms_fs.get_attachment", "docid", this.form._id, "name", "wallpaper").async();
                      		            if(!(response2["size"] > 0)){
                      		                page.pwa.img = {url: ''assets/images/category.png''};
                                              this.local.updatedImg = true;
                                          }
                                          else{
                                              var reader = new FileReader();
                                              reader.readAsDataURL(response2); 
                                              reader.onloadend = () => {
                                                  var base64data: any = reader.result;                
                                                  page.pwa.img = {data: base64data, url: this.router.sanitizer.bypassSecurityTrustUrl(base64data)};
                                                  resolveGet();
                                              }
                                              return null;
                                          }
                  		            }
                      		        catch(e){
                      		            page.pwa.img = {url: ''assets/images/category.png''};
                      		            this.local.updatedImg = true;
                      		            resolveGet();
                                      }
                  		        
                  		    }
                  		    
                  		    }
                  		}).then(()=>{
                  		    resolve();
                  		});
                  '
      ↓SetPwaValues [ngx.components.UICustomAction-1603806229991]: 
        actionValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                		    if(props.parent.out != undefined){
                		        page.pwa = props.parent.out;
                		        this.resetImageCache(page.pwa._id+"/icon")
                		    }
                		    resolve();
                
    ↓ImportNamerLib [ngx.components.UICustomAction-1603812580074]: 
      actionValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              		    page.local.namer = namer;
              		    resolve();
              
      package_dependencies: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
              - com.twinsoft.convertigo.beans.common.XMLVector: 
                - java.lang.String: 
                  - ↑value: color-namer
                - java.lang.String: 
                  - ↑value: 1.4.0
      page_ts_imports: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
              - com.twinsoft.convertigo.beans.common.XMLVector: 
                - java.lang.String: 
                  - ↑value: '* as namer'
                - java.lang.String: 
                  - ↑value: color-namer
↓Footer [ngx.components.UIDynamicElement-1603878579067]: 
  beanData: '{"ionBean":"Footer"}'
  tagName: ion-footer
  ↓ToolBar [ngx.components.UIDynamicElement-1646912118447]: 
    beanData: '{"ionBean":"ToolBar"}'
    tagName: ion-toolbar
    ↓ButtonSet [ngx.components.UIDynamicElement-1603878579070]: 
      beanData: '{"ionBean":"ButtonSet","SetPosition":"plain:end"}'
      tagName: ion-buttons
      ↓Button [ngx.components.UIDynamicElement-1603878579091]: 
        beanData: |
          '{
           "ionBean": "Button",
           "IonColor": "plain:primary",
           "IonFill": "plain:solid"
          }'
        tagName: ion-button
        ↓Text [ngx.components.UIText-1603878579094]: 
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: 'script:this.translate.instant(this.navParams.data.header === true ? ''publish_and_generate'': ''generate_pwa'')'
        ↓Attr [ngx.components.UIAttribute-1603878579097]: 
          attrName: slot
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:right
        ↓Event [ngx.components.UIControlEvent-1603878579100]: 
          ↓Error_Handler [ngx.components.UIActionErrorEvent-1613729271767]: 
            ↓CustomAction [ngx.components.UICustomAction-1613729301298]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      		resolve({"canExec":false})
                      
          ↓CheckRequiredFields [ngx.components.UICustomAction-1613729989277]: 
            actionValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    '		let message = null;
                    		if(page["pwa"].name == ""){
                    	        message = page["translate"].instant("must_complete") + " "+ page["translate"].instant("name");
                    	    }
                    	    else if(page["pwa"].shortName == ""){
                    	        message = page["translate"].instant("must_complete") + " "+ page["translate"].instant("short_name");
                    	    }
                    	    else if(this.local.new && (page["pwa"].img == undefined || (page["pwa"].img.data == undefined && page["pwa"].img.blob == undefined))){
                    	        message = page["translate"].instant("must_complete_image_pwa")
                    	    }
                    		if(message != null){
                    			// calling showToastThatResolvesImmediately
                    			page["actionBeans"].CTS1613727468919(page, null, {"msg":message, "duration": 3000, "position": "bottom", "cssClass": "toastError"}, null);
                    			reject();
                    		}
                    		else{
                    			resolve();
                    		}
                    '
            ↓CloseModal [ngx.components.UIDynamicAction-1617014605287]: 
              beanData: '{"ionBean":"CloseModalAction"}'
              ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1617892839373]: 
                beanData: '{"ionBean":"InvokeAction"}'
                stack: C8Oforms.MobileApplication.Application.functionPublishAndCreatePwa
        ↓Style [ngx.components.UIStyle-1646912237100]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '/**
                   * Custom properties (sometimes referred to as CSS variables or cascading variables)
                   * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                   * They are set using custom property notation, e.g.: --main-color: black;
                   * and are accessed using the var() function, e.g.: color: var(--main-color);
                   * You can find below your component''s properties you can customize within the page.
                   * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                   * For more informations see https://ionicframework.com/docs/theming.
                  **/
                  //--background	//Background of the button
                  //--background-activated	//Background of the button when pressed. Note: setting this will interfere with the Material Design ripple
                  //--background-activated-opacity	//Opacity of the button when pressed
                  //--background-focused	//Background of the button when focused with the tab key
                  //--background-focused-opacity	//Opacity of the button when focused with the tab key
                  //--background-hover	//Background of the button on hover
                  //--background-hover-opacity	//Opacity of the background on hover
                  //--border-color	//Border color of the button
                  //--border-radius	//Border radius of the button
                  //--border-style	//Border style of the button
                  //--border-width	//Border width of the button
                  //--box-shadow	//Box shadow of the button
                  //--color	//Text color of the button
                  //--color-activated	//Text color of the button when pressed
                  //--color-focused	//Text color of the button when focused with the tab key
                  //--color-hover	//Text color of the button when hover
                  //--opacity	//Opacity of the button
                  //--padding-bottom	//Bottom padding of the button
                  //--padding-end	//Right padding if direction is left-to-right, and left padding if direction is right-to-left of the button
                  //--padding-start	//Left padding if direction is left-to-right, and right padding if direction is right-to-left of the button
                  //--padding-top	//Top padding of the button
                  //--ripple-color	//Color of the button ripple effect
                  //--transition	//Transition of the button
                  	color: var(--ion-color-white);
                  '
      ↓Style [ngx.components.UIStyle-1603878579109]: 
        isEnabled: false
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                'padding-right: 1vh;
                '