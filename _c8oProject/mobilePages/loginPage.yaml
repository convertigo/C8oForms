↑isRoot: true
comment: |
  Form login
  old segment:
  login/:formId/:page/:edit/:published/:d/:e
inAutoMenu: false
preloadPriority: high
scriptContent: 
  - xmlizable: 
    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
    - com.twinsoft.convertigo.beans.common.FormatedContent: 
      →: |
        '/*Begin_c8o_PageImport*/
        import { NativePageTransitions, NativeTransitionOptions } from ''@ionic-native/native-page-transitions'';
        /*End_c8o_PageImport*/
        /*Begin_c8o_PageDeclaration*/
        	public fr = false;
        	public en = true;
        	public es = false;
        	public selectedItem;
        	public show = false;
        	/*End_c8o_PageDeclaration*/
        /*Begin_c8o_PageConstructor*/
        		this.show = false;
        		this.local.formId = (this.navParams.get(''formId'') != undefined && this.navParams.get(''formId'') != ":formId") ? this.navParams.get(''formId'') : null;
        		this.local.page = (this.navParams.get(''page'') != undefined && this.navParams.get(''page'') != ":page") ? this.navParams.get(''page'') : null;
        		this.local.edit = (this.navParams.get(''edit'') != undefined && this.navParams.get(''edit'') != ":edit") ? this.navParams.get(''edit'') : null;
        		this.local.published = (this.navParams.get(''published'') != undefined && this.navParams.get(''published'') != ":published") ? this.navParams.get(''published'') : null;	
        		/*End_c8o_PageConstructor*/
        /*Begin_c8o_PageFunction*/
        	setLanguage(lang){
        		let translate = this.getInstance(TranslateService);
        		window["__c8o__translate"]["use"](lang);
        		this.fr = false;
        		this.en = false;
        		this.es = false;
        		this.selectedItem = lang;
        		this[lang] = true;
        		}
        	/*End_c8o_PageFunction*/
        '
segment: login/:formId/:page/:edit/:published/:d/:e
title: Title for loginPage1
↓PageEvent [ngx.components.UIPageEvent-1645091280389]: 
  viewEvent: onWillEnter
  ↓setSomeLocalsVariables [ngx.components.UICustomAction-1645721158146]: 
    actionValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            '		page.show = false;
            	    page.local.formId = (page.navParams.get(''formId'') != undefined && page.navParams.get(''formId'') != ":formId") ? page.navParams.get(''formId'') : null;
            	    page.local.page = (page.navParams.get(''page'') != undefined && page.navParams.get(''page'') != ":page") ? page.navParams.get(''page'') : null;
            	    page.local.edit = (page.navParams.get(''edit'') != undefined && page.navParams.get(''edit'') != ":edit") ? page.navParams.get(''edit'') : null;
            	    page.local.published = (page.navParams.get(''published'') != undefined && page.navParams.get(''published'') != ":published") ? page.navParams.get(''published'') : null;
            	    page.local.e = (page.navParams.get(''e'') != undefined && page.navParams.get(''e'') != ":e") ? page.navParams.get(''e'') : null;
            		page.local.d = (page.navParams.get(''d'') != undefined && page.navParams.get(''d'') != ":d") ? page.navParams.get(''d'') : null;
            		resolve();
            '
    package_dependencies: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
        - com.twinsoft.convertigo.beans.common.XMLVector: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
            - com.twinsoft.convertigo.beans.common.XMLVector: 
              - java.lang.String: 
                - ↑value: buffer
              - java.lang.String: 
                - ↑value: 6.0.3
    ↓CallGetLanguage [ngx.components.UIDynamicAction-1645091280392]: 
      beanData: |
        '{
         "ionBean": "CallSequenceAction",
         "requestable": "plain:C8Oforms_NGX.GetLanguage",
         "cachePolicy": "plain:priority_server",
         "cacheTtl": "plain:99999999",
         "noLoading": "plain:true"
        }'
      ↓IfOK [ngx.components.UIDynamicAction-1645091280398]: 
        beanData: '{"ionBean":"IfAction","condition":"script:stack[''CallGetLanguage''].out.response != ''ko''"}'
        ↓Log [ngx.components.UIDynamicAction-1645091280401]: 
          beanData: '{"ionBean":"LogAction","message":"script:''Profil is known, set default language to '' + stack[''CallGetLanguage''].out.response"}'
        ↓ChangeLanguage [ngx.components.UICustomAction-1645091280404]: 
          actionValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  		this.setLanguage(props.stack['CallGetLanguage'].out.response);
                  		this.tick();
                  		resolve(null);
                  
        ↓SetGlobal [ngx.components.UIDynamicAction-1645091280407]: 
          beanData: |
            '{
             "ionBean": "SetGlobalAction",
             "Property": "plain:language",
             "Value": "script:stack[''CallGetLanguage''].out.response"
            }'
      ↓email [ngx.components.UIControlVariable-1645094336723]: 
        comment: new variable
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:
    ↓SetGlobal [ngx.components.UIDynamicAction-1645091280419]: 
      beanData: |
        '{
         "ionBean": "SetGlobalAction",
         "Property": "plain:gridbackgroundcolor",
         "Value": "script:this.global?.platform?.name[''0''] != ''mobile'' ? ''#f9f9f9'':''#4a4a4a''"
        }'
    ↓getLocalAdValueAndPeformSomeImports [ngx.components.UICustomAction-1645091280422]: 
      actionValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              		try{
              			let data = window["localStorage"]["getItem"]('__c8o_forms__loginad');
              			if(data == "true"){
              			    this.local.loginad = true;
              			}
              		}
              		catch(e){
              			
              		}
              		resolve(null);
              
      package_dependencies: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
              - com.twinsoft.convertigo.beans.common.XMLVector: 
                - java.lang.String: 
                  - ↑value: whatwg-fetch
                - java.lang.String: 
                  - ↑value: 3.6.2
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
              - com.twinsoft.convertigo.beans.common.XMLVector: 
                - java.lang.String: 
                  - ↑value: '@fontsource/open-sans'
                - java.lang.String: 
                  - ↑value: 4.5.5
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
              - com.twinsoft.convertigo.beans.common.XMLVector: 
                - java.lang.String: 
                  - ↑value: '@fontsource/roboto'
                - java.lang.String: 
                  - ↑value: 4.5.3
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
              - com.twinsoft.convertigo.beans.common.XMLVector: 
                - java.lang.String: 
                  - ↑value: next-tick
                - java.lang.String: 
                  - ↑value: 1.1.0
    ↓CallSequence [ngx.components.UIDynamicAction-1645091280425]: 
      beanData: |
        '{
         "ionBean": "CallSequenceAction",
         "requestable": "plain:C8Oforms_NGX.getAvailableAuthModeForLogin",
         "cachePolicy": "plain:priority_server",
         "cacheTtl": "plain:99999999999999999",
         "noLoading": "plain:true"
        }'
      ↓CustomAction [ngx.components.UICustomAction-1645091280428]: 
        actionValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                		/*if(!(props.parent.out.GoogleClientID == undefined || props.parent.out.GoogleClientID == "")){
                		    this.local.continue = false;
                		    this.local.forceContinue = false;
                		}
                		else{
                	        this.local.continue = true;
                
                	        this.local.forceContinue = true;
                		}*/
                		if(props.parent.out.Identifier != null && props.parent.out.Identifier != ""){
                			this.local.identifier = props.parent.out.Identifier;
                		}
                		let anyOauth = false;
                		// if google oauth credentials exists display google login button
                		if(props.parent.out.google === true || props.parent.out.google == "true"){
                			//enable google login
                			page.local.google = true;
                			anyOauth = true;
                		}
                		// if xsoft oauth credentials exists display xsoft login button
                		if(props.parent.out.microsoft === true || props.parent.out.microsoft == "true"){
                			//enable xsoft login login
                			page.local.xsoft = true;
                			anyOauth = true;
                		}
                		// if user has never loggedin with this browser in ad set default ad value (check it or not)
                		if(window["localStorage"]["getItem"]('__c8o_forms__loginad') == undefined || window["localStorage"]["getItem"]('__c8o_forms__loginad') == ""){
                			this.local.loginad = props.parent.out.autoCheckAD === true || props.parent.out.autoCheckAD == "true";
                		}
                		// if ad credentials exists display login ad checkbox 
                		if(props.parent.out.AD === true || props.parent.out.AD == "true"){
                			page.local.ad = true;
                		}
                		else{
                			this.local.loginad = null;
                		}
                		// if hide passwort reset is set 
                		this.local.hidePasswordForgotten = props.parent.out.hidePasswordForgotten === true || props.parent.out.hidePasswordForgotten == "true";
                		
                		this.local.continue = this.local.forceContinue = !anyOauth;
                		resolve(null);
                
    ↓CallSequence1 [ngx.components.UIDynamicAction-1645091280431]: 
      beanData: |
        '{
         "ionBean": "CallSequenceAction",
         "requestable": "plain:lib_OAuth.GetOAuthCredentials",
         "cachePolicy": "plain:priority_server",
         "cacheTtl": "plain:99999999999999"
        }'
↓Content [ngx.components.UIDynamicElement-1645091280434]: 
  beanData: |
    '{
     "ionBean": "Content",
     "Padding": "plain:ion-no-padding",
     "Fullscreen": "plain:true"
    }'
  tagName: ion-content
  ↓Grid [ngx.components.UIDynamicElement-1645091280437]: 
    beanData: '{"ionBean":"Grid"}'
    tagName: ion-grid
    ↓GridRow [ngx.components.UIDynamicElement-1645091280440]: 
      beanData: '{"ionBean":"GridRow","FlexAlignement":"plain:ion-align-items-stretch"}'
      tagName: ion-row
      ↓Directive1 [ngx.components.UIControlDirective-1645091280443]: 
        directiveName: If
        directiveSource: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:this.show == false
        ↓GridCol [ngx.components.UIDynamicElement-1645091280446]: 
          beanData: |
            '{
             "ionBean": "GridCol",
             "SizeLg": "plain:6",
             "SizeMd": "plain:6",
             "SizeSm": "plain:12",
             "SizeXl": "plain:6",
             "SizeXs": "plain:12"
            }'
          tagName: ion-col
          ↓Style [ngx.components.UIStyle-1645091280449]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    '	--background: none;
                    	background-repeat: no-repeat;
                    	background-size: cover;
                    	background-position-x: center;
                    	background-position-y: center;
                    	// TODO
                     	background-image: url(''/assets/images/svg/tel/bg.svg'');
                     	z-index: auto;
                     	position: relative;
                     	
                    '
          ↓Grid [ngx.components.UIDynamicElement-1645091280452]: 
            beanData: '{"ionBean":"Grid"}'
            tagName: ion-grid
            ↓GridRow [ngx.components.UIDynamicElement-1645091280455]: 
              beanData: '{"ionBean":"GridRow","Height":"plain:10%"}'
              tagName: ion-row
              ↓Image [ngx.components.UIDynamicElement-1645091280458]: 
                beanData: '{"ionBean":"Image","url":"script:''assets\/images\/svg\/logo\/logo_convertigo_white.png''"}'
                selfClose: true
                tagName: img
                ↓Style [ngx.components.UIStyle-1645091280461]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          'position: absolute;
                           left: 0; 
                            right: 0; 
                            top: 10px;
                            margin-left: auto; 
                            margin-right: auto;
                          '
            ↓GridRow1 [ngx.components.UIDynamicElement-1645091280464]: 
              beanData: '{"ionBean":"GridRow","Height":"plain:80%"}'
              tagName: ion-row
              ↓SlidesContainer [ngx.components.UIDynamicElement-1645091280467]: 
                beanData: '{"ionBean":"Slides"}'
                tagName: ion-slides
                ↓SlideItem11 [ngx.components.UIDynamicElement-1645091280470]: 
                  beanData: '{"ionBean":"Slide"}'
                  tagName: ion-slide
                  ↓Image [ngx.components.UIDynamicElement-1645091280473]: 
                    beanData: '{"ionBean":"Image","url":"script:''assets\/images\/svg\/tel\/illus_tel_01.svg''"}'
                    selfClose: true
                    tagName: img
                    ↓Style [ngx.components.UIStyle-1645091280476]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '
                              max-height: 70vh !important;
                              height: 70vh ! important;
                              
                                  
                              '
                ↓SlideItem1 [ngx.components.UIDynamicElement-1645091280479]: 
                  beanData: '{"ionBean":"Slide"}'
                  tagName: ion-slide
                  ↓Image [ngx.components.UIDynamicElement-1645091280482]: 
                    beanData: '{"ionBean":"Image","url":"script:''assets\/images\/svg\/tel\/illus_tel_02.svg''"}'
                    selfClose: true
                    tagName: img
                    ↓Style3 [ngx.components.UIStyle-1645091280485]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '
                              max-height: 70vh !important;
                              height: 100vh ! important;
                              
                                  
                              '
                ↓SlideItem2 [ngx.components.UIDynamicElement-1645091280488]: 
                  beanData: '{"ionBean":"Slide"}'
                  tagName: ion-slide
                  ↓Image [ngx.components.UIDynamicElement-1645091280491]: 
                    beanData: '{"ionBean":"Image","url":"script:''assets\/images\/svg\/tel\/illus_tel_03.svg''"}'
                    selfClose: true
                    tagName: img
                    ↓Style [ngx.components.UIStyle-1645091280494]: 
                      isEnabled: false
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              'max-width: 100vw !important;
                              max-height: 100vh !important;
                              width: 100% !important;
                              height: 100vw ! important;
                              
                                  
                              '
                    ↓Style1 [ngx.components.UIStyle-1645091280497]: 
                      isEnabled: false
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              width:100%;
                                height:100%;
                                display:block;
                              
                    ↓Style2 [ngx.components.UIStyle-1645091280500]: 
                      isEnabled: false
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              'max-height: 80vw;
                              
                              '
                    ↓Style3 [ngx.components.UIStyle-1645091280503]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '
                              max-height: 70vh !important;
                              height: 100vh ! important;
                              
                                  
                              '
                ↓Style [ngx.components.UIStyle-1645091280506]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '/**
                           * Custom properties (sometimes referred to as CSS variables or cascading variables)
                           * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                           * They are set using custom property notation, e.g.: --main-color: black;
                           * and are accessed using the var() function, e.g.: color: var(--main-color);
                           * You can find below your component''s properties you can customize within the page.
                           * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                           * For more informations see https://ionicframework.com/docs/theming.
                          **/
                          //--bullet-background	//Background of the pagination bullets
                          //--bullet-background-active	//Background of the active pagination bullet
                          //--progress-bar-background	//Background of the pagination progress-bar
                          //--progress-bar-background-active	//Background of the active pagination progress-bar
                          //--scroll-bar-background	//Background of the pagination scroll-bar
                          //--scroll-bar-background-active	//Background of the active pagination scroll-bar
                          '
            ↓GridRow2 [ngx.components.UIDynamicElement-1645091280509]: 
              beanData: '{"ionBean":"GridRow","Height":"plain:10%"}'
              tagName: ion-row
              ↓GridCol [ngx.components.UIDynamicElement-1645091280512]: 
                beanData: '{"ionBean":"GridCol","Size":"plain:12"}'
                tagName: ion-col
                ↓Directive [ngx.components.UIControlDirective-1645091280515]: 
                  directiveName: If
                  directiveSource: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:window.screen.width < 768
                  ↓FormatLayout [ngx.components.UIDynamicAttr-1645091280518]: 
                    beanData: '{"ionBean":"FormatLayout","TextAlignment":"plain:ion-text-center"}'
                    comment: FormatLayout
                    tagName: div
                  ↓Button [ngx.components.UIDynamicElement-1645091280521]: 
                    beanData: '{"ionBean":"Button","IonColor":"plain:light"}'
                    tagName: ion-button
                    ↓Text [ngx.components.UIText-1645091280524]: 
                      i18n: true
                      textValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:Skip
                    ↓Style [ngx.components.UIStyle-1645091280527]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '
                                border-radius: 24px;
                                border: solid 1px #ffffff;
                              '
                    ↓Event [ngx.components.UIControlEvent-1645091280530]: 
                      ↓setVal [ngx.components.UICustomAction-1645091280533]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                		    page["show"] = true;
                                		    resolve();
                                
      ↓Directive [ngx.components.UIControlDirective-1645091280536]: 
        directiveName: If
        directiveSource: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:window.screen.width > 767 || this.show == true
        ↓GridCol1 [ngx.components.UIDynamicElement-1645091280539]: 
          beanData: |
            '{
             "ionBean": "GridCol",
             "SizeLg": "plain:6",
             "SizeMd": "plain:6",
             "SizeSm": "plain:12",
             "SizeXl": "plain:6",
             "SizeXs": "plain:12"
            }'
          tagName: ion-col
          ↓Style [ngx.components.UIStyle-1645091280542]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    '   	
                      height:100vh; 
                    	position: relative;
                    '
          ↓Div [ngx.components.UIDynamicElement-1645091280545]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓Style [ngx.components.UIStyle-1645091280548]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '	/*position: absolute;
                       	top: 50%;
                       	height: 50vh !important;
                       	transform: translateY(-50%);
                        	left: 5%; 
                        	right: 5%;*/
                        	
                        	
                      
                       	height:100vh;
                       	display: flex;
                        	margin-left: 5%; 
                        	margin-right: 5%;
                        	display: flex;
                        	flex-direction: column;
                      
                      	justify-content: center;
                        	position : relative;
                        
                        
                      
                      '
            ↓DivTextDescription [ngx.components.UIDynamicElement-1645091280557]: 
              beanData: '{"ionBean":"DivTag"}'
              tagName: div
              ↓Span [ngx.components.UIDynamicElement-1645091280560]: 
                beanData: '{"ionBean":"SpanTag"}'
                tagName: span
                ↓FormatLayout [ngx.components.UIDynamicAttr-1645091280563]: 
                  beanData: '{"ionBean":"FormatLayout","TextAlignment":"plain:ion-text-left"}'
                  comment: FormatLayout
                  tagName: div
                ↓Style [ngx.components.UIStyle-1645091280566]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          'font-size: 48px;
                          color: #0CBBE7;
                          '
                ↓Text [ngx.components.UIText-1645091280569]: 
                  i18n: true
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:titleLogin
              ↓Attr [ngx.components.UIAttribute-1645091280572]: 
                attrName: '[ngClass]'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:'styledivnormal'
              ↓Style2 [ngx.components.UIStyle-1645091280575]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        	margin-right:0px !important;
                        	margin-left:0px !important;
                        
              ↓Tag [ngx.components.UIElement-1645091280578]: 
                selfClose: true
                tagName: br
              ↓Span1 [ngx.components.UIDynamicElement-1645091280581]: 
                beanData: '{"ionBean":"SpanTag"}'
                tagName: span
                ↓FormatLayout1 [ngx.components.UIDynamicAttr-1645091280584]: 
                  beanData: '{"ionBean":"FormatLayout","TextAlignment":"plain:ion-text-left"}'
                  comment: FormatLayout
                  tagName: div
                ↓Text1 [ngx.components.UIText-1645091280587]: 
                  i18n: true
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:descLogin
                ↓Style1 [ngx.components.UIStyle-1645091280590]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          'font-size: 17px;
                          color: #4A4A4A;
                          '
            ↓DivBody [ngx.components.UIDynamicElement-1645091280593]: 
              beanData: '{"ionBean":"DivTag"}'
              tagName: div
              ↓Form [ngx.components.UIForm-1645091280596]: 
                identifier: form1645091280596
                ↓Event [ngx.components.UIControlEvent-1645091280599]: 
                  attrName: (ngSubmit)
                  eventName: onSubmit
                  ↓Finally_Handler [ngx.components.UIActionFinallyEvent-1645091280602]: 
                    ↓SetGlobal [ngx.components.UIDynamicAction-1645091280605]: 
                      beanData: |
                        '{
                         "ionBean": "SetGlobalAction",
                         "Property": "plain:doingLogin",
                         "Value": "script:false"
                        }'
                  ↓IfContinue [ngx.components.UIDynamicIf-1645091280608]: 
                    beanData: '{"ionBean":"IfElseAction","condition":"script:this.local.continue"}'
                    ↓SetGlobal [ngx.components.UIDynamicAction-1645091280611]: 
                      beanData: |
                        '{
                         "ionBean": "SetGlobalAction",
                         "Property": "plain:doingLogin",
                         "Value": "script:true"
                        }'
                    ↓IfBrowserNotSupported [ngx.components.UIDynamicIf-1645091280614]: 
                      beanData: '{"ionBean":"IfElseAction","condition":"script:page.global.__reserved_c8o_settings?.notsupported ||  page.global.__reserved_c8o_settings?.IndexedDBnotsupported"}'
                      ↓WindowAlertBrowserNotSupported [ngx.components.UICustomAction-1645091280617]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                		window.alert(this.translate.instant("brower_not_supported"));
                                		resolve();
                                
                      ↓Else_Handler [ngx.components.UIActionElseEvent-1645091280620]: 
                        ↓IfAD [ngx.components.UIDynamicIf-1645091280623]: 
                          beanData: '{"ionBean":"IfElseAction","condition":"script:this.local.loginad == true"}'
                          ↓LoginAd [ngx.components.UIDynamicAction-1645091280626]: 
                            beanData: |
                              '{
                               "ionBean": "CallSequenceAction",
                               "requestable": "plain:C8Oforms_NGX.LoginAD",
                               "cachePolicy": "plain:priority_server",
                               "cacheTtl": "plain:99999999999999999999"
                              }'
                            ↓IfElse [ngx.components.UIDynamicIf-1645091280629]: 
                              beanData: '{"ionBean":"IfElseAction","condition":"script:out.ok == ''true''"}'
                              ↓setValsRedirect [ngx.components.UICustomAction-1645091280632]: 
                                actionValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                      →: |
                                        '			if(window.navigator.onLine == false){
                                        		        this.c8o.session.user.name = props.stack.LoginAd.out.user;
                                        				// store credentials in sesion storage
                                        				window.sessionStorage.setItem(
                                        					''loggedInOffline'',
                                        					JSON.stringify(
                                        						{
                                        							email: props.stack.root.in.email,
                                        							password: props.stack.root.in.password,
                                        							type: "LoginAd"
                                        						}
                                        					)
                                        				);
                                        		    }
                                        		    let data= {};
                                        		    let pagex = "selectorPage";
                                        		    if(this.local.page != undefined && this.local.page != '':page''){
                                        		        pagex = this.local.page;
                                        		        switch(pagex){
                                        		        case "editorPage":
                                        		            if(this.local.formId != undefined){
                                        	                    data["formId"] = page.local.formId;
                                        	                }
                                        		            break;
                                        	            case "viewerPage":
                                        	                if(this.local.formId != undefined){
                                        	                    data["formId"] = page.local.formId;
                                        	                }
                                        	                if(this.local.edit != undefined){
                                        	                    data["edit"] = page.local.edit;
                                        	                }
                                        	                break;
                                        	            case "selectorPage":
                                        	                data["published"] = page.local.published;
                                                            break;
                                        	            case "linkPage":
                                        	                data["d"] = page.local.d;
                                        	                data["e"] = page.local.e;
                                                            
                                        		        }
                                        		        
                                        		    }
                                        		    page.routerProvider.setRoot(pagex, data, null)
                                        		resolve(null);
                                        '
                              ↓Else_Handler [ngx.components.UIActionElseEvent-1645091280635]: 
                                ↓getTranslate [ngx.components.UICustomAction-1645091280638]: 
                                  actionValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                        →: |
                                          		    const translateService = this.getInstance(TranslateService);
                                              		if(props.stack["LoginAd"].out.ok == "false2"){
                                              		    translateService.get('loginko2').subscribe(value => {
                                                              // value is our translated string
                                                              this.local['loginko'] = value;
                                                              resolve();
                                                          });
                                              		}
                                              		else{
                                              		    translateService.get('loginko').subscribe(value => {
                                                              // value is our translated string
                                                              this.local['loginko'] = value;
                                                              resolve();
                                                          });
                                              		}
                                          
                                  ↓Toast [ngx.components.UIDynamicAction-1645091280641]: 
                                    beanData: '{"ionBean":"ToastAction","message":"script:this.local[''loginko'']"}'
                            ↓secretL [ngx.components.UIControlVariable-1645091280644]: 
                              comment: new variable
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:this.global['__secretL']
                          ↓Else_Handler [ngx.components.UIActionElseEvent-1645091280647]: 
                            ↓Login [ngx.components.UIDynamicAction-1645091280650]: 
                              beanData: |
                                '{
                                 "ionBean": "CallSequenceAction",
                                 "requestable": "plain:C8Oforms_NGX.Login",
                                 "cachePolicy": "plain:priority_server",
                                 "cacheTtl": "plain:99999999999999999999"
                                }'
                              ↓IfElse [ngx.components.UIDynamicIf-1645091280653]: 
                                beanData: '{"ionBean":"IfElseAction","condition":"script:out.ok == ''true''"}'
                                ↓setValsRedirect [ngx.components.UICustomAction-1645091280656]: 
                                  actionValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                        →: |
                                          '		    if(window.navigator.onLine == false){
                                          		        this.c8o.session.user.name = props.stack.Login.out.user;
                                          				// store credentials in sesion storage
                                          				window.sessionStorage.setItem(
                                          					''loggedInOffline'',
                                          					JSON.stringify(
                                          						{
                                          							email: props.stack.root.in.email,
                                          							password: props.stack.root.in.password,
                                          							type: "Login"
                                          						}
                                          					)
                                          				);
                                          		    }
                                          		    let data= {};
                                          		    let pagex = "selectorPage";
                                          		    if(this.local.page != undefined && this.local.page != '':page''){
                                          		        pagex = this.local.page;
                                          		        switch(pagex){
                                          		        case "editorPage":
                                          		            if(this.local.formId != undefined){
                                          	                    data["formId"] = page.local.formId;
                                          	                }
                                          		            break;
                                          	            case "viewerPage":
                                          	                if(this.local.formId != undefined){
                                          	                    data["formId"] = page.local.formId;
                                          	                }
                                          	                if(this.local.edit != undefined){
                                          	                    data["edit"] = page.local.edit;
                                          	                }
                                          	                break;
                                          	            case "selectorPage":
                                          	                data["published"] = page.local.published;
                                                              break;
                                          	            case "linkPage":
                                          	                data["d"] = page.local.d;
                                          	                data["e"] = page.local.e;
                                                              
                                          		        }
                                          		        
                                          		    }
                                          		    page.routerProvider.setRoot(pagex, data, null)
                                          		resolve(null);
                                          '
                                ↓Else_Handler [ngx.components.UIActionElseEvent-1645091280659]: 
                                  ↓getTranslate [ngx.components.UICustomAction-1645091280662]: 
                                    actionValue: 
                                      - xmlizable: 
                                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                          →: |
                                            		;
                                            		let translateService = this.getInstance(TranslateService);
                                            		translateService.get('loginko').subscribe(
                                            		        value => {
                                            		          // value is our translated string
                                            		          this.local['loginko'] = value;
                                            		          resolve();
                                            		        }
                                            		      );
                                            
                                    ↓Toast [ngx.components.UIDynamicAction-1645091280665]: 
                                      beanData: '{"ionBean":"ToastAction","message":"script:this.local[''loginko'']"}'
                              ↓secretL [ngx.components.UIControlVariable-1645091280668]: 
                                comment: new variable
                                isEnabled: false
                                varValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                    - MobileSmartSourceType: script:this.global['__secretL']
                    ↓Else_Handler [ngx.components.UIActionElseEvent-1645091280671]: 
                      ↓setContinueTrue [ngx.components.UICustomAction-1645091280674]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                		    this.local.continue = true;
                                		    if(!this.local.forceContinue){
                                		        setTimeout(()=>{
                                	                page["pass"].setFocus()
                                	                //page["pass"]._elementRef.nativeElement.focus();
                                	            },50)
                                	            resolve();
                                		    }
                                
                ↓Div [ngx.components.UIDynamicElement-1645091280677]: 
                  beanData: '{"ionBean":"DivTag"}'
                  tagName: div
                  ↓email [ngx.components.UIDynamicElement-1645091280680]: 
                    beanData: '{"ionBean":"GenericItem"}'
                    tagName: ion-item
                    ↓Label [ngx.components.UIDynamicElement-1645091280683]: 
                      beanData: '{"ionBean":"Label","Position":"plain:floating"}'
                      tagName: ion-label
                      ↓Text [ngx.components.UIText-1645091280686]: 
                        i18n: true
                        textValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: 'script:this.local.identifier != undefined ? this.local.identifier : ''email'' | translate'
                      ↓Attr [ngx.components.UIAttribute-1645091280689]: 
                        attrName: 
                        attrValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: plain:ion-no-padding
                    ↓Event [ngx.components.UIControlEvent-1645091280692]: 
                      attrName: (change)
                      eventName: onChange
                      ↓CallGetLanguage [ngx.components.UIDynamicAction-1645091280695]: 
                        beanData: |
                          '{
                           "ionBean": "CallSequenceAction",
                           "requestable": "plain:C8Oforms_NGX.GetLanguage",
                           "threshold": "plain:10000000000"
                          }'
                        ↓email [ngx.components.UIControlVariable-1645091280698]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: source:{"filter":"Form","project":"C8Oforms_NGX","input":"","model":{"data":[{"priority":1645091280596,"identifier":"form1645091280596"}],"path":"","prefix":"","suffix":"","custom":"form1645091280596?.controls['email']?.value","useCustom":true}}
                        ↓IfOK [ngx.components.UIDynamicAction-1645091280701]: 
                          beanData: '{"ionBean":"IfAction","condition":"script:parent.out.response != ''ko''"}'
                          ↓Log [ngx.components.UIDynamicAction-1645091280704]: 
                            beanData: '{"ionBean":"LogAction","message":"script:''Profil is known, set default language to '' + stack[''CallGetLanguage''].out.response"}'
                          ↓ChangeLanguage [ngx.components.UICustomAction-1645091280707]: 
                            actionValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    		this.setLanguage(props.stack['CallGetLanguage'].out.response);
                                    		this.tick();
                                    		resolve();
                                    
                                    
                          ↓SetGlobal [ngx.components.UIDynamicAction-1645091280710]: 
                            beanData: |
                              '{
                               "ionBean": "SetGlobalAction",
                               "Property": "plain:language",
                               "Value": "script:stack[''CallGetLanguage''].out.response"
                              }'
                        ↓IfKO [ngx.components.UIDynamicAction-1645091280713]: 
                          beanData: '{"ionBean":"IfAction","condition":"script:parent.out.response == \"ko\""}'
                          ↓Log [ngx.components.UIDynamicAction-1645091280716]: 
                            beanData: '{"ionBean":"LogAction","message":"plain:Profil is not known"}'
                    ↓Style [ngx.components.UIStyle-1645091280719]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '	background-color: transparent;
                              '
                    ↓Attr2 [ngx.components.UIAttribute-1645091280722]: 
                      attrName: '[ngClass]'
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:'stylegenerictextnormal'
                      isEnabled: false
                    ↓TextInput [ngx.components.UIDynamicElement-1645091280725]: 
                      beanData: |
                        '{
                         "ionBean": "Input",
                         "ControlName": "plain:email",
                         "Debounce": "plain:0",
                         "Type": "plain:email"
                        }'
                      identifier: email
                      tagName: ion-input
                      ↓Style [ngx.components.UIStyle-1645091280728]: 
                        isEnabled: false
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                'position: static;
                                '
                      ↓Attr [ngx.components.UIAttribute-1645091280731]: 
                        attrName: 
                        attrValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: plain:autofocus
                      ↓Attr1 [ngx.components.UIAttribute-1645091280734]: 
                        attrName: 
                        attrValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: plain:ion-no-padding
                    ↓Attr [ngx.components.UIAttribute-1645091280737]: 
                      attrName: 
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:ion-no-padding
                  ↓Attr [ngx.components.UIAttribute-1645091280740]: 
                    attrName: '[ngClass]'
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'styledivnormal'
                    isEnabled: false
                  ↓Style [ngx.components.UIStyle-1645091280743]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            	--margin-right:0px !important;
                            	--margin-left:0px !important;
                            
                  ↓divVisibleForLoginButton [ngx.components.UIDynamicElement-1645091280746]: 
                    beanData: '{"ionBean":"DivTag"}'
                    tagName: div
                    ↓Attr [ngx.components.UIAttribute-1645091280749]: 
                      attrName: '[ngStyle]'
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: 'script:(this.local.continue || this.local.forceContinue) ? {''display'':''block''} : {''display'':''none''}'
                    ↓password [ngx.components.UIDynamicElement-1645091280752]: 
                      beanData: '{"ionBean":"GenericItem"}'
                      tagName: ion-item
                      ↓Label [ngx.components.UIDynamicElement-1645091280755]: 
                        beanData: '{"ionBean":"Label","Position":"plain:floating"}'
                        tagName: ion-label
                        ↓Text [ngx.components.UIText-1645091280758]: 
                          i18n: true
                          textValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:'password' | translate
                      ↓TextInput [ngx.components.UIDynamicElement-1645091280761]: 
                        beanData: |
                          '{
                           "ionBean": "Input",
                           "ControlName": "plain:password",
                           "Debounce": "plain:0",
                           "Type": "plain:password"
                          }'
                        identifier: pass
                        tagName: ion-input
                        ↓Attr [ngx.components.UIAttribute-1645091280764]: 
                          attrName: 
                          attrValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: plain:autofocus
                          isEnabled: false
                      ↓Style [ngx.components.UIStyle-1645091280767]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '	background-color: transparent;
                                '
                      ↓Attr2 [ngx.components.UIAttribute-1645091280770]: 
                        attrName: '[ngClass]'
                        attrValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:'stylegenerictextnormal'
                        isEnabled: false
                    ↓AD [ngx.components.UIDynamicElement-1645091280773]: 
                      beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                      tagName: ion-item
                      ↓Label [ngx.components.UIDynamicElement-1645091280776]: 
                        beanData: '{"ionBean":"Label"}'
                        tagName: ion-label
                        ↓Text [ngx.components.UIText-1645091280779]: 
                          i18n: true
                          textValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:'login_AD' | translate
                      ↓Style [ngx.components.UIStyle-1645091280782]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '	background-color: transparent;
                                	.item-inner{
                                		border-bottom: unset !important;
                                	}
                                	box-shadow: unset !important;
                                '
                      ↓Attr2 [ngx.components.UIAttribute-1645091280785]: 
                        attrName: '[ngClass]'
                        attrValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:'stylegenerictextnormal'
                        isEnabled: false
                      ↓CheckBox [ngx.components.UIDynamicElement-1645091280788]: 
                        beanData: |
                          '{
                           "ionBean": "CheckBox",
                           "ControlName": "plain:name1645091280788",
                           "SetPosition": "plain"
                          }'
                        tagName: ion-checkbox
                        ↓Attr [ngx.components.UIAttribute-1645091280791]: 
                          attrName: '[(ngModel)]'
                          attrValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:this.local.loginad
                        ↓Event [ngx.components.UIControlEvent-1645091280794]: 
                          attrName: (ngModelChange)
                          eventName: (ngModelChange)
                          ↓CustomAction [ngx.components.UICustomAction-1645091280797]: 
                            actionValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    		this.local.loginad = event;
                                    		window["localStorage"]["setItem"]('__c8o_forms__loginad', event);
                                    
                                    		resolve();
                                    
                      ↓Attr [ngx.components.UIAttribute-1645091280800]: 
                        attrName: '*ngIf'
                        attrValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: plain:this.local.ad == true
                    ↓FormatLayout [ngx.components.UIDynamicAttr-1645091280803]: 
                      beanData: '{"ionBean":"FormatLayout","TextAlignment":"plain:ion-text-center"}'
                      comment: FormatLayout
                      isEnabled: false
                      tagName: div
                    ↓SubmitButton1 [ngx.components.UIDynamicElement-1645091280806]: 
                      beanData: '{"ionBean":"SubmitButton","IonColor":"plain:btLight"}'
                      tagName: ion-button
                      ↓Text [ngx.components.UIText-1645091280809]: 
                        i18n: true
                        textValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:'login' | translate
                      ↓Style [ngx.components.UIStyle-1645091280812]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '	--border-radius: 24px;
                                	min-width:287px !important;
                                
                                '
                  ↓divVisibleForContinueButton [ngx.components.UIDynamicElement-1645091280815]: 
                    beanData: '{"ionBean":"DivTag"}'
                    tagName: div
                    ↓Attr [ngx.components.UIAttribute-1645091280818]: 
                      attrName: '[ngStyle]'
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: 'script:(!(this.local.continue || this.local.forceContinue)) ? {''display'':''block''} : {''display'':''none''}'
                    ↓FormatLayout [ngx.components.UIDynamicAttr-1645091280821]: 
                      beanData: '{"ionBean":"FormatLayout","TextAlignment":"plain:ion-text-center"}'
                      comment: FormatLayout
                      tagName: div
                    ↓SubmitButton [ngx.components.UIDynamicElement-1645091280824]: 
                      beanData: '{"ionBean":"SubmitButton","IonColor":"plain:btLight"}'
                      tagName: ion-button
                      ↓Style [ngx.components.UIStyle-1645091280827]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '	--border-radius: 24px;
                                	min-width:287px !important;
                                	margin-top: 30px;
                                '
                      ↓TextItem [ngx.components.UIDynamicElement-1645091280830]: 
                        beanData: '{"ionBean":"TextItem"}'
                        tagName: ion-text
                        ↓Text [ngx.components.UIText-1645091280833]: 
                          i18n: true
                          textValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: plain:Continue
                ↓Style [ngx.components.UIStyle-1645091280836]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '	ion-item {
                          	  --padding-start: 0px;
                          	}
                          '
              ↓Style [ngx.components.UIStyle-1645091280839]: 
              ↓Directive [ngx.components.UIControlDirective-1645091280842]: 
                directiveName: If
                directiveSource: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:!this.local.forceContinue && this.local.google == true && this.local.xsoft == true
                ↓FormatLayout [ngx.components.UIDynamicAttr-1645091280845]: 
                  beanData: |
                    '{
                     "ionBean": "FormatLayout",
                     "TextAlignment": "plain:ion-text-center",
                     "TextTransformation": "plain:ion-text-uppercase"
                    }'
                  comment: FormatLayout
                  tagName: div
                ↓FormatLayout1 [ngx.components.UIDynamicAttr-1645091280848]: 
                  beanData: '{"ionBean":"FormatLayout","TextAlignment":"plain:ion-text-center"}'
                  comment: FormatLayout
                  tagName: div
                ↓Div [ngx.components.UIDynamicElement-1645091280851]: 
                  beanData: '{"ionBean":"DivTag"}'
                  tagName: div
                  ↓Text [ngx.components.UIText-1645091280854]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:or
                  ↓FormatLayout [ngx.components.UIDynamicAttr-1645091280857]: 
                    beanData: |
                      '{
                       "ionBean": "FormatLayout",
                       "TextAlignment": "plain:ion-text-center",
                       "TextTransformation": "plain:ion-text-uppercase"
                      }'
                    selfClose: false
                ↓FormatLayout2 [ngx.components.UIDynamicAttr-1645091280860]: 
                  beanData: '{"ionBean":"FormatLayout","TextAlignment":"plain:ion-text-center"}'
                  comment: FormatLayout
                  tagName: div
                ↓DivLoginGoogle [ngx.components.UIDynamicElement-1645091281031]: 
                  beanData: '{"ionBean":"DivTag"}'
                  tagName: div
                  ↓ButtonGoogle [ngx.components.UIDynamicElement-1645091281034]: 
                    beanData: |
                      '{
                       "ionBean": "Button",
                       "IonColor": "plain:light",
                       "IconSlot": "plain:start"
                      }'
                    tagName: ion-button
                    ↓Style [ngx.components.UIStyle-1645091281037]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '/**
                               * Custom properties (sometimes referred to as CSS variables or cascading variables)
                               * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                               * They are set using custom property notation, e.g.: --main-color: black;
                               * and are accessed using the var() function, e.g.: color: var(--main-color);
                               * You can find below your component''s properties you can customize within the page.
                               * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                               * For more informations see https://ionicframework.com/docs/theming.
                              **/
                              //--background	//Background of the button
                              //--background-activated	//Background of the button when pressed. Note: setting this will interfere with the Material Design ripple
                              //--background-activated-opacity	//Opacity of the button when pressed
                              //--background-focused	//Background of the button when focused with the tab key
                              //--background-focused-opacity	//Opacity of the button when focused with the tab key
                              //--background-hover	//Background of the button on hover
                              //--background-hover-opacity	//Opacity of the background on hover
                              //--border-color	//Border color of the button
                              //--border-radius	//Border radius of the button
                              //--border-style	//Border style of the button
                              //--border-width	//Border width of the button
                              //--box-shadow	//Box shadow of the button
                              //--color	//Text color of the button
                              //--color-activated	//Text color of the button when pressed
                              //--color-focused	//Text color of the button when focused with the tab key
                              //--color-hover	//Text color of the button when hover
                              //--opacity	//Opacity of the button
                              //--padding-bottom	//Bottom padding of the button
                              //--padding-end	//Right padding if direction is left-to-right, and left padding if direction is right-to-left of the button
                              //--padding-start	//Left padding if direction is left-to-right, and right padding if direction is right-to-left of the button
                              //--padding-top	//Top padding of the button
                              //--ripple-color	//Color of the button ripple effect
                              //--transition	//Transition of the button
                              font-family: "Roboto";
                              min-width:287px !important;
                              --border-radius: 24px;
                              '
                    ↓Event [ngx.components.UIControlEvent-1645091281040]: 
                      ↓Finally_Handler [ngx.components.UIActionFinallyEvent-1645091281043]: 
                        ↓SetGlobal [ngx.components.UIDynamicAction-1645091281046]: 
                          beanData: |
                            '{
                             "ionBean": "SetGlobalAction",
                             "Property": "plain:doingLogin",
                             "Value": "script:false"
                            }'
                      ↓SetGlobal [ngx.components.UIDynamicAction-1645091281049]: 
                        beanData: |
                          '{
                           "ionBean": "SetGlobalAction",
                           "Property": "plain:doingLogin",
                           "Value": "script:true"
                          }'
                      ↓OAuthLogin [ngx.components.UIDynamicAction-1645091281052]: 
                        beanData: |
                          '{
                           "ionBean": "OAuthLoginAction",
                           "provider": "plain:openid",
                           "clientid": "source:{\"filter\":\"Sequence\",\"project\":\"C8Oforms_NGX\",\"input\":\"\",\"model\":{\"data\":[{\"sequence\":\"lib_OAuth.GetOAuthCredentials\",\"marker\":\"\"}],\"path\":\"?.GoogleClientID\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                           "scope": "plain:openid https:\/\/www.googleapis.com\/auth\/userinfo.email https:\/\/www.googleapis.com\/auth\/userinfo.profile",
                           "response_type": "plain:code",
                           "loginRequestable": "plain:lib_OAuth.loginGoogleWithCode",
                           "checkAccessTokenRequestable": "plain:lib_OAuth.checkAccessTokenGoogle",
                           "authorization_endpoint": "plain:https:\/\/accounts.google.com\/o\/oauth2\/v2\/auth",
                           "callbackurl": "plain:https:\/\/test-convertigo.convertigo.net\/convertigo\/projects\/lib_OAuth\/getTokenGoogle.html"
                          }'
                        ↓If [ngx.components.UIDynamicAction-1645091281055]: 
                          beanData: '{"ionBean":"IfAction","condition":"script:parent.out.decodedToken != undefined"}'
                          ↓CallSequence [ngx.components.UIDynamicAction-1645091281058]: 
                            beanData: '{"ionBean":"CallSequenceAction","requestable":"plain:C8Oforms_NGX.LoginGoogle"}'
                            ↓lang [ngx.components.UIControlVariable-1645091281061]: 
                              comment: new variable
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:this.global['__secretL']
                            ↓IfElse [ngx.components.UIDynamicIf-1645091281064]: 
                              beanData: '{"ionBean":"IfElseAction","condition":"script:out.ok == ''true''"}'
                              ↓setValsRedirect [ngx.components.UICustomAction-1645091281067]: 
                                actionValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                      →: |
                                        		    if(window.navigator.onLine == false){
                                        		        this.c8o.session.user.name = props.stack.Login.out.user;
                                        		    }
                                        		    let data= {};
                                        		    let pagex = "selectorPage";
                                        		    if(this.local.page != undefined && this.local.page != ':page'){
                                        		        pagex = this.local.page;
                                        		        switch(pagex){
                                        		        case "editorPage":
                                        		            if(this.local.formId != undefined){
                                        	                    data["formId"] = page.local.formId;
                                        	                }
                                        		            break;
                                        	            case "viewerPage":
                                        	                if(this.local.formId != undefined){
                                        	                    data["formId"] = page.local.formId;
                                        	                }
                                        	                if(this.local.edit != undefined){
                                        	                    data["edit"] = page.local.edit;
                                        	                }
                                        	                break;
                                        	            case "selectorPage":
                                        	                data["published"] = page.local.published;
                                                            break;
                                        	            case "linkPage":
                                        	                data["d"] = page.local.d;
                                        	                data["e"] = page.local.e;
                                                            
                                        		        }
                                        		        
                                        		    }
                                        		    page.routerProvider.setRoot(pagex, data, null)
                                        		resolve(null);
                                        
                              ↓Else_Handler [ngx.components.UIActionElseEvent-1645091281070]: 
                                ↓getTranslate [ngx.components.UICustomAction-1645091281073]: 
                                  actionValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                        →: |
                                          		;
                                          		let translateService = this.getInstance(TranslateService);
                                          		translateService.get('loginko').subscribe(
                                          		        value => {
                                          		          // value is our translated string
                                          		          this.local['loginko'] = value;
                                          		          resolve();
                                          		        }
                                          		      );
                                          
                                  ↓Toast [ngx.components.UIDynamicAction-1645091281076]: 
                                    beanData: '{"ionBean":"ToastAction","message":"script:this.local[''loginko'']"}'
                            ↓decodedToken [ngx.components.UIControlVariable-1645091281079]: 
                              comment: new variable
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:stack['OAuthLogin'].out.decodedToken
                            ↓name [ngx.components.UIControlVariable-1645091281082]: 
                              comment: new variable
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:stack['OAuthLogin'].out.object.given_name
                            ↓surname [ngx.components.UIControlVariable-1645091281085]: 
                              comment: new variable
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:stack['OAuthLogin'].out.object.family_name
                            ↓displayName [ngx.components.UIControlVariable-1645091281088]: 
                              comment: new variable
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:stack['OAuthLogin'].out.object.name
                            ↓picture [ngx.components.UIControlVariable-1645091281091]: 
                              comment: new variable
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:stack['OAuthLogin'].out.object.picture
                    ↓Icon [ngx.components.UIDynamicElement-1645634207642]: 
                      beanData: '{"ionBean":"Icon","IconSource":"plain:assets\/images\/svg\/login\/google-logo.svg"}'
                      tagName: ion-icon
                      ↓Style [ngx.components.UIStyle-1645634207645]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '	margin-right: 12px;
                                '
                    ↓Text [ngx.components.UIText-1645091281103]: 
                      i18n: true
                      textValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:Continue with Google
                  ↓FormatLayout [ngx.components.UIDynamicAttr-1645091281106]: 
                    beanData: '{"ionBean":"FormatLayout","TextAlignment":"plain:ion-text-center"}'
                    selfClose: false
                  ↓Style [ngx.components.UIStyle-1645091281109]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            'ion-button{
                              span{
                                text-align:left;
                                width:100%;
                              }
                            }
                            '
                ↓DivLoginXsoft [ngx.components.UIDynamicElement-1645091281112]: 
                  beanData: '{"ionBean":"DivTag"}'
                  tagName: div
                  ↓ButtonXsoft [ngx.components.UIDynamicElement-1645091281115]: 
                    beanData: '{"ionBean":"Button","IonColor":"plain:light"}'
                    tagName: ion-button
                    ↓Icon [ngx.components.UIDynamicElement-1645634088925]: 
                      beanData: '{"ionBean":"Icon","IconSource":"plain:assets\/images\/svg\/login\/microsoft-logo.svg"}'
                      tagName: ion-icon
                      ↓Style [ngx.components.UIStyle-1645634149188]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '	margin-right: 12px;
                                '
                    ↓Text [ngx.components.UIText-1645091281124]: 
                      i18n: true
                      textValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:Continue with Microsoft
                    ↓Style [ngx.components.UIStyle-1645091281127]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '/**
                               * Custom properties (sometimes referred to as CSS variables or cascading variables)
                               * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                               * They are set using custom property notation, e.g.: --main-color: black;
                               * and are accessed using the var() function, e.g.: color: var(--main-color);
                               * You can find below your component''s properties you can customize within the page.
                               * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                               * For more informations see https://ionicframework.com/docs/theming.
                              **/
                              //--background	//Background of the button
                              //--background-activated	//Background of the button when pressed. Note: setting this will interfere with the Material Design ripple
                              //--background-activated-opacity	//Opacity of the button when pressed
                              //--background-focused	//Background of the button when focused with the tab key
                              //--background-focused-opacity	//Opacity of the button when focused with the tab key
                              //--background-hover	//Background of the button on hover
                              //--background-hover-opacity	//Opacity of the background on hover
                              //--border-color	//Border color of the button
                              //--border-radius	//Border radius of the button
                              //--border-style	//Border style of the button
                              //--border-width	//Border width of the button
                              //--box-shadow	//Box shadow of the button
                              //--color	//Text color of the button
                              //--color-activated	//Text color of the button when pressed
                              //--color-focused	//Text color of the button when focused with the tab key
                              //--color-hover	//Text color of the button when hover
                              //--opacity	//Opacity of the button
                              //--padding-bottom	//Bottom padding of the button
                              //--padding-end	//Right padding if direction is left-to-right, and left padding if direction is right-to-left of the button
                              //--padding-start	//Left padding if direction is left-to-right, and right padding if direction is right-to-left of the button
                              //--padding-top	//Top padding of the button
                              //--ripple-color	//Color of the button ripple effect
                              //--transition	//Transition of the button
                              	font-family: "Roboto";
                              	--border-radius: 24px;
                              	min-width:287px !important;
                              '
                    ↓Event [ngx.components.UIControlEvent-1645091281130]: 
                      ↓Finally_Handler [ngx.components.UIActionFinallyEvent-1645091281133]: 
                        ↓SetGlobal [ngx.components.UIDynamicAction-1645091281136]: 
                          beanData: |
                            '{
                             "ionBean": "SetGlobalAction",
                             "Property": "plain:doingLogin",
                             "Value": "script:false"
                            }'
                      ↓SetGlobal [ngx.components.UIDynamicAction-1645091281139]: 
                        beanData: |
                          '{
                           "ionBean": "SetGlobalAction",
                           "Property": "plain:doingLogin",
                           "Value": "script:true"
                          }'
                      ↓OAuthLogin [ngx.components.UIDynamicAction-1645091281142]: 
                        beanData: |
                          '{
                           "ionBean": "OAuthLoginAction",
                           "clientid": "source:{\"filter\":\"Sequence\",\"project\":\"C8Oforms_NGX\",\"input\":\"listen([''lib_OAuth.GetOAuthCredentials''])?.AzureAdClientID\",\"model\":{\"data\":[{\"sequence\":\"lib_OAuth.GetOAuthCredentials\",\"marker\":\"\"}],\"path\":\"?.AzureAdClientID\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
                           "callbackurl": "plain:https:\/\/c8ocloud.convertigo.net\/convertigo\/projects\/lib_OAuth\/getToken.html"
                          }'
                        ↓CustomAction [ngx.components.UICustomAction-1645091281145]: 
                          actionValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  		console.log(props.parent.out);
                                  		resolve();
                                  
                        ↓If [ngx.components.UIDynamicAction-1645091281148]: 
                          beanData: '{"ionBean":"IfAction","condition":"script:parent.out.login == ''ok''"}'
                          ↓CallSequence [ngx.components.UIDynamicAction-1645091281151]: 
                            beanData: '{"ionBean":"CallSequenceAction","requestable":"plain:C8Oforms_NGX.LoginMicrosoft"}'
                            ↓lang [ngx.components.UIControlVariable-1645091281154]: 
                              comment: new variable
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:this.global['__secretL']
                            ↓IfElse [ngx.components.UIDynamicIf-1645091281157]: 
                              beanData: '{"ionBean":"IfElseAction","condition":"script:out.ok == ''true''"}'
                              ↓setValsRedirect [ngx.components.UICustomAction-1645091281160]: 
                                actionValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                      →: |
                                        		    if(window.navigator.onLine == false){
                                        		        this.c8o.session.user.name = props.stack.Login.out.user;
                                        		    }
                                        		    let data= {};
                                        		    let pagex = "selectorPage";
                                        		    if(this.local.page != undefined && this.local.page != ':page'){
                                        		        pagex = this.local.page;
                                        		        switch(pagex){
                                        		        case "editorPage":
                                        		            if(this.local.formId != undefined){
                                        	                    data["formId"] = page.local.formId;
                                        	                }
                                        		            break;
                                        	            case "viewerPage":
                                        	                if(this.local.formId != undefined){
                                        	                    data["formId"] = page.local.formId;
                                        	                }
                                        	                if(this.local.edit != undefined){
                                        	                    data["edit"] = page.local.edit;
                                        	                }
                                        	                break;
                                        	            case "selectorPage":
                                        	                data["published"] = page.local.published;
                                                            break;
                                        	            case "linkPage":
                                        	                data["d"] = page.local.d;
                                        	                data["e"] = page.local.e;
                                                            
                                        		        }
                                        		        
                                        		    }
                                        		    page.routerProvider.setRoot(pagex, data, null)
                                        		resolve(null);
                                        
                              ↓Else_Handler [ngx.components.UIActionElseEvent-1645091281163]: 
                                ↓getTranslate [ngx.components.UICustomAction-1645091281166]: 
                                  actionValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                        →: |
                                          		;
                                          		let translateService = this.getInstance(TranslateService);
                                          		translateService.get('loginko').subscribe(
                                          		        value => {
                                          		          // value is our translated string
                                          		          this.local['loginko'] = value;
                                          		          resolve();
                                          		        }
                                          		      );
                                          
                                  ↓Toast [ngx.components.UIDynamicAction-1645091281169]: 
                                    beanData: '{"ionBean":"ToastAction","message":"script:this.local[''loginko'']"}'
                            ↓decodedToken [ngx.components.UIControlVariable-1645091281172]: 
                              comment: new variable
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:stack['OAuthLogin'].out.authUser
                            ↓name [ngx.components.UIControlVariable-1645091281175]: 
                              comment: new variable
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:stack['OAuthLogin'].out.object.givenName
                            ↓surname [ngx.components.UIControlVariable-1645091281178]: 
                              comment: new variable
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:stack['OAuthLogin'].out.object.surname
                            ↓displayName [ngx.components.UIControlVariable-1645091281181]: 
                              comment: new variable
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:stack['OAuthLogin'].out.object.displayName
                  ↓FormatLayout [ngx.components.UIDynamicAttr-1645091281184]: 
                    beanData: '{"ionBean":"FormatLayout","TextAlignment":"plain:ion-text-center"}'
                    selfClose: false
            ↓DividerPasswordLost [ngx.components.UIDynamicElement-1645091281187]: 
              beanData: '{"ionBean":"DivTag"}'
              tagName: div
              ↓Style [ngx.components.UIStyle-1645091281190]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '	border-top: 1px solid #cecece;
                        	margin-left: auto;
                          	margin-right: auto;
                          	margin-top:20px;
                          	
                        	max-width:253px !important;
                        '
              ↓FormatLayout [ngx.components.UIDynamicAttr-1645091281193]: 
                beanData: '{"ionBean":"FormatLayout","TextAlignment":"plain:ion-text-center"}'
                comment: FormatLayout
                tagName: div
              ↓Tag [ngx.components.UIElement-1645091281196]: 
                tagName: a
                ↓Paragraph [ngx.components.UIDynamicElement-1645091281199]: 
                  beanData: '{"ionBean":"Paragraph"}'
                  tagName: p
                  ↓Text [ngx.components.UIText-1645091281202]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'forgotPassword' | translate
                ↓Style [ngx.components.UIStyle-1645091281205]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '/* Mot de passe oublié: */
                          font-family: Helvetica;
                          font-size: 12px;
                          color: #048EAE;
                          
                          }
                          .class1603722110002:hover{
                          	cursor:pointer;
                          '
                ↓Event [ngx.components.UIControlEvent-1645091281208]: 
                  ↓ModalPage [ngx.components.UIDynamicAction-1645091281211]: 
                    beanData: |
                      '{
                       "ionBean": "ModalAction",
                       "page": "plain:C8Oforms_NGX.MobileApplication.Application.resetPasswordPage",
                       "cssClass": "plain:alwaysFullScreen"
                      }'
              ↓Style1 [ngx.components.UIStyle-1645091281214]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        padding-bottom:20px;
                        
              ↓Attr [ngx.components.UIAttribute-1645091281217]: 
                attrName: '*ngIf'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:!this.local.hidePasswordForgotten
            ↓FormatLayout [ngx.components.UIDynamicAttr-1645091281220]: 
              beanData: |
                '{
                 "ionBean": "FormatLayout",
                 "FlexContainerAlignment": "plain:ion-justify-content-center",
                 "FlexItemAlignment": "plain:ion-align-self-auto"
                }'
              selfClose: false
          ↓DivMenuVersion [ngx.components.UIDynamicElement-1645091281223]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓Style [ngx.components.UIStyle-1645091281226]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '	position: absolute;
                          bottom: 0px;
                         
                      	float:right;
                      	padding-right: 10px;
                      	right:0;
                      '
            ↓DivMenuVersion [ngx.components.UIDynamicElement-1645091281229]: 
              beanData: '{"ionBean":"DivTag"}'
              tagName: div
              ↓Style [ngx.components.UIStyle-1645091281232]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '	//bottom: 0 !important;
                        
                        	
                        '
              ↓UseSharedComponent [ngx.components.UIUseShared-1645091281235]: 
                sharedcomponent: C8Oforms_NGX.MobileApplication.Application.menuVersion
  ↓Style [ngx.components.UIStyle-1645091281238]: 
    styleContent: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            position:relative;
            
↓Style [ngx.components.UIStyle-1645091281241]: 
  styleContent: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
      - com.twinsoft.convertigo.beans.common.FormatedContent: 
        →: |
          'ion-grid {
              height: 100%;
            }
          
            ion-row {
              height: 50%;
            }'