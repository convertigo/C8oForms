↑isRoot: true
comment: Form login
inAutoMenu: false
menu: C8Oforms.MobileApplication.Application.MenuLogin
preloadPriority: high
scriptContent: 
  - xmlizable: 
    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
    - com.twinsoft.convertigo.beans.common.FormatedContent: 
      →: |
        '/*Begin_c8o_PageImport*/
        import { NativePageTransitions, NativeTransitionOptions } from ''@ionic-native/native-page-transitions'';
        /*End_c8o_PageImport*/
        /*Begin_c8o_PageDeclaration*/
        	public fr = false;
        	public en = true;
        	public es = false;
        	public selectedItem;
        	public show = false;
        	/*End_c8o_PageDeclaration*/
        /*Begin_c8o_PageConstructor*/
        		this.show = false;
        		this.local.formId = (this.navParams.get(''formId'') != undefined && this.navParams.get(''formId'') != ":formId") ? this.navParams.get(''formId'') : null;
        		this.local.page = (this.navParams.get(''page'') != undefined && this.navParams.get(''page'') != ":page") ? this.navParams.get(''page'') : null;
        		this.local.edit = (this.navParams.get(''edit'') != undefined && this.navParams.get(''edit'') != ":edit") ? this.navParams.get(''edit'') : null;
        		this.local.published = (this.navParams.get(''published'') != undefined && this.navParams.get(''published'') != ":published") ? this.navParams.get(''published'') : null;
        		/*End_c8o_PageConstructor*/
        /*Begin_c8o_PageFunction*/
        	setLanguage(lang){
        		let translate = this.getInstance(TranslateService);
        		window["__c8o__translate"]["use"](lang);
        		this.fr = false;
        		this.en = false;
        		this.es = false;
        		this.selectedItem = lang;
        		this[lang] = true;
        		}
        	/*End_c8o_PageFunction*/
        '
segment: login/:formId/:page/:edit/:published/:d/:e
title: Login
↓PageEvent [mobile.components.UIPageEvent-1542897462582]: 
  ↓CallGetLanguage [mobile.components.UIDynamicAction-1542898360057]: 
    beanData: |
      '{
       "ionBean": "CallSequenceAction",
       "requestable": "plain:C8Oforms.GetLanguage",
       "timeout": "plain:5000",
       "noLoading": "plain:true"
      }'
    ↓email [mobile.components.UIControlVariable-1542898374524]: 
      varValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
          - MobileSmartSourceType: script:this.form1558534086484.value.email
    ↓IfOK [mobile.components.UIDynamicAction-1542898490964]: 
      beanData: '{"ionBean":"IfAction","condition":"script:stack[''CallGetLanguage''].out.response != ''ko''"}'
      ↓Log [mobile.components.UIDynamicAction-1542898490967]: 
        beanData: '{"ionBean":"LogAction","message":"script:''Profil is known, set default language to '' + stack[''CallGetLanguage''].out.response"}'
      ↓ChangeLanguage [mobile.components.UICustomAction-1542899189148]: 
        actionValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                		this.setLanguage(props.stack['CallGetLanguage'].out.response);
                		this.tick();
                		resolve();
                
      ↓SetGlobal [mobile.components.UIDynamicAction-1542901782548]: 
        beanData: |
          '{
           "ionBean": "SetGlobalAction",
           "Property": "plain:language",
           "Value": "script:stack[''CallGetLanguage''].out.response"
          }'
    ↓IfKO [mobile.components.UIDynamicAction-1542898428005]: 
      beanData: '{"ionBean":"IfAction","condition":"script:stack[''CallGetLanguage''].out.response == \"ko\""}'
      isEnabled: false
      ↓Log [mobile.components.UIDynamicAction-1542898455469]: 
        beanData: '{"ionBean":"LogAction","message":"plain:Profil is not known, set default language to english"}'
      ↓ChangeLanguage [mobile.components.UICustomAction-1572112510184]: 
        actionValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                		this.setLanguage('en');
                		this.tick();
                		resolve();
                
  ↓SetGlobal [mobile.components.UIDynamicAction-1567672606828]: 
    beanData: |
      '{
       "ionBean": "SetGlobalAction",
       "Property": "plain:gridbackgroundcolor",
       "Value": "script:this.global?.platform?.name[''0''] != ''mobile'' ? ''#f9f9f9'':''#4a4a4a''"
      }'
  ↓getLocalAdValue [mobile.components.UICustomAction-1582638545049]: 
    actionValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            		let data = window["localStorage"]["getItem"]('__c8o_forms__loginad');
            		if(data == "true"){
            		    this.local.loginad = true;
            		}
            		resolve();
            
  ↓CallSequence [mobile.components.UIDynamicAction-1602767162049]: 
    beanData: |
      '{
       "ionBean": "CallSequenceAction",
       "requestable": "plain:C8Oforms.getAvailableAuthModeForLogin",
       "noLoading": "plain:true"
      }'
    ↓CustomAction [mobile.components.UICustomAction-1603722087862]: 
      actionValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              		/*if(!(props.parent.out.GoogleClientID == undefined || props.parent.out.GoogleClientID == "")){
              		    this.local.continue = false;
              		    this.local.forceContinue = false;
              		}
              		else{
              	        this.local.continue = true;
              
              	        this.local.forceContinue = true;
              		}*/
              		let anyOauth = false;
              		// if google oauth credentials exists display google login button
              		if(props.parent.out.google === true || props.parent.out.google == "true"){
              			//enable google login
              			page.local.google = true;
              			anyOauth = true;
              		}
              		// if xsoft oauth credentials exists display xsoft login button
              		if(props.parent.out.microsoft === true || props.parent.out.microsoft == "true"){
              			//enable xsoft login login
              			page.local.xsoft = true;
              			anyOauth = true;
              		}
              		// if user has never loggedin with this browser in ad set default ad value (check it or not)
              		if(window["localStorage"]["getItem"]('__c8o_forms__loginad') == undefined || window["localStorage"]["getItem"]('__c8o_forms__loginad') == ""){
              			this.local.loginad = props.parent.out.autoCheckAD === true || props.parent.out.autoCheckAD == "true";
              		}
              		// if ad credentials exists display login ad checkbox 
              		if(props.parent.out.AD === true || props.parent.out.microsoft == "true"){
              			page.local.ad = true;
              		}
              		else{
              			this.local.loginad = null;
              		}
              		// if hide passwort reset is set 
              		this.local.hidePasswordForgotten = props.parent.out.hidePasswordForgotten === true || props.parent.out.hidePasswordForgotten == "true";
              		
              		this.local.continue = this.local.forceContinue = !anyOauth;
              		resolve();
              
  ↓CallSequence1 [mobile.components.UIDynamicAction-1621355323624]: 
    beanData: |
      '{
       "ionBean": "CallSequenceAction",
       "requestable": "plain:lib_OAuth.GetOAuthCredentials",
       "noLoading": "plain:true"
      }'
↓Content [mobile.components.UIDynamicElement-1558448212132]: 
  beanData: |
    '{
     "ionBean": "Content",
     "IonPadding": "plain:false",
     "Fullscreen": "plain:true"
    }'
  tagName: ion-content
  ↓Grid [mobile.components.UIDynamicElement-1558448224950]: 
    beanData: |
      '{
       "ionBean": "Grid",
       "Height": "plain:height:100%",
       "NoPadding": "plain:true"
      }'
    tagName: ion-grid
    ↓GridRow [mobile.components.UIDynamicElement-1558448241607]: 
      beanData: |
        '{
         "ionBean": "GridRow",
         "Height": "plain:height:100%",
         "AlignItemsStrech": "plain:align-items-stretch"
        }'
      tagName: ion-row
      ↓Directive1 [mobile.components.UIControlDirective-1559050692194]: 
        directiveName: If
        directiveSource: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
            - MobileSmartSourceType: script:this.show == false
        ↓GridCol [mobile.components.UIDynamicElement-1558448245298]: 
          beanData: |
            '{
             "ionBean": "GridCol",
             "ColumnsXSmall": "plain:12",
             "ColumnsSmall": "plain:12",
             "ColumnsMedium": "plain:6",
             "ColumnsLarge": "plain:6",
             "ColumnsXLarge": "plain:6"
            }'
          tagName: ion-col
          ↓Style [mobile.components.UIStyle-1558449926270]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    '	background-repeat: no-repeat;
                    	background-size: cover;
                    	background-position-x: center;
                    	background-position-y: center;
                     	background-image: url(''../assets/images/svg/tel/bg.svg'');
                     	z-index: auto;
                     	position: relative;
                    '
          ↓Grid [mobile.components.UIDynamicElement-1559037047535]: 
            beanData: '{"ionBean":"Grid"}'
            tagName: ion-grid
            ↓GridRow [mobile.components.UIDynamicElement-1559037055859]: 
              beanData: '{"ionBean":"GridRow","Height":"plain:height:10%"}'
              tagName: ion-row
              ↓Image [mobile.components.UIDynamicElement-1559037146270]: 
                beanData: '{"ionBean":"Image","url":"script:''assets\/images\/svg\/logo\/logo_convertigo_white.png''"}'
                selfClose: true
                tagName: img
                ↓Style [mobile.components.UIStyle-1559037146273]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          'position: absolute;
                           left: 0; 
                            right: 0; 
                            top: 10px;
                            margin-left: auto; 
                            margin-right: auto;
                          '
            ↓GridRow1 [mobile.components.UIDynamicElement-1559037057752]: 
              beanData: '{"ionBean":"GridRow","Height":"plain:height:80%"}'
              tagName: ion-row
              ↓SlidesContainer [mobile.components.UIDynamicElement-1559037159032]: 
                beanData: |
                  '{
                   "ionBean": "Slides",
                   "AutoPlay": "plain:4000",
                   "Zoom": "plain:true",
                   "Loop": "plain:true"
                  }'
                tagName: ion-slides
                ↓SlideItem11 [mobile.components.UIDynamicElement-1559049539150]: 
                  beanData: '{"ionBean":"Slide"}'
                  tagName: ion-slide
                  ↓Image [mobile.components.UIDynamicElement-1559049539153]: 
                    beanData: '{"ionBean":"Image","url":"script:''assets\/images\/svg\/tel\/illus_tel_01.svg''"}'
                    selfClose: true
                    tagName: img
                    ↓Style [mobile.components.UIStyle-1559049539156]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '
                              max-height: 70vh !important;
                              height: 70vh ! important;
                              
                                  
                              '
                ↓SlideItem1 [mobile.components.UIDynamicElement-1559037159062]: 
                  beanData: '{"ionBean":"Slide"}'
                  tagName: ion-slide
                  ↓Image [mobile.components.UIDynamicElement-1559037159065]: 
                    beanData: '{"ionBean":"Image","url":"script:''assets\/images\/svg\/tel\/illus_tel_02.svg''"}'
                    selfClose: true
                    tagName: img
                    ↓Style3 [mobile.components.UIStyle-1559046739008]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '
                              max-height: 70vh !important;
                              height: 100vh ! important;
                              
                                  
                              '
                ↓SlideItem2 [mobile.components.UIDynamicElement-1559037159077]: 
                  beanData: '{"ionBean":"Slide"}'
                  tagName: ion-slide
                  ↓Image [mobile.components.UIDynamicElement-1559037159080]: 
                    beanData: '{"ionBean":"Image","url":"script:''assets\/images\/svg\/tel\/illus_tel_03.svg''"}'
                    selfClose: true
                    tagName: img
                    ↓Style [mobile.components.UIStyle-1559037159083]: 
                      isEnabled: false
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              'max-width: 100vw !important;
                              max-height: 100vh !important;
                              width: 100% !important;
                              height: 100vw ! important;
                              
                                  
                              '
                    ↓Style1 [mobile.components.UIStyle-1559037159086]: 
                      isEnabled: false
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              width:100%;
                                height:100%;
                                display:block;
                              
                    ↓Style2 [mobile.components.UIStyle-1559037159089]: 
                      isEnabled: false
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              'max-height: 80vw;
                              
                              '
                    ↓Style3 [mobile.components.UIStyle-1559046743615]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '
                              max-height: 70vh !important;
                              height: 100vh ! important;
                              
                                  
                              '
                ↓Style [mobile.components.UIStyle-1559037159092]: 
            ↓GridRow2 [mobile.components.UIDynamicElement-1559037059433]: 
              beanData: '{"ionBean":"GridRow","Height":"plain:height:10%"}'
              tagName: ion-row
              ↓GridCol [mobile.components.UIDynamicElement-1559046973598]: 
                beanData: '{"ionBean":"GridCol","Columns":"plain:12"}'
                tagName: ion-col
                ↓Directive [mobile.components.UIControlDirective-1559046793209]: 
                  directiveName: If
                  directiveSource: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:window.screen.width < 768
                  ↓TextFormat [mobile.components.UIDynamicElement-1559046812590]: 
                    beanData: '{"ionBean":"TextFormat","TextCenter":"plain:text-center"}'
                    tagName: div
                    ↓Button [mobile.components.UIDynamicElement-1559046793212]: 
                      beanData: |
                        '{
                         "ionBean": "Button",
                         "IonColor": "plain:light",
                         "IonOutline": "plain:outline"
                        }'
                      tagName: button
                      ↓Text [mobile.components.UIText-1559046793215]: 
                        textValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                            - MobileSmartSourceType: plain:Skip
                      ↓Style [mobile.components.UIStyle-1559046793218]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '
                                  border-radius: 24px;
                                  border: solid 1px #ffffff;
                                '
                      ↓Event [mobile.components.UIControlEvent-1559050802032]: 
                        attrName: (click)
                        ↓setVal [mobile.components.UICustomAction-1559050810244]: 
                          actionValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  		    page["show"] = true;
                                  		    resolve();
                                  
      ↓Directive [mobile.components.UIControlDirective-1559035790653]: 
        directiveName: If
        directiveSource: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
            - MobileSmartSourceType: script:window.screen.width > 767 || this.show == true
        ↓GridCol1 [mobile.components.UIDynamicElement-1558448247454]: 
          beanData: |
            '{
             "ionBean": "GridCol",
             "ColumnsXSmall": "plain:12",
             "ColumnsSmall": "plain:12",
             "ColumnsMedium": "plain:6",
             "ColumnsLarge": "plain:6",
             "ColumnsXLarge": "plain:6"
            }'
          tagName: ion-col
          ↓Style [mobile.components.UIStyle-1602835922097]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                       	
                      height:100vh; 
                    
                    
          ↓Footer [mobile.components.UIDynamicElement-1602840537878]: 
            beanData: '{"ionBean":"Footer"}'
            isEnabled: false
            tagName: ion-footer
            ↓DivMenuVersion [mobile.components.UIDynamicElement-1602834484461]: 
              beanData: '{"ionBean":"DivTag"}'
              tagName: div
              ↓Style [mobile.components.UIStyle-1602834484464]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '	/*position: absolute;
                        	bottom: 0;
                        	right: 1vw; */
                        	p{
                        		margin-top: 0 !important;
                        		margin-bottom: 0 !important;
                        	}
                        '
              ↓UseSharedComponent [mobile.components.UIUseShared-1602834484467]: 
                sharedcomponent: C8Oforms.MobileApplication.Application.menuVersion
              ↓Paragraph [mobile.components.UIDynamicElement-1602834498398]: 
                beanData: '{"ionBean":"Paragraph"}'
                isEnabled: false
                tagName: p
                ↓Text [mobile.components.UIText-1602834506761]: 
          ↓Div [mobile.components.UIDynamicElement-1603722109561]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓Style [mobile.components.UIStyle-1603722109564]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '	/*position: absolute;
                       	top: 50%;
                       	height: 50vh !important;
                       	transform: translateY(-50%);
                        	left: 5%; 
                        	right: 5%;*/
                        	
                        	
                      
                       	height:100vh;
                       	display: flex;
                        	margin-left: 5%; 
                        	margin-right: 5%;
                        	display: flex;
                        	flex-direction: column;
                      
                      	justify-content: center;
                        	position : relative;
                        
                        
                      
                      '
            ↓Div [mobile.components.UIDynamicElement-1603722109567]: 
              beanData: '{"ionBean":"DivTag"}'
              tagName: div
              ↓Style [mobile.components.UIStyle-1603722109570]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        	flex-grow:1;
                        
            ↓DivTextDescription [mobile.components.UIDynamicElement-1603722109573]: 
              beanData: '{"ionBean":"DivTag"}'
              tagName: div
              ↓TextFormatTitleLogin [mobile.components.UIDynamicElement-1603722109576]: 
                beanData: '{"ionBean":"TextFormat","TextLeft":"plain:text-left"}'
                tagName: div
                ↓Text [mobile.components.UIText-1603722109579]: 
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:'titleLogin' | translate
                ↓Style [mobile.components.UIStyle-1603722109582]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          'font-family: Helvetica;
                          font-size: 48px;
                          color: #0CBBE7;
                          '
              ↓Tag [mobile.components.UIElement-1603722109585]: 
                selfClose: true
                tagName: br
              ↓TextFormatDescriptionLogin [mobile.components.UIDynamicElement-1603722109588]: 
                beanData: '{"ionBean":"TextFormat","TextLeft":"plain:text-left"}'
                tagName: div
                ↓Text [mobile.components.UIText-1603722109591]: 
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:'descLogin' | translate
                ↓Style [mobile.components.UIStyle-1603722109594]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          'font-family: Helvetica;
                          font-size: 17px;
                          color: #4A4A4A;
                          '
              ↓Attr [mobile.components.UIAttribute-1603722109597]: 
                attrName: '[ngClass]'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:'styledivnormal'
              ↓Style [mobile.components.UIStyle-1603722109600]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        	margin-right:0px !important;
                        	margin-left:0px !important;
                        
            ↓DivBody [mobile.components.UIDynamicElement-1603722109603]: 
              beanData: '{"ionBean":"DivTag"}'
              tagName: div
              ↓Form [mobile.components.UIForm-1603722109606]: 
                ↓Event [mobile.components.UIControlEvent-1603722109609]: 
                  attrName: (ngSubmit)
                  eventName: onSubmit
                  ↓IfContinue [mobile.components.UIDynamicIf-1603722109612]: 
                    beanData: '{"ionBean":"IfElseAction","condition":"script:this.local.continue"}'
                    ↓IfBrowserNotSupported [mobile.components.UIDynamicIf-1603722109615]: 
                      beanData: '{"ionBean":"IfElseAction","condition":"script:this.local[''notsupported''] == true"}'
                      ↓WindowAlertBrowserNotSupported [mobile.components.UICustomAction-1603722109618]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                		window.alert(this.translate.instant("brower_not_supported"));
                                		resolve();
                                
                      ↓Else_Handler [mobile.components.UIActionElseEvent-1603722109621]: 
                        ↓IfAD [mobile.components.UIDynamicIf-1603722109624]: 
                          beanData: '{"ionBean":"IfElseAction","condition":"script:this.local.loginad == true"}'
                          ↓LoginAd [mobile.components.UIDynamicAction-1603722109627]: 
                            beanData: |
                              '{
                               "ionBean": "CallSequenceAction",
                               "requestable": "plain:C8Oforms.LoginAD",
                               "cachePolicy": "plain:priority_server",
                               "cacheTtl": "plain:99999999999999999999"
                              }'
                            ↓IfElse [mobile.components.UIDynamicIf-1603722109630]: 
                              beanData: '{"ionBean":"IfElseAction","condition":"script:out.ok == ''true''"}'
                              ↓setValsRedirect [mobile.components.UICustomAction-1603722109633]: 
                                actionValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                      →: |
                                        		    let data= {};
                                        		    let pagex = "selectorPage";
                                        		    if(this.local.page != undefined && this.local.page != ':page'){
                                        		        pagex = this.local.page;
                                        		        switch(pagex){
                                        		        case "editorPage":
                                        		            if(this.local.formId != undefined){
                                        	                    data["formId"] = page.local.formId;
                                        	                }
                                        		            break;
                                        	            case "viewerPage":
                                        	                if(this.local.formId != undefined){
                                        	                    data["formId"] = page.local.formId;
                                        	                }
                                        	                if(this.local.edit != undefined){
                                        	                    data["edit"] = page.local.edit;
                                        	                }
                                        	                break;
                                        	            case "selectorPage":
                                        	                data["published"] = page.local.published;
                                                            break;
                                        	            case "linkPage":
                                        	                data["d"] = page.local.d;
                                        	                data["e"] = page.local.e;
                                                            
                                        		        }
                                        		        
                                        		    }
                                        		    
                                        		    page.routerProvider.setRoot(pagex, data, null)
                                        		resolve();
                                        
                              ↓Else_Handler [mobile.components.UIActionElseEvent-1603722109636]: 
                                ↓getTranslate [mobile.components.UICustomAction-1603722109639]: 
                                  actionValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                        →: |
                                          		    const translateService = this.getInstance(TranslateService);
                                              		if(props.stack["LoginAd"].out.ok == "false2"){
                                              		    translateService.get('loginko2').subscribe(value => {
                                                              // value is our translated string
                                                              this.local['loginko'] = value;
                                                              resolve();
                                                          });
                                              		}
                                              		else{
                                              		    translateService.get('loginko').subscribe(value => {
                                                              // value is our translated string
                                                              this.local['loginko'] = value;
                                                              resolve();
                                                          });
                                              		}
                                          
                                  ↓Toast [mobile.components.UIDynamicAction-1603722109642]: 
                                    beanData: '{"ionBean":"ToastAction","message":"script:this.local[''loginko'']"}'
                            ↓secretL [mobile.components.UIControlVariable-1603722109645]: 
                              comment: new variable
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:this.global['__secretL']
                          ↓Else_Handler [mobile.components.UIActionElseEvent-1603722109648]: 
                            ↓Login [mobile.components.UIDynamicAction-1603722109651]: 
                              beanData: |
                                '{
                                 "ionBean": "CallSequenceAction",
                                 "requestable": "plain:C8Oforms.Login",
                                 "cachePolicy": "plain:priority_server",
                                 "cacheTtl": "plain:99999999999999999999"
                                }'
                              ↓IfElse [mobile.components.UIDynamicIf-1603722109654]: 
                                beanData: '{"ionBean":"IfElseAction","condition":"script:out.ok == ''true''"}'
                                ↓setValsRedirect [mobile.components.UICustomAction-1603722109657]: 
                                  actionValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                        →: |
                                          		    if(window.navigator.onLine == false){
                                          		        this.c8o.session.user.name = props.stack.Login.out.user;
                                          		    }
                                          		    let data= {};
                                          		    let pagex = "selectorPage";
                                          		    if(this.local.page != undefined && this.local.page != ':page'){
                                          		        pagex = this.local.page;
                                          		        switch(pagex){
                                          		        case "editorPage":
                                          		            if(this.local.formId != undefined){
                                          	                    data["formId"] = page.local.formId;
                                          	                }
                                          		            break;
                                          	            case "viewerPage":
                                          	                if(this.local.formId != undefined){
                                          	                    data["formId"] = page.local.formId;
                                          	                }
                                          	                if(this.local.edit != undefined){
                                          	                    data["edit"] = page.local.edit;
                                          	                }
                                          	                break;
                                          	            case "selectorPage":
                                          	                data["published"] = page.local.published;
                                                              break;
                                          	            case "linkPage":
                                          	                data["d"] = page.local.d;
                                          	                data["e"] = page.local.e;
                                                              
                                          		        }
                                          		        
                                          		    }
                                          		    
                                          		    page.routerProvider.setRoot(pagex, data, null)
                                          		resolve();
                                          
                                ↓Else_Handler [mobile.components.UIActionElseEvent-1603722109660]: 
                                  ↓getTranslate [mobile.components.UICustomAction-1603722109663]: 
                                    actionValue: 
                                      - xmlizable: 
                                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                          →: |
                                            		page.c8o.log.debug(event ? event.toString():'no event');
                                            		let translateService = this.getInstance(TranslateService);
                                            		translateService.get('loginko').subscribe(
                                            		        value => {
                                            		          // value is our translated string
                                            		          this.local['loginko'] = value;
                                            		          resolve();
                                            		        }
                                            		      );
                                            
                                    ↓Toast [mobile.components.UIDynamicAction-1603722109666]: 
                                      beanData: '{"ionBean":"ToastAction","message":"script:this.local[''loginko'']"}'
                              ↓secretL [mobile.components.UIControlVariable-1603722109669]: 
                                comment: new variable
                                isEnabled: false
                                varValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                                    - MobileSmartSourceType: script:this.global['__secretL']
                    ↓Else_Handler [mobile.components.UIActionElseEvent-1603722109672]: 
                      ↓setContinueTrue [mobile.components.UICustomAction-1603722109675]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                		    this.local.continue = true;
                                		    if(!this.local.forceContinue){
                                		        setTimeout(()=>{
                                	                page["pass"]._elementRef.nativeElement.focus();
                                	            },50)
                                	            resolve();
                                		    }
                                
                ↓Div [mobile.components.UIDynamicElement-1603722109678]: 
                  beanData: '{"ionBean":"DivTag"}'
                  tagName: div
                  ↓email [mobile.components.UIDynamicElement-1603722109681]: 
                    beanData: '{"ionBean":"GenericItem"}'
                    tagName: ion-item
                    ↓Label [mobile.components.UIDynamicElement-1603722109684]: 
                      beanData: '{"ionBean":"Label","Floating":"plain:floating"}'
                      tagName: ion-label
                      ↓Text [mobile.components.UIText-1603722109687]: 
                        textValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:'email' | translate
                    ↓Event [mobile.components.UIControlEvent-1603722109690]: 
                      attrName: (change)
                      eventName: onChange
                      ↓CallGetLanguage [mobile.components.UIDynamicAction-1603722109693]: 
                        beanData: |
                          '{
                           "ionBean": "CallSequenceAction",
                           "requestable": "plain:C8Oforms.GetLanguage",
                           "threshold": "plain:10000000000"
                          }'
                        ↓email [mobile.components.UIControlVariable-1603722109696]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                              - MobileSmartSourceType: source:{"filter":"Form","project":"C8Oforms","input":"form1603722109606?.controls['email']?.value"}
                        ↓IfOK [mobile.components.UIDynamicAction-1603722109699]: 
                          beanData: '{"ionBean":"IfAction","condition":"script:parent.out.response != ''ko''"}'
                          ↓Log [mobile.components.UIDynamicAction-1603722109702]: 
                            beanData: '{"ionBean":"LogAction","message":"script:''Profil is known, set default language to '' + stack[''CallGetLanguage''].out.response"}'
                          ↓ChangeLanguage [mobile.components.UICustomAction-1603722109705]: 
                            actionValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    		this.setLanguage(props.stack['CallGetLanguage'].out.response);
                                    		this.tick();
                                    		resolve();
                                    
                                    
                          ↓SetGlobal [mobile.components.UIDynamicAction-1603722109708]: 
                            beanData: |
                              '{
                               "ionBean": "SetGlobalAction",
                               "Property": "plain:language",
                               "Value": "script:stack[''CallGetLanguage''].out.response"
                              }'
                        ↓IfKO [mobile.components.UIDynamicAction-1603722109711]: 
                          beanData: '{"ionBean":"IfAction","condition":"script:parent.out.response == \"ko\""}'
                          ↓Log [mobile.components.UIDynamicAction-1603722109714]: 
                            beanData: '{"ionBean":"LogAction","message":"plain:Profil is not known"}'
                    ↓Style [mobile.components.UIStyle-1603722109717]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '	background-color: transparent;
                              '
                    ↓Attr2 [mobile.components.UIAttribute-1603722109720]: 
                      attrName: '[ngClass]'
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:'stylegenerictextnormal'
                    ↓TextInput [mobile.components.UIDynamicElement-1603722109723]: 
                      beanData: |
                        '{
                         "ionBean": "Input",
                         "FormControlName": "plain:email",
                         "Type": "plain:email"
                        }'
                      identifier: email
                      tagName: ion-input
                      ↓ControlValidator [mobile.components.UIFormControlValidator-1603722109726]: 
                        required: set
                      ↓Style [mobile.components.UIStyle-1603722109729]: 
                        isEnabled: false
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                'position: static;
                                '
                      ↓Attr [mobile.components.UIAttribute-1603722821102]: 
                        attrName: 
                        attrValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                            - MobileSmartSourceType: plain:autofocus
                  ↓Attr [mobile.components.UIAttribute-1603722109732]: 
                    attrName: '[ngClass]'
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'styledivnormal'
                  ↓Directive [mobile.components.UIControlDirective-1603722109735]: 
                    directiveName: If
                    directiveSource: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:(this.local.continue || this.local.forceContinue) else ElseBlock_1602679288839
                    ↓password [mobile.components.UIDynamicElement-1603722109738]: 
                      beanData: '{"ionBean":"GenericItem"}'
                      tagName: ion-item
                      ↓Label [mobile.components.UIDynamicElement-1603722109741]: 
                        beanData: '{"ionBean":"Label","Floating":"plain:floating"}'
                        tagName: ion-label
                        ↓Text [mobile.components.UIText-1603722109744]: 
                          textValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:'password' | translate
                      ↓TextInput [mobile.components.UIDynamicElement-1603722109747]: 
                        beanData: |
                          '{
                           "ionBean": "Input",
                           "FormControlName": "plain:password",
                           "Type": "plain:password"
                          }'
                        identifier: pass
                        tagName: ion-input
                        ↓CustomValidator [mobile.components.UIFormCustomValidator-1603722109750]: 
                          validatorValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  			/* return {'valid':false, 'password':wrong};	// any json if invalid */
                                  			/* return null;									// null if valid */
                                  		    //return {'valid':false, 'password':'wrong'}
                                  			if(this.local.continue == undefined || this.local.continue == false){
                                  			    return null;    
                                  			}
                                  			else{
                                  			    try{
                                  			        if(c.value.length > 0){
                                  			            return null;
                                  			        }
                                  			        else{
                                  			            return {'valid':false}
                                  			        }
                                  			    }
                                  			    catch(e){
                                  			        return null;
                                  			    }
                                  			}
                                  		    
                                  
                        ↓Attr [mobile.components.UIAttribute-1603722109753]: 
                          attrName: 
                          attrValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                              - MobileSmartSourceType: plain:autofocus
                          isEnabled: false
                      ↓Style [mobile.components.UIStyle-1603722109756]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '	background-color: transparent;
                                '
                      ↓Attr2 [mobile.components.UIAttribute-1603722109759]: 
                        attrName: '[ngClass]'
                        attrValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:'stylegenerictextnormal'
                    ↓AD [mobile.components.UIDynamicElement-1603722109762]: 
                      beanData: '{"ionBean":"GenericItem"}'
                      tagName: ion-item
                      ↓Label [mobile.components.UIDynamicElement-1603722109765]: 
                        beanData: '{"ionBean":"Label"}'
                        tagName: ion-label
                        ↓Text [mobile.components.UIText-1603722109768]: 
                          textValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:'login_AD' | translate
                      ↓Style [mobile.components.UIStyle-1603722109771]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '	background-color: transparent;
                                	.item-inner{
                                		border-bottom: unset !important;
                                	}
                                	box-shadow: unset !important;
                                '
                      ↓Attr2 [mobile.components.UIAttribute-1603722109774]: 
                        attrName: '[ngClass]'
                        attrValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:'stylegenerictextnormal'
                      ↓CheckBox [mobile.components.UIDynamicElement-1603722109777]: 
                        beanData: '{"ionBean":"CheckBox","FormControlName":"plain:var1603722109777"}'
                        tagName: ion-checkbox
                        ↓Attr [mobile.components.UIAttribute-1603722109780]: 
                          attrName: '[(ngModel)]'
                          attrValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:this.local.loginad
                        ↓Event [mobile.components.UIControlEvent-1603722109783]: 
                          attrName: (ngModelChange)
                          eventName: (ngModelChange)
                          ↓CustomAction [mobile.components.UICustomAction-1603722109786]: 
                            actionValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    		this.local.loginad = event;
                                    		window["localStorage"]["setItem"]('__c8o_forms__loginad', event);
                                    
                                    		resolve();
                                    
                      ↓Attr [mobile.components.UIAttribute-1621353072340]: 
                        attrName: '*ngIf'
                        attrValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                            - MobileSmartSourceType: plain:this.local.ad == true
                    ↓TextFormatSubmit [mobile.components.UIDynamicElement-1603722109789]: 
                      beanData: '{"ionBean":"TextFormat","TextCenter":"plain:text-center"}'
                      tagName: div
                      ↓SubmitButton1 [mobile.components.UIDynamicElement-1603722109792]: 
                        beanData: '{"ionBean":"SubmitButton"}'
                        tagName: button
                        ↓Text [mobile.components.UIText-1603722109795]: 
                          textValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:'login' | translate
                        ↓Style [mobile.components.UIStyle-1603722109798]: 
                          styleContent: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  '/* Rectangle 4: */
                                  background: #FF8206;
                                  border-radius: 24px;
                                  min-width:253px !important;
                                  '
                  ↓Tag [mobile.components.UIElement-1603722109801]: 
                    identifier: ElseBlock_1602679288839
                    tagName: ng-template
                    ↓TextFormatContinue [mobile.components.UIDynamicElement-1603722109804]: 
                      beanData: '{"ionBean":"TextFormat","TextCenter":"plain:text-center"}'
                      tagName: div
                      ↓SubmitButton [mobile.components.UIDynamicElement-1603722109807]: 
                        beanData: '{"ionBean":"SubmitButton"}'
                        tagName: button
                        ↓Text [mobile.components.UIText-1603722109810]: 
                          textValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                              - MobileSmartSourceType: plain:Continue
                        ↓Style [mobile.components.UIStyle-1603722109813]: 
                          styleContent: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  '/* Rectangle 4: */
                                  background: #FF8206;
                                  border-radius: 24px;
                                  min-width:253px !important;
                                  margin-top: 30px;
                                  '
                  ↓TextFormatApple [mobile.components.UIDynamicElement-1603722109816]: 
                    beanData: '{"ionBean":"TextFormat","TextCenter":"plain:text-center"}'
                    isEnabled: false
                    tagName: div
                    ↓Button [mobile.components.UIDynamicElement-1603722109819]: 
                      beanData: '{"ionBean":"Button"}'
                      tagName: button
                      ↓Event [mobile.components.UIControlEvent-1603722109822]: 
                        attrName: (click)
                        ↓OAuthLogin [mobile.components.UIDynamicAction-1603722109825]: 
                          beanData: |
                            '{
                             "ionBean": "OAuthLoginAction",
                             "provider": "plain:openid",
                             "clientid": "plain:com.convertigo.convertigoforms",
                             "scope": "plain:",
                             "response_type": "plain:id_token+token",
                             "loginRequestable": "plain:lib_OAuth.loginAzureAdWithAccessToken",
                             "checkAccessTokenRequestable": "plain:lib_OAuth.checkAccessToken",
                             "authorization_endpoint": "plain:https:\/\/appleid.apple.com\/auth\/authorize",
                             "callbackurl": "plain:https:\/\/c8ocloud.convertigo.net\/convertigo\/projects\/lib_OAuth\/getToken.html"
                            }'
                      ↓Thumbnail [mobile.components.UIDynamicElement-1603722109828]: 
                        beanData: '{"ionBean":"Thumbnail"}'
                        tagName: ion-thumbnail
                        ↓Image [mobile.components.UIDynamicElement-1603722109831]: 
                          beanData: |
                            '{
                             "ionBean": "Image",
                             "url": "script:''assets\/images\/svg\/login\/apple-logo.svg''",
                             "height": "plain:18"
                            }'
                          selfClose: true
                          tagName: img
                        ↓Style [mobile.components.UIStyle-1603722109834]: 
                          styleContent: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  'margin-right:5px;
                                  text-align:left;
                                  img{
                                   display: inline-block;
                                      *display:inline; /* ie7 fix */
                                      float: none; /* this is the part that makes it work */
                                      }
                                  
                                  '
                      ↓Text [mobile.components.UIText-1603722109837]: 
                        textValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                            - MobileSmartSourceType: plain:Continue_with_Apple
                      ↓Style [mobile.components.UIStyle-1603722109840]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '/* Rectangle 4: */
                                background: #979797;
                                border-radius: 24px;
                                min-width:253px !important;
                                '
                  ↓Style [mobile.components.UIStyle-1603722109843]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            	margin-right:0px !important;
                            	margin-left:0px !important;
                            
              ↓Style [mobile.components.UIStyle-1603722109846]: 
              ↓Directive [mobile.components.UIControlDirective-1603722109849]: 
                directiveName: If
                directiveSource: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:!this.local.forceContinue
                ↓TextFormatOr [mobile.components.UIDynamicElement-1603722109852]: 
                  beanData: |
                    '{
                     "ionBean": "TextFormat",
                     "TextCenter": "plain:text-center",
                     "TextUpperCase": "plain:text-uppercase"
                    }'
                  tagName: div
                  ↓Text [mobile.components.UIText-1603722109855]: 
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:or
                ↓TextFormatGoogle [mobile.components.UIDynamicElement-1603722109858]: 
                  beanData: '{"ionBean":"TextFormat","TextCenter":"plain:text-center"}'
                  tagName: div
                  ↓Button [mobile.components.UIDynamicElement-1603722109861]: 
                    beanData: '{"ionBean":"Button"}'
                    tagName: button
                    ↓Event [mobile.components.UIControlEvent-1603722109864]: 
                      attrName: (click)
                      ↓OAuthLogin [mobile.components.UIDynamicAction-1603722109867]: 
                        beanData: |
                          '{
                           "ionBean": "OAuthLoginAction",
                           "provider": "plain:openid",
                           "clientid": "source:{\"filter\":\"Sequence\",\"project\":\"C8Oforms\",\"input\":\"listen([''lib_OAuth.GetOAuthCredentials''])?.GoogleClientID\"}",
                           "scope": "plain:openid https:\/\/www.googleapis.com\/auth\/userinfo.email https:\/\/www.googleapis.com\/auth\/userinfo.profile",
                           "response_type": "plain:code",
                           "loginRequestable": "plain:lib_OAuth.loginGoogleWithCode",
                           "checkAccessTokenRequestable": "plain:lib_OAuth.checkAccessTokenGoogle",
                           "authorization_endpoint": "plain:https:\/\/accounts.google.com\/o\/oauth2\/v2\/auth",
                           "callbackurl": "plain:https:\/\/test-convertigo.convertigo.net\/convertigo\/projects\/lib_OAuth\/getTokenGoogle.html"
                          }'
                        ↓If [mobile.components.UIDynamicAction-1603722109873]: 
                          beanData: '{"ionBean":"IfAction","condition":"script:parent.out.decodedToken != undefined"}'
                          ↓CallSequence [mobile.components.UIDynamicAction-1603722109876]: 
                            beanData: '{"ionBean":"CallSequenceAction","requestable":"plain:C8Oforms.LoginGoogle"}'
                            ↓lang [mobile.components.UIControlVariable-1603722109879]: 
                              comment: new variable
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:this.global['__secretL']
                            ↓IfElse [mobile.components.UIDynamicIf-1603722109882]: 
                              beanData: '{"ionBean":"IfElseAction","condition":"script:out.ok == ''true''"}'
                              ↓setValsRedirect [mobile.components.UICustomAction-1603722109885]: 
                                actionValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                      →: |
                                        		    if(window.navigator.onLine == false){
                                        		        this.c8o.session.user.name = props.stack.Login.out.user;
                                        		    }
                                        		    let data= {};
                                        		    let pagex = "selectorPage";
                                        		    if(this.local.page != undefined && this.local.page != ':page'){
                                        		        pagex = this.local.page;
                                        		        switch(pagex){
                                        		        case "editorPage":
                                        		            if(this.local.formId != undefined){
                                        	                    data["formId"] = page.local.formId;
                                        	                }
                                        		            break;
                                        	            case "viewerPage":
                                        	                if(this.local.formId != undefined){
                                        	                    data["formId"] = page.local.formId;
                                        	                }
                                        	                if(this.local.edit != undefined){
                                        	                    data["edit"] = page.local.edit;
                                        	                }
                                        	                break;
                                        	            case "selectorPage":
                                        	                data["published"] = page.local.published;
                                                            break;
                                        	            case "linkPage":
                                        	                data["d"] = page.local.d;
                                        	                data["e"] = page.local.e;
                                                            
                                        		        }
                                        		        
                                        		    }
                                        		    
                                        		    page.routerProvider.setRoot(pagex, data, null)
                                        		resolve();
                                        
                              ↓Else_Handler [mobile.components.UIActionElseEvent-1603722109888]: 
                                ↓getTranslate [mobile.components.UICustomAction-1603722109891]: 
                                  actionValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                        →: |
                                          		page.c8o.log.debug(event ? event.toString():'no event');
                                          		let translateService = this.getInstance(TranslateService);
                                          		translateService.get('loginko').subscribe(
                                          		        value => {
                                          		          // value is our translated string
                                          		          this.local['loginko'] = value;
                                          		          resolve();
                                          		        }
                                          		      );
                                          
                                  ↓Toast [mobile.components.UIDynamicAction-1603722109894]: 
                                    beanData: '{"ionBean":"ToastAction","message":"script:this.local[''loginko'']"}'
                            ↓decodedToken [mobile.components.UIControlVariable-1603722109897]: 
                              comment: new variable
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:stack['OAuthLogin'].out.decodedToken
                            ↓name [mobile.components.UIControlVariable-1603722109900]: 
                              comment: new variable
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:stack['OAuthLogin'].out.object.given_name
                            ↓surname [mobile.components.UIControlVariable-1603722109903]: 
                              comment: new variable
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:stack['OAuthLogin'].out.object.family_name
                            ↓displayName [mobile.components.UIControlVariable-1603722109906]: 
                              comment: new variable
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:stack['OAuthLogin'].out.object.name
                            ↓picture [mobile.components.UIControlVariable-1603722109909]: 
                              comment: new variable
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:stack['OAuthLogin'].out.object.picture
                    ↓Style [mobile.components.UIStyle-1603722109912]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '	background: #979797;
                              	border-radius: 24px;
                              	min-width:253px !important;
                              	.button-inner{
                              	    justify-content:flex-start;
                              	}
                              '
                    ↓Thumbnail [mobile.components.UIDynamicElement-1603722109915]: 
                      beanData: '{"ionBean":"Thumbnail","ItemPosition":"plain:item-start"}'
                      tagName: ion-thumbnail
                      ↓Image [mobile.components.UIDynamicElement-1603722109918]: 
                        beanData: |
                          '{
                           "ionBean": "Image",
                           "url": "script:''assets\/images\/svg\/login\/google-logo.svg''",
                           "height": "plain:18"
                          }'
                        selfClose: true
                        tagName: img
                      ↓Style [mobile.components.UIStyle-1603722109921]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                margin-right:10px;
                                
                    ↓Text [mobile.components.UIText-1603722109924]: 
                      textValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:Continue with Google
                  ↓Attr [mobile.components.UIAttribute-1621352077308]: 
                    attrName: '*ngIf'
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:this.local.google == true
                ↓TextFormatMicrosoft [mobile.components.UIDynamicElement-1603722109927]: 
                  beanData: '{"ionBean":"TextFormat","TextCenter":"plain:text-center"}'
                  tagName: div
                  ↓Button1 [mobile.components.UIDynamicElement-1603722109930]: 
                    beanData: '{"ionBean":"Button"}'
                    tagName: button
                    ↓Event [mobile.components.UIControlEvent-1603722109933]: 
                      attrName: (click)
                      ↓OAuthLogin [mobile.components.UIDynamicAction-1603722109936]: 
                        beanData: |
                          '{
                           "ionBean": "OAuthLoginAction",
                           "clientid": "source:{\"filter\":\"Sequence\",\"project\":\"C8Oforms\",\"input\":\"listen([''lib_OAuth.GetOAuthCredentials''])?.AzureAdClientID\"}",
                           "callbackurl": "plain:https:\/\/c8ocloud.convertigo.net\/convertigo\/projects\/lib_OAuth\/getToken.html"
                          }'
                        ↓CustomAction [mobile.components.UICustomAction-1603722109939]: 
                          actionValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  		console.log(props.parent.out);
                                  		resolve();
                                  
                        ↓If [mobile.components.UIDynamicAction-1603722109942]: 
                          beanData: '{"ionBean":"IfAction","condition":"script:parent.out.login == ''ok''"}'
                          ↓CallSequence [mobile.components.UIDynamicAction-1603722109945]: 
                            beanData: '{"ionBean":"CallSequenceAction","requestable":"plain:C8Oforms.LoginMicrosoft"}'
                            ↓lang [mobile.components.UIControlVariable-1603722109948]: 
                              comment: new variable
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:this.global['__secretL']
                            ↓IfElse [mobile.components.UIDynamicIf-1603722109951]: 
                              beanData: '{"ionBean":"IfElseAction","condition":"script:out.ok == ''true''"}'
                              ↓setValsRedirect [mobile.components.UICustomAction-1603722109954]: 
                                actionValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                      →: |
                                        		    if(window.navigator.onLine == false){
                                        		        this.c8o.session.user.name = props.stack.Login.out.user;
                                        		    }
                                        		    let data= {};
                                        		    let pagex = "selectorPage";
                                        		    if(this.local.page != undefined && this.local.page != ':page'){
                                        		        pagex = this.local.page;
                                        		        switch(pagex){
                                        		        case "editorPage":
                                        		            if(this.local.formId != undefined){
                                        	                    data["formId"] = page.local.formId;
                                        	                }
                                        		            break;
                                        	            case "viewerPage":
                                        	                if(this.local.formId != undefined){
                                        	                    data["formId"] = page.local.formId;
                                        	                }
                                        	                if(this.local.edit != undefined){
                                        	                    data["edit"] = page.local.edit;
                                        	                }
                                        	                break;
                                        	            case "selectorPage":
                                        	                data["published"] = page.local.published;
                                                            break;
                                        	            case "linkPage":
                                        	                data["d"] = page.local.d;
                                        	                data["e"] = page.local.e;
                                                            
                                        		        }
                                        		        
                                        		    }
                                        		    
                                        		    page.routerProvider.setRoot(pagex, data, null)
                                        		resolve();
                                        
                              ↓Else_Handler [mobile.components.UIActionElseEvent-1603722109957]: 
                                ↓getTranslate [mobile.components.UICustomAction-1603722109960]: 
                                  actionValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                        →: |
                                          		page.c8o.log.debug(event ? event.toString():'no event');
                                          		let translateService = this.getInstance(TranslateService);
                                          		translateService.get('loginko').subscribe(
                                          		        value => {
                                          		          // value is our translated string
                                          		          this.local['loginko'] = value;
                                          		          resolve();
                                          		        }
                                          		      );
                                          
                                  ↓Toast [mobile.components.UIDynamicAction-1603722109963]: 
                                    beanData: '{"ionBean":"ToastAction","message":"script:this.local[''loginko'']"}'
                            ↓decodedToken [mobile.components.UIControlVariable-1603722109966]: 
                              comment: new variable
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:stack['OAuthLogin'].out.authUser
                            ↓name [mobile.components.UIControlVariable-1603722109969]: 
                              comment: new variable
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:stack['OAuthLogin'].out.object.givenName
                            ↓surname [mobile.components.UIControlVariable-1603722109972]: 
                              comment: new variable
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:stack['OAuthLogin'].out.object.surname
                            ↓displayName [mobile.components.UIControlVariable-1603722109975]: 
                              comment: new variable
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:stack['OAuthLogin'].out.object.displayName
                    ↓Thumbnail [mobile.components.UIDynamicElement-1603722109978]: 
                      beanData: '{"ionBean":"Thumbnail"}'
                      tagName: ion-thumbnail
                      ↓Image [mobile.components.UIDynamicElement-1603722109981]: 
                        beanData: |
                          '{
                           "ionBean": "Image",
                           "url": "script:''assets\/images\/svg\/login\/microsoft-logo.svg''",
                           "height": "plain:18"
                          }'
                        selfClose: true
                        tagName: img
                      ↓Style [mobile.components.UIStyle-1603722109984]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                margin-right:10px;
                                
                    ↓Text [mobile.components.UIText-1603722109987]: 
                      textValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:Continue with Microsoft
                    ↓Style [mobile.components.UIStyle-1603722109990]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '	background: #979797;
                              	border-radius: 24px;
                              	min-width:253px !important;
                              	.button-inner{
                              	    justify-content:flex-start;
                              	}
                              '
                  ↓Attr [mobile.components.UIAttribute-1621352317974]: 
                    attrName: '*ngIf'
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:this.local.xsoft == true
            ↓DividerPasswordLost [mobile.components.UIDynamicElement-1603722109993]: 
              beanData: '{"ionBean":"DivTag"}'
              tagName: div
              ↓Style [mobile.components.UIStyle-1603722109996]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '	border-top: 1px solid #cecece;
                        	margin-left: auto;
                          	margin-right: auto;
                          	margin-top:20px;
                          	
                        	max-width:253px !important;
                        '
              ↓TextFormat [mobile.components.UIDynamicElement-1603722109999]: 
                beanData: '{"ionBean":"TextFormat","TextCenter":"plain:text-center"}'
                tagName: div
                ↓Tag [mobile.components.UIElement-1603722110002]: 
                  tagName: a
                  ↓Paragraph [mobile.components.UIDynamicElement-1603722110005]: 
                    beanData: '{"ionBean":"Paragraph"}'
                    tagName: p
                    ↓Text [mobile.components.UIText-1603722110008]: 
                      textValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:'forgotPassword' | translate
                  ↓Style [mobile.components.UIStyle-1603722110011]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            '/* Mot de passe oublié: */
                            font-family: Helvetica;
                            font-size: 12px;
                            color: #048EAE;
                            
                            }
                            .class1602681164621:hover{
                            	cursor:pointer;
                            '
                  ↓Event [mobile.components.UIControlEvent-1603722110014]: 
                    attrName: (click)
                    ↓ModalPage [mobile.components.UIDynamicAction-1603722110017]: 
                      beanData: |
                        '{
                         "ionBean": "ModalAction",
                         "page": "plain:C8Oforms.MobileApplication.Application.resetPasswordPage",
                         "cssClass": "plain:modal100"
                        }'
                ↓Style [mobile.components.UIStyle-1603722110020]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          padding-bottom:20px;
                          
              ↓Attr [mobile.components.UIAttribute-1621352598036]: 
                attrName: '*ngIf'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:!this.local.hidePasswordForgotten
            ↓DivMenuVersion [mobile.components.UIDynamicElement-1603722110023]: 
              beanData: '{"ionBean":"DivTag"}'
              tagName: div
              ↓Style [mobile.components.UIStyle-1603722110026]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '	position: relative;
                        	/*bottom: 0;
                        	right: 1vw; */
                        
                        	flex-grow:1;
                        	div {
                        		position: absolute;
                        		bottom: 0;
                        		right: 1vw;
                        	}
                        	p{
                        		margin-top: 0 !important;
                        		margin-bottom: 0 !important;
                        	}
                        '
              ↓UseSharedComponent [mobile.components.UIUseShared-1603722110029]: 
                sharedcomponent: C8Oforms.MobileApplication.Application.menuVersion
              ↓Paragraph [mobile.components.UIDynamicElement-1603722110032]: 
                beanData: '{"ionBean":"Paragraph"}'
                isEnabled: false
                tagName: p
                ↓Text [mobile.components.UIText-1603722110035]: 
  ↓Style [mobile.components.UIStyle-1602837416845]: 
    styleContent: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            position:relative;
            
↓Style [mobile.components.UIStyle-1558449193708]: 
  styleContent: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
      - com.twinsoft.convertigo.beans.common.FormatedContent: 
        →: |
          'ion-grid {
              height: 100%;
            }
          
            ion-row {
              height: 50%;
            }'
↓PageEvent1 [mobile.components.UIPageEvent-1572447936952]: 
  viewEvent: onCanEnter
  ↓CheckUser1 [mobile.components.UICustomAction-1572447936955]: 
    actionValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            '		    // Getting user status (whenever he is logged or not)
            		    
            		    const request = window["indexedDB"]["open"]("MyTestDatabase", 3);
            		    request.onerror = (event)=> {
            		        window.alert(this.translate.instant("brower_not_supported"));
            		        page.local["notsupported"] = true;
            		      };
            		      
            		      let indexPWA = window.location.pathname.indexOf("pwas");
            		      let indexMobile = window.location.pathname.indexOf("mobile");
            		      // if we started in standalone pwa mode
            		      if(indexPWA != -1 && indexMobile == -1){
            		          let indexHtml = window.location.pathname.indexOf("index.html");
            				  var standalonePwa ="";
            				  	// for ios sometimes there is no index.html
            					if(indexHtml == -1){
            						let splitted = window.location.pathname.split("/");
            						let iPWA = splitted.indexOf("pwas");
            						standalonePwa = splitted[iPWA+1];
            				  	}
            					else{
            						standalonePwa = window.location.pathname.substring(indexPWA + 5, indexHtml -1)
            					}
            		          
            		          // get url base
            		          const baseUrl = window.location.origin + window.location.pathname.substring(0, window.location.pathname.lastIndexOf("/"));
            		          page.c8o.httpPublic.get(baseUrl + "/manifest.json")
            		          .subscribe(
                                response => {
                                    if(response["anonymous"] == true){
                                        /*let data = {"i": standalonePwa};
                                        let pagex = "viewerPage";
                                        setTimeout(()=>{
                                            page.routerProvider.setRoot(pagex, data, null)
                                        }, 200);
                                        resolve(false);*/
                                        let data= {u:standalonePwa};
                                        let pagex = "sharingPage";
                                        setTimeout(()=>{
                                            page.routerProvider.setRoot(pagex, data, null)
                                        }, 200);
                                        resolve(false);
                                    }
                                    else{
                                        this.local.formId = standalonePwa;
                                        this.local.page = "viewerPage";
                                        page.c8o.httpInterface.getUserServiceStatus()
                                        .then((res)=>{
                                            if(res.user.length == 64 || res.user.authenticated == false){
                                                resolve(true);
                                            }
                                            else{
                                                let data = {"formId": page.local.formId};
                                                let pagex = "viewerPage";
                                                setTimeout(()=>{
                                                    page.routerProvider.setRoot(pagex, data, null)
                                                }, 200);
                                                resolve(false);
                                            }
                                        })
                                        .catch((err)=>{
                                            resolve(true);
                                        })
                                    }
                                },
                                error=>{
                                    reject(error);
                                })
            		      }
            		      else{
            		          this.show = false;
            	                this.local.formId = (this.navParams.get(''formId'') != undefined && this.navParams.get(''formId'') != ":formId") ? this.navParams.get(''formId'') : null;
            	                this.local.page = (this.navParams.get(''page'') != undefined && this.navParams.get(''page'') != ":page") ? this.navParams.get(''page'') : null;
            	                this.local.edit = (this.navParams.get(''edit'') != undefined && this.navParams.get(''edit'') != ":edit") ? this.navParams.get(''edit'') : null;
            	                this.local.published = (this.navParams.get(''published'') != undefined && this.navParams.get(''published'') != ":published") ? this.navParams.get(''published'') : null;
            	                if(this.navParams.get(''e'') != undefined && this.navParams.get(''e'') != ":e"){
            	                    this.local.e =  this.navParams.get(''e'');  
            	                   }
            	                   if(this.navParams.get(''d'') != undefined && this.navParams.get(''d'') != ":d"){
            	                       this.local.d =  this.navParams.get(''d'');  
            	                   }
            	                    page.c8o.httpInterface.getUserServiceStatus()
            	                    .then((res)=>{
            	                        if(res.user.length == 64 || res.user.authenticated == false){
            	                            resolve(true);
            	                        }
            	                        else{
            	                            page.local.user = res.user;
            	                            let data= {};
            	                            let pagex = "selectorPage";
            	                            if(this.local.page != undefined && this.local.page != '':page''){
            	                                pagex = this.local.page;
            	                                switch(pagex){
            	                                case "editorPage":
            	                                    if(this.local.formId != undefined){
            	                                        data["formId"] = page.local.formId;
            	                                    }
            	                                    break;
            	                                case "viewerPage":
            	                                    if(this.local.formId != undefined){
            	                                        data["formId"] = page.local.formId;
            	                                    }
            	                                    if(this.local.edit != undefined){
            	                                        data["edit"] = page.local.edit;
            	                                    }
            	                                    break;
            	                                case "selectorPage":
            	                                    data["published"] = page.local.published;
            	                                    break;
            	                                    
            	                                }
            	                                
            	                            }
            	                            setTimeout(()=>{
            	                                page.routerProvider.setRoot(pagex, data, null)
            	                            }, 200);
            	                            resolve(false);
            	                        }
            	                    })
            	                    .catch((err)=>{
            	                        resolve(true);
            	                    })
            		      }
                            
                            
                    
            		    
            		   /* this.local.debug = {};
                        let formId = this.navParams.get(''formId'');
                        if(formId != undefined){
                            this.local.formId = formId;
                            resolve(true);
                        }
                        else{
                            resolve(true);
                        }*/
                       
                        
            		/*
            		if(this.global.user == '''' || this.global.user == undefined){
            		    window.location.href = ''./'';
            		    resolve(false);
            		}
            		else{
            		    resolve(true);
            		}*/
            '
    page_ts_imports: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
        - com.twinsoft.convertigo.beans.common.XMLVector: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
            - com.twinsoft.convertigo.beans.common.XMLVector: 
              - java.lang.String: 
                - ↑value: C8oLogLevel
              - java.lang.String: 
                - ↑value: c8osdkangular
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
            - com.twinsoft.convertigo.beans.common.XMLVector: 
              - java.lang.String: 
                - ↑value: C8oSettings
              - java.lang.String: 
                - ↑value: c8osdkangular