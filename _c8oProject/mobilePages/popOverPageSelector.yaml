scriptContent: 
  - xmlizable: 
    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
    - com.twinsoft.convertigo.beans.common.FormatedContent: 
      →: |
        '/*Begin_c8o_PageImport*/
        /*End_c8o_PageImport*/
        /*Begin_c8o_PageDeclaration*/
        	/*End_c8o_PageDeclaration*/
        /*Begin_c8o_PageConstructor*/
        		/*End_c8o_PageConstructor*/
        /*Begin_c8o_PageFunction*/
        	upperFirst(str: string){
        	   return  str[0].toUpperCase() + str.slice(1);	    
        	}
        	
        	public replaceEmpty(str){
        	    return str.replace(/ /g, ''_'');
        	}
        	
        	public isMineOrCollab(){
        		if(this[''navParams''][''data''][''selectedForm''][''~c8oAcl''] == this.global.user){
        			return true
        		}
        		else if(this[''navParams''][''data''].selectedForm.c8oCollabs != undefined){
        			var founded = Object
        	            .keys(this[''navParams''][''data''].selectedForm.c8oCollabs)
        				.filter((x)=>{return x.substring(12) == this.global.user})
        			return founded.length > 0;
        		}
        		else{
        			return false;
        		}
        	}
        	public isVisible(): boolean{
        	    try{
        	        if(this[''navParams''][''data''][''selectedForm''][''~c8oAcl''] == this.global.user){
        	            return true
        	        }
        	        else{
        	            var formGrp = Object
        	            .keys(this[''navParams''][''data''].selectedForm.c8oGrp)
        	            .filter(k => this[''navParams''][''data''].selectedForm.c8oGrp[k])
        	            
        	            var userGrp = Object
        	            .keys(this.global.settings.groups)
        	            .filter(k => this.global.settings.groups[k]);
        	            
        	            return (formGrp.filter(e => userGrp.indexOf(e) !== -1)).length > 0;
        	        }
        	    }
        	    catch(e){
        	        return false;
        	    }
        	    
        	    
        	    
        	}
        	public getLevelAccesDoc(action, doc = this[''navParams''][''data''][''selectedForm''], settings = this.global.settings){
        		// if I am the owner of the doc
        		let val = 5;
        		if(doc.creator == settings["~c8oAcl"]){
        			return true;
        		}
        		else {
        			let groups = settings.group != undefined ? Object.keys(settings.groups).filter((x)=>{ return settings.groups[x] == true}) : [];
        			let isAcollabResp = doc.collabsResponse != undefined && (doc.collabsResponse.indexOf(settings["_id"]) != -1 || doc.collabsResponse.filter(value => (groups.indexOf(value) != -1)).length > 0);
        			let isAcollab = doc.collabs != undefined && (doc.collabs.indexOf(settings["_id"]) != -1 || doc.collabs.filter(value => (groups.indexOf(value) != -1)).length > 0);
        			let isAshared  = doc.shared != undefined && (doc.shared.indexOf(settings["_id"]) != -1 || doc.shared.filter(value => (groups.indexOf(value) != -1)).length > 0);
        			if(isAcollabResp && isAcollab){
        				val = 1;
        			}
        			else if(isAcollab){
        				val = 2;
        			}
        			else if(isAcollabResp){
        				val = 3;
        			}
        			else if(isAshared){
        				val = 4;
        			}
        			switch(action){
        				case "editView":
        					if(val < 3){
        						return true;
        					}
        					else{
        						return false;
        					}
        				case "publishDoc":
        					if(val < 3){
        						return true;
        					}
        					else{
        						return false;
        					}
        				case "VizualiseResponses":
        					if(val == 1 || val == 3){
        						return true;
        					}
        					else{
        						return false;
        					}
        				case "DownloadCsv":
        					if(val == 1 || val == 3){
        						return true;
        					}
        					else{
        						return false;
        					}
        				case "CreatePwa":
        					if(val < 3){
        						return true;
        					}
        					else{
        						return false;
        					}
        				case "ManageAccessRights":
        					if(val < 3){
        						return true;
        					}
        					else{
        						return false;
        					}
        				/*case "ManageAccessRightsResponses":
        					if(val == 1 || val == 3){
        						return true;
        					}
        					else{
        						return false;
        					}
        				break;*/
        				case "ManageLabels":
        					if(val < 3){
        						return true;
        					}
        					else{
        						return false;
        					}
        				case "Thumbnail":
        					if(val < 3){
        						return true;
        					}
        					else{
        						return false;
        					}
        				default:
        					return false;
        			}
        		}
        		
        	}
        	
        	public blobToBase64(blobData){
        	    return new Promise( async (resolve, reject) => {
        	        var reader = new FileReader();
        	        reader.onloadend = function () {
                        resolve(reader.result);
                    };
                    reader.readAsDataURL(blobData);
        	    });
        	}
        	/*End_c8o_PageFunction*/
        '
segment: path-to-popoverpageselector
title: Title for popOverPageSelector
↓Content [ngx.components.UIDynamicElement-1566923643544]: 
  beanData: '{"ionBean":"Content","Padding":"plain:ion-no-padding"}'
  tagName: ion-content
  ↓ListContainer [ngx.components.UIDynamicElement-1566923669585]: 
    beanData: '{"ionBean":"List","Lines":"plain:none"}'
    tagName: ion-list
    ↓Directive [ngx.components.UIControlDirective-1629226069391]: 
      directiveName: If
      directiveSource: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:this.navParams.data.folder != true else ElseBlock_1629226119440
      ↓editView [ngx.components.UIDynamicElement-1567072378199]: 
        beanData: '{"ionBean":"ListItem"}'
        tagName: ion-item
        ↓Icon [ngx.components.UIDynamicElement-1603724774729]: 
          beanData: |
            '{
             "ionBean": "Icon",
             "IconName": "plain:build",
             "IconSlot": "plain:start"
            }'
          tagName: ion-icon
        ↓Text [ngx.components.UIText-1567072378202]: 
          i18n: true
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:Editer
        ↓Style [ngx.components.UIStyle-1567072378205]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '/* Mot de passe oublié: */
                  color: #4a4a4a;
                  font-size: 12px;
                  
                  	.item-inner{
                  		margin-left:0px !important;
                  	}
                  }
                  .class1567072378199:hover{
                  font-size: 12px;
                  color: #048EAE;
                  text-decoration: underline;
                  cursor: pointer;
                  '
        ↓Event [ngx.components.UIControlEvent-1567072539218]: 
          ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1606727297010]: 
            beanData: '{"ionBean":"InvokeAction"}'
            stack: C8Oforms.MobileApplication.Application.popOverEditView
            ↓selectedForm [ngx.components.UIControlVariable-1606727308688]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.navParams?.data?.selectedForm
            ↓ClosePopover [ngx.components.UIDynamicAction-1606727210916]: 
              beanData: '{"ionBean":"ClosePopoverAction"}'
        ↓Attr [ngx.components.UIAttribute-1572344598772]: 
          attrName: '*ngIf'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:this['navParams']['data']['that']['local']['published'] == false && getLevelAccesDoc('editView')
        ↓Attr1 [ngx.components.UIAttribute-1592316594791]: 
          attrName: 
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:tappable
      ↓visualizeView [ngx.components.UIDynamicElement-1567072332062]: 
        beanData: '{"ionBean":"ListItem"}'
        tagName: ion-item
        ↓Text [ngx.components.UIText-1567072332065]: 
          i18n: true
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:Visualiser
        ↓Style [ngx.components.UIStyle-1567072332068]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '/* Mot de passe oublié: */
                  color: #4a4a4a;
                  font-size: 12px;
                  
                  .item-inner{
                  		margin-left:0px !important;
                  	}
                  }
                  .class1567072332062:hover{
                  font-size: 12px;
                  color: #048EAE;
                  text-decoration: underline;
                  cursor: pointer;
                  '
        ↓Event [ngx.components.UIControlEvent-1567072915734]: 
          ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1606728735390]: 
            beanData: '{"ionBean":"InvokeAction"}'
            stack: C8Oforms.MobileApplication.Application.popOverVisualizeView
            ↓selectedForm [ngx.components.UIControlVariable-1606728751093]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.navParams?.data?.selectedForm
            ↓ClosePopover [ngx.components.UIDynamicAction-1606728763646]: 
              beanData: '{"ionBean":"ClosePopoverAction"}'
        ↓Attr1 [ngx.components.UIAttribute-1592316592688]: 
          attrName: 
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:tappable
        ↓Icon [ngx.components.UIDynamicElement-1603725257774]: 
          beanData: |
            '{
             "ionBean": "Icon",
             "IconName": "plain:eye",
             "IconSlot": "plain:start"
            }'
          tagName: ion-icon
      ↓publishDoc [ngx.components.UIDynamicElement-1571921646941]: 
        beanData: '{"ionBean":"ListItem"}'
        tagName: ion-item
        ↓Text [ngx.components.UIText-1571921646944]: 
          i18n: true
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:Publier
        ↓Style [ngx.components.UIStyle-1571921646947]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '/* Mot de passe oublié: */
                  color: #4a4a4a;
                  font-size: 12px;
                  .item-inner{
                  		margin-left:0px !important;
                  }
                  
                  }
                  .class1571921646941:hover{
                  font-size: 12px;
                  color: #048EAE;
                  text-decoration: underline;
                  cursor: pointer;
                  '
        ↓Event [ngx.components.UIControlEvent-1571921646950]: 
          ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1606729477447]: 
            beanData: '{"ionBean":"InvokeAction"}'
            stack: C8Oforms.MobileApplication.Application.popOverPublishDoc
            ↓selectedForm [ngx.components.UIControlVariable-1606729486845]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.navParams?.data?.selectedForm
            ↓ClosePopover [ngx.components.UIDynamicAction-1606729508786]: 
              beanData: '{"ionBean":"ClosePopoverAction"}'
        ↓Attr [ngx.components.UIAttribute-1572344734356]: 
          attrName: '*ngIf'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:this['navParams']['data']['that']['local']['published'] == false &&getLevelAccesDoc('publishDoc')
        ↓Attr1 [ngx.components.UIAttribute-1592316498784]: 
          attrName: 
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:tappable
        ↓Icon [ngx.components.UIDynamicElement-1603730305674]: 
          beanData: |
            '{
             "ionBean": "Icon",
             "IconName": "plain:arrow-redo",
             "IconSlot": "plain:start"
            }'
          tagName: ion-icon
      ↓VizualiseResponses [ngx.components.UIDynamicElement-1580132441145]: 
        beanData: '{"ionBean":"ListItem"}'
        tagName: ion-item
        ↓Style [ngx.components.UIStyle-1580132441148]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  'color: #4a4a4a;
                  font-size: 12px;
                  .item-inner{
                  		margin-left:0px !important;
                  }
                  }
                  
                  .class1580132441145:hover{
                  font-size: 12px;
                  color: #048EAE;
                  text-decoration: underline;
                  cursor: pointer;
                  '
        ↓Event [ngx.components.UIControlEvent-1580132441154]: 
          ↓CustomAction [ngx.components.UICustomAction-1580132441157]: 
            actionValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    		console.log(page['navParams']['data']['selectedForm']);
                    		resolve(page["navParams"]["data"]["selectedForm"]);
                    
            isEnabled: false
            ↓PushPage [ngx.components.UIDynamicAction-1580149737313]: 
              beanData: |
                '{
                 "ionBean": "PushPageAction",
                 "page": "plain:C8Oforms.MobileApplication.Application.dataPage",
                 "data": "script:{formId: parent.out._id}"
                }'
              ↓ClosePopover [ngx.components.UIDynamicAction-1581939011482]: 
                beanData: '{"ionBean":"ClosePopoverAction"}'
          ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1606730033022]: 
            beanData: '{"ionBean":"InvokeAction"}'
            stack: C8Oforms.MobileApplication.Application.popOverVizualiseResponses
            ↓selectedForm [ngx.components.UIControlVariable-1606730047639]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.navParams?.data?.selectedForm
            ↓ClosePopover [ngx.components.UIDynamicAction-1606730073904]: 
              beanData: '{"ionBean":"ClosePopoverAction"}'
        ↓Attr [ngx.components.UIAttribute-1581947781855]: 
          attrName: '*ngIf'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:this['navParams']['data']['that']['local']['published'] == true && getLevelAccesDoc('VizualiseResponses')
        ↓Attr1 [ngx.components.UIAttribute-1592316618466]: 
          attrName: 
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:tappable
        ↓Directive [ngx.components.UIControlDirective-1594297038023]: 
          directiveName: If
          directiveSource: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:this.isVisible else ElseBlock_1594297430140
          ↓Text [ngx.components.UIText-1580132441151]: 
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:'vizu_response' | translate
        ↓Tag [ngx.components.UIElement-1594297430140]: 
          identifier: ElseBlock_1594297430140
          tagName: ng-template
          ↓Text [ngx.components.UIText-1594297465358]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:vizu_mine_response
        ↓Icon [ngx.components.UIDynamicElement-1603795537363]: 
          beanData: |
            '{
             "ionBean": "Icon",
             "IconName": "plain:stats-chart-outline",
             "IconSlot": "plain:start"
            }'
          tagName: ion-icon
      ↓DownloadCsv [ngx.components.UIDynamicElement-1572459511838]: 
        beanData: '{"ionBean":"ListItem"}'
        tagName: ion-item
        ↓Style [ngx.components.UIStyle-1572459511844]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '/* Mot de passe oublié: */
                  color: #4a4a4a;
                  font-size: 12px;
                  .item-inner{
                  		margin-left:0px !important;
                  }
                  
                  }
                  .class1572459511838:hover{
                  font-size: 12px;
                  color: #048EAE;
                  text-decoration: underline;
                  cursor: pointer;
                  '
        ↓Attr [ngx.components.UIAttribute-1572459511880]: 
          attrName: '*ngIf'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:this['navParams']['data']['that']['local']['published'] == true  && getLevelAccesDoc('DownloadCsv')
        ↓Event [ngx.components.UIControlEvent-1581938984596]: 
          ↓ModalPage [ngx.components.UIDynamicAction-1602171389238]: 
            beanData: |
              '{
               "ionBean": "ModalAction",
               "page": "plain:C8Oforms.MobileApplication.Application.exportCsvPage",
               "data": "script:{id:this.navParams.data.selectedForm._id, name:this.replaceEmpty(this.navParams.data.selectedForm.name), offset:this.local.offset, version: this.navParams.data.selectedForm.version}",
               "blockWhileDisplayed": "plain:true",
               "cssClass": "plain:modalCSV"
              }'
            isEnabled: false
          ↓ClosePopover [ngx.components.UIDynamicAction-1581938989911]: 
            beanData: '{"ionBean":"ClosePopoverAction"}'
            isEnabled: false
          ↓invokeReplaceEmpty [ngx.components.UIDynamicInvoke-1606731395074]: 
            beanData: '{"ionBean":"InvokeAction"}'
            stack: C8Oforms.MobileApplication.Application.replaceEmptyFunction
            ↓InvokeGetOffset [ngx.components.UIDynamicInvoke-1606731828288]: 
              beanData: '{"ionBean":"InvokeAction"}'
              stack: C8Oforms.MobileApplication.Application.getOffsetFunction
              ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1606730952228]: 
                beanData: '{"ionBean":"InvokeAction"}'
                stack: C8Oforms.MobileApplication.Application.popOverDownloadCsv
                ↓selectedForm [ngx.components.UIControlVariable-1606731016040]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this.navParams?.data?.selectedForm
                ↓name [ngx.components.UIControlVariable-1606731016042]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:stack['invokeReplaceEmpty'].out
                ↓offset [ngx.components.UIControlVariable-1606731016044]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:stack['InvokeGetOffset'].out
                ↓ClosePopover [ngx.components.UIDynamicAction-1606731874517]: 
                  beanData: '{"ionBean":"ClosePopoverAction"}'
            ↓name [ngx.components.UIControlVariable-1606732123120]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.navParams.data.selectedForm.name
        ↓Text [ngx.components.UIText-1572459511841]: 
          i18n: true
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'respCsv' | translate
        ↓Attr1 [ngx.components.UIAttribute-1592316611162]: 
          attrName: 
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:tappable
        ↓Icon1 [ngx.components.UIDynamicElement-1603732695102]: 
          beanData: |
            '{
             "ionBean": "Icon",
             "IconName": "plain",
             "IconSlot": "plain:start",
             "IconSource": "plain:assets\/images\/svg\/icon\/csv.svg"
            }'
          tagName: ion-icon
      ↓CreatePwa [ngx.components.UIDynamicElement-1603801509434]: 
        beanData: '{"ionBean":"ListItem"}'
        tagName: ion-item
        ↓Style [ngx.components.UIStyle-1603801509437]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '/* Mot de passe oublié: */
                  color: #4a4a4a;
                  font-size: 12px;
                  .item-inner{
                  		margin-left:0px !important;
                  }
                  
                  }
                  .class1603801509434:hover{
                  font-size: 12px;
                  color: #048EAE;
                  text-decoration: underline;
                  cursor: pointer;
                  '
        ↓Attr [ngx.components.UIAttribute-1603801509440]: 
          attrName: '*ngIf'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:this['navParams']['data']['that']['local']['published'] == true &&  getLevelAccesDoc('CreatePwa')
        ↓Event [ngx.components.UIControlEvent-1603801509455]: 
          ↓ModalPage [ngx.components.UIDynamicAction-1603801509458]: 
            beanData: |
              '{
               "ionBean": "ModalAction",
               "page": "plain:C8Oforms.MobileApplication.Application.CreatePwa",
               "data": "script:{form:this.navParams.data.selectedForm}",
               "blockWhileDisplayed": "plain:true",
               "cssClass": "plain:modalCSV"
              }'
            isEnabled: false
          ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1606752509111]: 
            beanData: '{"ionBean":"InvokeAction"}'
            stack: C8Oforms.MobileApplication.Application.popOverCreatePwa
            ↓selectedForm [ngx.components.UIControlVariable-1606752519598]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.navParams.data.selectedForm
          ↓ClosePopover [ngx.components.UIDynamicAction-1603801509461]: 
            beanData: '{"ionBean":"ClosePopoverAction"}'
        ↓Attr1 [ngx.components.UIAttribute-1603801509464]: 
          attrName: 
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:tappable
        ↓Text [ngx.components.UIText-1603801509446]: 
          i18n: true
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:update_pwa
        ↓Icon1 [ngx.components.UIDynamicElement-1603801509467]: 
          beanData: |
            '{
             "ionBean": "Icon",
             "IconName": "plain:logo-pwa",
             "IconSlot": "plain:start"
            }'
          tagName: ion-icon
      ↓ShareForm [ngx.components.UIDynamicElement-1578663445209]: 
        beanData: '{"ionBean":"ListItem"}'
        tagName: ion-item
        ↓Style [ngx.components.UIStyle-1578663445212]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '/* Mot de passe oublié: */
                  color: #4a4a4a;
                  font-size: 12px;
                  .item-inner{
                  		margin-left:0px !important;
                  }
                  }
                  
                  .class1578663445209:hover{
                  font-size: 12px;
                  color: #048EAE;
                  text-decoration: underline;
                  cursor: pointer;
                  '
        ↓Attr [ngx.components.UIAttribute-1578663445215]: 
          attrName: '*ngIf'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:(this['navParams']['data']['that']['local']['published'] == true && getLevelAccesDoc('ManageAccessRights'))
        ↓Text [ngx.components.UIText-1578663488215]: 
          i18n: true
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'share_form' | translate
        ↓Event [ngx.components.UIControlEvent-1578663719810]: 
          ↓ClosePopover [ngx.components.UIDynamicAction-1578663846519]: 
            beanData: '{"ionBean":"ClosePopoverAction"}'
            isEnabled: false
            ↓CustomAction [ngx.components.UICustomAction-1578663852306]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '		let showCheckbox= ()=> {
                      		   let alertCtrl = this.getInstance(AlertController);
                      		        let alert = alertCtrl.create();
                                      alert.setTitle(this.translate.instant("title_acces_right"));
                                      let p = new Promise((resolve)=>{
                                          let user = this.global.user;
                                          if(this.global.user.indexOf("\\")!= -1){
                                              user = [user.slice(0, user.indexOf("\\")), "\\", user.slice(user.indexOf("\\"))].join('''');
                                          }
                                          page.c8o.callJson("C8Oforms.GroupsOf", "user",user)
                                          .then((res)=>{
                                              res = res["sequence"]["document"];
                                              if(res["group"] != undefined){
                                                  if(!(res["group"] instanceof Array)){
                                                      res["group"] = [res["group"]];
                                                  }
                                              }
                                              let grps;
                                              try {
                                                  grps = Object.keys(page["navParams"]["data"]["selectedForm"]["c8oGrp"]);
                                              }catch(e){
                                                  
                                              }
                                              for(let elem of res["group"]){
                                                  if(elem.indexOf("_C8O_HIDDEN_") == -1){
                                                      alert.addInput({
                                                          type: ''checkbox'',
                                                          label: elem,
                                                          value: elem,
                                                          checked: page["navParams"]["data"]["selectedForm"]["c8oGrp"] != undefined ? page["navParams"]["data"]["selectedForm"]["c8oGrp"][elem]: false 
                                                        });
                                                  }
                                                  
                                              }
                                              resolve();
                                              return null;
                                          })
                                          .fail((err)=>{
                                              resolve();
                                          })
                                      })
                                     /* .then(()=>{
                                          return new Promise((resolve)=>{
                                              page.c8o.callJson("lib_FullSyncGrp.GroupsOf", "user",this.global.user)
                                              .then((res)=>{
                                                  return null;
                                              })
                                              .fail((res)=>{
                                                  
                                              })
                                          })
                                          
                                      })*/
                                      .then(()=>{
                                          alert.addButton(''Cancel'');
                                          alert.addButton({
                                            text: ''Ok'',
                                            handler: data => {
                                                let grpObj = {}
                                                
                                                for(let elem of data){
                                                    grpObj[elem] = true;
                                                }
                                                for(let elem in page["navParams"]["data"]["selectedForm"]["c8oGrp"]){
                                                    if(grpObj[elem] == undefined){
                                                        grpObj[elem] = false;
                                                    }
                                                }
                                                page.c8o.callJsonObject("fs://c8oforms_fs.post",{
                                                    "c8oGrp": grpObj,
                                                    "_use_policy": "merge",
                                                    "_id": page["navParams"]["data"]["selectedForm"]["_id"]
                                                })
                                                .then((res)=>{
                                                    return null;
                                                })
                                                .fail((res)=>{
                                                    console.log(res);
                                                })
                                              
                                            
                                            
                                            
                                            }
                                          });
                                          alert.present();
                                      })
                                      
                                      
                                      
                                      
                      		}
                      		showCheckbox();
                      '
              isEnabled: false
            ↓ModalPage [ngx.components.UIDynamicAction-1591801725887]: 
              beanData: |
                '{
                 "ionBean": "ModalAction",
                 "page": "plain:C8Oforms.MobileApplication.Application.ManageAccessRights",
                 "data": "script:{existingGrps: this.navParams.data.selectedForm}",
                 "cssClass": "plain:"
                }'
          ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1606819714684]: 
            beanData: '{"ionBean":"InvokeAction"}'
            stack: C8Oforms.MobileApplication.Application.popOverShareForm
            ↓selectedForm [ngx.components.UIControlVariable-1606819739016]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.navParams.data.selectedForm
          ↓ClosePopover1 [ngx.components.UIDynamicAction-1606819734596]: 
            beanData: '{"ionBean":"ClosePopoverAction"}'
        ↓Attr1 [ngx.components.UIAttribute-1592316614284]: 
          attrName: 
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:tappable
        ↓Icon [ngx.components.UIDynamicElement-1603730319967]: 
          beanData: |
            '{
             "ionBean": "Icon",
             "IconName": "plain:share-social-outline",
             "IconSlot": "plain:start"
            }'
          tagName: ion-icon
      ↓ManageCollab [ngx.components.UIDynamicElement-1594313281739]: 
        beanData: '{"ionBean":"ListItem"}'
        tagName: ion-item
        ↓Style [ngx.components.UIStyle-1594313281742]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '/* Mot de passe oublié: */
                  color: #4a4a4a;
                  font-size: 12px;
                  .item-inner{
                  		margin-left:0px !important;
                  }
                  }
                  
                  .class1594313281739:hover{
                  font-size: 12px;
                  color: #048EAE;
                  text-decoration: underline;
                  cursor: pointer;
                  '
        ↓Attr [ngx.components.UIAttribute-1594313281775]: 
          attrName: '*ngIf'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:(getLevelAccesDoc('ManageAccessRightsResponses'))
        ↓Text [ngx.components.UIText-1594313281778]: 
          i18n: true
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'Add_collaborators' | translate
        ↓Event [ngx.components.UIControlEvent-1594313281781]: 
          ↓ClosePopover [ngx.components.UIDynamicAction-1594313281784]: 
            beanData: '{"ionBean":"ClosePopoverAction"}'
            ↓CustomAction [ngx.components.UICustomAction-1594313281787]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '		let showCheckbox= ()=> {
                      		   let alertCtrl = this.getInstance(AlertController);
                      		        let alert = alertCtrl.create();
                                      alert.setTitle(this.translate.instant("title_acces_right"));
                                      let p = new Promise((resolve)=>{
                                          let user = this.global.user;
                                          if(this.global.user.indexOf("\\")!= -1){
                                              user = [user.slice(0, user.indexOf("\\")), "\\", user.slice(user.indexOf("\\"))].join('''');
                                          }
                                          page.c8o.callJson("C8Oforms.GroupsOf", "user",user)
                                          .then((res)=>{
                                              res = res["sequence"]["document"];
                                              if(res["group"] != undefined){
                                                  if(!(res["group"] instanceof Array)){
                                                      res["group"] = [res["group"]];
                                                  }
                                              }
                                              let grps;
                                              try {
                                                  grps = Object.keys(page["navParams"]["data"]["selectedForm"]["c8oGrp"]);
                                              }catch(e){
                                                  
                                              }
                                              for(let elem of res["group"]){
                                                  if(elem.indexOf("_C8O_HIDDEN_") == -1){
                                                      alert.addInput({
                                                          type: ''checkbox'',
                                                          label: elem,
                                                          value: elem,
                                                          checked: page["navParams"]["data"]["selectedForm"]["c8oGrp"] != undefined ? page["navParams"]["data"]["selectedForm"]["c8oGrp"][elem]: false 
                                                        });
                                                  }
                                                  
                                              }
                                              resolve();
                                              return null;
                                          })
                                          .fail((err)=>{
                                              resolve();
                                          })
                                      })
                                     /* .then(()=>{
                                          return new Promise((resolve)=>{
                                              page.c8o.callJson("lib_FullSyncGrp.GroupsOf", "user",this.global.user)
                                              .then((res)=>{
                                                  return null;
                                              })
                                              .fail((res)=>{
                                                  
                                              })
                                          })
                                          
                                      })*/
                                      .then(()=>{
                                          alert.addButton(''Cancel'');
                                          alert.addButton({
                                            text: ''Ok'',
                                            handler: data => {
                                                let grpObj = {}
                                                
                                                for(let elem of data){
                                                    grpObj[elem] = true;
                                                }
                                                for(let elem in page["navParams"]["data"]["selectedForm"]["c8oGrp"]){
                                                    if(grpObj[elem] == undefined){
                                                        grpObj[elem] = false;
                                                    }
                                                }
                                                page.c8o.callJsonObject("fs://c8oforms_fs.post",{
                                                    "c8oGrp": grpObj,
                                                    "_use_policy": "merge",
                                                    "_id": page["navParams"]["data"]["selectedForm"]["_id"]
                                                })
                                                .then((res)=>{
                                                    return null;
                                                })
                                                .fail((res)=>{
                                                    console.log(res);
                                                })
                                              
                                            
                                            
                                            
                                            }
                                          });
                                          alert.present();
                                      })
                                      
                                      
                                      
                                      
                      		}
                      		showCheckbox();
                      '
              isEnabled: false
            ↓ModalPage [ngx.components.UIDynamicAction-1594313281790]: 
              beanData: |
                '{
                 "ionBean": "ModalAction",
                 "page": "plain:C8Oforms.MobileApplication.Application.ManageAccessRights",
                 "data": "script:{existingGrps: this.navParams.data.selectedForm, ''resp'':true}",
                 "cssClass": "plain:"
                }'
              isEnabled: false
          ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1606819884422]: 
            beanData: '{"ionBean":"InvokeAction"}'
            stack: C8Oforms.MobileApplication.Application.popOverManageCollab
            ↓selectedForm [ngx.components.UIControlVariable-1606819896230]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.navParams.data.selectedForm
          ↓Log [ngx.components.UIDynamicAction-1646931077218]: 
            beanData: |
              '{
               "ionBean": "LogAction",
               "message": "script:''mon log'' + this.navParams.data.selectedForm._id",
               "level": "plain:warn"
              }'
        ↓Attr1 [ngx.components.UIAttribute-1594313281793]: 
          attrName: 
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:tappable
        ↓Icon [ngx.components.UIDynamicElement-1603730321735]: 
          beanData: |
            '{
             "ionBean": "Icon",
             "IconName": "plain:key",
             "IconSlot": "plain:start"
            }'
          tagName: ion-icon
      ↓ManageLabels [ngx.components.UIDynamicElement-1578920252046]: 
        beanData: '{"ionBean":"ListItem"}'
        tagName: ion-item
        ↓Style [ngx.components.UIStyle-1578920252049]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '/* Mot de passe oublié: */
                  color: #4a4a4a;
                  font-size: 12px;
                  .item-inner{
                  		margin-left:0px !important;
                  }
                  }
                  
                  .class1578920252046:hover{
                  font-size: 12px;
                  color: #048EAE;
                  text-decoration: underline;
                  cursor: pointer;
                  '
        ↓Text [ngx.components.UIText-1578920252055]: 
          i18n: true
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'manage_labels' | translate
        ↓Event [ngx.components.UIControlEvent-1578920252058]: 
          ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1606820109011]: 
            beanData: '{"ionBean":"InvokeAction"}'
            stack: C8Oforms.MobileApplication.Application.popOverManageLabels
            ↓selectedForm [ngx.components.UIControlVariable-1606820123457]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.navParams.data.selectedForm
            ↓published [ngx.components.UIControlVariable-1628788140503]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this['navParams']['data']['that']['local']['published']
          ↓ClosePopover [ngx.components.UIDynamicAction-1606820146866]: 
            beanData: '{"ionBean":"ClosePopoverAction"}'
        ↓Attr1 [ngx.components.UIAttribute-1578930175811]: 
          attrName: '*ngIf'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:getLevelAccesDoc('ManageLabels')
        ↓Attr11 [ngx.components.UIAttribute-1592316616503]: 
          attrName: 
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:tappable
        ↓Icon [ngx.components.UIDynamicElement-1603730324637]: 
          beanData: |
            '{
             "ionBean": "Icon",
             "IconName": "plain:folder-open",
             "IconSlot": "plain:start"
            }'
          tagName: ion-icon
      ↓copy [ngx.components.UIDynamicElement-1588251387387]: 
        beanData: '{"ionBean":"ListItem"}'
        tagName: ion-item
        ↓Text [ngx.components.UIText-1588251387390]: 
          i18n: true
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:duplicate_form
        ↓Style [ngx.components.UIStyle-1588251387393]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '/* Mot de passe oublié: */
                  color: #4a4a4a;
                  font-size: 12px;
                  .item-inner{
                  		margin-left:0px !important;
                  }
                  
                  }
                  .class1588251387387:hover{
                  font-size: 12px;
                  color: #048EAE;
                  text-decoration: underline;
                  cursor: pointer;
                  '
        ↓Event [ngx.components.UIControlEvent-1588251387396]: 
          ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1606820531075]: 
            beanData: '{"ionBean":"InvokeAction"}'
            stack: C8Oforms.MobileApplication.Application.popOverCopy
            ↓selectedForm [ngx.components.UIControlVariable-1606820546294]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.navParams.data.selectedForm
          ↓ClosePopover [ngx.components.UIDynamicAction-1606820598788]: 
            beanData: '{"ionBean":"ClosePopoverAction"}'
        ↓Attr [ngx.components.UIAttribute-1588251387411]: 
          attrName: '*ngIf'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:this['navParams']['data']['that']['local']['published'] == false
        ↓Attr1 [ngx.components.UIAttribute-1592316620506]: 
          attrName: 
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:tappable
        ↓Icon [ngx.components.UIDynamicElement-1603795700163]: 
          beanData: |
            '{
             "ionBean": "Icon",
             "IconName": "plain:copy",
             "IconSlot": "plain:start"
            }'
          tagName: ion-icon
      ↓copyTo [ngx.components.UIDynamicElement-1588254912106]: 
        beanData: '{"ionBean":"ListItem"}'
        tagName: ion-item
        ↓Text [ngx.components.UIText-1588254912109]: 
          i18n: true
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:duplicate_form_to
        ↓Style [ngx.components.UIStyle-1588254912112]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '/* Mot de passe oublié: */
                  color: #4a4a4a;
                  font-size: 12px;
                  .item-inner{
                  		margin-left:0px !important;
                  }
                  
                  }
                  .class1588254912106:hover{
                  font-size: 12px;
                  color: #048EAE;
                  text-decoration: underline;
                  cursor: pointer;
                  '
        ↓Event [ngx.components.UIControlEvent-1588254912115]: 
          ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1606821808620]: 
            beanData: '{"ionBean":"InvokeAction"}'
            stack: C8Oforms.MobileApplication.Application.popOverCopy
            ↓selectedForm [ngx.components.UIControlVariable-1606821819910]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.navParams.data.selectedForm
          ↓ClosePopover [ngx.components.UIDynamicAction-1606821836861]: 
            beanData: '{"ionBean":"ClosePopoverAction"}'
        ↓Attr [ngx.components.UIAttribute-1588254912130]: 
          attrName: '*ngIf'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:this['navParams']['data']['that']['local']['published'] == true && ((this.global?.settings?.editing_rights != undefined && this.global?.settings?.editing_rights == 'true') || this.global?.settings?.editing_rights == undefined)
        ↓Attr1 [ngx.components.UIAttribute-1592316622493]: 
          attrName: 
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:tappable
        ↓Icon [ngx.components.UIDynamicElement-1603795702797]: 
          beanData: |
            '{
             "ionBean": "Icon",
             "IconName": "plain:copy",
             "IconSlot": "plain:start"
            }'
          tagName: ion-icon
      ↓exporter [ngx.components.UIDynamicElement-1569858735855]: 
        beanData: '{"ionBean":"ListItem"}'
        tagName: ion-item
        ↓Text [ngx.components.UIText-1569858735858]: 
          i18n: true
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:Exporter_form
        ↓Style [ngx.components.UIStyle-1569858735861]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '/* Mot de passe oublié: */
                  color: #4a4a4a;
                  font-size: 12px;
                  .item-inner{
                  		margin-left:0px !important;
                  }
                  
                  }
                  .class1569858735855:hover{
                  font-size: 12px;
                  color: #048EAE;
                  text-decoration: underline;
                  cursor: pointer;
                  '
        ↓Event [ngx.components.UIControlEvent-1569858735864]: 
          ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1606829749824]: 
            beanData: '{"ionBean":"InvokeAction"}'
            stack: C8Oforms.MobileApplication.Application.popOverExport
            ↓selectedForm [ngx.components.UIControlVariable-1606829767026]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.navParams.data.selectedForm
            ↓ClosePopover [ngx.components.UIDynamicAction-1606844004989]: 
              beanData: '{"ionBean":"ClosePopoverAction"}'
        ↓Attr1 [ngx.components.UIAttribute-1592316583995]: 
          attrName: 
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:tappable
        ↓Icon [ngx.components.UIDynamicElement-1603730303004]: 
          beanData: |
            '{
             "ionBean": "Icon",
             "IconName": "plain:download",
             "IconSlot": "plain:start"
            }'
          tagName: ion-icon
      ↓DeleteView [ngx.components.UIDynamicElement-1566923689496]: 
        beanData: '{"ionBean":"ListItem"}'
        tagName: ion-item
        ↓Text [ngx.components.UIText-1566923700572]: 
          i18n: true
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:Supprimer
        ↓Style [ngx.components.UIStyle-1566924006573]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '/* Mot de passe oublié: */
                  color: #4a4a4a;
                  font-size: 12px;
                  .item-inner{
                  		margin-left:0px !important;
                  }
                  
                  }
                  .class1566923689496:hover{
                  font-size: 12px;
                  color: #048EAE;
                  text-decoration: underline;
                  cursor: pointer;
                  '
        ↓Event [ngx.components.UIControlEvent-1567067510375]: 
          ↓Error_Handler [ngx.components.UIActionErrorEvent-1594904451943]: 
            isEnabled: false
            ↓Toast [ngx.components.UIDynamicAction-1594904459910]: 
              beanData: |
                '{
                 "ionBean": "ToastAction",
                 "message": "script:this.translate.instant(''error_del_form'')",
                 "cssClass": "plain:"
                }'
          ↓showAlertConfirmation [ngx.components.UIDynamicAction-1599219823447]: 
            beanData: |
              '{
               "ionBean": "AlertAction",
               "subHeader": "script:this.translate.instant(''confirm_deletion'') + '' '' + this.navParams.data.selectedForm.name",
               "message": "plain:",
               "cssClass": "plain:c8o-alert-create-form",
               "button1": "script:this.translate.instant(''Cancel'')",
               "button2": "plain:OK",
               "value1": "plain:0",
               "value2": "plain:1",
               "cancel1": "plain:cancel",
               "css1": "plain:yesnobt",
               "css2": "plain:yesnobt"
              }'
            isEnabled: false
            ↓IfConfirmed [ngx.components.UIDynamicAction-1599219823450]: 
              beanData: '{"ionBean":"IfAction","condition":"script:parent.out == 1"}'
              ↓getLocalPublished [ngx.components.UICustomAction-1573639023996]: 
                actionValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        		resolve(this['navParams']['data']['that']['local']['published']);
                        
                ↓prepareArgs [ngx.components.UICustomAction-1575982471443]: 
                  actionValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          		    let idx = this['navParams']['data']['selectedForm']._id;
                          		    try{
                          		        if(idx == this.global.formSelected._id){
                          	                this.global.formSelected = null;
                          	            }
                          		    }
                          		    catch(e){
                          		        
                          		    }
                          		    resolve(idx);
                          
                  ↓PostData [ngx.components.UIDynamicAction-1575982471458]: 
                    beanData: |
                      '{
                       "ionBean": "FullSyncPostAction",
                       "requestable": "plain:C8Oforms.c8oforms_fs",
                       "_id": "script:parent.out",
                       "_use_policy": "plain:merge"
                      }'
                    ↓deleted [ngx.components.UIControlVariable-1575982471461]: 
                      varValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:true
                    ↓ClosePopover [ngx.components.UIDynamicAction-1576599825802]: 
                      beanData: '{"ionBean":"ClosePopoverAction"}'
          ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1606843880956]: 
            beanData: '{"ionBean":"InvokeAction"}'
            stack: C8Oforms.MobileApplication.Application.popOverDeleteView
            ↓selectedForm [ngx.components.UIControlVariable-1606843896086]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.navParams.data.selectedForm
          ↓ClosePopover [ngx.components.UIDynamicAction-1606844013722]: 
            beanData: '{"ionBean":"ClosePopoverAction"}'
        ↓Attr1 [ngx.components.UIAttribute-1592316586107]: 
          attrName: 
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:tappable
        ↓Icon [ngx.components.UIDynamicElement-1603730259711]: 
          beanData: |
            '{
             "ionBean": "Icon",
             "IconName": "plain:trash",
             "IconSlot": "plain:start"
            }'
          tagName: ion-icon
        ↓Attr [ngx.components.UIAttribute-1613591759079]: 
          attrName: '*ngIf'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:getLevelAccesDoc('DeleteView')
    ↓Tag [ngx.components.UIElement-1629226119440]: 
      identifier: ElseBlock_1629226119440
      tagName: ng-template
      ↓DeleteView [ngx.components.UIDynamicElement-1629226157427]: 
        beanData: '{"ionBean":"ListItem"}'
        tagName: ion-item
        ↓Text [ngx.components.UIText-1629226157430]: 
          i18n: true
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:delete_folder
        ↓Style [ngx.components.UIStyle-1629226157433]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '/* Mot de passe oublié: */
                  color: #4a4a4a;
                  font-size: 12px;
                  .item-inner{
                  		margin-left:0px !important;
                  }
                  
                  }
                  .class1566923689496:hover{
                  font-size: 12px;
                  color: #048EAE;
                  text-decoration: underline;
                  cursor: pointer;
                  '
        ↓Event [ngx.components.UIControlEvent-1629226157436]: 
          ↓computeParams [ngx.components.UICustomAction-1629226847901]: 
            actionValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    		resolve({params:{folder:this.navParams.data["key"]}});
                    
            ↓showAlertConfirmation [ngx.components.UIDynamicAction-1629226157445]: 
              beanData: |
                '{
                 "ionBean": "AlertAction",
                 "subHeader": "script:this.translate.instant(''delete_folder_confirm'', parent.out.params)",
                 "message": "script:this.translate.instant(''delete_folder_confirm_msg'')",
                 "cssClass": "plain:c8o-alert-create-form",
                 "button1": "script:this.translate.instant(''Cancel'')",
                 "button2": "plain:OK",
                 "value1": "plain:0",
                 "value2": "plain:1",
                 "cancel1": "plain:cancel",
                 "css1": "plain:yesnobt",
                 "css2": "plain:yesnobt"
                }'
              ↓IfConfirmed [ngx.components.UIDynamicAction-1629226157448]: 
                beanData: '{"ionBean":"IfAction","condition":"script:parent.out.data == 1"}'
                ↓callSequenceRemoveTag [ngx.components.UICustomAction-1629295376047]: 
                  actionValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '		let meta = {
                          			[page.navParams.data.that.local.published ? "c8o_view_type_published_folder" : "c8o_view_type_drafts_folder"] : true,
                          			folderName: page.navParams.data["key"],
                          			action: "remove"
                          		};
                          		
                          		page.c8o.callJsonObject("C8Oforms.APIV2_updateTags", {
                          			meta: JSON.stringify(meta)
                          		}).then((res: any)=>{
                          			resolve({"error": false, noRightsToDelte: res.res?.error == true, params: {folder:page.navParams.data["key"]}});	
                          			return null;
                          		})
                          		.fail((e)=>{
                          			resolve({"error": true, noRightsToDelte: false, params: {folder:page.navParams.data["key"]}});	
                          		})
                          //		page.c8o.callJsonObject(
                          //			"fs://c8oforms_fs.view",
                          //			{
                          //				"ddoc": this.navParams.data.that.local["ddoc"],
                          //                "view": "in_folders",
                          //                "__live": "viewLiveInFolders",
                          //                "descending": true,
                          //                "endkey":[this.navParams.data["key"]],
                          //                "startkey":[this.navParams.data["key"], {}],
                          //				include_docs: true
                          //
                          //			}
                          //		).async()
                          //		.then(async (res: any)=>{
                          //			let error = false;
                          //			let cpt = 0;
                          //			for(let el of res.rows){
                          //				let doc = el.doc;
                          //				var name = doc["name"];
                          //				try{
                          //					if(page["getLevelAccesDoc"](''ManageLabels'', doc, this.global.settings)){
                          //						let newTag = [];
                          //						if(doc.tag != undefined && doc.tag instanceof Array){
                          //							newTag = doc.tag.filter((x)=>{return x != this.navParams.data["key"]});
                          //						}
                          //						let res = await page.c8o.callJsonObject("fs://c8oforms_fs.post",{
                          //							"_id": doc._id,
                          //							"tag": newTag,
                          //							"_use_policy": "merge",
                          //							_use_merge_tag : "override" 
                          //						}).async();
                          //						
                          //					}
                          //					else{
                          //						cpt++;
                          //					}				
                          //				}
                          //				catch(e){
                          //					error = true;
                          //				}
                          //				
                          //			}
                          //			try{
                          //				let res = await page.c8o.callJsonObject("fs://c8oforms_fs.delete",{
                          //							"docid": "folder_"+this.navParams.data["key"]
                          //						}).async();
                          //			}
                          //			catch(e){
                          //				error = true;
                          //			}
                          //			resolve({"error": error, noRightsToDelte: cpt > 0, params: {folder:this.navParams.data["key"]}});			
                          //		})
                          //		.catch((err)=>{
                          //			resolve({"error": true, params: {folder:this.navParams.data["key"]}});
                          //			console.error("fs://c8oforms_fs.view err", err);
                          //		})
                          '
                  ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1629311204118]: 
                    beanData: '{"ionBean":"InvokeAction"}'
                    stack: C8Oforms.MobileApplication.Application.showToast
                    ↓msg [ngx.components.UIControlVariable-1629311223984]: 
                      varValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: 'script:parent.out.error ? c8oPage.translate.instant(''delete_folder_errored'', parent.out.params) : parent.out.noRightsToDelte ? c8oPage.translate.instant(''delete_folder_partial'', parent.out.params) : c8oPage.translate.instant(''delete_folder_success'', parent.out.params)'
                    ↓duration [ngx.components.UIControlVariable-1629311223986]: 
                      varValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:'5000'
                    ↓position [ngx.components.UIControlVariable-1629311223988]: 
                      varValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:'bottom'
                    ↓cssClass [ngx.components.UIControlVariable-1629311223990]: 
                      varValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: 'script:parent.out.error ? ''toastError'' : parent.out.noRightsToDelte ? ''toastWarn'': ''toastSuccess'''
                    ↓showCloseButton [ngx.components.UIControlVariable-1629311223992]: 
                      varValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:false
                    ↓closeButtonText [ngx.components.UIControlVariable-1629311223994]: 
                      varValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:'Close'
              ↓ClosePopover [ngx.components.UIDynamicAction-1629226924395]: 
                beanData: '{"ionBean":"ClosePopoverAction"}'
        ↓Attr1 [ngx.components.UIAttribute-1629226157475]: 
          attrName: 
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:tappable
        ↓Icon [ngx.components.UIDynamicElement-1629226157478]: 
          beanData: |
            '{
             "ionBean": "Icon",
             "IconName": "plain:trash",
             "IconSlot": "plain:start"
            }'
          tagName: ion-icon
        ↓Attr [ngx.components.UIAttribute-1629226157481]: 
          attrName: '*ngIf'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:getLevelAccesDoc('DeleteView')
          isEnabled: false
      ↓DeleteView1 [ngx.components.UIDynamicElement-1629226400231]: 
        beanData: '{"ionBean":"ListItem"}'
        tagName: ion-item
        ↓Text [ngx.components.UIText-1629226400234]: 
          i18n: true
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:delete_folder_and_all_forms
        ↓Style [ngx.components.UIStyle-1629226400237]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '/* Mot de passe oublié: */
                  color: #4a4a4a;
                  font-size: 12px;
                  .item-inner{
                  		margin-left:0px !important;
                  }
                  
                  }
                  .class1566923689496:hover{
                  font-size: 12px;
                  color: #048EAE;
                  text-decoration: underline;
                  cursor: pointer;
                  '
        ↓Event [ngx.components.UIControlEvent-1629226400240]: 
          ↓computeParams [ngx.components.UICustomAction-1629835784997]: 
            actionValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    		resolve({params:{folder:this.navParams.data["key"]}});
                    
            ↓showAlertConfirmation [ngx.components.UIDynamicAction-1629835785000]: 
              beanData: |
                '{
                 "ionBean": "AlertAction",
                 "subHeader": "script:this.translate.instant(''delete_folder_and_all_forms_confirm'', parent.out.params)",
                 "message": "script:this.translate.instant(''delete_folder_and_all_forms_confirm_msg'')",
                 "cssClass": "plain:c8o-alert-create-form",
                 "button1": "script:this.translate.instant(''Cancel'')",
                 "button2": "plain:OK",
                 "value1": "plain:0",
                 "value2": "plain:1",
                 "cancel1": "plain:cancel",
                 "css1": "plain:yesnobt",
                 "css2": "plain:yesnobt"
                }'
              ↓IfConfirmed [ngx.components.UIDynamicAction-1629835785003]: 
                beanData: '{"ionBean":"IfAction","condition":"script:parent.out.data == 1"}'
                ↓callSequenceRemoveTag [ngx.components.UICustomAction-1629835785021]: 
                  actionValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '		let meta = {
                          			[page.navParams.data.that.local.published ? "c8o_view_type_published_folder" : "c8o_view_type_drafts_folder"] : true,
                          			folderName: page.navParams.data["key"],
                          			action: "deleteAll"
                          		};
                          		
                          		page.c8o.callJsonObject("C8Oforms.APIV2_updateTags", {
                          			meta: JSON.stringify(meta)
                          		}).then((res: any)=>{
                          			resolve({"error": false, noRightsToDelte: res.res?.error == true, params: {folder:page.navParams.data["key"]}});	
                          			return null;
                          		})
                          		.fail((e)=>{
                          			resolve({"error": true, noRightsToDelte: false, params: {folder:page.navParams.data["key"]}});	
                          		})
                          '
                  ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1629835785024]: 
                    beanData: '{"ionBean":"InvokeAction"}'
                    stack: C8Oforms.MobileApplication.Application.showToast
                    ↓msg [ngx.components.UIControlVariable-1629835785027]: 
                      varValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: 'script:parent.out.error ? c8oPage.translate.instant(''delete_folder_errored'', parent.out.params) : parent.out.noRightsToDelte ? c8oPage.translate.instant(''delete_folder_partial'', parent.out.params) : c8oPage.translate.instant(''delete_folder_success'', parent.out.params)'
                    ↓duration [ngx.components.UIControlVariable-1629835785030]: 
                      varValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:'5000'
                    ↓position [ngx.components.UIControlVariable-1629835785033]: 
                      varValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:'bottom'
                    ↓cssClass [ngx.components.UIControlVariable-1629835785036]: 
                      varValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: 'script:parent.out.error ? ''toastError'' : parent.out.noRightsToDelte ? ''toastWarn'': ''toastSuccess'''
                    ↓showCloseButton [ngx.components.UIControlVariable-1629835785039]: 
                      varValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:false
                    ↓closeButtonText [ngx.components.UIControlVariable-1629835785042]: 
                      varValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:'Close'
              ↓ClosePopover [ngx.components.UIDynamicAction-1629835785045]: 
                beanData: '{"ionBean":"ClosePopoverAction"}'
        ↓Attr1 [ngx.components.UIAttribute-1629226400279]: 
          attrName: 
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:tappable
        ↓Icon [ngx.components.UIDynamicElement-1629226400282]: 
          beanData: |
            '{
             "ionBean": "Icon",
             "IconName": "plain:trash",
             "IconSlot": "plain:start"
            }'
          tagName: ion-icon
        ↓Attr [ngx.components.UIAttribute-1629226400285]: 
          attrName: '*ngIf'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:getLevelAccesDoc('DeleteView')
          isEnabled: false
↓PageEvent1 [ngx.components.UIEventSubscriber-1645090139902]: 
  comment: Old implementation of onCanEnter. Prefer using AppGuard now.
  topic: CanEnter
  ↓CheckUser1 [ngx.components.UICustomAction-1576682866944]: 
    actionValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            		    // Getting user status (whenever he is logged or not)
            		    if(page.c8o.session.status == C8oSessionStatus.Connected || page.c8o.session.status == C8oSessionStatus.HasBeenConnected){
                            resolve(true);
                        }
            		    page.c8o.httpInterface.getUserServiceStatus()
            		    .then((res)=>{
            		        if(res.user.length == 64 || res.user.authenticated == false){
            		            setTimeout(()=>{
            	                    page.routerProvider.setRoot("loginPage", {}, null); 
            	                }, 200);
                                resolve(false);
                            }
                            else{
                                
                                resolve(true);
                            }
            		    })
            		    .catch((err)=>{
            		        setTimeout(()=>{
            		            page.routerProvider.setRoot("loginPage", {}, null); 
            		        }, 200);
            		        resolve(false);
            		    })
                          
            		   /* this.local.debug = {};
                        let formId = this.navParams.get('formId');
                        if(formId != undefined){
                            this.local.formId = formId;
                            resolve(true);
                        }
                        else{
                            resolve(true);
                        }*/
                       
                        
            		/*
            		if(this.global.user == '' || this.global.user == undefined){
            		    window.location.href = './';
            		    resolve(false);
            		}
            		else{
            		    resolve(true);
            		}*/
            
    page_ts_imports: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
        - com.twinsoft.convertigo.beans.common.XMLVector: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
            - com.twinsoft.convertigo.beans.common.XMLVector: 
              - java.lang.String: 
                - ↑value: C8oSessionStatus
              - java.lang.String: 
                - ↑value: c8osdkangular