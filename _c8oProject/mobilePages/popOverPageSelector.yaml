scriptContent: 
  - xmlizable: 
    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
    - com.twinsoft.convertigo.beans.common.FormatedContent: 
      →: |
        '/*Begin_c8o_PageImport*/
        /*End_c8o_PageImport*/
        /*Begin_c8o_PageDeclaration*/
        	/*End_c8o_PageDeclaration*/
        /*Begin_c8o_PageConstructor*/
        		/*End_c8o_PageConstructor*/
        /*Begin_c8o_PageFunction*/
        	upperFirst(str: string){
        	   return  str[0].toUpperCase() + str.slice(1);	    
        	}
        	
        	public replaceEmpty(str){
        	    return str.replace(/ /g, ''_'');
        	}
        	
        	public isMineOrCollab(){
        		if(this[''navParams''][''data''][''selectedForm''][''~c8oAcl''] == this.global.user){
        			return true
        		}
        		else if(this[''navParams''][''data''].selectedForm.c8oCollabs != undefined){
        			var founded = Object
        	            .keys(this[''navParams''][''data''].selectedForm.c8oCollabs)
        				.filter((x)=>{return x.substring(12) == this.global.user})
        			return founded.length > 0;
        		}
        		else{
        			return false;
        		}
        	}
        	public isVisible(){
        	    try{
        	        if(this[''navParams''][''data''][''selectedForm''][''~c8oAcl''] == this.global.user){
        	            return true
        	        }
        	        else{
        	            var formGrp = Object
        	            .keys(this[''navParams''][''data''].selectedForm.c8oGrp)
        	            .filter(k => this[''navParams''][''data''].selectedForm.c8oGrp[k])
        	            
        	            var userGrp = Object
        	            .keys(this.global.settings.groups)
        	            .filter(k => this.global.settings.groups[k]);
        	            
        	            return (formGrp.filter(e => userGrp.indexOf(e) !== -1)).length > 0;
        	        }
        	    }
        	    catch(e){
        	        return false;
        	    }
        	    
        	    
        	    
        	}
        	getLevelAccesDoc(action, doc = this[''navParams''][''data''][''selectedForm''], settings = this.global.settings){
        		// if I am the owner of the doc
        		let val = 5;
        		if(doc.creator == settings["~c8oAcl"]){
        			return true;
        		}
        		else {
        			let groups = settings.group != undefined ? Object.keys(settings.groups).filter((x)=>{ return settings.groups[x] == true}) : [];
        			let isAcollabResp = doc.collabsResponse != undefined && (doc.collabsResponse.indexOf(settings["_id"]) != -1 || doc.collabsResponse.filter(value => (groups.indexOf(value) != -1)).length > 0);
        			let isAcollab = doc.collabs != undefined && (doc.collabs.indexOf(settings["_id"]) != -1 || doc.collabs.filter(value => (groups.indexOf(value) != -1)).length > 0);
        			let isAshared  = doc.shared != undefined && (doc.shared.indexOf(settings["_id"]) != -1 || doc.shared.filter(value => (groups.indexOf(value) != -1)).length > 0);
        			if(isAcollabResp && isAcollab){
        				val = 1;
        			}
        			else if(isAcollab){
        				val = 2;
        			}
        			else if(isAcollabResp){
        				val = 3;
        			}
        			else if(isAshared){
        				val = 4;
        			}
        			switch(action){
        				case "editView":
        					if(val < 3){
        						return true;
        					}
        					else{
        						return false;
        					}
        				case "publishDoc":
        					if(val < 3){
        						return true;
        					}
        					else{
        						return false;
        					}
        				case "VizualiseResponses":
        					if(val == 1 || val == 3){
        						return true;
        					}
        					else{
        						return false;
        					}
        				case "DownloadCsv":
        					if(val == 1 || val == 3){
        						return true;
        					}
        					else{
        						return false;
        					}
        				case "CreatePwa":
        					if(val < 3){
        						return true;
        					}
        					else{
        						return false;
        					}
        				case "ManageAccessRights":
        					if(val < 3){
        						return true;
        					}
        					else{
        						return false;
        					}
        				/*case "ManageAccessRightsResponses":
        					if(val == 1 || val == 3){
        						return true;
        					}
        					else{
        						return false;
        					}
        				break;*/
        				case "ManageLabels":
        					if(val < 3){
        						return true;
        					}
        					else{
        						return false;
        					}
        				case "Thumbnail":
        					if(val < 3){
        						return true;
        					}
        					else{
        						return false;
        					}
        				default:
        					return false;
        			}
        		}
        		
        	}
        	
        	public blobToBase64(blobData){
        	    return new Promise( async (resolve, reject) => {
        	        var reader = new FileReader();
        	        reader.onloadend = function () {
                        resolve(reader.result);
                    };
                    reader.readAsDataURL(blobData);
        	    });
        	}
        	/*End_c8o_PageFunction*/
        '
segment: path-to-popoverpageselector
title: Title for popOverPageSelector
↓Content [mobile.components.UIDynamicElement-1566923643544]: 
  beanData: '{"ionBean":"Content","IonPadding":"plain:false"}'
  tagName: ion-content
  ↓ListContainer [mobile.components.UIDynamicElement-1566923669585]: 
    beanData: '{"ionBean":"List","Nolines":"plain:no-lines"}'
    tagName: ion-list
    ↓editView [mobile.components.UIDynamicElement-1567072378199]: 
      beanData: '{"ionBean":"ListItem"}'
      tagName: ion-item
      ↓Icon [mobile.components.UIDynamicElement-1603724774729]: 
        beanData: |
          '{
           "ionBean": "Icon",
           "IconName": "plain:build",
           "ItemPosition": "plain:item-start"
          }'
        tagName: ion-icon
      ↓Text [mobile.components.UIText-1567072378202]: 
        textValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:Editer
      ↓Style [mobile.components.UIStyle-1567072378205]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '/* Mot de passe oublié: */
                color: #4a4a4a;
                font-size: 12px;
                
                	.item-inner{
                		margin-left:0px !important;
                	}
                }
                .class1567072378199:hover{
                font-size: 12px;
                color: #048EAE;
                text-decoration: underline;
                cursor: pointer;
                '
      ↓Event [mobile.components.UIControlEvent-1567072539218]: 
        attrName: (click)
        ↓InvokeSharedAction [mobile.components.UIDynamicInvoke-1606727297010]: 
          beanData: '{"ionBean":"InvokeAction"}'
          stack: C8Oforms.MobileApplication.Application.popOverEditView
          ↓selectedForm [mobile.components.UIControlVariable-1606727308688]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.navParams?.data?.selectedForm
          ↓ClosePopover [mobile.components.UIDynamicAction-1606727210916]: 
            beanData: '{"ionBean":"ClosePopoverAction"}'
      ↓Attr [mobile.components.UIAttribute-1572344598772]: 
        attrName: '*ngIf'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:this['navParams']['data']['that']['local']['published'] == false && getLevelAccesDoc('editView')
      ↓Attr1 [mobile.components.UIAttribute-1592316594791]: 
        attrName: 
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:tappable
    ↓visualizeView [mobile.components.UIDynamicElement-1567072332062]: 
      beanData: '{"ionBean":"ListItem"}'
      tagName: ion-item
      ↓Text [mobile.components.UIText-1567072332065]: 
        textValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:Visualiser
      ↓Style [mobile.components.UIStyle-1567072332068]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '/* Mot de passe oublié: */
                color: #4a4a4a;
                font-size: 12px;
                
                .item-inner{
                		margin-left:0px !important;
                	}
                }
                .class1567072332062:hover{
                font-size: 12px;
                color: #048EAE;
                text-decoration: underline;
                cursor: pointer;
                '
      ↓Event [mobile.components.UIControlEvent-1567072915734]: 
        attrName: (click)
        ↓InvokeSharedAction [mobile.components.UIDynamicInvoke-1606728735390]: 
          beanData: '{"ionBean":"InvokeAction"}'
          stack: C8Oforms.MobileApplication.Application.popOverVisualizeView
          ↓selectedForm [mobile.components.UIControlVariable-1606728751093]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.navParams?.data?.selectedForm
          ↓ClosePopover [mobile.components.UIDynamicAction-1606728763646]: 
            beanData: '{"ionBean":"ClosePopoverAction"}'
      ↓Attr1 [mobile.components.UIAttribute-1592316592688]: 
        attrName: 
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:tappable
      ↓Icon [mobile.components.UIDynamicElement-1603725257774]: 
        beanData: |
          '{
           "ionBean": "Icon",
           "IconName": "plain:eye",
           "ItemPosition": "plain:item-start"
          }'
        tagName: ion-icon
    ↓publishDoc [mobile.components.UIDynamicElement-1571921646941]: 
      beanData: '{"ionBean":"ListItem"}'
      tagName: ion-item
      ↓Text [mobile.components.UIText-1571921646944]: 
        textValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:Publier
      ↓Style [mobile.components.UIStyle-1571921646947]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '/* Mot de passe oublié: */
                color: #4a4a4a;
                font-size: 12px;
                .item-inner{
                		margin-left:0px !important;
                }
                
                }
                .class1571921646941:hover{
                font-size: 12px;
                color: #048EAE;
                text-decoration: underline;
                cursor: pointer;
                '
      ↓Event [mobile.components.UIControlEvent-1571921646950]: 
        attrName: (click)
        eventName: onClick
        ↓InvokeSharedAction [mobile.components.UIDynamicInvoke-1606729477447]: 
          beanData: '{"ionBean":"InvokeAction"}'
          stack: C8Oforms.MobileApplication.Application.popOverPublishDoc
          ↓selectedForm [mobile.components.UIControlVariable-1606729486845]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.navParams?.data?.selectedForm
          ↓ClosePopover [mobile.components.UIDynamicAction-1606729508786]: 
            beanData: '{"ionBean":"ClosePopoverAction"}'
      ↓Attr [mobile.components.UIAttribute-1572344734356]: 
        attrName: '*ngIf'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:this['navParams']['data']['that']['local']['published'] == false &&getLevelAccesDoc('publishDoc')
      ↓Attr1 [mobile.components.UIAttribute-1592316498784]: 
        attrName: 
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:tappable
      ↓Icon [mobile.components.UIDynamicElement-1603730305674]: 
        beanData: |
          '{
           "ionBean": "Icon",
           "IconName": "plain:share-alt",
           "ItemPosition": "plain:item-start"
          }'
        tagName: ion-icon
    ↓VizualiseResponses [mobile.components.UIDynamicElement-1580132441145]: 
      beanData: '{"ionBean":"ListItem"}'
      tagName: ion-item
      ↓Style [mobile.components.UIStyle-1580132441148]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                'color: #4a4a4a;
                font-size: 12px;
                .item-inner{
                		margin-left:0px !important;
                }
                }
                
                .class1580132441145:hover{
                font-size: 12px;
                color: #048EAE;
                text-decoration: underline;
                cursor: pointer;
                '
      ↓Event [mobile.components.UIControlEvent-1580132441154]: 
        attrName: (click)
        ↓CustomAction [mobile.components.UICustomAction-1580132441157]: 
          actionValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  		console.log(page['navParams']['data']['selectedForm']);
                  		resolve(page["navParams"]["data"]["selectedForm"]);
                  
          isEnabled: false
          ↓PushPage [mobile.components.UIDynamicAction-1580149737313]: 
            beanData: |
              '{
               "ionBean": "PushPageAction",
               "page": "plain:C8Oforms.MobileApplication.Application.dataPage",
               "data": "script:{formId: parent.out._id}"
              }'
            ↓ClosePopover [mobile.components.UIDynamicAction-1581939011482]: 
              beanData: '{"ionBean":"ClosePopoverAction"}'
        ↓InvokeSharedAction [mobile.components.UIDynamicInvoke-1606730033022]: 
          beanData: '{"ionBean":"InvokeAction"}'
          stack: C8Oforms.MobileApplication.Application.popOverVizualiseResponses
          ↓selectedForm [mobile.components.UIControlVariable-1606730047639]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.navParams?.data?.selectedForm
          ↓ClosePopover [mobile.components.UIDynamicAction-1606730073904]: 
            beanData: '{"ionBean":"ClosePopoverAction"}'
      ↓Attr [mobile.components.UIAttribute-1581947781855]: 
        attrName: '*ngIf'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:this['navParams']['data']['that']['local']['published'] == true && getLevelAccesDoc('VizualiseResponses')
      ↓Attr1 [mobile.components.UIAttribute-1592316618466]: 
        attrName: 
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:tappable
      ↓Directive [mobile.components.UIControlDirective-1594297038023]: 
        directiveName: If
        directiveSource: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
            - MobileSmartSourceType: script:this.isVisible() else ElseBlock_1594297430140
        ↓Text [mobile.components.UIText-1580132441151]: 
          i18n: false
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'vizu_response' | translate
      ↓Tag [mobile.components.UIElement-1594297430140]: 
        identifier: ElseBlock_1594297430140
        tagName: ng-template
        ↓Text [mobile.components.UIText-1594297465358]: 
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:vizu_mine_response
      ↓Icon [mobile.components.UIDynamicElement-1603795537363]: 
        beanData: |
          '{
           "ionBean": "Icon",
           "IconName": "plain:stats",
           "ItemPosition": "plain:item-start"
          }'
        tagName: ion-icon
    ↓DownloadCsv [mobile.components.UIDynamicElement-1572459511838]: 
      beanData: '{"ionBean":"ListItem"}'
      tagName: ion-item
      ↓Style [mobile.components.UIStyle-1572459511844]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '/* Mot de passe oublié: */
                color: #4a4a4a;
                font-size: 12px;
                .item-inner{
                		margin-left:0px !important;
                }
                
                }
                .class1572459511838:hover{
                font-size: 12px;
                color: #048EAE;
                text-decoration: underline;
                cursor: pointer;
                '
      ↓Attr [mobile.components.UIAttribute-1572459511880]: 
        attrName: '*ngIf'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:this['navParams']['data']['that']['local']['published'] == true  && getLevelAccesDoc('DownloadCsv')
      ↓a [mobile.components.UIElement-1572461724835]: 
        tagName: p
        ↓Text [mobile.components.UIText-1572459511841]: 
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'respCsv' | translate
        ↓Attr [mobile.components.UIAttribute-1572461756235]: 
          attrName: '[attr.href]'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
              - MobileSmartSourceType: script:this.c8o.endpoint + '/.bin?__sequence=BuildCsvByFormId&formId='+this.navParams.data.selectedForm._id+'&name='+this.replaceEmpty(this.navParams.data.selectedForm.name)+'&offset='+this.local.offset
          isEnabled: false
        ↓Style [mobile.components.UIStyle-1572462157530]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  'color:#4a4a4a;
                  text-decoration: none;  
                  display: inline;
                  '
      ↓Event [mobile.components.UIControlEvent-1581938984596]: 
        attrName: (click)
        ↓ModalPage [mobile.components.UIDynamicAction-1602171389238]: 
          beanData: |
            '{
             "ionBean": "ModalAction",
             "page": "plain:C8Oforms.MobileApplication.Application.exportCsvPage",
             "data": "script:{id:this.navParams.data.selectedForm._id, name:this.replaceEmpty(this.navParams.data.selectedForm.name), offset:this.local.offset, version: this.navParams.data.selectedForm.version}",
             "blockWhileDisplayed": "plain:true",
             "cssClass": "plain:modalCSV"
            }'
          isEnabled: false
        ↓ClosePopover [mobile.components.UIDynamicAction-1581938989911]: 
          beanData: '{"ionBean":"ClosePopoverAction"}'
          isEnabled: false
        ↓invokeReplaceEmpty [mobile.components.UIDynamicInvoke-1606731395074]: 
          beanData: '{"ionBean":"InvokeAction"}'
          stack: C8Oforms.MobileApplication.Application.replaceEmptyFunction
          ↓InvokeGetOffset [mobile.components.UIDynamicInvoke-1606731828288]: 
            beanData: '{"ionBean":"InvokeAction"}'
            stack: C8Oforms.MobileApplication.Application.getOffsetFunction
            ↓InvokeSharedAction [mobile.components.UIDynamicInvoke-1606730952228]: 
              beanData: '{"ionBean":"InvokeAction"}'
              stack: C8Oforms.MobileApplication.Application.popOverDownloadCsv
              ↓selectedForm [mobile.components.UIControlVariable-1606731016040]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.navParams?.data?.selectedForm
              ↓name [mobile.components.UIControlVariable-1606731016042]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:stack['invokeReplaceEmpty'].out
              ↓offset [mobile.components.UIControlVariable-1606731016044]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:stack['InvokeGetOffset'].out
              ↓ClosePopover [mobile.components.UIDynamicAction-1606731874517]: 
                beanData: '{"ionBean":"ClosePopoverAction"}'
          ↓name [mobile.components.UIControlVariable-1606732123120]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.navParams.data.selectedForm.name
      ↓Attr1 [mobile.components.UIAttribute-1592316611162]: 
        attrName: 
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:tappable
      ↓Icon1 [mobile.components.UIDynamicElement-1603732695102]: 
        beanData: |
          '{
           "ionBean": "Icon",
           "IconName": "plain:custom-csv",
           "ItemPosition": "plain:item-start",
           "IonColor": "plain:greenCsv"
          }'
        tagName: ion-icon
    ↓CreatePwa [mobile.components.UIDynamicElement-1603801509434]: 
      beanData: '{"ionBean":"ListItem"}'
      tagName: ion-item
      ↓Style [mobile.components.UIStyle-1603801509437]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '/* Mot de passe oublié: */
                color: #4a4a4a;
                font-size: 12px;
                .item-inner{
                		margin-left:0px !important;
                }
                
                }
                .class1603801509434:hover{
                font-size: 12px;
                color: #048EAE;
                text-decoration: underline;
                cursor: pointer;
                '
      ↓Attr [mobile.components.UIAttribute-1603801509440]: 
        attrName: '*ngIf'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:this['navParams']['data']['that']['local']['published'] == true &&  getLevelAccesDoc('CreatePwa')
      ↓a [mobile.components.UIElement-1603801509443]: 
        tagName: p
        ↓Text [mobile.components.UIText-1603801509446]: 
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:update_pwa
        ↓Style [mobile.components.UIStyle-1603801509452]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  'color:#4a4a4a;
                  text-decoration: none;  
                  display: inline;
                  '
      ↓Event [mobile.components.UIControlEvent-1603801509455]: 
        attrName: (click)
        ↓ModalPage [mobile.components.UIDynamicAction-1603801509458]: 
          beanData: |
            '{
             "ionBean": "ModalAction",
             "page": "plain:C8Oforms.MobileApplication.Application.CreatePwa",
             "data": "script:{form:this.navParams.data.selectedForm}",
             "blockWhileDisplayed": "plain:true",
             "cssClass": "plain:modalCSV"
            }'
          isEnabled: false
        ↓InvokeSharedAction [mobile.components.UIDynamicInvoke-1606752509111]: 
          beanData: '{"ionBean":"InvokeAction"}'
          stack: C8Oforms.MobileApplication.Application.popOverCreatePwa
          ↓selectedForm [mobile.components.UIControlVariable-1606752519598]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.navParams.data.selectedForm
        ↓ClosePopover [mobile.components.UIDynamicAction-1603801509461]: 
          beanData: '{"ionBean":"ClosePopoverAction"}'
      ↓Attr1 [mobile.components.UIAttribute-1603801509464]: 
        attrName: 
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:tappable
      ↓Icon1 [mobile.components.UIDynamicElement-1603801509467]: 
        beanData: |
          '{
           "ionBean": "Icon",
           "IconName": "plain:custom-pwa",
           "ItemPosition": "plain:item-start"
          }'
        tagName: ion-icon
    ↓ManageAccessRights [mobile.components.UIDynamicElement-1578663445209]: 
      beanData: '{"ionBean":"ListItem"}'
      tagName: ion-item
      ↓Style [mobile.components.UIStyle-1578663445212]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '/* Mot de passe oublié: */
                color: #4a4a4a;
                font-size: 12px;
                .item-inner{
                		margin-left:0px !important;
                }
                }
                
                .class1578663445209:hover{
                font-size: 12px;
                color: #048EAE;
                text-decoration: underline;
                cursor: pointer;
                '
      ↓Attr [mobile.components.UIAttribute-1578663445215]: 
        attrName: '*ngIf'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:(this['navParams']['data']['that']['local']['published'] == true && getLevelAccesDoc('ManageAccessRights'))
      ↓Text [mobile.components.UIText-1578663488215]: 
        textValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
            - MobileSmartSourceType: script:'share_form' | translate
      ↓Event [mobile.components.UIControlEvent-1578663719810]: 
        attrName: (click)
        ↓ClosePopover [mobile.components.UIDynamicAction-1578663846519]: 
          beanData: '{"ionBean":"ClosePopoverAction"}'
          isEnabled: false
          ↓CustomAction [mobile.components.UICustomAction-1578663852306]: 
            actionValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    '		let showCheckbox= ()=> {
                    		   let alertCtrl = this.getInstance(AlertController);
                    		        let alert = alertCtrl.create();
                                    alert.setTitle(this.translate.instant("title_acces_right"));
                                    let p = new Promise((resolve)=>{
                                        let user = this.global.user;
                                        if(this.global.user.indexOf("\\")!= -1){
                                            user = [user.slice(0, user.indexOf("\\")), "\\", user.slice(user.indexOf("\\"))].join('''');
                                        }
                                        page.c8o.callJson("C8Oforms.GroupsOf", "user",user)
                                        .then((res)=>{
                                            res = res["sequence"]["document"];
                                            if(res["group"] != undefined){
                                                if(!(res["group"] instanceof Array)){
                                                    res["group"] = [res["group"]];
                                                }
                                            }
                                            let grps;
                                            try {
                                                grps = Object.keys(page["navParams"]["data"]["selectedForm"]["c8oGrp"]);
                                            }catch(e){
                                                
                                            }
                                            for(let elem of res["group"]){
                                                if(elem.indexOf("_C8O_HIDDEN_") == -1){
                                                    alert.addInput({
                                                        type: ''checkbox'',
                                                        label: elem,
                                                        value: elem,
                                                        checked: page["navParams"]["data"]["selectedForm"]["c8oGrp"] != undefined ? page["navParams"]["data"]["selectedForm"]["c8oGrp"][elem]: false 
                                                      });
                                                }
                                                
                                            }
                                            resolve();
                                            return null;
                                        })
                                        .fail((err)=>{
                                            resolve();
                                        })
                                    })
                                   /* .then(()=>{
                                        return new Promise((resolve)=>{
                                            page.c8o.callJson("lib_FullSyncGrp.GroupsOf", "user",this.global.user)
                                            .then((res)=>{
                                                return null;
                                            })
                                            .fail((res)=>{
                                                
                                            })
                                        })
                                        
                                    })*/
                                    .then(()=>{
                                        alert.addButton(''Cancel'');
                                        alert.addButton({
                                          text: ''Ok'',
                                          handler: data => {
                                              let grpObj = {}
                                              
                                              for(let elem of data){
                                                  grpObj[elem] = true;
                                              }
                                              for(let elem in page["navParams"]["data"]["selectedForm"]["c8oGrp"]){
                                                  if(grpObj[elem] == undefined){
                                                      grpObj[elem] = false;
                                                  }
                                              }
                                              page.c8o.callJsonObject("fs://c8oforms_fs.post",{
                                                  "c8oGrp": grpObj,
                                                  "_use_policy": "merge",
                                                  "_id": page["navParams"]["data"]["selectedForm"]["_id"]
                                              })
                                              .then((res)=>{
                                                  return null;
                                              })
                                              .fail((res)=>{
                                                  console.log(res);
                                              })
                                            
                                          
                                          
                                          
                                          }
                                        });
                                        alert.present();
                                    })
                                    
                                    
                                    
                                    
                    		}
                    		showCheckbox();
                    '
            isEnabled: false
          ↓ModalPage [mobile.components.UIDynamicAction-1591801725887]: 
            beanData: |
              '{
               "ionBean": "ModalAction",
               "page": "plain:C8Oforms.MobileApplication.Application.ManageAccessRights",
               "data": "script:{existingGrps: this.navParams.data.selectedForm}"
              }'
        ↓InvokeSharedAction [mobile.components.UIDynamicInvoke-1606819714684]: 
          beanData: '{"ionBean":"InvokeAction"}'
          stack: C8Oforms.MobileApplication.Application.popOverManageAccessRights
          ↓selectedForm [mobile.components.UIControlVariable-1606819739016]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.navParams.data.selectedForm
        ↓ClosePopover1 [mobile.components.UIDynamicAction-1606819734596]: 
          beanData: '{"ionBean":"ClosePopoverAction"}'
      ↓Attr1 [mobile.components.UIAttribute-1592316614284]: 
        attrName: 
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:tappable
      ↓Icon [mobile.components.UIDynamicElement-1603730319967]: 
        beanData: |
          '{
           "ionBean": "Icon",
           "IconName": "plain:custom-share-social",
           "ItemPosition": "plain:item-start"
          }'
        tagName: ion-icon
    ↓ManageAccessRightsResponses [mobile.components.UIDynamicElement-1594313281739]: 
      beanData: '{"ionBean":"ListItem"}'
      tagName: ion-item
      ↓Style [mobile.components.UIStyle-1594313281742]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '/* Mot de passe oublié: */
                color: #4a4a4a;
                font-size: 12px;
                .item-inner{
                		margin-left:0px !important;
                }
                }
                
                .class1594313281739:hover{
                font-size: 12px;
                color: #048EAE;
                text-decoration: underline;
                cursor: pointer;
                '
      ↓Attr [mobile.components.UIAttribute-1594313281775]: 
        attrName: '*ngIf'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:(getLevelAccesDoc('ManageAccessRightsResponses'))
      ↓Text [mobile.components.UIText-1594313281778]: 
        textValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
            - MobileSmartSourceType: script:'Add_collaborators' | translate
      ↓Event [mobile.components.UIControlEvent-1594313281781]: 
        attrName: (click)
        ↓ClosePopover [mobile.components.UIDynamicAction-1594313281784]: 
          beanData: '{"ionBean":"ClosePopoverAction"}'
          ↓CustomAction [mobile.components.UICustomAction-1594313281787]: 
            actionValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    '		let showCheckbox= ()=> {
                    		   let alertCtrl = this.getInstance(AlertController);
                    		        let alert = alertCtrl.create();
                                    alert.setTitle(this.translate.instant("title_acces_right"));
                                    let p = new Promise((resolve)=>{
                                        let user = this.global.user;
                                        if(this.global.user.indexOf("\\")!= -1){
                                            user = [user.slice(0, user.indexOf("\\")), "\\", user.slice(user.indexOf("\\"))].join('''');
                                        }
                                        page.c8o.callJson("C8Oforms.GroupsOf", "user",user)
                                        .then((res)=>{
                                            res = res["sequence"]["document"];
                                            if(res["group"] != undefined){
                                                if(!(res["group"] instanceof Array)){
                                                    res["group"] = [res["group"]];
                                                }
                                            }
                                            let grps;
                                            try {
                                                grps = Object.keys(page["navParams"]["data"]["selectedForm"]["c8oGrp"]);
                                            }catch(e){
                                                
                                            }
                                            for(let elem of res["group"]){
                                                if(elem.indexOf("_C8O_HIDDEN_") == -1){
                                                    alert.addInput({
                                                        type: ''checkbox'',
                                                        label: elem,
                                                        value: elem,
                                                        checked: page["navParams"]["data"]["selectedForm"]["c8oGrp"] != undefined ? page["navParams"]["data"]["selectedForm"]["c8oGrp"][elem]: false 
                                                      });
                                                }
                                                
                                            }
                                            resolve();
                                            return null;
                                        })
                                        .fail((err)=>{
                                            resolve();
                                        })
                                    })
                                   /* .then(()=>{
                                        return new Promise((resolve)=>{
                                            page.c8o.callJson("lib_FullSyncGrp.GroupsOf", "user",this.global.user)
                                            .then((res)=>{
                                                return null;
                                            })
                                            .fail((res)=>{
                                                
                                            })
                                        })
                                        
                                    })*/
                                    .then(()=>{
                                        alert.addButton(''Cancel'');
                                        alert.addButton({
                                          text: ''Ok'',
                                          handler: data => {
                                              let grpObj = {}
                                              
                                              for(let elem of data){
                                                  grpObj[elem] = true;
                                              }
                                              for(let elem in page["navParams"]["data"]["selectedForm"]["c8oGrp"]){
                                                  if(grpObj[elem] == undefined){
                                                      grpObj[elem] = false;
                                                  }
                                              }
                                              page.c8o.callJsonObject("fs://c8oforms_fs.post",{
                                                  "c8oGrp": grpObj,
                                                  "_use_policy": "merge",
                                                  "_id": page["navParams"]["data"]["selectedForm"]["_id"]
                                              })
                                              .then((res)=>{
                                                  return null;
                                              })
                                              .fail((res)=>{
                                                  console.log(res);
                                              })
                                            
                                          
                                          
                                          
                                          }
                                        });
                                        alert.present();
                                    })
                                    
                                    
                                    
                                    
                    		}
                    		showCheckbox();
                    '
            isEnabled: false
          ↓ModalPage [mobile.components.UIDynamicAction-1594313281790]: 
            beanData: |
              '{
               "ionBean": "ModalAction",
               "page": "plain:C8Oforms.MobileApplication.Application.ManageAccessRights",
               "data": "script:{existingGrps: this.navParams.data.selectedForm, ''resp'':true}"
              }'
            isEnabled: false
        ↓InvokeSharedAction [mobile.components.UIDynamicInvoke-1606819884422]: 
          beanData: '{"ionBean":"InvokeAction"}'
          stack: C8Oforms.MobileApplication.Application.popOverManageAccessRightsResponses
          ↓selectedForm [mobile.components.UIControlVariable-1606819896230]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.navParams.data.selectedForm
      ↓Attr1 [mobile.components.UIAttribute-1594313281793]: 
        attrName: 
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:tappable
      ↓Icon [mobile.components.UIDynamicElement-1603730321735]: 
        beanData: |
          '{
           "ionBean": "Icon",
           "IconName": "plain:key",
           "ItemPosition": "plain:item-start"
          }'
        tagName: ion-icon
    ↓ManageLabels [mobile.components.UIDynamicElement-1578920252046]: 
      beanData: '{"ionBean":"ListItem"}'
      tagName: ion-item
      ↓Style [mobile.components.UIStyle-1578920252049]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '/* Mot de passe oublié: */
                color: #4a4a4a;
                font-size: 12px;
                .item-inner{
                		margin-left:0px !important;
                }
                }
                
                .class1578920252046:hover{
                font-size: 12px;
                color: #048EAE;
                text-decoration: underline;
                cursor: pointer;
                '
      ↓Text [mobile.components.UIText-1578920252055]: 
        textValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
            - MobileSmartSourceType: script:'manage_labels' | translate
      ↓Event [mobile.components.UIControlEvent-1578920252058]: 
        attrName: (click)
        ↓CustomAction [mobile.components.UICustomAction-1578940281797]: 
          actionValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  		
                  		resolve(page["navParams"]["data"]["selectedForm"]);
                  
          isEnabled: false
          ↓ModalPage [mobile.components.UIDynamicAction-1578920281038]: 
            beanData: |
              '{
               "ionBean": "ModalAction",
               "page": "plain:C8Oforms.MobileApplication.Application.labelsPage",
               "data": "script:{form: parent.out}"
              }'
            ↓ClosePopover [mobile.components.UIDynamicAction-1578920252061]: 
              beanData: '{"ionBean":"ClosePopoverAction"}'
        ↓InvokeSharedAction [mobile.components.UIDynamicInvoke-1606820109011]: 
          beanData: '{"ionBean":"InvokeAction"}'
          stack: C8Oforms.MobileApplication.Application.popOverManageLabels
          ↓selectedForm [mobile.components.UIControlVariable-1606820123457]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.navParams.data.selectedForm
        ↓ClosePopover [mobile.components.UIDynamicAction-1606820146866]: 
          beanData: '{"ionBean":"ClosePopoverAction"}'
      ↓Attr1 [mobile.components.UIAttribute-1578930175811]: 
        attrName: '*ngIf'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:getLevelAccesDoc('ManageLabels')
      ↓Attr11 [mobile.components.UIAttribute-1592316616503]: 
        attrName: 
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:tappable
      ↓Icon [mobile.components.UIDynamicElement-1603730324637]: 
        beanData: |
          '{
           "ionBean": "Icon",
           "IconName": "plain:folder-open",
           "ItemPosition": "plain:item-start"
          }'
        tagName: ion-icon
    ↓copy [mobile.components.UIDynamicElement-1588251387387]: 
      beanData: '{"ionBean":"ListItem"}'
      tagName: ion-item
      ↓Text [mobile.components.UIText-1588251387390]: 
        textValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:duplicate_form
      ↓Style [mobile.components.UIStyle-1588251387393]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '/* Mot de passe oublié: */
                color: #4a4a4a;
                font-size: 12px;
                .item-inner{
                		margin-left:0px !important;
                }
                
                }
                .class1588251387387:hover{
                font-size: 12px;
                color: #048EAE;
                text-decoration: underline;
                cursor: pointer;
                '
      ↓Event [mobile.components.UIControlEvent-1588251387396]: 
        attrName: (click)
        ↓prepareArgs [mobile.components.UICustomAction-1588251387399]: 
          actionValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  		    let _id = page["navParams"]["data"]["selectedForm"]["_id"];
                  		    page.c8o.callJson("fs://c8oforms_fs.get", "docid", _id, "attachments", true)
                              .then((res)=>{
                                  console.log('res get', res);
                                  res["_id"] = "" + new Date().getTime();
                                  res["name"] += "_" + page["translate"]["instant"]('copy');
                                  delete res["_rev"];
                                  return page.c8o.callJsonObject("fs://c8oforms_fs.post", res);
                              })
                              .then((res)=>{
                                  const msg = page["translate"]["instant"]("form_copied_succes");
                                  resolve({msg:msg});
                                  page.c8o.log.debug("duplicate form successfully");
                                  page.tick();
                                 return null;
                              })
                              .fail((err)=>{
                                  const msg = page["translate"]["instant"]("error_copy_form");
                                  resolve({msg:msg});
                                  page.c8o.log.error("error duplicating form",err);
                              });
                  
          isEnabled: false
          ↓ClosePopover [mobile.components.UIDynamicAction-1588251387408]: 
            beanData: '{"ionBean":"ClosePopoverAction"}'
          ↓Toast [mobile.components.UIDynamicAction-1588587832118]: 
            beanData: '{"ionBean":"ToastAction","message":"script:stack[''prepareArgs''].out.msg"}'
        ↓InvokeSharedAction [mobile.components.UIDynamicInvoke-1606820531075]: 
          beanData: '{"ionBean":"InvokeAction"}'
          stack: C8Oforms.MobileApplication.Application.popOverCopy
          ↓selectedForm [mobile.components.UIControlVariable-1606820546294]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.navParams.data.selectedForm
        ↓ClosePopover [mobile.components.UIDynamicAction-1606820598788]: 
          beanData: '{"ionBean":"ClosePopoverAction"}'
      ↓Attr [mobile.components.UIAttribute-1588251387411]: 
        attrName: '*ngIf'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:this['navParams']['data']['that']['local']['published'] == false
      ↓Attr1 [mobile.components.UIAttribute-1592316620506]: 
        attrName: 
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:tappable
      ↓Icon [mobile.components.UIDynamicElement-1603795700163]: 
        beanData: |
          '{
           "ionBean": "Icon",
           "IconName": "plain:copy",
           "ItemPosition": "plain:item-start"
          }'
        tagName: ion-icon
    ↓copyTo [mobile.components.UIDynamicElement-1588254912106]: 
      beanData: '{"ionBean":"ListItem"}'
      tagName: ion-item
      ↓Text [mobile.components.UIText-1588254912109]: 
        textValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:duplicate_form_to
      ↓Style [mobile.components.UIStyle-1588254912112]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '/* Mot de passe oublié: */
                color: #4a4a4a;
                font-size: 12px;
                .item-inner{
                		margin-left:0px !important;
                }
                
                }
                .class1588254912106:hover{
                font-size: 12px;
                color: #048EAE;
                text-decoration: underline;
                cursor: pointer;
                '
      ↓Event [mobile.components.UIControlEvent-1588254912115]: 
        attrName: (click)
        ↓prepareArgs [mobile.components.UICustomAction-1588254912118]: 
          actionValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  		    let _id = page["navParams"]["data"]["selectedForm"]["_id"];
                  		    page.c8o.callJson("fs://c8oforms_fs.get", "docid", _id, "attachments", true)
                              .then((res)=>{
                                  console.log('res get', res);
                                  res["_id"] = "" + new Date().getTime();
                                  res["name"] += "_" + page["translate"]["instant"]('copy');
                                  res["c8o_view_type_drafts_form"] = true;
                                  delete res["_rev"];
                                  delete res["parentId"];
                                  delete res["parentRev"]
                                  delete res["version"]
                                  delete res["~c8oAcl"];
                                  delete res["pwa_enabled"];
                                  delete res["status"];
                                  delete res["pwa_subPath"];
                                  delete res["sharedAnonymous"];
                                  delete res["c8o_view_type_published_form"];
                                  return page.c8o.callJsonObject("fs://c8oforms_fs.post", res);
                              })
                              .then((res)=>{
                                  const msg = page["translate"]["instant"]("form_copied_succes");
                                  resolve({msg:msg});
                                  page.c8o.log.debug("duplicate form successfully");
                                  page.tick();
                                 return null;
                              })
                              .fail((err)=>{
                                  const msg = page["translate"]["instant"]("error_copy_form");
                                  resolve({msg:msg});
                                  page.c8o.log.error("error duplicating form",err);
                              });
                  
          isEnabled: false
          ↓ClosePopover [mobile.components.UIDynamicAction-1588254912121]: 
            beanData: '{"ionBean":"ClosePopoverAction"}'
          ↓Toast [mobile.components.UIDynamicAction-1588587891414]: 
            beanData: '{"ionBean":"ToastAction","message":"script:stack[''prepareArgs''].out.msg"}'
        ↓InvokeSharedAction [mobile.components.UIDynamicInvoke-1606821808620]: 
          beanData: '{"ionBean":"InvokeAction"}'
          stack: C8Oforms.MobileApplication.Application.popOverCopyTo
          ↓selectedForm [mobile.components.UIControlVariable-1606821819910]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.navParams.data.selectedForm
        ↓ClosePopover [mobile.components.UIDynamicAction-1606821836861]: 
          beanData: '{"ionBean":"ClosePopoverAction"}'
      ↓Attr [mobile.components.UIAttribute-1588254912130]: 
        attrName: '*ngIf'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:this['navParams']['data']['that']['local']['published'] == true && ((this.global?.settings?.editing_rights != undefined && this.global?.settings?.editing_rights == 'true') || this.global?.settings?.editing_rights == undefined)
      ↓Attr1 [mobile.components.UIAttribute-1592316622493]: 
        attrName: 
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:tappable
      ↓Icon [mobile.components.UIDynamicElement-1603795702797]: 
        beanData: |
          '{
           "ionBean": "Icon",
           "IconName": "plain:copy",
           "ItemPosition": "plain:item-start"
          }'
        tagName: ion-icon
    ↓Thumbnail [mobile.components.UIDynamicElement-1594642420621]: 
      beanData: '{"ionBean":"ListItem"}'
      tagName: ion-item
      ↓Text [mobile.components.UIText-1594642420624]: 
        textValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:thumb_bg_label
      ↓Style [mobile.components.UIStyle-1594642420627]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '/* Mot de passe oublié: */
                color: #4a4a4a;
                font-size: 12px;
                .item-inner{
                		margin-left:0px !important;
                }
                
                }
                .class1594642420621:hover{
                font-size: 12px;
                color: #048EAE;
                text-decoration: underline;
                cursor: pointer;
                '
      ↓Event [mobile.components.UIControlEvent-1594642420630]: 
        attrName: (click)
        eventName: onClick
        ↓Finally_Handler [mobile.components.UIActionFinallyEvent-1594642995006]: 
          isEnabled: false
          ↓IfElse [mobile.components.UIDynamicIf-1594642995009]: 
            beanData: '{"ionBean":"IfElseAction","condition":"script:true"}'
            ↓ClosePopover [mobile.components.UIDynamicAction-1594642978266]: 
              beanData: '{"ionBean":"ClosePopoverAction"}'
              ↓ModalPage [mobile.components.UIDynamicAction-1594642995012]: 
                beanData: |
                  '{
                   "ionBean": "ModalAction",
                   "page": "plain:C8Oforms.MobileApplication.Application.thumbnailSelection",
                   "data": "script:{selectedForm: this.navParams.data.selectedForm}",
                   "cssClass": "plain:mymodal"
                  }'
        ↓IfElse [mobile.components.UIDynamicIf-1594647641217]: 
          beanData: '{"ionBean":"IfElseAction","condition":"script:true"}'
          isEnabled: false
          ↓SetGlobal [mobile.components.UIDynamicAction-1594642995021]: 
            beanData: |
              '{
               "ionBean": "SetGlobalAction",
               "Property": "plain:indexthumb",
               "Value": "script:this.navParams.data.selectedForm[''thumbnail''] !== undefined ? this.navParams.data.selectedForm[''thumbnail''][''index''] : 0"
              }'
            ↓SetGlobal1 [mobile.components.UIDynamicAction-1594642995024]: 
              beanData: |
                '{
                 "ionBean": "SetGlobalAction",
                 "Property": "plain:enabledThumbTemp",
                 "Value": "script:this.navParams.data.selectedForm[''thumbnail''] !== undefined ? this.navParams.data.selectedForm[''thumbnail''][''enabled'']  !== undefined ? this.navParams.data.selectedForm[''thumbnail''][''enabled''] : false : false"
                }'
            ↓wallType [mobile.components.UIDynamicAction-1594642995027]: 
              beanData: |
                '{
                 "ionBean": "SetGlobalAction",
                 "Property": "plain:thumbType",
                 "Value": "script:this.navParams.data.selectedForm[''thumbnail''] !== undefined ? this.navParams.data.selectedForm?.thumbnail?.type : null"
                }'
            ↓wallType1 [mobile.components.UIDynamicAction-1594642995030]: 
              beanData: |
                '{
                 "ionBean": "SetGlobalAction",
                 "Property": "plain:imgIndex",
                 "Value": "script:this.navParams.data.selectedForm?._id"
                }'
            ↓wallType2 [mobile.components.UIDynamicAction-1603359865470]: 
              beanData: |
                '{
                 "ionBean": "SetGlobalAction",
                 "Property": "plain:thumbColor",
                 "Value": "script:this.navParams.data.selectedForm[''thumbnail''] !== undefined ? this.navParams.data.selectedForm?.thumbnail?.color : null"
                }'
        ↓InvokeSharedAction [mobile.components.UIDynamicInvoke-1606826137097]: 
          beanData: '{"ionBean":"InvokeAction"}'
          stack: C8Oforms.MobileApplication.Application.popOverThumnail
          ↓selectedForm [mobile.components.UIControlVariable-1606826147916]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.navParams.data.selectedForm
        ↓ClosePopover [mobile.components.UIDynamicAction-1606826273423]: 
          beanData: '{"ionBean":"ClosePopoverAction"}'
      ↓Attr [mobile.components.UIAttribute-1594642420654]: 
        attrName: '*ngIf'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:this['navParams']['data']['that']['local']['published'] == false && getLevelAccesDoc('Thumbnail')
      ↓Attr1 [mobile.components.UIAttribute-1594642420657]: 
        attrName: 
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:tappable
      ↓Icon [mobile.components.UIDynamicElement-1603795705531]: 
        beanData: |
          '{
           "ionBean": "Icon",
           "IconName": "plain:image",
           "ItemPosition": "plain:item-start"
          }'
        tagName: ion-icon
    ↓exporter [mobile.components.UIDynamicElement-1569858735855]: 
      beanData: '{"ionBean":"ListItem"}'
      tagName: ion-item
      ↓Text [mobile.components.UIText-1569858735858]: 
        textValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:Exporter_form
      ↓Style [mobile.components.UIStyle-1569858735861]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '/* Mot de passe oublié: */
                color: #4a4a4a;
                font-size: 12px;
                .item-inner{
                		margin-left:0px !important;
                }
                
                }
                .class1569858735855:hover{
                font-size: 12px;
                color: #048EAE;
                text-decoration: underline;
                cursor: pointer;
                '
      ↓Event [mobile.components.UIControlEvent-1569858735864]: 
        attrName: (click)
        ↓prepareArgs [mobile.components.UICustomAction-1569858735876]: 
          actionValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  		
                  		    new Promise(async (resolve1, reject1)=>{
                  		        let text = page["navParams"]["data"]["selectedForm"];
                  	            delete text["_rev"];
                  	            delete text["_attachments"];
                  	            let wallpaper, thumbnail = null;
                  	            
                  	            try{
                  	                if(text.wallpaper && text.wallpaper.enabled == true){
                  	                    wallpaper = await this.c8o.callJson("fs://c8oforms_fs.get_attachment", "docid", text._id, "name", "wallpaper").async();
                  	                    if(wallpaper && (wallpaper instanceof Blob)){
                  	                        text.wallpaper.b64 = await this.blobToBase64(wallpaper);
                  	                    }
                  	                }
                  	            }
                  	            catch(e){
                  	                page.c8o.log.debug("No Wallpaper attachment", e);
                  	            }
                  	            
                  	            try{
                  	                if(text.thumbnail && text.thumbnail.enabled == true){
                  	                    thumbnail = await this.c8o.callJson("fs://c8oforms_fs.get_attachment", "docid", text._id, "name", "thumbnail").async();
                  	                    if(thumbnail && (thumbnail instanceof Blob)){
                  	                        text.thumbnail.b64 = await this.blobToBase64(thumbnail);
                  	                    }
                  	                }
                                  }
                                  catch(e){
                                      page.c8o.log.debug("No thumbnail attachment", e);
                                  }
                  	            
                  	            let filename = (text.name+".c8oforms").replace(/\s/g, '_');
                  	            var element = document.createElement('a');
                  	            element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(JSON.stringify(text)));
                  	            element.setAttribute('download', filename);
                  
                  	            element.style.display = 'none';
                  	            document.body.appendChild(element);
                  
                  	            element.click();
                  
                  	            document.body.removeChild(element);
                  	            
                  	            resolve1();
                  		    })
                  		    .then(()=>{
                  		       resolve();
                  		    })
                  		    .catch(()=>{
                  		        resolve();
                  		    });
                  
          isEnabled: false
          ↓ClosePopover [mobile.components.UIDynamicAction-1572277513078]: 
            beanData: '{"ionBean":"ClosePopoverAction"}'
        ↓InvokeSharedAction [mobile.components.UIDynamicInvoke-1606829749824]: 
          beanData: '{"ionBean":"InvokeAction"}'
          stack: C8Oforms.MobileApplication.Application.popOverExport
          ↓selectedForm [mobile.components.UIControlVariable-1606829767026]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.navParams.data.selectedForm
          ↓ClosePopover [mobile.components.UIDynamicAction-1606844004989]: 
            beanData: '{"ionBean":"ClosePopoverAction"}'
      ↓Attr1 [mobile.components.UIAttribute-1592316583995]: 
        attrName: 
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:tappable
      ↓Icon [mobile.components.UIDynamicElement-1603730303004]: 
        beanData: |
          '{
           "ionBean": "Icon",
           "IconName": "plain:download",
           "ItemPosition": "plain:item-start"
          }'
        tagName: ion-icon
    ↓DeleteView [mobile.components.UIDynamicElement-1566923689496]: 
      beanData: '{"ionBean":"ListItem"}'
      tagName: ion-item
      ↓Text [mobile.components.UIText-1566923700572]: 
        textValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:Supprimer
      ↓Style [mobile.components.UIStyle-1566924006573]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '/* Mot de passe oublié: */
                color: #4a4a4a;
                font-size: 12px;
                .item-inner{
                		margin-left:0px !important;
                }
                
                }
                .class1566923689496:hover{
                font-size: 12px;
                color: #048EAE;
                text-decoration: underline;
                cursor: pointer;
                '
      ↓Event [mobile.components.UIControlEvent-1567067510375]: 
        attrName: (click)
        ↓Error_Handler [mobile.components.UIActionErrorEvent-1594904451943]: 
          isEnabled: false
          ↓Toast [mobile.components.UIDynamicAction-1594904459910]: 
            beanData: '{"ionBean":"ToastAction","message":"script:this.translate.instant(''error_del_form'')"}'
        ↓showAlertConfirmation [mobile.components.UIDynamicAction-1599219823447]: 
          beanData: |
            '{
             "ionBean": "AlertAction",
             "subTitle": "script:this.translate.instant(''confirm_deletion'') + '' '' + this.navParams.data.selectedForm.name",
             "message": "plain:",
             "cssClass": "plain:c8o-alert-create-form",
             "button1": "script:this.translate.instant(''Cancel'')",
             "button2": "plain:OK",
             "value1": "plain:0",
             "value2": "plain:1",
             "cancel1": "plain:cancel",
             "css1": "plain:yesnobt",
             "css2": "plain:yesnobt"
            }'
          isEnabled: false
          ↓IfConfirmed [mobile.components.UIDynamicAction-1599219823450]: 
            beanData: '{"ionBean":"IfAction","condition":"script:parent.out == 1"}'
            ↓getLocalPublished [mobile.components.UICustomAction-1573639023996]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      		resolve(this['navParams']['data']['that']['local']['published']);
                      
              ↓prepareArgs [mobile.components.UICustomAction-1575982471443]: 
                actionValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        		    let idx = this['navParams']['data']['selectedForm']._id;
                        		    try{
                        		        if(idx == this.global.formSelected._id){
                        	                this.global.formSelected = null;
                        	            }
                        		    }
                        		    catch(e){
                        		        
                        		    }
                        		    resolve(idx);
                        
                ↓PostData [mobile.components.UIDynamicAction-1575982471458]: 
                  beanData: |
                    '{
                     "ionBean": "FullSyncPostAction",
                     "requestable": "plain:C8Oforms.c8oforms_fs",
                     "_id": "script:parent.out",
                     "_use_policy": "plain:merge"
                    }'
                  ↓deleted [mobile.components.UIControlVariable-1575982471461]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:true
                  ↓ClosePopover [mobile.components.UIDynamicAction-1576599825802]: 
                    beanData: '{"ionBean":"ClosePopoverAction"}'
        ↓InvokeSharedAction [mobile.components.UIDynamicInvoke-1606843880956]: 
          beanData: '{"ionBean":"InvokeAction"}'
          stack: C8Oforms.MobileApplication.Application.popOverDeleteView
          ↓selectedForm [mobile.components.UIControlVariable-1606843896086]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.navParams.data.selectedForm
        ↓ClosePopover [mobile.components.UIDynamicAction-1606844013722]: 
          beanData: '{"ionBean":"ClosePopoverAction"}'
      ↓Attr1 [mobile.components.UIAttribute-1592316586107]: 
        attrName: 
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:tappable
      ↓Icon [mobile.components.UIDynamicElement-1603730259711]: 
        beanData: |
          '{
           "ionBean": "Icon",
           "IconName": "plain:trash",
           "ItemPosition": "plain:item-start"
          }'
        tagName: ion-icon
      ↓Attr [mobile.components.UIAttribute-1613591759079]: 
        attrName: '*ngIf'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:getLevelAccesDoc('DeleteView')
↓PageEvent1 [mobile.components.UIPageEvent-1576682866941]: 
  viewEvent: onCanEnter
  ↓CheckUser1 [mobile.components.UICustomAction-1576682866944]: 
    actionValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            		    // Getting user status (whenever he is logged or not)
            		    if(page.c8o.session.status == C8oSessionStatus.Connected || page.c8o.session.status == C8oSessionStatus.HasBeenConnected){
                            resolve(true);
                        }
            		    page.c8o.httpInterface.getUserServiceStatus()
            		    .then((res)=>{
            		        if(res.user.length == 64 || res.user.authenticated == false){
            		            setTimeout(()=>{
            	                    page.routerProvider.setRoot("loginPage", {}, null); 
            	                }, 200);
                                resolve(false);
                            }
                            else{
                                
                                resolve(true);
                            }
            		    })
            		    .catch((err)=>{
            		        setTimeout(()=>{
            		            page.routerProvider.setRoot("loginPage", {}, null); 
            		        }, 200);
            		        resolve(false);
            		    })
                          
            		   /* this.local.debug = {};
                        let formId = this.navParams.get('formId');
                        if(formId != undefined){
                            this.local.formId = formId;
                            resolve(true);
                        }
                        else{
                            resolve(true);
                        }*/
                       
                        
            		/*
            		if(this.global.user == '' || this.global.user == undefined){
            		    window.location.href = './';
            		    resolve(false);
            		}
            		else{
            		    resolve(true);
            		}*/
            
    page_ts_imports: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
        - com.twinsoft.convertigo.beans.common.XMLVector: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
            - com.twinsoft.convertigo.beans.common.XMLVector: 
              - java.lang.String: 
                - ↑value: C8oSessionStatus
              - java.lang.String: 
                - ↑value: c8osdkangular