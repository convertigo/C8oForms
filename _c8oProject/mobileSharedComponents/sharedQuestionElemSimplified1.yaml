↓item [mobile.components.UICompVariable-1623746901032]: 
↓GridRow [mobile.components.UIDynamicElement-1623746901035]: 
  beanData: '{"ionBean":"GridRow","AlignItemsEnd":"plain:align-items-end"}'
  tagName: ion-row
  ↓GridCol [mobile.components.UIDynamicElement-1623746901038]: 
    beanData: '{"ionBean":"GridCol","Columns":"plain:12"}'
    tagName: ion-col
    ↓GenericItem [mobile.components.UIDynamicElement-1623746901041]: 
      beanData: '{"ionBean":"GenericItem"}'
      tagName: ion-item
      ↓TextFormat [mobile.components.UIDynamicElement-1623746901044]: 
        beanData: '{"ionBean":"TextFormat","TextUpperCase":"plain:text-uppercase"}'
        tagName: div
        ↓Text [mobile.components.UIText-1623746901047]: 
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'define_question' | translate
        ↓Style [mobile.components.UIStyle-1623746901050]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  'color: #ff8206;
                    font-size: 14px;
                    font-weight: 600;
                    font-style: normal;
                    font-stretch: normal;
                    line-height: normal;
                    letter-spacing: normal;
                  '
      ↓Style [mobile.components.UIStyle-1623746901053]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '	.label{
                		margin-top: 0px !important;	
                		margin-bottom: 0px !important;	
                	}
                '
    ↓Grid [mobile.components.UIDynamicElement-1623746901056]: 
      beanData: '{"ionBean":"Grid"}'
      tagName: ion-grid
      ↓GridRow [mobile.components.UIDynamicElement-1623746901059]: 
        beanData: '{"ionBean":"GridRow"}'
        tagName: ion-row
        ↓GridCol [mobile.components.UIDynamicElement-1623746901062]: 
          beanData: |
            '{
             "ionBean": "GridCol",
             "Columns": "plain:8",
             "ColumnsXSmall": "plain:6",
             "ColumnsSmall": "plain:7",
             "ColumnsMedium": "plain:8",
             "ColumnsLarge": "plain:8",
             "ColumnsXLarge": "plain:8"
            }'
          tagName: ion-col
          ↓GenericItem1 [mobile.components.UIDynamicElement-1623746901065]: 
            beanData: '{"ionBean":"GenericItem"}'
            tagName: ion-item
            ↓Label [mobile.components.UIDynamicElement-1623746901068]: 
              beanData: '{"ionBean":"Label","Stacked":"plain:stacked"}'
              tagName: ion-label
              ↓TextFormat [mobile.components.UIDynamicElement-1623746901071]: 
                beanData: '{"ionBean":"TextFormat","TextCapitalize":"plain:text-capitalize"}'
                tagName: div
                ↓Text [mobile.components.UIText-1623746901074]: 
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:'text' | translate
                ↓Style [mobile.components.UIStyle-1623746901077]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          'color: color($colors, primary);
                          '
            ↓Attr2 [mobile.components.UIAttribute-1623746901080]: 
              attrName: '[ngClass]'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:'stylegenerictexteditor'
            ↓Style [mobile.components.UIStyle-1623746901083]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      'width: 90%;
                      .label{
                      		margin-top: 0px !important;	
                      		margin-bottom: 0px !important;	
                      	}
                      '
            ↓TextArea [mobile.components.UIDynamicElement-1623746901086]: 
              beanData: '{"ionBean":"TextArea"}'
              isEnabled: false
              tagName: ion-textarea
              ↓Attr [mobile.components.UIAttribute-1623746901089]: 
                attrName: '[(ngModel)]'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:params1623746901029.item.config.label
              ↓Event1 [mobile.components.UIControlEvent-1623746901092]: 
                attrName: (change)
                eventName: onChange
                ↓InvokeSharedAction1 [mobile.components.UIDynamicInvoke-1623746901095]: 
                  beanData: '{"ionBean":"InvokeAction"}'
                  stack: C8Oforms.MobileApplication.Application.updateState
              ↓Attr2 [mobile.components.UIAttribute-1623746901098]: 
                attrName: ondragstart
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:event.preventDefault();event.stopPropagation();
              ↓Event11 [mobile.components.UIControlEvent-1623746901101]: 
                attrName: (dragover)
                eventName: (dragover)
                ↓refuseDrop [mobile.components.UICustomAction-1623746901104]: 
                  actionValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          		if(event.dataTransfer.types.includes("__c8oformsdrag")){
                          					event.preventDefault();
                          					//this.recursive(event.target, "before");
                          			}
                          		resolve();
                          
              ↓Attr3 [mobile.components.UIAttribute-1623746901107]: 
                attrName: ondragover
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:event.preventDefault()
              ↓Attr31 [mobile.components.UIAttribute-1623746901110]: 
                attrName: ondrop
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:event.preventDefault()
              ↓Attr11 [mobile.components.UIAttribute-1623746901113]: 
                attrName: '[attr.draggable]'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:false
              ↓Event11132 [mobile.components.UIControlEvent-1623746901116]: 
                attrName: (mouseenter)
                eventName: (mouseenter)
                ↓cantDrag [mobile.components.UICustomAction-1623746901119]: 
                  actionValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          	    page.local.canDrag = "false";
                          		page.tick();
                          //		console.log('MOUSEENTER !!');
                          		resolve();
                          
              ↓Event111311 [mobile.components.UIControlEvent-1623746901122]: 
                attrName: (mouseleave)
                eventName: (mouseleave)
                ↓canDrag [mobile.components.UICustomAction-1623746901125]: 
                  actionValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          	    page.local.canDrag = "true";
                          		page.tick();
                          //		console.log('MOUSELEAVE !!');
                          		resolve();
                          
            ↓TextInput [mobile.components.UIDynamicElement-1623746901128]: 
              beanData: '{"ionBean":"Input"}'
              tagName: ion-input
              ↓Attr [mobile.components.UIAttribute-1623746901131]: 
                attrName: '[(ngModel)]'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:params1623746901029.item.config.label
              ↓Attr2 [mobile.components.UIAttribute-1623746901134]: 
                attrName: ondragstart
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:event.preventDefault();event.stopPropagation();
              ↓Attr3 [mobile.components.UIAttribute-1623746901137]: 
                attrName: ondragover
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:event.preventDefault()
              ↓Attr31 [mobile.components.UIAttribute-1623746901140]: 
                attrName: ondrop
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:event.preventDefault()
              ↓Attr11 [mobile.components.UIAttribute-1623746901143]: 
                attrName: '[attr.draggable]'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:false
              ↓Event1 [mobile.components.UIControlEvent-1623746901146]: 
                attrName: (change)
                eventName: onChange
                ↓InvokeSharedAction1 [mobile.components.UIDynamicInvoke-1623746901149]: 
                  beanData: '{"ionBean":"InvokeAction"}'
                  stack: C8Oforms.MobileApplication.Application.updateState
              ↓Event11 [mobile.components.UIControlEvent-1623746901152]: 
                attrName: (dragover)
                eventName: (dragover)
                ↓refuseDrop [mobile.components.UICustomAction-1623746901155]: 
                  actionValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          		if(event.dataTransfer.types.includes("__c8oformsdrag")){
                          					event.preventDefault();
                          					//this.recursive(event.target, "before");
                          			}
                          		resolve();
                          
              ↓Event11132 [mobile.components.UIControlEvent-1623746901158]: 
                attrName: (mouseenter)
                eventName: (mouseenter)
                ↓cantDrag [mobile.components.UICustomAction-1623746901161]: 
                  actionValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          	    page.local.canDrag = "false";
                          		page.tick();
                          //		console.log('MOUSEENTER !!');
                          		resolve();
                          
              ↓Event111311 [mobile.components.UIControlEvent-1623746901164]: 
                attrName: (mouseleave)
                eventName: (mouseleave)
                ↓canDrag [mobile.components.UICustomAction-1623746901167]: 
                  actionValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          	    page.local.canDrag = "true";
                          		page.tick();
                          //		console.log('MOUSELEAVE !!');
                          		resolve();
                          
          ↓Attr [mobile.components.UIAttribute-1623746901170]: 
            attrName: padding
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:true
        ↓GridCol1 [mobile.components.UIDynamicElement-1623746901173]: 
          beanData: '{"ionBean":"GridCol","Columns":"plain:auto"}'
          tagName: ion-col
          ↓GenericItem [mobile.components.UIDynamicElement-1623746901176]: 
            beanData: '{"ionBean":"GenericItem"}'
            tagName: ion-item
            ↓Label [mobile.components.UIDynamicElement-1623746901179]: 
              beanData: '{"ionBean":"Label","Stacked":"plain:stacked"}'
              tagName: ion-label
              ↓TextFormat [mobile.components.UIDynamicElement-1623746901182]: 
                beanData: '{"ionBean":"TextFormat","TextCapitalize":"plain:text-capitalize"}'
                tagName: div
                ↓Text [mobile.components.UIText-1623746901185]: 
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:'position' | translate
            ↓SelectContainer [mobile.components.UIDynamicElement-1623746901188]: 
              beanData: |
                '{
                 "ionBean": "Select",
                 "DefaultValue": "script:params1623746901029.item.config.position",
                 "interface": "plain:popover"
                }'
              tagName: ion-select
              ↓SelectOption [mobile.components.UIDynamicElement-1623746901191]: 
                beanData: '{"ionBean":"Option","value":"plain:''unset''"}'
                tagName: ion-option
                ↓Text [mobile.components.UIText-1623746901194]: 
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:Fixed
              ↓SelectOption3 [mobile.components.UIDynamicElement-1623746901197]: 
                beanData: '{"ionBean":"Option","value":"plain:''stacked''"}'
                tagName: ion-option
                ↓Text [mobile.components.UIText-1623746901200]: 
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:Stacked
              ↓Attr [mobile.components.UIAttribute-1623746901203]: 
                attrName: '[(ngModel)]'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:params1623746901029.item.config.position
              ↓Event [mobile.components.UIControlEvent-1623746901206]: 
                attrName: (ionChange)
                eventName: (ionChange)
                ↓InvokeSharedAction [mobile.components.UIDynamicInvoke-1623746901209]: 
                  beanData: '{"ionBean":"InvokeAction"}'
                  stack: C8Oforms.MobileApplication.Application.updateState
            ↓Attr2 [mobile.components.UIAttribute-1623746901212]: 
              attrName: '[ngClass]'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:'stylegenerictexteditor'
            ↓Style [mobile.components.UIStyle-1623746901215]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '	width: 90%;
                      	/*margin-left:0px !important;
                      	margin-right:0px !important;*/
                      .label{
                      		margin-top: 0px !important;	
                      		margin-bottom: 0px !important;	
                      	}
                      '
          ↓Style [mobile.components.UIStyle-1623746901218]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    max-width:120px;
                    