↓item [ngx.components.UICompVariable-1571649117776]: 
  value: 
↓model [ngx.components.UICompVariable-1571649117779]: 
  comment: this.formsSubmit[item['name']]
  value: '{}'
↓redList [ngx.components.UICompVariable-1571649117782]: 
  comment: this.redList[item['name']]
  value: null
↓disabled [ngx.components.UICompVariable-1571649117785]: 
  comment: this.formsSubmit[item['name']]
  value: false
↓Div [ngx.components.UIDynamicElement-1570455241193]: 
  beanData: '{"ionBean":"DivTag"}'
  identifier: divtext
  tagName: div
  ↓Attr [ngx.components.UIAttribute-1570455241274]: 
    attrName: '[ngClass]'
    attrValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: 'script:this.redList != undefined ?  this.redList[(page as any).pageOwner.item.name] == true ? ((page as any).pageOwner.item.config.mandatory && (page as any).pageOwner.item.config.disabled == true) ? [''requiredgregoryvpadding'', ''styledivred''] : ''styledivred'': ((page as any).pageOwner.item.config.mandatory && (page as any).pageOwner.item.config.disabled == true) ? [''requiredgregoryv'', ''styledivnormal''] : ''styledivnormal'': ((page as any).pageOwner.item.config.mandatory && (page as any).pageOwner.item.config.disabled == true) ? [''requiredgregoryv'', ''styledivnormal''] : ''styledivnormal'''
  ↓Attr1 [ngx.components.UIAttribute-1570455241289]: 
    attrName: '[attr.id]'
    attrValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:(page as any).pageOwner.item.name
  ↓Style [ngx.components.UIStyle-1574863964813]: 
    styleContent: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            position:relative;
            
  ↓UseSharedComponent [ngx.components.UIUseShared-1584787898086]: 
    sharedcomponent: C8Oforms_NGX.MobileApplication.Application.sharedLabelElem
    ↓item [ngx.components.UIUseVariable-1584787898089]: 
      varValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:(page as any).pageOwner.item
  ↓GenericItem [ngx.components.UIDynamicElement-1574876151893]: 
    beanData: '{"ionBean":"GenericItem"}'
    tagName: ion-item
    ↓TextInput [ngx.components.UIDynamicElement-1574876151944]: 
      beanData: |
        '{
         "ionBean": "Input",
         "ClearInput": "script:(page as any).pageOwner.item.config.clearInput",
         "Debounce": "plain:0",
         "Placeholder": "script:(page as any).pageOwner.item.config.placeholder",
         "Type": "script:(page as any).pageOwner.item.config.type"
        }'
      tagName: ion-input
      ↓Attr [ngx.components.UIAttribute-1574876151947]: 
        attrName: '[(ngModel)]'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:(page as any).model['value']
      ↓Style [ngx.components.UIStyle-1574876151950]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '	.text-input {
                	opacity: 1 !important;
                	}
                
                '
      ↓Event [ngx.components.UIControlEvent-1574876151953]: 
        attrName: (ionBlur)
        comment: (ionBlur)
        eventName: (ionBlur)
        ↓CheckNotEmpty [ngx.components.UICustomAction-1574876151956]: 
          actionValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  		    
                  		    
                              if(page["redList"] != undefined){
                                  if(vars.item.config.mandatory == true){
                                      if(event.value == ""){
                                          vars.redList[vars.item.name] = true;
                                          //;
                                      }
                                      else{
                                          vars.redList[vars.item.name] = false;
                                      }
                                  }
                              }    		
                  		resolve();
                  
          ↓item [ngx.components.UIControlVariable-1574876151959]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:(page as any).pageOwner.item
          ↓redList [ngx.components.UIControlVariable-1574876151962]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.redList
        ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1596717014126]: 
          beanData: '{"ionBean":"InvokeAction"}'
          stack: C8Oforms_NGX.MobileApplication.Application.executeGoToPageIfCondition
          ↓item [ngx.components.UIControlVariable-1596717024292]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:(page as any).pageOwner.item
          ↓line [ngx.components.UIControlVariable-1596717024294]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:null
          ↓child [ngx.components.UIControlVariable-1596717024296]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:null
          ↓canExec [ngx.components.UIControlVariable-1596717024298]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:true
      ↓Event1 [ngx.components.UIControlEvent-1574876151965]: 
        attrName: (ngModelChange)
        eventName: (ngModelChange)
        ↓CheckFilled [ngx.components.UICustomAction-1574876151968]: 
          actionValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  		    
                  		    if(page["redList"] != undefined){
                                  if(vars.item.config.mandatory == true){
                                      if(event.value == ""){
                                          vars.redList[vars.item.name] = true;
                                          //;
                                      }
                                      else{
                                          vars.redList[vars.item.name] = false;
                                      }
                                  }
                              } 
                  		resolve();
                  
          ↓item [ngx.components.UIControlVariable-1574876151971]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:(page as any).pageOwner.item
          ↓redList [ngx.components.UIControlVariable-1574876151974]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.redList
        ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1609767883748]: 
          beanData: '{"ionBean":"InvokeAction"}'
          stack: C8Oforms_NGX.MobileApplication.Application.UpdateFunctionsToBeCalledToDataSource
          ↓item [ngx.components.UIControlVariable-1609768027172]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:(page as any).pageOwner.item
      ↓Attr1 [ngx.components.UIAttribute-1574876151977]: 
        attrName: '*ngIf'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:(page as any).pageOwner.item.config.short == true
      ↓Attr2 [ngx.components.UIAttribute-1574876151980]: 
        attrName: '[disabled]'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:this.disabled
        isEnabled: false
      ↓Event2 [ngx.components.UIControlEvent-1574876151983]: 
        attrName: (keypress)
        eventName: (keypress)
        ↓CustomAction [ngx.components.UICustomAction-1574876151986]: 
          actionValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                              if(vars["enable"]){	
                                  page.local.val = event.target.value;
                                  resolve(true);
                                  if (!page["codeIsADigit"](event.target.value+event.key)) {
                                      event.preventDefault();
                                      resolve(false);
                                      return false;
                                  }
                                  else{
                                     resolve(true);
                                  }  
                  		    }
                  		    else{
                  		        resolve(true);
                  		    }
                  		
                  		
                  		    
                  	        
                  		
                  
          ↓item [ngx.components.UIControlVariable-1574876151989]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:(page as any).pageOwner.item.name
          ↓enable [ngx.components.UIControlVariable-1574947503266]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:(page as any).pageOwner.item.config.type == 'number'
      ↓Attr3 [ngx.components.UIAttribute-1574936163617]: 
        attrName: step
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:any
      ↓Event21 [ngx.components.UIControlEvent-1574950702433]: 
        attrName: (paste)
        eventName: (paste)
        ↓CustomAction [ngx.components.UICustomAction-1574950702436]: 
          actionValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                              if(vars["enable"]){	
                  		   
                                  
                                  resolve(true);
                                  if (!page["codeIsADigit"](event.clipboardData.getData('Text'))) {
                                      event.preventDefault();
                                      resolve(false);
                                      return false;
                                  }
                                  else{
                                     resolve(true);
                                  }  
                  		    }
                  		    else{
                  		        resolve(true);
                  		    }
                  		
                  		
                  		    
                  	        
                  		
                  
          ↓item [ngx.components.UIControlVariable-1574950702439]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:(page as any).pageOwner.item.name
          ↓enable [ngx.components.UIControlVariable-1574950702442]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:(page as any).pageOwner.item.config.type == 'number'
    ↓Attr [ngx.components.UIAttribute-1574876151995]: 
      attrName: 
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: plain:no-lines
    ↓Attr1 [ngx.components.UIAttribute-1574876151998]: 
      attrName: '[class.item-label-stacked]'
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:((page as any).pageOwner.item.config.position == 'stacked')
    ↓Attr11 [ngx.components.UIAttribute-1574876152001]: 
      attrName: '[class.item-label-floating]'
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:((page as any).pageOwner.item.config.position == 'floating')
    ↓Attr12 [ngx.components.UIAttribute-1574876152004]: 
      attrName: '[class.item-label-fixed]'
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:((page as any).pageOwner.item.config.position == 'fixed')
    ↓Attr2 [ngx.components.UIAttribute-1574876152007]: 
      attrName: '[ngClass]'
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: 'script:this.redList != undefined ?  this.redList[(page as any).pageOwner.item.name] == true ? ''stylegenerictextred'': ''stylegenerictextnormal'': ''stylegenerictextnormal'''
    ↓TextArea [ngx.components.UIDynamicElement-1574876152010]: 
      beanData: |
        '{
         "ionBean": "TextArea",
         "Debounce": "plain:0",
         "Placeholder": "script:(page as any).pageOwner.item.config.placeholder"
        }'
      tagName: ion-textarea
      ↓Attr [ngx.components.UIAttribute-1574876152013]: 
        attrName: '[(ngModel)]'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:(page as any).model['value']
      ↓Event1 [ngx.components.UIControlEvent-1574876152016]: 
        attrName: (ionBlur)
        eventName: (ionBlur)
        ↓CheckNotEmpty [ngx.components.UICustomAction-1574876152019]: 
          actionValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  		    if(page["redList"] != undefined){
                                  if(vars.item.config.mandatory == true){
                                      if(event.value == ""){
                                          vars.redList[vars.item.name] = true;
                                          //;
                                      }
                                      else{
                                          vars.redList[vars.item.name] = false;
                                      }
                                  }
                              } 
                  		resolve();
                  
          ↓item [ngx.components.UIControlVariable-1574876152022]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:(page as any).pageOwner.item
          ↓redList [ngx.components.UIControlVariable-1598963509735]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.redList
        ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1598963198440]: 
          beanData: '{"ionBean":"InvokeAction"}'
          stack: C8Oforms_NGX.MobileApplication.Application.executeGoToPageIfCondition
          ↓item [ngx.components.UIControlVariable-1598963198443]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:(page as any).pageOwner.item
          ↓line [ngx.components.UIControlVariable-1598963198446]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:null
          ↓child [ngx.components.UIControlVariable-1598963198449]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:null
          ↓canExec [ngx.components.UIControlVariable-1598963198452]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:true
      ↓Event11 [ngx.components.UIControlEvent-1574876152025]: 
        attrName: (ngModelChange)
        eventName: (ngModelChange)
        ↓CheckFilled [ngx.components.UICustomAction-1574876152028]: 
          actionValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  		if(page["redList"] != undefined){
                                  if(vars.item.config.mandatory == true){
                                      if(event.value == ""){
                                          vars.redList[vars.item.name] = true;
                                          //;
                                      }
                                      else{
                                          vars.redList[vars.item.name] = false;
                                      }
                                  }
                              } 
                  		resolve();
                  
          ↓item [ngx.components.UIControlVariable-1574876152031]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:(page as any).pageOwner.item
          ↓redList [ngx.components.UIControlVariable-1574876152034]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.redList
        ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1609768051545]: 
          beanData: '{"ionBean":"InvokeAction"}'
          stack: C8Oforms_NGX.MobileApplication.Application.UpdateFunctionsToBeCalledToDataSource
          ↓item [ngx.components.UIControlVariable-1609768051548]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:(page as any).pageOwner.item
      ↓Attr1 [ngx.components.UIAttribute-1574876152037]: 
        attrName: '*ngIf'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:(page as any).pageOwner.item.config.short == false
      ↓Attr2 [ngx.components.UIAttribute-1574876152040]: 
        attrName: '[disabled]'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:this.disabled
        isEnabled: false
      ↓Event2 [ngx.components.UIControlEvent-1574876152043]: 
        attrName: (keypress)
        eventName: (keypress)
        isEnabled: false
        ↓CustomAction [ngx.components.UICustomAction-1574876152046]: 
          actionValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  		    if(props["enable"]){
                  		        let codeIsADigit = (code)=> {
                  	                return /((e)|(\d)|(-)|(\+))/g.test(code);
                  	            };          
                  	            if (!codeIsADigit(event.key)) {
                  	                    event.preventDefault();
                  	                    resolve(false);
                  	                    return false;
                  	            }
                  	            else{
                  	                resolve(true);
                  	            }    
                  		    }
                  		    else{
                  		        resolve(true);
                  		    }
                  		
                  		
                  		    
                  	        
                  		
                  
          isEnabled: false
          ↓item [ngx.components.UIControlVariable-1574876152049]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:(page as any).pageOwner.item.name
          ↓enable [ngx.components.UIControlVariable-1574876152052]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:(page as any).pageOwner.item.config.type == 'number'
        ↓CustomAction1 [ngx.components.UICustomAction-1574947642261]: 
          actionValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                              if(vars["enable"]){	
                                  page.local.val = event.target.value;
                                  resolve(true);
                                  if (!page["codeIsADigit"](event.target.value+event.key)) {
                                      event.preventDefault();
                                      resolve(false);
                                      return false;
                                  }
                                  else{
                                     resolve(true);
                                  }  
                  		    }
                  		    else{
                  		        resolve(true);
                  		    }
                  		
                  		
                  		    
                  	        
                  		
                  
          ↓item [ngx.components.UIControlVariable-1574947642264]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:(page as any).pageOwner.item.name
          ↓enable [ngx.components.UIControlVariable-1574947642267]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:(page as any).pageOwner.item.config.type == 'number'
      ↓Event21 [ngx.components.UIControlEvent-1574951903883]: 
        attrName: (keypress)
        eventName: (keypress)
        ↓CustomAction [ngx.components.UICustomAction-1574951903886]: 
          actionValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                              if(vars["enable"]){	
                                  page.local.val = event.target.value;
                                  resolve(true);
                                  if (!page["codeIsADigit"](event.target.value+event.key)) {
                                      event.preventDefault();
                                      resolve(false);
                                      return false;
                                  }
                                  else{
                                     resolve(true);
                                  }  
                  		    }
                  		    else{
                  		        resolve(true);
                  		    }
                  		
                  		
                  		    
                  	        
                  		
                  
          ↓item [ngx.components.UIControlVariable-1574951903889]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:(page as any).pageOwner.item.name
          ↓enable [ngx.components.UIControlVariable-1574951903892]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:(page as any).pageOwner.item.config.type == 'number'
      ↓Event211 [ngx.components.UIControlEvent-1574951903895]: 
        attrName: (paste)
        eventName: (paste)
        ↓CustomAction [ngx.components.UICustomAction-1574951903898]: 
          actionValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                              if(vars["enable"]){	
                  		   
                                  
                                  resolve(true);
                                  if (!page["codeIsADigit"](event.clipboardData.getData('Text'))) {
                                      event.preventDefault();
                                      resolve(false);
                                      return false;
                                  }
                                  else{
                                     resolve(true);
                                  }  
                  		    }
                  		    else{
                  		        resolve(true);
                  		    }
                  		
                  		
                  		    
                  	        
                  		
                  
          ↓item [ngx.components.UIControlVariable-1574951903901]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:(page as any).pageOwner.item.name
          ↓enable [ngx.components.UIControlVariable-1574951903904]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:(page as any).pageOwner.item.config.type == 'number'
      ↓Attr3 [ngx.components.UIAttribute-1574959076147]: 
        attrName: step
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:any
    ↓Attr3 [ngx.components.UIAttribute-1574876152055]: 
      attrName: '*ngIf'
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: plain:this.disabled == false
  ↓GenericItem1 [ngx.components.UIDynamicElement-1574876152058]: 
    beanData: '{"ionBean":"GenericItem"}'
    tagName: ion-item
    ↓TextInput [ngx.components.UIDynamicElement-1574876152151]: 
      beanData: |
        '{
         "ionBean": "Input",
         "ClearInput": "script:(page as any).pageOwner.item.config.clearInput",
         "Debounce": "plain:0",
         "Placeholder": "script:(page as any).pageOwner.item.config.placeholder",
         "Type": "script:(page as any).pageOwner.item.config.type"
        }'
      tagName: ion-input
      ↓Style [ngx.components.UIStyle-1574876152157]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '	.text-input {
                	opacity: 1 !important;
                	}
                
                '
      ↓Event [ngx.components.UIControlEvent-1574876152160]: 
        attrName: (ionBlur)
        eventName: (ionBlur)
        ↓CheckNotEmpty [ngx.components.UICustomAction-1574876152163]: 
          actionValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  		    
                              if(page["redList"] != undefined){
                                  if(vars.item.config.mandatory == true){
                                      if(event.value == ""){
                                          vars.redList[vars.item.name] = true;
                                          //;
                                      }
                                  }
                              }
                  		resolve();
                  
          ↓item [ngx.components.UIControlVariable-1574876152166]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:(page as any).pageOwner.item
          ↓redList [ngx.components.UIControlVariable-1574876152169]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.redList
      ↓Event1 [ngx.components.UIControlEvent-1574876152172]: 
        attrName: (ngModelChange)
        eventName: (ngModelChange)
        ↓CheckFilled [ngx.components.UICustomAction-1574876152175]: 
          actionValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '		    
                  		    if(page["redList"] != undefined){
                  		        if(vars.item.config.mandatory == true){
                  		            if((event.value != undefined ? event.value != "": event != "")){
                  		                vars.item1 = vars.item1 + event;
                  		                vars.redList = false;
                  		            }
                  		        }
                  		    }
                  		
                  		    //;
                  		resolve();
                  '
          ↓item [ngx.components.UIControlVariable-1574876152178]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:(page as any).pageOwner.item
          ↓redList [ngx.components.UIControlVariable-1574876152181]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.redList[(page as any).pageOwner.item.name]
      ↓Attr1 [ngx.components.UIAttribute-1574876152184]: 
        attrName: '*ngIf'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:(page as any).pageOwner.item.config.short == true
      ↓Attr3 [ngx.components.UIAttribute-1586269238873]: 
        attrName: ondragover
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:event.preventDefault()
      ↓Attr31 [ngx.components.UIAttribute-1586269479775]: 
        attrName: ondrop
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:event.preventDefault()
      ↓Attr [ngx.components.UIAttribute-1618577836717]: 
        attrName: autocomplete
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:new-password
    ↓Attr [ngx.components.UIAttribute-1574876152190]: 
      attrName: 
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: plain:no-lines
    ↓Attr1 [ngx.components.UIAttribute-1574876152193]: 
      attrName: '[class.item-label-stacked]'
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:((page as any).pageOwner.item.config.position == 'stacked')
    ↓Attr11 [ngx.components.UIAttribute-1574876152196]: 
      attrName: '[class.item-label-floating]'
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:((page as any).pageOwner.item.config.position == 'floating')
    ↓Attr12 [ngx.components.UIAttribute-1574876152199]: 
      attrName: '[class.item-label-fixed]'
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:((page as any).pageOwner.item.config.position == 'fixed')
    ↓Attr2 [ngx.components.UIAttribute-1574876152202]: 
      attrName: '[ngClass]'
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: 'script:this.redList != undefined ?  this.redList[(page as any).pageOwner.item.name] == true ? ''stylegenerictextred'': ''stylegenerictextnormal'': ''stylegenerictextnormal'''
    ↓TextArea [ngx.components.UIDynamicElement-1574876152205]: 
      beanData: |
        '{
         "ionBean": "TextArea",
         "Debounce": "plain:0",
         "Placeholder": "script:(page as any).pageOwner.item.config.placeholder"
        }'
      tagName: ion-textarea
      ↓Attr [ngx.components.UIAttribute-1574876152208]: 
        attrName: '[(ngModel)]'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:(page as any).model['value']
        isEnabled: false
      ↓Event1 [ngx.components.UIControlEvent-1574876152211]: 
        attrName: (ionBlur)
        eventName: (ionBlur)
        ↓CheckNotEmpty [ngx.components.UICustomAction-1574876152214]: 
          actionValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  		if(vars.item.config.mandatory == true){
                  		    if(event.value == ""){
                  		        vars.redList = true;
                  		        ;
                  		    }
                  		}
                  		resolve();
                  
          ↓item [ngx.components.UIControlVariable-1574876152217]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:(page as any).pageOwner.item
      ↓Event11 [ngx.components.UIControlEvent-1574876152220]: 
        attrName: (ngModelChange)
        eventName: (ngModelChange)
        ↓CheckFilled [ngx.components.UICustomAction-1574876152223]: 
          actionValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  		if(vars.item.config.mandatory == true){
                  		    if(event.value != ""){
                  		        vars.redList = false;
                  		    }
                  		}
                  		    ;
                  		resolve();
                  
          ↓item [ngx.components.UIControlVariable-1574876152226]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:(page as any).pageOwner.item
          ↓redList [ngx.components.UIControlVariable-1574876152229]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.redList[(page as any).pageOwner.item.name]
      ↓Attr1 [ngx.components.UIAttribute-1574876152232]: 
        attrName: '*ngIf'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:(page as any).pageOwner.item.config.short == false
      ↓Attr2 [ngx.components.UIAttribute-1574876152235]: 
        attrName: '[disabled]'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:this.disabled
        isEnabled: false
    ↓Attr3 [ngx.components.UIAttribute-1574876152238]: 
    ↓Attr31 [ngx.components.UIAttribute-1574876152241]: 
      attrName: '*ngIf'
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: plain:this.disabled == true
  ↓Directive2 [ngx.components.UIControlDirective-1570455241277]: 
    directiveName: If
    directiveSource: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: 'script:this.redList != null ? this.redList[(page as any).pageOwner.item.name] : false'
    ↓itemErrorText [ngx.components.UIDynamicElement-1570455241280]: 
      beanData: '{"ionBean":"GenericItem"}'
      tagName: ion-item
      ↓Text [ngx.components.UIText-1570455241283]: 
        i18n: true
        textValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:'repMandartory'| translate
      ↓Style [ngx.components.UIStyle-1570455241286]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                'background-color: transparent;
                margin:0px;
                padding:0px;
                color:#ff0000;
                '
  ↓Attr2 [ngx.components.UIAttribute-1574876179418]: 
    attrName: '[ngClass]'
    attrValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: 'script:((page as any).pageOwner.item.config.mandatory && (page as any).pageOwner.item.config.disabled == true) ? ''requiredgregoryv'' : '''''
    isEnabled: false