↓Div [ngx.components.UIDynamicElement-1629125586439]: 
  beanData: '{"ionBean":"DivTag"}'
  tagName: div
  ↓Style [ngx.components.UIStyle-1629125586448]: 
    styleContent: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            'border-color: #e3e6e6;
            border-style: dashed;
            height:100%;
            min-height:25px;
            text-align:center;
            color: #cccfcf;
            border-width: 2px;
            '
  ↓Event [ngx.components.UIControlEvent-1629125586451]: 
    attrName: (dragover)
    eventName: (dragover)
    ↓allowDrop [ngx.components.UICustomAction-1629125586454]: 
      actionValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              		
              		    if(event.dataTransfer.types.includes("__c8oformsdrag_form")){    
              	            event.preventDefault();
              				(page as any).pageOwner.local.parami18n.currentHighlighted = event.target;
              				event.target.style["border-color"] = '#bc0000';
                              event.target.style["border-style"] = "dashed";
              	            //page["recursive"](event.target, "before");
              	        }  
              		
              		resolve();
              
  ↓Event1 [ngx.components.UIControlEvent-1629125586460]: 
    attrName: (drop)
    eventName: (drop)
    ↓drop [ngx.components.UICustomAction-1629125586463]: 
      actionValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              '		page.local.dragging = false;
              		event.preventDefault();
              		let name = "";
              		let error = false;
              		vars.folder =page.local.folder;
              		const keysSelected = Object.keys(page.global.selectedItem);
              		const multiple = keysSelected.length > 1;
              		if(page.global[''visibleoptions0Drag''] == undefined){
              			page.global[''visibleoptions0Drag''] = {};
              		}
              		page.global[''visibleoptions0Drag''][vars.i] = false;
              		
              		var id =  event.dataTransfer.getData("_id");
              		var ids = [];
              		if(multiple){
              			ids = keysSelected
              				.filter((x)=>{return page.global.selectedItem[x]});
              		}
              		else{
              			ids = [id];
              		}
              		new Promise(async (resolve1)=>{
              			for(let elem of ids){
              				try{
              					let res = await page.c8o.callJsonObject("fs://c8oforms_fs.get",{
              						"docid":elem
              					}).async();
              					let newTag = [];
              					if(res.tag != undefined && res.tag instanceof Array){
              						newTag = res.tag.filter((x)=>{return x != vars.folder});
              					}
              					name = res["name"];
              					let res2 = await page.c8o.callJsonObject("fs://c8oforms_fs.post",{
              						"_id": elem,
              						"tag": newTag,
              						"_use_policy": "merge",
              						_use_merge_tag : "override" 
              					}).async();
              				}
              				catch(e){
              					console.error("myErr", e);
              					error = true;
              				}				
              			}
              			resolve1();
              		})
              		.then((res)=>{
              			page.global.selectedItem = {};
              			resolve({"error": error, params: {"folder": vars.folder, "form": name}, id: id, multiple: multiple});
              		})
              '
      ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1629134509135]: 
        beanData: '{"ionBean":"InvokeAction"}'
        stack: C8Oforms_NGX.MobileApplication.Application.showToast
        ↓msg [ngx.components.UIControlVariable-1629134509138]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: 'script:parent.out.error ?  c8oPage.translate.instant(''error_occured_while_moving'') : parent.out.multiple ? c8oPage.translate.instant(''had_been_removed_folders'', parent.out.params) : c8oPage.translate.instant(''has_been_removed_folder'', parent.out.params) '
        ↓duration [ngx.components.UIControlVariable-1629134509141]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'5000'
        ↓position [ngx.components.UIControlVariable-1629134509144]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'bottom'
        ↓cssClass [ngx.components.UIControlVariable-1629134509147]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: 'script:parent.out.error ? ''toastError'' : ''toastSuccess'''
        ↓showCloseButton [ngx.components.UIControlVariable-1629134509150]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:false
        ↓closeButtonText [ngx.components.UIControlVariable-1629134509153]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'Close'
  ↓Text [ngx.components.UIText-1629125586475]: 
    i18n: true
    textValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: 'script:''drop_notice_selector'' | translate:(page as any).pageOwner.local.parami18n.getI18nParams({value:page.local.folder})'
  ↓Break [ngx.components.UIDynamicElement-1629125586478]: 
    beanData: '{"ionBean":"Break"}'
    selfClose: true
    tagName: br
  ↓Event2 [ngx.components.UIControlEvent-1629132735931]: 
    attrName: (dragleave)
    eventName: (dragleave)
    ↓removeDash [ngx.components.UICustomAction-1629132744905]: 
      actionValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              			if((page as any).pageOwner.local.parami18n.currentHighlighted != null){
              				(page as any).pageOwner.local.parami18n.currentHighlighted.style["border-color"] = null;
                          	(page as any).pageOwner.local.parami18n.currentHighlighted.style["border-style"] = null;
              			}
              		
              		resolve();
              
↓PageEvent [ngx.components.UIPageEvent-1629126070855]: 
  ↓CustomAction [ngx.components.UICustomAction-1629126080125]: 
    actionValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            '		(page as any).pageOwner.local.parami18n = {value:page.local.folder}; 
            		(page as any).pageOwner.local.parami18n.getI18nParams = (arg)=>{
            			return arg;
            		}
            		resolve();
            '