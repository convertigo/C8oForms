↓ButtonEdit [ngx.components.UIDynamicElement-1678789985499]: 
  beanData: |
    '{
     "ionBean": "Button",
     "IonColor": "source:{\"filter\":\"Shared\",\"project\":\"C8Oforms\",\"input\":\"\",\"model\":{\"data\":[{\"priority\":1678789985495,\"regular\":true}],\"path\":\"?.color\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}",
     "IonFill": "plain:clear"
    }'
  tagName: ion-button
  ↓Attr [ngx.components.UIAttribute-1678789985502]: 
    attrName: tooltip
    attrValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: source:{"filter":"Shared","project":"C8Oforms","input":"","model":{"data":[{"priority":1678789985495,"regular":true}],"path":"?.textTooltip","prefix":"","suffix":"","custom":"","useCustom":false}}
  ↓Attr1 [ngx.components.UIAttribute-1678789985505]: 
    attrName: 
    attrValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: plain:arrow
  ↓Attr2 [ngx.components.UIAttribute-1678789985508]: 
    attrName: positionV
    attrValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: plain:top
  ↓Event [ngx.components.UIControlEvent-1678789985511]: 
    ↓EmitEvent [ngx.components.UIDynamicEmit-1678790064420]: 
      beanData: '{"ionBean":"EmitEventAction","event":"plain:C8Oforms.MobileApplication.Application.editorToolbarButton.clicked"}'
      tagName: EmitEvent
  ↓Style [ngx.components.UIStyle-1678789985517]: 
    styleContent: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            '/**
             * Custom properties (sometimes referred to as CSS variables or cascading variables)
             * are entities defined by CSS authors that contain specific values to be reused throughout a document.
             * They are set using custom property notation, e.g.: --main-color: black;
             * and are accessed using the var() function, e.g.: color: var(--main-color);
             * You can find below your component''s properties you can customize within the page.
             * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
             * For more informations see https://ionicframework.com/docs/theming.
            **/
            //--background	//Background of the button
            //--background-activated	//Background of the button when pressed. Note: setting this will interfere with the Material Design ripple
            //--background-activated-opacity	//Opacity of the button when pressed
            //--background-focused	//Background of the button when focused with the tab key
            //--background-focused-opacity	//Opacity of the button when focused with the tab key
            //--background-hover	//Background of the button on hover
            //--background-hover-opacity	//Opacity of the background on hover
            //--border-color	//Border color of the button
            //--border-radius	//Border radius of the button
            //--border-style	//Border style of the button
            //--border-width	//Border width of the button
            //--box-shadow	//Box shadow of the button
            //--color	//Text color of the button
            //--color-activated	//Text color of the button when pressed
            //--color-focused	//Text color of the button when focused with the tab key
            //--color-hover	//Text color of the button when hover
            //--opacity	//Opacity of the button
            //--padding-bottom	//Bottom padding of the button
            //--padding-end	//Right padding if direction is left-to-right, and left padding if direction is right-to-left of the button
            //--padding-start	//Left padding if direction is left-to-right, and right padding if direction is right-to-left of the button
            //--padding-top	//Top padding of the button
            //--ripple-color	//Color of the button ripple effect
            //--transition	//Transition of the button
            height:unset !important;
            '
  ↓tag [ngx.components.UIControlDirective-1678789985520]: 
    directiveName: If
    directiveSource: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:this.global?.platform?.width < 965 else ElseBlock_1678725658425
    ↓Icon [ngx.components.UIDynamicElement-1678789985523]: 
      beanData: '{"ionBean":"Icon","IconName":"source:{\"filter\":\"Shared\",\"project\":\"C8Oforms\",\"input\":\"\",\"model\":{\"data\":[{\"priority\":1678789985495,\"regular\":true}],\"path\":\"?.icon\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}"}'
      tagName: ion-icon
  ↓ng_template [ngx.components.UIElement-1678789985526]: 
    identifier: ElseBlock_1678725658425
    tagName: ng-template
    ↓DivFlex [ngx.components.UIDynamicElement-1678789985529]: 
      beanData: '{"ionBean":"DivTag"}'
      tagName: div
      ↓DivIocn [ngx.components.UIDynamicElement-1678789985532]: 
        beanData: '{"ionBean":"DivTag"}'
        tagName: div
        ↓Icon [ngx.components.UIDynamicElement-1678789985535]: 
          beanData: '{"ionBean":"Icon","IconName":"source:{\"filter\":\"Shared\",\"project\":\"C8Oforms\",\"input\":\"\",\"model\":{\"data\":[{\"priority\":1678789985495,\"regular\":true}],\"path\":\"?.icon\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}"}'
          tagName: ion-icon
      ↓DivText [ngx.components.UIDynamicElement-1678789985538]: 
        beanData: '{"ionBean":"DivTag"}'
        tagName: div
        ↓Paragraph [ngx.components.UIDynamicElement-1678789985541]: 
          beanData: '{"ionBean":"Paragraph"}'
          tagName: p
          ↓Style [ngx.components.UIStyle-1678789985544]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    'margin-top:0;
                    margin-left:0;
                    overflow: hidden;
                    text-overflow: ellipsis;
                    width:65px;
                    '
          ↓some_text [ngx.components.UIText-1678789985547]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: source:{"filter":"Shared","project":"C8Oforms","input":"","model":{"data":[{"priority":1678789985495,"regular":true}],"path":"?.text","prefix":"","suffix":"","custom":"","useCustom":false}}
      ↓Style [ngx.components.UIStyle-1678789985550]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '	display: flex;
                	flex-direction: column;
                '
↓clicked [ngx.components.UICompEvent-1678790075423]: 
  attrName: clicked
↓icon [ngx.components.UICompVariable-1678790106398]: 
↓text [ngx.components.UICompVariable-1678790196786]: 
↓PageEvent [ngx.components.UIPageEvent-1678790479643]: 
  ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1678790487953]: 
    beanData: '{"ionBean":"InvokeAction"}'
    stack: C8Oforms.MobileApplication.Application.importNg2Tooltips
↓color [ngx.components.UICompVariable-1678791001124]: 
  value: '''primary'''
↓textTooltip [ngx.components.UICompVariable-1678792765284]: 