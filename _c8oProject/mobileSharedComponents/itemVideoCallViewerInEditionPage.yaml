↓item [ngx.components.UICompVariable-1620389799935]: 
  value: 
↓model [ngx.components.UICompVariable-1620389799938]: 
  comment: this.formsSubmit[item['name']]
  value: '{}'
↓redList [ngx.components.UICompVariable-1620389799941]: 
  comment: this.redList[item['name']]
  value: null
↓disabled [ngx.components.UICompVariable-1620389799944]: 
  comment: this.formsSubmit[item['name']]
  value: false
↓Div [ngx.components.UIDynamicElement-1620389799947]: 
  beanData: '{"ionBean":"DivTag"}'
  identifier: divtext
  tagName: div
  ↓Attr11 [ngx.components.UIAttribute-1620389799950]: 
    attrName: '[attr.id]'
    attrValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:this.item.name
  ↓Attr [ngx.components.UIAttribute-1620389799953]: 
    attrName: '[ngClass]'
    attrValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: 'script:this.redList != undefined ?  this.redList[this.item.name] == true ? (this.item.config.mandatory && this.item.config.disabled == true) ? [''requiredgregoryvpadding'', ''styledivred''] : ''styledivred'': (this.item.config.mandatory && this.item.config.disabled == true) ? [''requiredgregoryv'', ''styledivnormal''] : ''styledivnormal'': (this.item.config.mandatory && this.item.config.disabled == true) ? [''requiredgregoryv'', ''styledivnormal''] : ''styledivnormal'''
  ↓UseSharedComponent [ngx.components.UIUseShared-1620389799956]: 
    isEnabled: false
    sharedcomponent: C8Oforms_NGX.MobileApplication.Application.sharedLabelElem
    ↓item [ngx.components.UIUseVariable-1620389799959]: 
      varValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:this.item
  ↓GenericItem_Location [ngx.components.UIDynamicElement-1620389799962]: 
    beanData: '{"ionBean":"GenericItem"}'
    isEnabled: false
    tagName: ion-item
    ↓TextInput [ngx.components.UIDynamicElement-1620389799965]: 
      beanData: |
        '{
         "ionBean": "Input",
         "Debounce": "plain:0",
         "Placeholder": "script:this.item.config.placeholder"
        }'
      tagName: ion-input
      ↓Attr2 [ngx.components.UIAttribute-1620389799968]: 
        attrName: ondragstart
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:event.preventDefault();event.stopPropagation();
      ↓Attr3 [ngx.components.UIAttribute-1620389799971]: 
        attrName: ondragover
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:event.preventDefault()
      ↓Attr31 [ngx.components.UIAttribute-1620389799974]: 
        attrName: ondrop
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:event.preventDefault()
      ↓Attr11 [ngx.components.UIAttribute-1620389799977]: 
        attrName: '[attr.draggable]'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:false
      ↓Event [ngx.components.UIControlEvent-1620389799980]: 
        attrName: (ionBlur)
        eventName: (ionBlur)
        ↓CheckNotEmpty [ngx.components.UICustomAction-1620389799983]: 
          actionValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  		    
                              if(page["redList"] != undefined){
                                  if(vars.item.config.mandatory == true){
                                      if(event.value == ""){
                                          vars.redList[vars.item.name] = true;
                                          //;
                                      }
                                  }
                              }
                  		resolve();
                  
          ↓item [ngx.components.UIControlVariable-1620389799986]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.item
          ↓redList [ngx.components.UIControlVariable-1620389799989]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.redList
      ↓Event1 [ngx.components.UIControlEvent-1620389799992]: 
        attrName: (ngModelChange)
        eventName: (ngModelChange)
        ↓CheckFilled [ngx.components.UICustomAction-1620389799995]: 
          actionValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '		    
                  		    if(page["redList"] != undefined){
                  		        if(vars.item.config.mandatory == true){
                  		            if((event.value != undefined ? event.value != "": event != "")){
                  		                vars.item1 = vars.item1 + event;
                  		                vars.redList = false;
                  		            }
                  		        }
                  		    }
                  		
                  		    //;
                  		resolve();
                  '
          ↓item [ngx.components.UIControlVariable-1620389799998]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.item
          ↓redList [ngx.components.UIControlVariable-1620389800001]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.redList[this.item.name]
        ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1620389800004]: 
          beanData: '{"ionBean":"InvokeAction"}'
          stack: C8Oforms_NGX.MobileApplication.Application.UpdateFunctionsToBeCalledToDataSource
          ↓item [ngx.components.UIControlVariable-1620389800007]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.item
      ↓Attr1 [ngx.components.UIAttribute-1620389800010]: 
        attrName: '[(ngModel)]'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:this.model.value.addr.FormattedAddress
      ↓Attr [ngx.components.UIAttribute-1620389800013]: 
        attrName: '*ngIf'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:this.item.config.corresp_addr
    ↓Attr [ngx.components.UIAttribute-1620389800016]: 
      attrName: 
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: plain:no-lines
    ↓Attr11 [ngx.components.UIAttribute-1620389800019]: 
      attrName: '[class.item-label-stacked]'
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:(this.item.config.position == 'stacked')
    ↓Attr111 [ngx.components.UIAttribute-1620389800022]: 
      attrName: '[class.item-label-floating]'
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:(this.item.config.position == 'floating')
    ↓Attr12 [ngx.components.UIAttribute-1620389800025]: 
      attrName: '[class.item-label-fixed]'
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:(this.item.config.position == 'fixed')
    ↓Attr21 [ngx.components.UIAttribute-1620389800028]: 
      attrName: '[ngClass]'
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: 'script:this.redList != undefined ?  this.redList[this.item.name] == true ? ''stylegenerictextred'': ''stylegenerictextnormal'': ''stylegenerictextnormal'''
    ↓Icon_location [ngx.components.UIDynamicElement-1620389800031]: 
      beanData: '{"ionBean":"Icon","IconName":"plain:custom-location"}'
      tagName: ion-icon
      ↓Style [ngx.components.UIStyle-1620389800034]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '	cursor: pointer;
                '
      ↓Event [ngx.components.UIControlEvent-1620389800037]: 
        ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1620389800040]: 
          beanData: '{"ionBean":"InvokeAction"}'
          stack: C8Oforms_NGX.MobileApplication.Application.getPositonAndAddr
          ↓model [ngx.components.UIControlVariable-1620389800043]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.model
          ↓item [ngx.components.UIControlVariable-1620389800046]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.item
    ↓Div [ngx.components.UIDynamicElement-1620389800049]: 
      beanData: '{"ionBean":"DivTag"}'
      tagName: div
      ↓Span [ngx.components.UIDynamicElement-1620389800052]: 
        beanData: '{"ionBean":"SpanTag"}'
        tagName: span
        ↓Fragment [ngx.components.UICustom-1620389800055]: 
          htmlTemplate: <b>{{this.translate.instant('latitude')}}</b>
        ↓Text1 [ngx.components.UIText-1620389800058]: 
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: 'script:'': '' + (this.model?.value?.gps?.latitude != undefined ? this.model?.value?.gps?.latitude : ''n/a'')'
      ↓Span1 [ngx.components.UIDynamicElement-1620389800061]: 
        beanData: '{"ionBean":"SpanTag"}'
        tagName: span
        ↓Fragment [ngx.components.UICustom-1620389800064]: 
          htmlTemplate: <b>{{this.translate.instant('longitude')}}</b>
        ↓Text1 [ngx.components.UIText-1620389800067]: 
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: 'script:'': '' + (this.model?.value?.gps?.longitude != undefined ? this.model?.value?.gps?.longitude : ''n/a'')'
      ↓Span11 [ngx.components.UIDynamicElement-1620389800070]: 
        beanData: '{"ionBean":"SpanTag"}'
        tagName: span
        ↓Fragment [ngx.components.UICustom-1620389800073]: 
          htmlTemplate: <b>{{this.translate.instant('accuracy')}}</b>
        ↓Text1 [ngx.components.UIText-1620389800076]: 
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: 'script:'': '' + (this.model?.value?.gps?.accuracy != undefined ? this.model?.value?.gps?.accuracy + '' '' + this.translate.instant(''meters'') : ''n/a'')'
      ↓Attr [ngx.components.UIAttribute-1620389800079]: 
        attrName: '*ngIf'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:!this.item.config.corresp_addr
  ↓Div [ngx.components.UIDynamicElement-1620389800082]: 
    beanData: '{"ionBean":"DivTag"}'
    isEnabled: false
    tagName: div
    ↓Span [ngx.components.UIDynamicElement-1620389800085]: 
      beanData: '{"ionBean":"SpanTag"}'
      tagName: span
      ↓Fragment [ngx.components.UICustom-1620389800088]: 
        htmlTemplate: <b>{{this.translate.instant('latitude')}}</b>
      ↓Text1 [ngx.components.UIText-1620389800091]: 
        textValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: 'script:'': '' + (this.model?.value?.gps?.latitude != undefined ? toFixed(this.model?.value?.gps?.latitude, 3) : ''n/a'')'
    ↓Span1 [ngx.components.UIDynamicElement-1620389800094]: 
      beanData: '{"ionBean":"SpanTag"}'
      tagName: span
      ↓Fragment [ngx.components.UICustom-1620389800097]: 
        htmlTemplate: <b>{{this.translate.instant('longitude')}}</b>
      ↓Text1 [ngx.components.UIText-1620389800100]: 
        textValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: 'script:'': '' + (this.model?.value?.gps?.longitude != undefined ? toFixed(this.model?.value?.gps?.longitude, 3) : ''n/a'')'
    ↓Span11 [ngx.components.UIDynamicElement-1620389800103]: 
      beanData: '{"ionBean":"SpanTag"}'
      tagName: span
      ↓Fragment [ngx.components.UICustom-1620389800106]: 
        htmlTemplate: <b>{{this.translate.instant('accuracy')}}</b>
      ↓Text1 [ngx.components.UIText-1620389800109]: 
        textValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: 'script:'': '' + (this.model?.value?.gps?.accuracy != undefined ? this.model?.value?.gps?.accuracy + '' '' + this.translate.instant(''meters'') : ''n/a'')'
    ↓Attr [ngx.components.UIAttribute-1620389800112]: 
      attrName: '*ngIf'
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: plain:this.item.config.corresp_addr
  ↓Directive2 [ngx.components.UIControlDirective-1620389800115]: 
    directiveName: If
    directiveSource: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:this.redList
    isEnabled: false
    ↓itemErrorText [ngx.components.UIDynamicElement-1620389800118]: 
      beanData: '{"ionBean":"GenericItem"}'
      tagName: ion-item
      ↓Text [ngx.components.UIText-1620389800121]: 
        i18n: true
        textValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:'repMandartory'| translate
      ↓Style [ngx.components.UIStyle-1620389800124]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                'background-color: transparent;
                margin:0px;
                padding:0px;
                color:#ff0000;
                '
  ↓Style [ngx.components.UIStyle-1620389800127]: 
    styleContent: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            position:relative;
            //min-height:70px !important;
            padding-bottom:89px !important;
            
  ↓FabContainer [ngx.components.UIDynamicElement-1620391770817]: 
    beanData: |
      '{
       "ionBean": "FabContainer",
       "Horizontal": "plain:end",
       "Vertical": "plain:center"
      }'
    tagName: ion-fab
    ↓FabButton [ngx.components.UIDynamicElement-1620391759562]: 
      beanData: '{"ionBean":"FabButton"}'
      tagName: ion-fab-button
      ↓Icon [ngx.components.UIDynamicElement-1620391799745]: 
        beanData: '{"ionBean":"Icon","IconName":"plain:custom-videocam"}'
        tagName: ion-icon