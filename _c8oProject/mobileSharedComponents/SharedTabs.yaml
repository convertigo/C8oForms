↓Tag2 [ngx.components.UIElement-1664292958701]: 
  tagName: ion-tabs
  ↓Tag [ngx.components.UIElement-1664292958704]: 
    tagName: ion-tab-bar
    ↓Directive2 [ngx.components.UIControlDirective-1664292958707]: 
      directiveName: If
      directiveSource: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:this.pageOwner.local.pages[this.pageOwner.local.currentIndex].enabledButtons && this.pageOwner.local.pages[this.pageOwner.local.currentIndex].positionButtons == 'tab' && this.pageOwner.local.currentIndex > 0
      ↓Tag [ngx.components.UIElement-1664292958710]: 
        tagName: ion-tab-button
        ↓Icon [ngx.components.UIDynamicElement-1664292958713]: 
          beanData: '{"ionBean":"Icon","IconName":"plain:arrow-back-outline"}'
          tagName: ion-icon
          ↓Attr [ngx.components.UIAttribute-1664294226456]: 
            attrName: '[attr.aria-hidden]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:true
        ↓Label [ngx.components.UIDynamicElement-1664292958716]: 
          beanData: '{"ionBean":"Label"}'
          tagName: ion-label
          ↓Text [ngx.components.UIText-1664292958719]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:previous
          ↓Attr [ngx.components.UIAttribute-1664292958722]: 
            attrName: '*ngIf'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:this.pageOwner.isThereANextPage != undefined 
        ↓Event [ngx.components.UIControlEvent-1664292958725]: 
          ↓goBackward [ngx.components.UICustomAction-1664292958728]: 
            actionValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    '		page.pageOwner["local"]["currentIndex"] = page.pageOwner.getPreviousPageIndex();
                    		let i = page.pageOwner["navParams"].get("i") != undefined ? page.pageOwner["navParams"].get("i") : ":i";
                    		let edit = page.pageOwner["navParams"].get("edit") != undefined ? page.pageOwner["navParams"].get("edit") : ":edit";
                    		let formId = page.pageOwner["navParams"].get("formId") != undefined ? page.pageOwner["navParams"].get("formId") : ":formId";
                    		history.pushState({page: page.pageOwner["local"]["currentIndex"], formId: formId, edit: edit, i: i}, "", "index.html" + "#/viewer/" + formId + "/" + edit + "/" + i);
                    		page.pageOwner.setTitleRGAA();
                    		resolve();
                    '
        ↓Attr1 [ngx.components.UIAttribute-1664292958731]: 
          attrName: '[style.background]'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'unset'
        ↓Attr [ngx.components.UIAttribute-1664294261860]: 
          attrName: '[attr.aria-label]'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:translate.instant('previous')
    ↓Style [ngx.components.UIStyle-1664292958734]: 
      styleContent: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              'overflow-x: scroll;
              '
    ↓Directive3 [ngx.components.UIControlDirective-1664292958737]: 
      directiveName: If
      directiveSource: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:this.pageOwner.local.pages[this.pageOwner.local.currentIndex].enabledTab
      ↓Directive [ngx.components.UIControlDirective-1664292958740]: 
        directiveIndexName: index
        directiveItemName: item
        directiveSource: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:this.pageOwner.local.pages
        ↓Tag [ngx.components.UIElement-1664292958743]: 
          tagName: ion-tab-button
          ↓Icon [ngx.components.UIDynamicElement-1664292958746]: 
            beanData: '{"ionBean":"Icon","IconName":"script:item.iconName != undefined ? item.iconName : ''book-outline''"}'
            tagName: ion-icon
            ↓Attr [ngx.components.UIAttribute-1664294249345]: 
              attrName: '[attr.aria-hidden]'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:true
          ↓Label [ngx.components.UIDynamicElement-1664292958749]: 
            beanData: '{"ionBean":"Label"}'
            tagName: ion-label
            ↓Text [ngx.components.UIText-1664292958752]: 
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:item.name
          ↓Attr [ngx.components.UIAttribute-1664292958755]: 
            attrName: '[selected]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:index == this.pageOwner.local.currentIndex
          ↓Event [ngx.components.UIControlEvent-1664292958758]: 
            ↓If [ngx.components.UIDynamicAction-1664292958761]: 
              beanData: '{"ionBean":"IfAction","condition":"script:index > this.pageOwner.local.currentIndex"}'
              ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1664292958764]: 
                beanData: '{"ionBean":"InvokeAction"}'
                stack: C8Oforms.MobileApplication.Application.ProcessSubmitFormViewerPage
                ↓indexPage [ngx.components.UIControlVariable-1664292958767]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this.pageOwner.local.currentIndex
                ↓pages [ngx.components.UIControlVariable-1664292958770]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this.pageOwner.local.pages
                ↓doAll [ngx.components.UIControlVariable-1664292958773]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:false
                ↓CustomAction [ngx.components.UICustomAction-1664292958776]: 
                  actionValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '		if(vars.next){
                          		    page.pageOwner["local"]["currentIndex"] = vars.nextIndex;
                          		    page.pageOwner["myContent1"].scrollToTop();
                          		    let i = page.pageOwner["navParams"].get("i") != undefined ? page.pageOwner["navParams"].get("i") : ":i";
                          			let edit = page.pageOwner["navParams"].get("edit") != undefined ? page.pageOwner["navParams"].get("edit") : ":edit";
                          			let formId = page.pageOwner["navParams"].get("formId") != undefined ? page.pageOwner["navParams"].get("formId") : ":formId";
                          			history.pushState({page: page.pageOwner["local"]["currentIndex"], formId: formId, edit: edit, i: i}, "", "index.html" + "#/viewer/" + formId + "/" + edit + "/" + i);
                          			page.pageOwner.moveFocus();
                          			page.pageOwner.setTitleRGAA();
                          		}
                          		
                          		resolve();
                          '
                  ↓next [ngx.components.UIControlVariable-1664292958779]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:parent.out.nextPage
                  ↓nextIndex [ngx.components.UIControlVariable-1664292958782]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:index
            ↓If1 [ngx.components.UIDynamicAction-1664292958785]: 
              beanData: '{"ionBean":"IfAction","condition":"script:index < this.pageOwner.local.currentIndex"}'
              ↓CustomAction [ngx.components.UICustomAction-1664292958788]: 
                actionValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '		if(vars.next){
                        		    page.pageOwner["local"]["currentIndex"] = vars.nextIndex;
                        		    page.pageOwner["myContent1"].scrollToTop();
                        		    let i = page.pageOwner["navParams"].get("i") != undefined ? page.pageOwner["navParams"].get("i") : ":i";
                        			let edit = page.pageOwner["navParams"].get("edit") != undefined ? page.pageOwner["navParams"].get("edit") : ":edit";
                        			let formId = page.pageOwner["navParams"].get("formId") != undefined ? page.pageOwner["navParams"].get("formId") : ":formId";
                        			history.pushState({page: page.pageOwner["local"]["currentIndex"], formId: formId, edit: edit, i: i}, "", "index.html" + "#/viewer/" + formId + "/" + edit + "/" + i);
                        			page.pageOwner.moveFocus();
                        			page.pageOwner.setTitleRGAA();
                        		}
                        		
                        		resolve();
                        '
                ↓next [ngx.components.UIControlVariable-1664292958791]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:true
                ↓nextIndex [ngx.components.UIControlVariable-1664292958794]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:index
          ↓Attr1 [ngx.components.UIAttribute-1664292958797]: 
            attrName: '*ngIf'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:this.pageOwner.local.pages[index].included
          ↓Attr2 [ngx.components.UIAttribute-1664292958800]: 
            attrName: '[style.background]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:'unset'
          ↓Attr3 [ngx.components.UIAttribute-1664294298058]: 
            attrName: '[attr.aria-label]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:item.name
    ↓Directive1 [ngx.components.UIControlDirective-1664292958803]: 
      directiveName: If
      directiveSource: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:this.pageOwner.local.pages[this.pageOwner.local.currentIndex].enabledButtons && this.pageOwner.local.pages[this.pageOwner.local.currentIndex].positionButtons == 'tab'
      ↓Tag [ngx.components.UIElement-1664292958806]: 
        tagName: ion-tab-button
        ↓Icon [ngx.components.UIDynamicElement-1664292958809]: 
          beanData: '{"ionBean":"Icon","IconName":"script:this.pageOwner.isThereANextPage() ? ''arrow-forward-outline'' : ''send-outline''"}'
          tagName: ion-icon
          ↓Attr [ngx.components.UIAttribute-1664294255506]: 
            attrName: '[attr.aria-hidden]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:true
        ↓Label [ngx.components.UIDynamicElement-1664292958812]: 
          beanData: '{"ionBean":"Label"}'
          tagName: ion-label
          ↓Text [ngx.components.UIText-1664292958815]: 
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: 'script:this.pageOwner.isThereANextPage() == true  ? translate.instant(''next'') : translate.instant(''send'')'
          ↓Attr [ngx.components.UIAttribute-1664292958818]: 
            attrName: '*ngIf'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:this.pageOwner.isThereANextPage != undefined 
        ↓Event [ngx.components.UIControlEvent-1664292958821]: 
          ↓IfElse [ngx.components.UIDynamicIf-1664292958824]: 
            beanData: '{"ionBean":"IfElseAction","condition":"script:this.pageOwner.isThereANextPage()"}'
            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1664292958827]: 
              beanData: '{"ionBean":"InvokeAction"}'
              isEnabled: false
              stack: C8Oforms.MobileApplication.Application.ProcessSubmitFormViewerPage
              ↓indexPage [ngx.components.UIControlVariable-1664292958830]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.pageOwner.local.currentIndex
              ↓pages [ngx.components.UIControlVariable-1664292958833]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.pageOwner.local.pages
              ↓doAll [ngx.components.UIControlVariable-1664292958836]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:false
              ↓CustomAction [ngx.components.UICustomAction-1664292958839]: 
                actionValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '		if(vars.next){
                        		    page.pageOwner["local"]["currentIndex"] = page.pageOwner.getNextPageIndex();
                        		    page.pageOwner["myContent1"].scrollToTop();
                        		    let i = page.pageOwner["navParams"].get("i") != undefined ? page.pageOwner["navParams"].get("i") : ":i";
                        			let edit = page.pageOwner["navParams"].get("edit") != undefined ? page.pageOwner["navParams"].get("edit") : ":edit";
                        			let formId = page.pageOwner["navParams"].get("formId") != undefined ? page.pageOwner["navParams"].get("formId") : ":formId";
                        			history.pushState({page: page.pageOwner["local"]["currentIndex"], formId: formId, edit: edit, i: i}, "", "index.html" + "#/viewer/" + formId + "/" + edit + "/" + i);
                        			page.pageOwner.moveFocus();
                        			page.pageOwner.setTitleRGAA();
                        		}
                        		
                        		resolve();
                        '
                ↓next [ngx.components.UIControlVariable-1664292958842]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:parent.out.nextPage
            ↓ManualInvokeProcessSubmitFormViewerPage [ngx.components.UICustomAsyncAction-1664308235556]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '		try {
                      			debugger;
                      			let res = await page.actionBeans.STS1576328658272(page.pageOwner, {}, {indexPage: page.pageOwner.local.currentIndex, pages: page.pageOwner.local.pages, doAll: false}, event);
                      			if(res.nextPage){
                      			    page.pageOwner["local"]["currentIndex"] = page.pageOwner.getNextPageIndex();
                      			    page.pageOwner["myContent1"].scrollToTop();
                      			    let i = page.pageOwner["navParams"].get("i") != undefined ? page.pageOwner["navParams"].get("i") : ":i";
                      				let edit = page.pageOwner["navParams"].get("edit") != undefined ? page.pageOwner["navParams"].get("edit") : ":edit";
                      				let formId = page.pageOwner["navParams"].get("formId") != undefined ? page.pageOwner["navParams"].get("formId") : ":formId";
                      				history.pushState({page: page.pageOwner["local"]["currentIndex"], formId: formId, edit: edit, i: i}, "", "index.html" + "#/viewer/" + formId + "/" + edit + "/" + i);
                      				page.pageOwner.moveFocus();
                      				page.pageOwner.setTitleRGAA();
                      			}
                      		} catch (e) {
                      		
                      		} finally {
                      			return;
                      		}
                      '
            ↓Else_Handler [ngx.components.UIActionElseEvent-1664292958845]: 
              ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1664292958848]: 
                beanData: '{"ionBean":"InvokeAction"}'
                isEnabled: false
                stack: C8Oforms.MobileApplication.Application.ProcessSubmitFormViewerPage
                ↓CustomAction [ngx.components.UICustomAction-1664292958851]: 
                  actionValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '		let i = page.pageOwner["navParams"].get("i") != undefined ? page.pageOwner["navParams"].get("i") : ":i"; 
                          		let edit = page.pageOwner["navParams"].get("edit") != undefined ? page.pageOwner["navParams"].get("edit") : ":edit";
                          		let formId = page.pageOwner["navParams"].get("formId") != undefined ? page.pageOwner["navParams"].get("formId") : ":formId";
                          		history.pushState({page: 0, formId: formId, edit: edit, i: i}, "", "index.html" + "#/viewer/" + formId + "/" + edit + "/" + i);
                          		resolve();
                          '
              ↓ManualInvokeProcessSubmitFormViewerPage [ngx.components.UICustomAsyncAction-1664308159324]: 
                actionValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '		try {
                        			await page.actionBeans.STS1576328658272(page.pageOwner, {}, {}, event);
                        			let i = page.pageOwner["navParams"].get("i") != undefined ? page.pageOwner["navParams"].get("i") : ":i"; 
                        			let edit = page.pageOwner["navParams"].get("edit") != undefined ? page.pageOwner["navParams"].get("edit") : ":edit";
                        			let formId = page.pageOwner["navParams"].get("formId") != undefined ? page.pageOwner["navParams"].get("formId") : ":formId";
                        			history.pushState({page: 0, formId: formId, edit: edit, i: i}, "", "index.html" + "#/viewer/" + formId + "/" + edit + "/" + i);
                        		} catch (e) {
                        		
                        		} finally {
                        			return;
                        		}
                        '
        ↓Attr1 [ngx.components.UIAttribute-1664292958854]: 
          attrName: '[style.background]'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'unset'
        ↓Attr3 [ngx.components.UIAttribute-1664294318791]: 
          attrName: '[attr.aria-label]'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: 'script:this.pageOwner.isThereANextPage() == true  ? translate.instant(''next'') : translate.instant(''send'')'
    ↓Attr1 [ngx.components.UIAttribute-1664292958857]: 
      attrName: '[style.--background]'
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:this.pageOwner.local.headerColor
    ↓Attr2 [ngx.components.UIAttribute-1664292958860]: 
      attrName: '[style.--color]'
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:this.pageOwner.local.hooverPolicyColor
  ↓Attr [ngx.components.UIAttribute-1664292958863]: 
    attrName: '*ngIf'
    attrValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: plain:this.pageOwner.local.pages != undefined && (this.pageOwner.local.pages[this.pageOwner.local.currentIndex].enabledTab || (this.pageOwner.local.pages[this.pageOwner.local.currentIndex].enabledButtons && this.pageOwner.local.pages[this.pageOwner.local.currentIndex].positionButtons == 'tab') ) 
  ↓Style [ngx.components.UIStyle-1664292958866]: 
    isEnabled: false
    styleContent: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            'overflow-x: scroll;
            '