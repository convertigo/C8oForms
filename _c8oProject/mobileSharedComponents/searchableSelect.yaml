scriptContent: 
  - xmlizable: 
    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
    - com.twinsoft.convertigo.beans.common.FormatedContent: 
      →: |
        /*Begin_c8o_CompImport*/
        /*End_c8o_CompImport*/
        /*Begin_c8o_CompDeclaration*/
        	/*End_c8o_CompDeclaration*/
        /*Begin_c8o_CompConstructor*/
        		/*End_c8o_CompConstructor*/
        /*Begin_c8o_CompInitialization*/
        		/*End_c8o_CompInitialization*/
        /*Begin_c8o_CompFinalization*/
        		/*End_c8o_CompFinalization*/
        /*Begin_c8o_CompChanges*/
        		/*End_c8o_CompChanges*/
        /*Begin_c8o_CompFunction*/
        	
        	public typeOF(attr){
        		return typeof(attr);
        	}
        	/*End_c8o_CompFunction*/
        
↓placeholder [ngx.components.UICompVariable-1599133963809]: 
  value: '''placeholder'''
↓value [ngx.components.UICompVariable-1599133963812]: 
↓elems [ngx.components.UICompVariable-1599133963815]: 
↓model [ngx.components.UICompVariable-1599133963818]: 
  autoEmit: true
↓item [ngx.components.UICompVariable-1609844410825]: 
↓Div [ngx.components.UIDynamicElement-1599133954777]: 
  beanData: '{"ionBean":"DivTag"}'
  tagName: div
  ↓Style [ngx.components.UIStyle-1599133954828]: 
    styleContent: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            'position: relative;
            display: inline-block;
            
            width:100% !important;
            height:100% !important;
            ion-item {
            --background: transparent;
            --ion-item-background: transparent;
            }
            '
  ↓GenericItem [ngx.components.UIDynamicElement-1648542300891]: 
    beanData: |
      '{
       "ionBean": "GenericItem",
       "Button": "plain:true",
       "Lines": "plain:none",
       "ButtonFormType": "plain"
      }'
    tagName: ion-item
    ↓Label [ngx.components.UIDynamicElement-1648542300893]: 
      beanData: '{"ionBean":"Label"}'
      tagName: ion-label
      ↓Directive [ngx.components.UIControlDirective-1599133954783]: 
        directiveName: If
        directiveSource: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:(this.model.value == '' || this.model.value == null) else ElseBlock_1599133070874
        ↓TextItem [ngx.components.UIDynamicElement-1648543186053]: 
          beanData: '{"ionBean":"TextItem"}'
          tagName: ion-text
          ↓Text [ngx.components.UIText-1648543186055]: 
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.item.config.placeholder
          ↓Style [ngx.components.UIStyle-1648543371033]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    'vertical-align: middle;
                    --background: transparent;
                    '
      ↓Tag [ngx.components.UIElement-1599133954795]: 
        identifier: ElseBlock_1599133070874
        tagName: ng-template
        ↓Div [ngx.components.UIDynamicElement-1599133954798]: 
          beanData: '{"ionBean":"DivTag"}'
          isEnabled: false
          tagName: div
          ↓Text [ngx.components.UIText-1599133954801]: 
            comment: 'this.model?.value?.displayValue != undefined ? this.model?.value?.displayValue : this.model?.value?.value != undefined ? this.model?.value.value : this.model?.value'
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.pageOwner.getSelectSelectedOne(this.pageOwner.local.sourceValue[this.elems], this.model.value )
          ↓Style [ngx.components.UIStyle-1599133954804]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    '-webkit-font-smoothing: antialiased;
                    text-rendering: optimizeLegibility;
                    text-size-adjust: none;
                    user-select: text;
                    --border-color: var(--ion-color-danger, #f1453d);
                    text-align: initial;
                    line-height: normal;
                    font-weight: normal;
                    text-transform: none;
                    color: #000;
                    -webkit-box-direction: inherit;
                    box-sizing: border-box;
                    -webkit-tap-highlight-color: transparent;
                    font-family: "Open Sans";
                    overflow: hidden;
                    -webkit-box-flex: 1;
                    flex: 1;
                    min-width: 16px;
                    font-size: inherit;
                    text-overflow: ellipsis;
                    white-space: nowrap;
                    display: inline !important;
                    '
        ↓TextItem [ngx.components.UIDynamicElement-1648543702540]: 
          beanData: '{"ionBean":"TextItem"}'
          tagName: ion-text
          ↓Text [ngx.components.UIText-1648543702543]: 
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.pageOwner.getSelectSelectedOne(this.pageOwner.local.sourceValue[this.elems], this.model.value )
          ↓Style [ngx.components.UIStyle-1648543702546]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    'vertical-align: middle;
                    color: black !important;
                    '
      ↓Icon [ngx.components.UIDynamicElement-1648542314940]: 
        beanData: '{"ionBean":"Icon","IconName":"plain:caret-down-outline"}'
        tagName: ion-icon
        ↓Style [ngx.components.UIStyle-1648543374199]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  'vertical-align: middle;
                  '
      ↓Style [ngx.components.UIStyle-1648543029941]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '/**
                 * Custom properties (sometimes referred to as CSS variables or cascading variables)
                 * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                 * They are set using custom property notation, e.g.: --main-color: black;
                 * and are accessed using the var() function, e.g.: color: var(--main-color);
                 * You can find below your component''s properties you can customize within the page.
                 * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                 * For more informations see https://ionicframework.com/docs/theming.
                **/
                //--color	//Color of the label
                	ion-icon{
                		--color: var(--ion-color-greyFab);
                	}
                	--background: transparent;
                	--color:var(--ion-color-greyButton)
                '
    ↓Event [ngx.components.UIControlEvent-1648543836256]: 
      ↓ShowSelect [ngx.components.UICustomAction-1648543836259]: 
        actionValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                			page.pageOwner.local.selectSearchableC8o = {};
                			page.pageOwner.local.selectSearchableC8o[page.model["name"]] = true;
                			page.pageOwner.local.searchForClick = true;
                			event.stopPropagation();
                	        resolve();
                
        ↓id [ngx.components.UIControlVariable-1648543836262]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:this.item.id
    ↓Style [ngx.components.UIStyle-1648552905657]: 
      styleContent: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              '/**
               * Custom properties (sometimes referred to as CSS variables or cascading variables)
               * are entities defined by CSS authors that contain specific values to be reused throughout a document.
               * They are set using custom property notation, e.g.: --main-color: black;
               * and are accessed using the var() function, e.g.: color: var(--main-color);
               * You can find below your component''s properties you can customize within the page.
               * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
               * For more informations see https://ionicframework.com/docs/theming.
              **/
              //--background	//Background of the item
              //--background-activated	//Background of the item when pressed. Note: setting this will interfere with the Material Design ripple
              //--background-activated-opacity	//Opacity of the item background when pressed
              //--background-focused	//Background of the item when focused with the tab key
              //--background-focused-opacity	//Opacity of the item background when focused with the tab key
              //--background-hover	//Background of the item on hover
              //--background-hover-opacity	//Opacity of the background of the item on hover
              //--border-color	//Color of the item border
              //--border-radius	//Radius of the item border
              //--border-style	//Style of the item border
              //--border-width	//Width of the item border
              //--color	//Color of the item
              //--color-activated	//Color of the item when pressed
              //--color-focused	//Color of the item when focused with the tab key
              //--color-hover	//Color of the item on hover
              //--detail-icon-color	//Color of the item detail icon
              //--detail-icon-font-size	//Font size of the item detail icon
              //--detail-icon-opacity	//Opacity of the item detail icon
              //--highlight-color-focused	//The color of the highlight on the item when focused
              //--highlight-color-invalid	//The color of the highlight on the item when invalid
              //--highlight-color-valid	//The color of the highlight on the item when valid
              //--highlight-height	//The height of the highlight on the item
              //--inner-border-width	//Width of the item inner border
              //--inner-box-shadow	//Box shadow of the item inner
              //--inner-padding-bottom	//Bottom padding of the item inner
              //--inner-padding-end	//Right padding if direction is left-to-right, and left padding if direction is right-to-left of the item inner
              //--inner-padding-start	//Left padding if direction is left-to-right, and right padding if direction is right-to-left of the item inner
              //--inner-padding-top	//Top padding of the item inner
              //--min-height	//Minimum height of the item
              //--padding-bottom	//Bottom padding of the item
              //--padding-end	//Right padding if direction is left-to-right, and left padding if direction is right-to-left of the item
              //--padding-start	//Left padding if direction is left-to-right, and right padding if direction is right-to-left of the item
              //--padding-top	//Top padding of the item
              //--ripple-color	//Color of the item ripple effect
              //--transition	//Transition of the item
              --background: transparent;
              --ion-item-background: transparent;
              background: transparent;
              '
    ↓Attr2 [ngx.components.UIAttribute-1662994629064]: 
      attrName: '[attr.aria-label]'
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:this.pageOwner.removeHTML(this.item.config.html)
    ↓Attr [ngx.components.UIAttribute-1662994654257]: 
      attrName: role
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: plain:button
  ↓DivSelect [ngx.components.UIDynamicElement-1599133954837]: 
    beanData: '{"ionBean":"DivTag"}'
    tagName: div
    ↓Attr [ngx.components.UIAttribute-1599133954840]: 
      attrName: '*ngIf'
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: plain:this.pageOwner.local?.selectSearchableC8o != undefined && this.pageOwner.local?.selectSearchableC8o[this.model?.name] == true
      comment: this.pageOwner.local['selectSearchableC8o'+this.model['name']] == true
    ↓Style [ngx.components.UIStyle-1599133954843]: 
      styleContent: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              '  position: absolute;
                min-width: 100%;
                z-index:99999;
                border: 1px solid #ddd;
                background-color: white;
                overflow-x: auto;
              '
    ↓Attr1 [ngx.components.UIAttribute-1610369303598]: 
      attrName: '[ngStyle]'
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: 'script:this.global?.mobilePlat ? {''width'':''100% !important''} : {}'
    ↓SearchBar [ngx.components.UIDynamicElement-1599133954849]: 
      beanData: '{"ionBean":"Searchbar"}'
      tagName: ion-searchbar
      ↓Event [ngx.components.UIControlEvent-1599136671582]: 
        attrName: (ionInput)
        eventName: (ionInput)
        ↓CustomAction [ngx.components.UICustomAction-1599136683020]: 
          actionValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '        /*page.c8o.callJsonObject(page.model.action, {
                              [page.model.actionVar] : event.target.value
                          })
                          .then((res=>{
                              let array = [];
                              if(!(res["value"] == undefined)){
                                  if(typeof(res["value"]) == "string"){
                                      array.push(res["value"]);
                                  }
                                  else{
                                      for(let child of res["value"]){
                                          array.push(child);
                                      }
                                  }
                                  
                              }
                             page.pageOwner.local.sourceValue[this.elems] = array;
                              vars.params.elems = array;
                              page["tick"]();
                              return null;
                          }))*/
                  		page.pageOwner.local.filters_elems[page.item.id] = event.target.value;
                  		resolve();
                  '
          ↓params [ngx.components.UIControlVariable-1599139564554]: 
            isEnabled: false
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this
          ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1609844282586]: 
            beanData: '{"ionBean":"InvokeAction"}'
            stack: C8Oforms.MobileApplication.Application.UpdateFunctionsToBeCalledToDataSource
            ↓item [ngx.components.UIControlVariable-1609844304976]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.item
      ↓Event1 [ngx.components.UIControlEvent-1610721235426]: 
        ↓stopPropagation [ngx.components.UICustomAction-1610721243557]: 
          actionValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  		event.stopPropagation();
                  		resolve();
                  
      ↓Attr [ngx.components.UIAttribute-1612184341462]: 
        attrName: '[(ngModel)]'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:this.pageOwner.local.selectFilter[this.item.id]
      ↓Style [ngx.components.UIStyle-1648543910599]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '/**
                 * Custom properties (sometimes referred to as CSS variables or cascading variables)
                 * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                 * They are set using custom property notation, e.g.: --main-color: black;
                 * and are accessed using the var() function, e.g.: color: var(--main-color);
                 * You can find below your component''s properties you can customize within the page.
                 * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                 * For more informations see https://ionicframework.com/docs/theming.
                **/
                //--background	//Background of the searchbar input
                //--border-radius	//Border radius of the searchbar input
                //--box-shadow	//Box shadow of the searchbar input
                //--cancel-button-color	//Color of the searchbar cancel button
                //--clear-button-color	//Color of the searchbar clear button
                //--color	//Color of the searchbar text
                //--icon-color	//Color of the searchbar icon
                //--placeholder-color	//Color of the searchbar placeholder
                //--placeholder-font-style	//Font style of the searchbar placeholder
                //--placeholder-font-weight	//Font weight of the searchbar placeholder
                //--placeholder-opacity	//Opacity of the searchbar placeholder
                '
      ↓Attr2 [ngx.components.UIAttribute-1661862200425]: 
        attrName: '[attr.aria-label]'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:this.translate.instant('aria-searchbarlist')
    ↓ListContainer [ngx.components.UIDynamicElement-1622811424352]: 
      beanData: '{"ionBean":"List"}'
      tagName: ion-list
      ↓Directive1 [ngx.components.UIControlDirective-1609860352703]: 
        directiveName: Switch
        directiveSource: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:this.pageOwner.local.updating[this.item.id]
        ↓Directive [ngx.components.UIControlDirective-1609860422018]: 
          directiveExpression: 0
          directiveName: SwitchCase
          ↓ScrollArea [ngx.components.UIDynamicElement-1599133954852]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓Style [ngx.components.UIStyle-1599133954882]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      'height: 400px !important;
                      
                      '
            ↓Grid1Spinner [ngx.components.UIDynamicElement-1609860928543]: 
              beanData: '{"ionBean":"Grid","Height":"plain:100%"}'
              tagName: ion-grid
              ↓GridRow [ngx.components.UIDynamicElement-1609860928546]: 
                beanData: |
                  '{
                   "ionBean": "GridRow",
                   "FlexJustifyContent": "plain:ion-justify-content-center",
                   "FlexAlignement": "plain:ion-align-items-center"
                  }'
                tagName: ion-row
                ↓GridCol [ngx.components.UIDynamicElement-1609860928549]: 
                  beanData: |
                    '{
                     "ionBean": "GridCol",
                     "FlexAlignement": "plain:ion-align-self-center",
                     "Size": "plain:12"
                    }'
                  tagName: ion-col
                  ↓Div [ngx.components.UIDynamicElement-1609860928552]: 
                    beanData: '{"ionBean":"DivTag"}'
                    tagName: div
                    ↓FragmentSpinner [ngx.components.UICustom-1609860928555]: 
                      htmlTemplate: <div  class="lds-roller"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>
                    ↓Style [ngx.components.UIStyle-1609860928558]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              text-align:center;
                              
              ↓Style [ngx.components.UIStyle-1609860928564]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        height:100%;
                        
        ↓Directive1 [ngx.components.UIControlDirective-1609860453564]: 
          directiveExpression: 1
          directiveName: SwitchCase
          ↓Directive [ngx.components.UIControlDirective-1622820690560]: 
            directiveName: If
            directiveSource: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.pageOwner.local.sourceValue[this.elems] != undefined else ElseBlock_1634763277886
            ↓RadioGroup [ngx.components.UIDynamicElement-1648544357805]: 
              beanData: |
                '{
                 "ionBean": "RadioGroup",
                 "ControlName": "plain:name1648544357805",
                 "DoubleBinding": "script:this.model.value"
                }'
              tagName: ion-radio-group
              ↓Tag [ngx.components.UIElement-1622820690563]: 
                identifier: scroll
                isEnabled: false
                tagName: virtual-scroller
                ↓Style [ngx.components.UIStyle-1622820690566]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '	min-width: 230px;
                          	height: 400px
                          '
                ↓Attr [ngx.components.UIAttribute-1622820690572]: 
                  attrName: '[items]'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this.pageOwner.local.sourceValue[this.elems]
                ↓Directive [ngx.components.UIControlDirective-1622886887590]: 
                  directiveIndexName: myIndex
                  directiveItemName: item
                  directiveSource: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:scroll.viewPortItems
                  ↓Div1 [ngx.components.UIDynamicElement-1622820749435]: 
                    beanData: '{"ionBean":"DivTag"}'
                    isEnabled: false
                    tagName: div
                    ↓Style [ngx.components.UIStyle-1622820749438]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '	//background-color: #f6f6f6;
                              	display: flex;
                              }
                              .class1622820749435:hover{
                              	cursor:pointer;
                              '
                    ↓Event [ngx.components.UIControlEvent-1622820749441]: 
                      ↓ChooseThisElem [ngx.components.UICustomAction-1622820749444]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '		    page.model["children"].forEach((x)=>{x.selected = false});
                                			page.model["children"][props.stack.root.scope.scroll.previousViewPort.startIndex + props.stack.root.scope.myIndex].selected = true;
                                			page.model.value = typeof(props.stack.root.scope.item) == "string" ? props.stack.root.scope.item : props.stack.root.scope.item.value != undefined? props.stack.root.scope.item.value : props.stack.root.scope.item.displayValue != undefined ? props.stack.root.scope.item.displayValue : props.stack.root.scope.item;
                                			page.pageOwner.local.selectSearchableC8o[page.model[''name'']] = false;
                                			page.pageOwner["redList"][page.item.name] = false;
                                			page.pageOwner.local.searchForClick = false;
                                			resolve();
                                '
                        ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1622820749447]: 
                          beanData: '{"ionBean":"InvokeAction"}'
                          stack: C8Oforms.MobileApplication.Application.UpdateFunctionsToBeCalledToDataSource
                          ↓item [ngx.components.UIControlVariable-1622820749450]: 
                            varValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: script:this.item
                          ↓excludeMySelf [ngx.components.UIControlVariable-1634650127378]: 
                            varValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: script:true
                    ↓DivRadio [ngx.components.UIDynamicElement-1622820749453]: 
                      beanData: '{"ionBean":"DivTag"}'
                      tagName: div
                      ↓RadioButton [ngx.components.UIDynamicElement-1622820749456]: 
                        beanData: '{"ionBean":"RadioButton"}'
                        tagName: ion-radio
                        ↓Attr [ngx.components.UIAttribute-1622820749459]: 
                          attrName: 
                          attrValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: plain:item-left
                        ↓Event [ngx.components.UIControlEvent-1622820749462]: 
                          ↓ChooseThisElem [ngx.components.UICustomAction-1622820749465]: 
                            actionValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    '		   page.model["children"].forEach((x)=>{x.selected = false});
                                    			page.model["children"][props.stack.root.scope.scroll.previousViewPort.startIndex + props.stack.root.scope.myIndex].selected = true;
                                    			page.model.value = typeof(props.stack.root.scope.item) == "string" ? props.stack.root.scope.item : props.stack.root.scope.item.value != undefined? props.stack.root.scope.item.value : props.stack.root.scope.item.displayValue != undefined ? props.stack.root.scope.item.displayValue : props.stack.root.scope.item;
                                    			page.pageOwner.local.selectSearchableC8o[page.model[''name'']] = false;
                                    			page.pageOwner["redList"][page.item.name] = false;
                                    			page.pageOwner.local.searchForClick = false;
                                    			resolve();
                                    '
                            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1622820749468]: 
                              beanData: '{"ionBean":"InvokeAction"}'
                              stack: C8Oforms.MobileApplication.Application.UpdateFunctionsToBeCalledToDataSource
                              ↓item [ngx.components.UIControlVariable-1622820749471]: 
                                varValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                    - MobileSmartSourceType: script:this.item
                        ↓Attr1 [ngx.components.UIAttribute-1622820749474]: 
                          attrName: mode
                          attrValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: plain:md
                      ↓Style [ngx.components.UIStyle-1622820749477]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '	display:flex;
                                	align-items: center;
                                	padding-left:20px;
                                	padding-right:32px;
                                '
                    ↓DivLabel [ngx.components.UIDynamicElement-1622820749480]: 
                      beanData: '{"ionBean":"DivTag"}'
                      tagName: div
                      ↓Label [ngx.components.UIDynamicElement-1622820749483]: 
                        beanData: '{"ionBean":"Label"}'
                        tagName: ion-label
                        ↓Text [ngx.components.UIText-1622820749486]: 
                          i18n: true
                          textValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: 'script:item.displayValue != undefined ? item.displayValue : item.value != undefined ? item.value : item'
                      ↓Style [ngx.components.UIStyle-1622820749489]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                	display:inline-block;
                                
                  ↓GenericItem [ngx.components.UIDynamicElement-1648544302576]: 
                    beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                    tagName: ion-item
                    ↓Label [ngx.components.UIDynamicElement-1648544302578]: 
                      beanData: '{"ionBean":"Label"}'
                      tagName: ion-label
                      ↓Text [ngx.components.UIText-1648544302580]: 
                        textValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: 'script:item.displayValue != undefined ? item.displayValue : item.value != undefined ? item.value : item'
                    ↓RadioButton [ngx.components.UIDynamicElement-1648544344540]: 
                      beanData: |
                        '{
                         "ionBean": "RadioButton",
                         "IonSlot": "plain:start",
                         "Value": "script:this.typeOF(item) == ''string'' ? item : item.value != undefined? item.value : item.displayValue != undefined ? item.displayValue : item"
                        }'
                      tagName: ion-radio
                      ↓Attr2 [ngx.components.UIAttribute-1661861834188]: 
                        attrName: '[attr.aria-label]'
                        attrValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: 'script:item.displayValue != undefined ? item.displayValue : item.value != undefined ? item.value : item'
                    ↓Event [ngx.components.UIControlEvent-1648544612170]: 
                      ↓ChooseThisElem [ngx.components.UICustomAction-1648544612173]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '		   	
                                		   	page.model["children"].forEach((x)=>{x.selected = false});
                                			page.model["children"][props.stack.root.scope.scroll.previousViewPort.startIndex + props.stack.root.scope.myIndex].selected = true;
                                			page.model.value = typeof(props.stack.root.scope.item) == "string" ? props.stack.root.scope.item : props.stack.root.scope.item.value != undefined? props.stack.root.scope.item.value : props.stack.root.scope.item.displayValue != undefined ? props.stack.root.scope.item.displayValue : props.stack.root.scope.item;
                                			page.pageOwner.local.techSelect[page.item.name] = props.stack.root.scope.item;
                                			page.pageOwner.local.selectSearchableC8o[page.model[''name'']] = false;
                                			page.pageOwner["redList"][page.item.name] = false;
                                			page.pageOwner.local.searchForClick = false;
                                			resolve();
                                '
                        ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1648544612176]: 
                          beanData: '{"ionBean":"InvokeAction"}'
                          stack: C8Oforms.MobileApplication.Application.UpdateFunctionsToBeCalledToDataSource
                          ↓item [ngx.components.UIControlVariable-1648544612179]: 
                            varValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: script:this.item
          ↓Tag [ngx.components.UIElement-1634763277886]: 
            identifier: ElseBlock_1634763277886
            tagName: ng-template
            ↓Div [ngx.components.UIDynamicElement-1634763327383]: 
              beanData: '{"ionBean":"DivTag"}'
              tagName: div
              ↓Style [ngx.components.UIStyle-1634763337285]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '	min-width: 230px;
                        	height: 400px
                        '
        ↓Directive11 [ngx.components.UIControlDirective-1609860474155]: 
          directiveExpression: 2
          directiveName: SwitchCase
          ↓ScrollArea [ngx.components.UIDynamicElement-1622811430618]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓Style [ngx.components.UIStyle-1622811430621]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      'height: 400px !important;
                      
                      '
            ↓Div [ngx.components.UIDynamicElement-1609861394553]: 
              beanData: '{"ionBean":"DivTag"}'
              tagName: div
              ↓Style [ngx.components.UIStyle-1609861400461]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        text-align:center;
                        
              ↓Text [ngx.components.UIText-1609860934246]: 
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:error
        ↓Directive2 [ngx.components.UIControlDirective-1609861757300]: 
          directiveName: SwitchDefault
          ↓Directive [ngx.components.UIControlDirective-1622887349504]: 
            directiveName: If
            directiveSource: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.pageOwner.local.sourceValue[this.elems] != undefined
            ↓Tag [ngx.components.UIElement-1622887349507]: 
              isEnabled: false
              tagName: virtual-scroller
              ↓Style [ngx.components.UIStyle-1622887349510]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '	min-width: 230px;
                        	height: 400px
                        '
              ↓Attr1 [ngx.components.UIAttribute-1622887349513]: 
                attrName: 
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:#scroll
              ↓Attr [ngx.components.UIAttribute-1622887349516]: 
                attrName: '[items]'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.pageOwner.local.sourceValue[this.elems]
              ↓Directive [ngx.components.UIControlDirective-1622887349519]: 
                directiveIndexName: myIndex
                directiveItemName: item
                directiveSource: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:scroll.viewPortItems
                ↓Div1 [ngx.components.UIDynamicElement-1622887349522]: 
                  beanData: '{"ionBean":"DivTag"}'
                  tagName: div
                  ↓Style [ngx.components.UIStyle-1622887349525]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            '	background-color: #f6f6f6;
                            	display: flex;
                            }
                            .class1622887349522:hover{
                            	cursor:pointer;
                            '
                  ↓Event [ngx.components.UIControlEvent-1622887349528]: 
                    ↓ChooseThisElem [ngx.components.UICustomAction-1622887349531]: 
                      actionValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '		    page.model["children"].forEach((x)=>{x.selected = false});
                              			page.model["children"][props.stack.root.scope.scroll.previousViewPort.startIndex + props.stack.root.scope.myIndex].selected = true;
                              			page.model.value = typeof(props.stack.root.scope.item) == "string" ? props.stack.root.scope.item : props.stack.root.scope.item.value != undefined? props.stack.root.scope.item.value : props.stack.root.scope.item.displayValue != undefined ? props.stack.root.scope.item.displayValue : props.stack.root.scope.item;
                              			page.pageOwner.local.selectSearchableC8o[page.model[''name'']] = false;
                              			page.pageOwner["redList"][page.item.name] = false;
                              			page.pageOwner.local.searchForClick = false;
                              			resolve();
                              '
                      ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1622887349534]: 
                        beanData: '{"ionBean":"InvokeAction"}'
                        stack: C8Oforms.MobileApplication.Application.UpdateFunctionsToBeCalledToDataSource
                        ↓item [ngx.components.UIControlVariable-1622887349537]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:this.item
                  ↓DivRadio [ngx.components.UIDynamicElement-1622887349540]: 
                    beanData: '{"ionBean":"DivTag"}'
                    tagName: div
                    ↓RadioButton [ngx.components.UIDynamicElement-1622887349543]: 
                      beanData: '{"ionBean":"RadioButton"}'
                      tagName: ion-radio
                      ↓Attr [ngx.components.UIAttribute-1622887349546]: 
                        attrName: 
                        attrValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: plain:item-left
                      ↓Event [ngx.components.UIControlEvent-1622887349549]: 
                        ↓ChooseThisElem [ngx.components.UICustomAction-1622887349552]: 
                          actionValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  '		    page.model["children"].forEach((x)=>{x.selected = false});
                                  			page.model["children"][props.stack.root.scope.scroll.previousViewPort.startIndex + props.stack.root.scope.myIndex].selected = true;
                                  			page.model.value = typeof(props.stack.root.scope.item) == "string" ? props.stack.root.scope.item : props.stack.root.scope.item.value != undefined? props.stack.root.scope.item.value : props.stack.root.scope.item.displayValue != undefined ? props.stack.root.scope.item.displayValue : props.stack.root.scope.item;
                                  			page.pageOwner.local.selectSearchableC8o[page.model[''name'']] = false;
                                  			page.pageOwner["redList"][page.item.name] = false;
                                  			page.pageOwner.local.searchForClick = false;
                                  			resolve();
                                  '
                          ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1622887349555]: 
                            beanData: '{"ionBean":"InvokeAction"}'
                            stack: C8Oforms.MobileApplication.Application.UpdateFunctionsToBeCalledToDataSource
                            ↓item [ngx.components.UIControlVariable-1622887349558]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:this.item
                      ↓Attr1 [ngx.components.UIAttribute-1622887349561]: 
                        attrName: mode
                        attrValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: plain:md
                    ↓Style [ngx.components.UIStyle-1622887349564]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '	display:flex;
                              	align-items: center;
                              	padding-left:20px;
                              	padding-right:32px;
                              '
                  ↓DivLabel [ngx.components.UIDynamicElement-1622887349567]: 
                    beanData: '{"ionBean":"DivTag"}'
                    tagName: div
                    ↓Label [ngx.components.UIDynamicElement-1622887349570]: 
                      beanData: '{"ionBean":"Label"}'
                      tagName: ion-label
                      ↓Text [ngx.components.UIText-1622887349573]: 
                        i18n: true
                        textValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: 'script:item.displayValue != undefined ? item.displayValue : item.value != undefined ? item.value : item'
                    ↓Style [ngx.components.UIStyle-1622887349576]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              	display:inline-block;
                              
    ↓Attr2 [ngx.components.UIAttribute-1662995548823]: 
      attrName: role
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: plain:dialog
    ↓Event [ngx.components.UIControlEvent-1662995962626]: 
      attrName: (focusout)
      eventName: (focusout)
      ↓CustomAsyncAction [ngx.components.UICustomAsyncAction-1662995982052]: 
        actionValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                		try {
                			/**
                				https://www.w3schools.com/jsref/met_node_comparedocumentposition.asp
                				1	The nodes do not belong to the same document
                				2	The first node is positioned after the second
                				4	The first node is positioned before the second
                				8	The first node is positioned inside the second
                				16	The second node is positioned inside the first
                				32	The nodes are attributes on the same element
                				20  means that second node is inside the first (16) and the first node is positioned before the second.
                			 */
                			 
                			const parentDiv = document.getElementById("div" +page.item.id);
                			const positionCompared = parentDiv.compareDocumentPosition(event.relatedTarget);
                			console.log("positionCompared", positionCompared); 
                			if(positionCompared == 1 || positionCompared == 2 || positionCompared == 4 || positionCompared == 8){
                				// then close the div
                				if(page.pageOwner.local.searchForClick == true){
                					page.pageOwner.local.selectSearchableC8o = {};
                				}
                			}
                			
                		} catch (e) {
                		
                		} finally {
                			return;
                		}
                
    ↓Attr3 [ngx.components.UIAttribute-1662996858567]: 
      attrName: '[attr.id]'
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:'div' + this.item.id
↓SharedComponent_Event [ngx.components.UISharedComponentEvent-1649414345693]: 
  ↓Imports [ngx.components.UICustomAction-1622820875904]: 
    actionValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            		resolve();
            
    isEnabled: false
    module_ng_imports: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
        - com.twinsoft.convertigo.beans.common.XMLVector: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
            - com.twinsoft.convertigo.beans.common.XMLVector: 
              - java.lang.String: 
                - ↑value: VirtualScrollerModule
    module_ts_imports: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
        - com.twinsoft.convertigo.beans.common.XMLVector: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
            - com.twinsoft.convertigo.beans.common.XMLVector: 
              - java.lang.String: 
                - ↑value: VirtualScrollerModule 
              - java.lang.String: 
                - ↑value: ngx-virtual-scroller
    package_dependencies: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
        - com.twinsoft.convertigo.beans.common.XMLVector: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
            - com.twinsoft.convertigo.beans.common.XMLVector: 
              - java.lang.String: 
                - ↑value: ngx-virtual-scroller
              - java.lang.String: 
                - ↑value: 3.0.0
  ↓fixRGAA [ngx.components.UICustomAsyncAction-1668093707797]: 
    actionValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            		try {
            			document.querySelectorAll("c8oforms-searchableselect").forEach((x)=>{
            				x.querySelectorAll("ion-icon").forEach((y)=>{
            					y.removeAttribute("aria-label");
            					y.setAttribute("aria-hidden", "true");	
            				});
            			})
            			
            		} catch (e) {
            		
            		} finally {
            			return;
            		}
            
  ↓fixRGAA2 [ngx.components.UICustomAsyncAction-1668094345208]: 
    actionValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            '		try {
            			setTimeout(()=>{
            				var span = document.createElement("span");
            				span.setAttribute("class", "sr-only");
            				span.innerText = page.pageOwner.removeHTML(page.item.config.html);
            				var sheet = new CSSStyleSheet;
            				var style = document.createElement( ''style'' )
            				style.innerHTML = ''.sr-only { position: absolute; width: 1px; height: 1px; padding: 0; margin: -1px; overflow: hidden; clip: rect(0,0,0,0); border: 0; }'';
            				document.querySelectorAll(".class1648542300891").forEach((x)=>{
            					x.shadowRoot.appendChild( style );
            					x.shadowRoot.querySelectorAll("button").forEach((y)=>{
            						y.appendChild(span);	
            					});
            				})
            			})
            			
            		} catch (e) {
            		
            		} finally {
            			return;
            		}
            '