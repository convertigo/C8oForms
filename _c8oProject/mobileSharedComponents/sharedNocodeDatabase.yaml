↓SharedComponent_Event [ngx.components.UISharedComponentEvent-1728313275587]: 
  componentEvent: onInit
  ↓doBaserowAccount [ngx.components.UIDynamicAction-1728568505609]: 
    beanData: '{"ionBean":"PublishEventAction","topic":"plain:doBaserowAccount"}'
↓Directive [ngx.components.UIControlDirective-1728487624577]: 
  directiveName: If
  directiveSource: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
      - MobileSmartSourceType: source:{"filter":"Local","project":"C8Oforms","input":"","model":{"data":[{"localObject":"local"}],"path":"?.state","prefix":"","suffix":"== 'init'","custom":"","useCustom":false}}
  ↓Label [ngx.components.UIDynamicElement-1728487677978]: 
    beanData: '{"ionBean":"Label"}'
    tagName: ion-label
    ↓Text [ngx.components.UIText-1728487677977]: 
      textValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: plain:Check account
↓Directive1 [ngx.components.UIControlDirective-1728487930865]: 
  directiveName: If
  directiveSource: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
      - MobileSmartSourceType: source:{"filter":"Local","project":"C8Oforms","input":"","model":{"data":[{"localObject":"local"}],"path":"?.state","prefix":"","suffix":"== 'error'","custom":"","useCustom":false}}
  ↓Label [ngx.components.UIDynamicElement-1728487930868]: 
    beanData: '{"ionBean":"Label"}'
    tagName: ion-label
    ↓Text [ngx.components.UIText-1728487930871]: 
      textValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:local.error
↓Directive2 [ngx.components.UIControlDirective-1728489651111]: 
  directiveName: If
  directiveSource: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
      - MobileSmartSourceType: source:{"filter":"Local","project":"C8Oforms","input":"","model":{"data":[{"localObject":"local"}],"path":"?.state","prefix":"","suffix":"== 'iframe'","custom":"","useCustom":false}}
  ↓Label [ngx.components.UIDynamicElement-1728489651114]: 
    beanData: '{"ionBean":"Label"}'
    tagName: ion-label
    ↓Text [ngx.components.UIText-1728489651117]: 
      textValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:local.error
  ↓container [ngx.components.UIElement-1728488109016]: 
    identifier: container
    tagName: div
    ↓Style [ngx.components.UIStyle-1728489055449]: 
      styleContent: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              height:calc(100% - 6px) !important;
              
↓Directive3 [ngx.components.UIControlDirective-1728490209350]: 
  directiveName: If
  directiveSource: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
      - MobileSmartSourceType: source:{"filter":"Local","project":"C8Oforms","input":"","model":{"data":[{"localObject":"local"}],"path":"?.state","prefix":"","suffix":"== 'askPassword'","custom":"","useCustom":false}}
  isEnabled: false
  ↓Form [ngx.components.UIForm-1728490234590]: 
    identifier: formSample
    ↓Label [ngx.components.UIDynamicElement-1728490307539]: 
      beanData: '{"ionBean":"Label"}'
      tagName: ion-label
      ↓Text [ngx.components.UIText-1728490307538]: 
        textValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:Please enter your baserow password for 
      ↓Text1 [ngx.components.UIText-1728490401145]: 
        textValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: source:{"filter":"Sequence","project":"C8Oforms","input":"","model":{"data":[{"sequence":"C8Oforms.BaserowAccount","marker":""}],"path":"?.email","prefix":"","suffix":"","custom":"","useCustom":false}}
    ↓FormItem [ngx.components.UIDynamicElement-1728490234571]: 
      beanData: '{"ionBean":"FormItem"}'
      tagName: ion-item
      ↓TextInput [ngx.components.UIDynamicElement-1728490234573]: 
        beanData: |
          '{
           "ionBean": "Input",
           "ControlName": "plain:password",
           "Label": "plain:password",
           "Type": "plain:password"
          }'
        tagName: ion-input
    ↓SubmitButton [ngx.components.UIDynamicElement-1728490234579]: 
      beanData: '{"ionBean":"SubmitButton"}'
      tagName: ion-button
      ↓Text [ngx.components.UIText-1728490234581]: 
        textValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:Submit
    ↓ResetButton [ngx.components.UIDynamicElement-1728490234583]: 
      beanData: '{"ionBean":"ResetButton"}'
      tagName: ion-button
      ↓Text [ngx.components.UIText-1728490234585]: 
        textValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:Reset
    ↓Event [ngx.components.UIControlEvent-1728490234587]: 
      attrName: (ngSubmit)
      eventName: onSubmit
      ↓Alert [ngx.components.UIDynamicAction-1728490234589]: 
        beanData: '{"ionBean":"AlertAction","message":"script:''formSample value is\\\\n'' + JSON.stringify(this?.formSample.value)"}'
↓doBaserowAccount [ngx.components.UIEventSubscriber-1728568439592]: 
  topic: doBaserowAccount
  ↓SetLocal [ngx.components.UIDynamicAction-1728568478735]: 
    beanData: |
      '{
       "ionBean": "SetLocalAction",
       "Property": "plain:state",
       "Value": "plain:init"
      }'
    ↓CallSequence [ngx.components.UIDynamicAction-1728568478738]: 
      beanData: '{"ionBean":"CallSequenceAction","requestable":"plain:C8Oforms.BaserowAccount"}'
      ↓MakeIframe [ngx.components.UICustomAction-1728568478741]: 
        actionValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '		page.c8o.log.debug(''[MB] ''+ props.actionFunction +'': ''+ props.actionName);
                		const { token, iframe } = props.parent.out;
                		if (token && iframe) {
                			page.local.state = ''iframe'';
                			page.tick();
                			const frame = document.createElement(''iframe'');
                            frame.src = iframe;
                			frame.style.height = ''100%'';
                			frame.style.width = ''100%'';
                			frame.style.borderWidth = ''0px'';
                			const script = `
                				function clean() {
                					document.querySelectorAll(''${[
                						''.auth__logo'',
                						''.dashboard__header'',
                						''.dashboard__footer'',
                						''.dashboard__help'',
                						''.sidebar__user'',
                						''.sidebar__foot'',
                						''.dashboard__sidebar-group:has(.fa-sign-out-alt)''
                					].join('','')}'').forEach(it => it.remove());
                				}
                				clean();
                				const observer = new MutationObserver(() => clean());
                				observer.observe(document.body, {subtree: true, childList: true});
                			`;
                            frame.addEventListener(''load'', () => {
                				frame.contentWindow?.postMessage({token: props.parent.out.token, script}, new URL(iframe).origin);
                				resolve(0);
                            });
                			
                			window.addEventListener(''message'', evt => {
                				if (evt.origin !== new URL(iframe).origin) {
                					return;
                				}
                				const {password, error} = evt.data;
                				if (error) {
                					page.local.state = ''error'';
                					page.local.error = error;
                				} else if (password) {
                					page.getInstance(Events).publish(''doBaserowAccount'', {password});
                				}
                				page.tick();
                			});
                            page.container.nativeElement.appendChild(frame);
                		} else {
                			page.local.state = ''error'';
                			page.local.error = props.parent.out.error?.message ?? ''unknown error'';
                			resolve(0);
                		}
                '
      ↓password [ngx.components.UIControlVariable-1728568594414]: 
        comment: new variable
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: source:{"filter":"Action","project":"C8Oforms","input":"","model":{"data":[{"priority":1728568439592,"rootEvent":true,"pageLocals":false}],"path":"?.out","prefix":"","suffix":".password","custom":"","useCustom":false}}