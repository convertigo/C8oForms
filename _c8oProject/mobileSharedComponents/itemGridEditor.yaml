isEnabled: false
↓item [ngx.components.UICompVariable-1608288821078]: 
  value: 
↓idselected [ngx.components.UICompVariable-1608288821081]: 
  value: 
↓isChild [ngx.components.UICompVariable-1608288821090]: 
  value: false
↓UseSharedComponent1 [ngx.components.UIUseShared-1608288945555]: 
  sharedcomponent: C8Oforms_NGX.MobileApplication.Application.sharedQuestionElem
  ↓item [ngx.components.UIUseVariable-1608288945558]: 
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:(page as any).pageOwner.item
↓UseSharedComponent [ngx.components.UIUseShared-1608569936035]: 
  sharedcomponent: C8Oforms_NGX.MobileApplication.Application.datasource
  ↓item [ngx.components.UIUseVariable-1608569952653]: 
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:(page as any).pageOwner.item
↓Directive1 [ngx.components.UIControlDirective-1623856601687]: 
  directiveName: If
  directiveSource: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
      - MobileSmartSourceType: script:(page as any).pageOwner.local.parami18n.advancedEditing
  ↓GridRowSelectOption [ngx.components.UIDynamicElement-1610103234854]: 
    beanData: '{"ionBean":"GridRow"}'
    tagName: ion-row
    ↓GenericItem [ngx.components.UIDynamicElement-1610103234857]: 
      beanData: '{"ionBean":"GenericItem"}'
      tagName: ion-item
      ↓FormatLayout [ngx.components.UIDynamicAttr-1645090139097]: 
        beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-uppercase"}'
        comment: FormatLayout
        tagName: div
      ↓Style [ngx.components.UIStyle-1610103234863]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                'color: #ff8206;
                  font-size: 14px;
                  font-weight: 600;
                  font-style: normal;
                  font-stretch: normal;
                  line-height: normal;
                  letter-spacing: normal;
                '
      ↓Text1 [ngx.components.UIText-1610103234866]: 
        i18n: true
        textValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:select_option
      ↓Style1 [ngx.components.UIStyle-1610103234869]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '	.label{
                		margin-top: 0px !important;	
                		margin-bottom: 0px !important;	
                	}
                '
  ↓GridRowReturnedValue [ngx.components.UIDynamicElement-1610104635306]: 
    beanData: '{"ionBean":"GridRow"}'
    tagName: ion-row
    ↓GridCol [ngx.components.UIDynamicElement-1610104635309]: 
      beanData: '{"ionBean":"GridCol","Size":"plain:12"}'
      tagName: ion-col
      ↓GenericItem [ngx.components.UIDynamicElement-1610104635312]: 
        beanData: '{"ionBean":"GenericItem"}'
        tagName: ion-item
        ↓Label [ngx.components.UIDynamicElement-1610104635315]: 
          beanData: '{"ionBean":"Label","Position":"plain:stacked"}'
          tagName: ion-label
          ↓FormatLayout [ngx.components.UIDynamicAttr-1645090139099]: 
            beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-capitalize"}'
            comment: FormatLayout
            tagName: div
          ↓Style [ngx.components.UIStyle-1610104635321]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    'color: var(--ion-color-primary);
                    '
          ↓Text [ngx.components.UIText-1610104635324]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:returned_value
        ↓Attr2 [ngx.components.UIAttribute-1610104635327]: 
          attrName: '[ngClass]'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'stylegenerictexteditor'
        ↓Style [ngx.components.UIStyle-1610104635330]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  'width: 90%;
                  .label{
                  		margin-top: 0px !important;	
                  		margin-bottom: 0px !important;	
                  	}
                  '
        ↓SelectContainer [ngx.components.UIDynamicElement-1610104635333]: 
          beanData: '{"ionBean":"Select"}'
          tagName: ion-select
          ↓SelectOption [ngx.components.UIDynamicElement-1610104635336]: 
            beanData: '{"ionBean":"SelectOption","Value":"plain:nothing"}'
            tagName: ion-select-option
            ↓Text [ngx.components.UIText-1610104635339]: 
              i18n: true
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:nothing
          ↓SelectOption1 [ngx.components.UIDynamicElement-1610104635342]: 
            beanData: '{"ionBean":"SelectOption","Value":"plain:cell_selected"}'
            tagName: ion-select-option
            ↓Text [ngx.components.UIText-1610104635345]: 
              i18n: true
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:cell_selected
          ↓SelectOption2 [ngx.components.UIDynamicElement-1610104635348]: 
            beanData: '{"ionBean":"SelectOption","Value":"plain:row_selected"}'
            tagName: ion-select-option
            ↓Text [ngx.components.UIText-1610104635351]: 
              i18n: true
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:row_selected
          ↓Attr [ngx.components.UIAttribute-1610104635354]: 
            attrName: '[(ngModel)]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:(page as any).pageOwner.item.config.returned_value
          ↓Event [ngx.components.UIControlEvent-1610104635357]: 
            attrName: (ngModelChange)
            eventName: (ngModelChange)
            ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1610104745233]: 
              beanData: '{"ionBean":"InvokeAction"}'
              stack: C8Oforms_NGX.MobileApplication.Application.updateState
          ↓SelectOption21 [ngx.components.UIDynamicElement-1610104635390]: 
            beanData: '{"ionBean":"SelectOption","Value":"plain:all_the_data"}'
            tagName: ion-select-option
            ↓Text [ngx.components.UIText-1610104635393]: 
              i18n: true
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:all_the_data
      ↓Attr [ngx.components.UIAttribute-1610104635396]: 
        attrName: '*ngIf'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:!(page as any).pageOwner.item.config.sourceEnabled
    ↓GridColMandatory [ngx.components.UIDynamicElement-1610377321266]: 
      beanData: '{"ionBean":"GridCol"}'
      tagName: ion-col
      ↓GenericItem [ngx.components.UIDynamicElement-1610377321269]: 
        beanData: '{"ionBean":"GenericItem"}'
        tagName: ion-item
        ↓Label [ngx.components.UIDynamicElement-1610377321272]: 
          beanData: '{"ionBean":"Label"}'
          tagName: ion-label
          ↓FormatLayout [ngx.components.UIDynamicAttr-1645090139112]: 
            beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-capitalize"}'
            comment: FormatLayout
            tagName: div
          ↓Text [ngx.components.UIText-1610377321278]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:'mandatory' | translate
        ↓ToggleButton [ngx.components.UIDynamicElement-1610377321281]: 
          beanData: '{"ionBean":"Toggle"}'
          tagName: ion-toggle
          ↓Attr [ngx.components.UIAttribute-1610377321284]: 
            attrName: '[(ngModel)]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:(page as any).pageOwner.item.config.mandatory
          ↓Event [ngx.components.UIControlEvent-1610377321287]: 
            attrName: (ionChange)
            eventName: (ionChange)
            ↓triggerSave [ngx.components.UICustomAction-1610377321290]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      		//vars.item.config.mandatory = !vars.item["config"]["mandatory"];
                      		(page as any).pageOwner.updateState();
                      		;
                      		resolve();
                      
              isEnabled: false
            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1610377321293]: 
              beanData: '{"ionBean":"InvokeAction"}'
              stack: C8Oforms_NGX.MobileApplication.Application.updateState
              ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1610377321296]: 
                beanData: '{"ionBean":"InvokeAction"}'
                stack: C8Oforms_NGX.MobileApplication.Application.tick
          ↓Attr1 [ngx.components.UIAttribute-1610377321299]: 
            attrName: 
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:item-left