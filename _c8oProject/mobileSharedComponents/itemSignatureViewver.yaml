scriptContent: 
  - xmlizable: 
    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
    - com.twinsoft.convertigo.beans.common.FormatedContent: 
      →: |
        /*Begin_c8o_CompImport*/
        /*End_c8o_CompImport*/
        /*Begin_c8o_CompDeclaration*/
        	public width = 0;
        	/*End_c8o_CompDeclaration*/
        /*Begin_c8o_CompConstructor*/
        		/*End_c8o_CompConstructor*/
        /*Begin_c8o_CompInitialization*/
        		/*End_c8o_CompInitialization*/
        /*Begin_c8o_CompFinalization*/
        		/*End_c8o_CompFinalization*/
        /*Begin_c8o_CompChanges*/
        		/*End_c8o_CompChanges*/
        /*Begin_c8o_CompDoCheck*/
        		/*End_c8o_CompDoCheck*/
        /*Begin_c8o_CompAfterContentInit*/
        		/*End_c8o_CompAfterContentInit*/
        /*Begin_c8o_CompAfterContentChecked*/
        		/*End_c8o_CompAfterContentChecked*/
        /*Begin_c8o_CompAfterViewInit*/
        		/*End_c8o_CompAfterViewInit*/
        /*Begin_c8o_CompAfterViewChecked*/
        		/*End_c8o_CompAfterViewChecked*/
        /*Begin_c8o_CompFunction*/
        	getSelfWidth(){
        		let width = document.getElementsByClassName("signature-pad--body")[0]["offsetWidth"];
        		if(width != this.width){
        			this.width = width;
        			setTimeout(()=>{
        				this.sign.resize();
        			})
        		}
        		return "" + width;
        	}
        	/*End_c8o_CompFunction*/
        
↓item [ngx.components.UICompVariable-1571675849904]: 
  value: 
↓model [ngx.components.UICompVariable-1571675849907]: 
  comment: this.formsSubmit[item['name']]
  value: '{}'
↓redList [ngx.components.UICompVariable-1571675849910]: 
  comment: this.redList[item['name']]
  value: null
↓disabled [ngx.components.UICompVariable-1571675849913]: 
  comment: this.formsSubmit[item['name']]
  value: false
↓parentname [ngx.components.UICompVariable-1571757074418]: 
  value: null
↓color [ngx.components.UICompVariable-1592918940623]: 
  value: '''black'''
↓SharedComponent_Event [ngx.components.UISharedComponentEvent-1658907915400]: 
  ↓CustomAction [ngx.components.UICustomAction-1658907929569]: 
    actionValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            		document.getElementsByClassName("signature-pad--body")[0]["offsetWidth"];
            		resolve();
            
↓Div [ngx.components.UIDynamicElement-1725272979793]: 
  beanData: '{"ionBean":"DivTag"}'
  isEnabled: false
  tagName: div
  ↓Style [ngx.components.UIStyle-1725272998710]: 
    styleContent: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            '	max-width: 100%;
            	position: relative;
            '
↓Tag [ngx.components.UIElement-1663836722779]: 
  tagName: fieldset
  ↓Tag1 [ngx.components.UIElement-1663836722782]: 
    tagName: legend
    ↓Text [ngx.components.UIText-1663836722785]: 
      textValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:this.pageOwner.removeHTML(this.item.config.html)
  ↓Div [ngx.components.UIDynamicElement-1570478039567]: 
    beanData: '{"ionBean":"DivTag"}'
    identifier: divtext
    tagName: div
    ↓Grid [ngx.components.UIDynamicElement-1571755071219]: 
      beanData: '{"ionBean":"Grid","Height":"plain:100%"}'
      tagName: ion-grid
      ↓GridRow [ngx.components.UIDynamicElement-1571755101577]: 
        beanData: '{"ionBean":"GridRow"}'
        tagName: ion-row
        ↓GridCol [ngx.components.UIDynamicElement-1571755109994]: 
          beanData: '{"ionBean":"GridCol","Size":"plain:6"}'
          tagName: ion-col
          ↓UseSharedComponent [ngx.components.UIUseShared-1573724922362]: 
            sharedcomponent: C8Oforms.MobileApplication.Application.sharedLabelElem
            ↓item [ngx.components.UIUseVariable-1573724922365]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.item
        ↓GridCol1 [ngx.components.UIDynamicElement-1571755120715]: 
          beanData: '{"ionBean":"GridCol","Size":"plain:6"}'
          tagName: ion-col
          ↓ButtonSet [ngx.components.UIDynamicElement-1571676240357]: 
            beanData: '{"ionBean":"ButtonSet","SetPosition":"plain:end"}'
            tagName: ion-buttons
            ↓DeleteButton [ngx.components.UIDynamicElement-1571676240381]: 
              beanData: '{"ionBean":"Button"}'
              tagName: ion-button
              ↓Tag [ngx.components.UIElement-1571676240384]: 
                tagName: i
                ↓Attr [ngx.components.UIAttribute-1571676240387]: 
                  attrName: class
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:fa fa-trash-o fa-lg
                ↓Attr1 [ngx.components.UIAttribute-1571676240390]: 
                  attrName: aria-hidden
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:true
              ↓Event [ngx.components.UIControlEvent-1571676240393]: 
                ↓borrowSignature [ngx.components.UICustomAction-1571676268818]: 
                  actionValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          		    page.model.value ="";
                          		resolve();
                          
                  ↓params [ngx.components.UIControlVariable-1571676275242]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:this
                  ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1571676339145]: 
                    beanData: '{"ionBean":"InvokeAction"}'
                    stack: C8Oforms.MobileApplication.Application.tickAction
              ↓Style [ngx.components.UIStyle-1663766630379]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '/**
                         * Custom properties (sometimes referred to as CSS variables or cascading variables)
                         * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                         * They are set using custom property notation, e.g.: --main-color: black;
                         * and are accessed using the var() function, e.g.: color: var(--main-color);
                         * You can find below your component''s properties you can customize within the page.
                         * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                         * For more informations see https://ionicframework.com/docs/theming.
                        **/
                        //--background	//Background of the button
                        //--background-activated	//Background of the button when pressed. Note: setting this will interfere with the Material Design ripple
                        //--background-activated-opacity	//Opacity of the button when pressed
                        //--background-focused	//Background of the button when focused with the tab key
                        //--background-focused-opacity	//Opacity of the button when focused with the tab key
                        //--background-hover	//Background of the button on hover
                        //--background-hover-opacity	//Opacity of the background on hover
                        //--border-color	//Border color of the button
                        //--border-radius	//Border radius of the button
                        //--border-style	//Border style of the button
                        //--border-width	//Border width of the button
                        //--box-shadow	//Box shadow of the button
                        --color:var(--ion-color-btLight);	//Text color of the button
                        //--color-activated	//Text color of the button when pressed
                        //--color-focused	//Text color of the button when focused with the tab key
                        //--color-hover	//Text color of the button when hover
                        //--opacity	//Opacity of the button
                        //--padding-bottom	//Bottom padding of the button
                        //--padding-end	//Right padding if direction is left-to-right, and left padding if direction is right-to-left of the button
                        //--padding-start	//Left padding if direction is left-to-right, and right padding if direction is right-to-left of the button
                        //--padding-top	//Top padding of the button
                        //--ripple-color	//Color of the button ripple effect
                        //--transition	//Transition of the button
                        '
            ↓Style [ngx.components.UIStyle-1570478039585]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      display:inline-block;
                      float:right;
                      
    ↓Attr11 [ngx.components.UIAttribute-1570478039612]: 
      attrName: '[attr.id]'
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:this.item.name
    ↓Attr [ngx.components.UIAttribute-1570478039615]: 
      attrName: '[ngClass]'
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: 'script:this.redList != undefined ?  this.redList[this.item.name] == true ? (this.item.config.mandatory && this.item.config.disabled == true) ? [''requiredgregoryvpadding'', ''styledivred''] : ''styledivred'': (this.item.config.mandatory && this.item.config.disabled == true) ? [''requiredgregoryv'', ''styledivnormal''] : ''styledivnormal'': (this.item.config.mandatory && this.item.config.disabled == true) ? [''requiredgregoryv'', ''styledivnormal''] : ''styledivnormal'''
    ↓Signature1 [ngx.components.UIDynamicComponent-1592918840886]: 
      beanData: |
        '{
         "ionBean": "SignatureComponent",
         "CanvasWidth": "script:getSelfWidth()",
         "CanvasHeight": "plain:''150''",
         "BackgroundColor": "plain:rgb(255,255,255)",
         "PenColor": "script:this.disabled ? ''rgb(255,255,255)'' : this.color"
        }'
      identifier: sign
      tagName: c8o-signature
      ↓Attr [ngx.components.UIAttribute-1592918840889]: 
        attrName: '[(ngModel)]'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:this.model['value']
      ↓Event [ngx.components.UIControlEvent-1592918840892]: 
        attrName: (ngModelChange)
        eventName: (ngModelChange)
        ↓CheckFilled [ngx.components.UICustomAction-1592918840895]: 
          actionValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  		if(vars.item.config.mandatory == true){
                  		    if(event.value != ""){
                  		        vars.redList = false;
                  		    }
                  		}
                  		    ;
                  		resolve();
                  
          ↓item [ngx.components.UIControlVariable-1592918840898]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.item
          ↓redList [ngx.components.UIControlVariable-1592918840901]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.redList
        ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1598522513473]: 
          beanData: '{"ionBean":"InvokeAction"}'
          stack: C8Oforms.MobileApplication.Application.executeGoToPageIfCondition
          ↓item [ngx.components.UIControlVariable-1598522513476]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.item
          ↓line [ngx.components.UIControlVariable-1598522513479]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:null
          ↓child [ngx.components.UIControlVariable-1598522513482]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:null
          ↓canExec [ngx.components.UIControlVariable-1598522513485]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:true
        ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1609769969080]: 
          beanData: '{"ionBean":"InvokeAction"}'
          stack: C8Oforms.MobileApplication.Application.UpdateFunctionsToBeCalledToDataSource
          ↓item [ngx.components.UIControlVariable-1609769969083]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.item
      ↓Style [ngx.components.UIStyle-1592918840904]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                'width: 100% !important;
                /*canvas{
                width: 100% !important;
                }*/
                ::ng-deep {
                	canvas {
                	  max-width: 100%; 
                	  height: auto;
                	}
                	.signature-pad{
                		max-width: 100% !important;
                	}
                }
                
                '
      ↓Attr1 [ngx.components.UIAttribute-1663836740663]: 
        attrName: '[attr.id]'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:this.item.name
    ↓Style1 [ngx.components.UIStyle-1574866559598]: 
      styleContent: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              position:relative;
              
    ↓Directive2 [ngx.components.UIControlDirective-1658849925690]: 
      directiveName: If
      directiveSource: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: 'script:this.redList != null ? this.redList[this.item.name] : false'
      ↓UseSharedComponent [ngx.components.UIUseShared-1658849925693]: 
        sharedcomponent: C8Oforms.MobileApplication.Application.labelFieldMustBeFilled
        ↓text [ngx.components.UIUseVariable-1658849925696]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'repMandartory'
  ↓Style [ngx.components.UIStyle-1725273021340]: 
    styleContent: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            '	width: 100%; 
              max-width: 100%; 
            '