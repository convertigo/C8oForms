scriptContent: 
  - xmlizable: 
    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
    - com.twinsoft.convertigo.beans.common.FormatedContent: 
      →: |
        /*Begin_c8o_CompImport*/
        /*End_c8o_CompImport*/
        /*Begin_c8o_CompDeclaration*/
        	/*End_c8o_CompDeclaration*/
        /*Begin_c8o_CompConstructor*/
        		/*End_c8o_CompConstructor*/
        /*Begin_c8o_CompInitialization*/
        		/*End_c8o_CompInitialization*/
        /*Begin_c8o_CompFinalization*/
        		/*End_c8o_CompFinalization*/
        /*Begin_c8o_CompFunction*/
        	/*End_c8o_CompFunction*/
        
↓item [ngx.components.UICompVariable-1571231679405]: 
  value: 
↓idselected [ngx.components.UICompVariable-1571231679408]: 
  value: 
↓isChild [ngx.components.UICompVariable-1571845635028]: 
  value: false
↓UseSharedComponent1 [ngx.components.UIUseShared-1588839628041]: 
  sharedcomponent: C8Oforms_NGX.MobileApplication.Application.sharedQuestionElem
  ↓item [ngx.components.UIUseVariable-1588839628044]: 
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:this.item
↓GenericItem [ngx.components.UIDynamicElement-1588839628047]: 
  beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
  tagName: ion-item
  ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138053]: 
    beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-uppercase"}'
    comment: FormatLayout
    tagName: div
  ↓Text [ngx.components.UIText-1588839628053]: 
    i18n: true
    textValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:'forms_checkbox_style' | translate
  ↓Style [ngx.components.UIStyle-1588839628056]: 
    styleContent: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            'color: #ff8206;
              font-size: 14px;
              font-weight: 600;
              font-style: normal;
              font-stretch: normal;
              line-height: normal;
              letter-spacing: normal;
            '
  ↓Style1 [ngx.components.UIStyle-1588839628059]: 
    styleContent: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            '	.label{
            		margin-top: 0px !important;	
            		margin-bottom: 0px !important;	
            	}
            '
↓ListContainer [ngx.components.UIDynamicElement-1588839628062]: 
  beanData: '{"ionBean":"List"}'
  tagName: ion-list
  ↓Directive [ngx.components.UIControlDirective-1588839628065]: 
    directiveIndexName: j
    directiveItemName: child
    directiveSource: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:this.item.children
    ↓Item [ngx.components.UIDynamicElement-1588839628068]: 
      beanData: '{"ionBean":"GridRow"}'
      tagName: ion-row
      ↓Event11 [ngx.components.UIControlEvent-1588839628071]: 
        attrName: (dragstart)
        eventName: (dragstart)
        ↓addElementToList [ngx.components.UICustomAction-1588839628074]: 
          actionValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  		if(vars !=  undefined){
                  		    if(vars.item != undefined){
                  		        event.dataTransfer.setData("__c8oformsdrag", true);
                  		        event.dataTransfer.setData(vars.item.type, true);
                  		        event.dataTransfer.setData("origin", "moved");
                  		        event.dataTransfer.setData("index", vars.index);
                  		        event.dataTransfer.setData("dropEffect", "copy");
                  		    }
                  		}
                  		resolve();
                  
          ↓index [ngx.components.UIControlVariable-1588839628077]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:[i,j]
          ↓item [ngx.components.UIControlVariable-1588839628080]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:child
      ↓GridCol [ngx.components.UIDynamicElement-1588839628083]: 
        beanData: '{"ionBean":"GridCol","Size":"plain:12"}'
        tagName: ion-col
        ↓DivCheckbox [ngx.components.UIDynamicElement-1588839628086]: 
          beanData: '{"ionBean":"DivTag"}'
          tagName: div
          ↓Style [ngx.components.UIStyle-1588839628089]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    'display: inline-block;
                    padding-left: 16px;
                    '
          ↓GenericItem [ngx.components.UIDynamicElement-1588839628092]: 
            beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
            tagName: ion-item
            ↓CheckBox [ngx.components.UIDynamicElement-1588839628095]: 
              beanData: '{"ionBean":"CheckBox"}'
              tagName: ion-checkbox
              ↓Event [ngx.components.UIControlEvent-1588839628098]: 
                attrName: (ionChange)
                eventName: (ionChange)
                ↓CheckAndRegister [ngx.components.UICustomAction-1588839628101]: 
                  actionValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                                      //vars.child.selected = true;
                          		    //vars.child.selected = !vars.child.selected;
                          		    console.log(vars);
                                      page.pageOwner.updateState();
                                      resolve();
                          
                  isEnabled: false
                  ↓item [ngx.components.UIControlVariable-1588839628104]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:item
                  ↓child [ngx.components.UIControlVariable-1588839628107]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:child
                ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1588839628110]: 
                  beanData: '{"ionBean":"InvokeAction"}'
                  stack: C8Oforms_NGX.MobileApplication.Application.updateState
              ↓Attr [ngx.components.UIAttribute-1588839628113]: 
                attrName: '[(ngModel)]'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.item.children[j].selected
              ↓Attr1 [ngx.components.UIAttribute-1588839628116]: 
                attrName: 
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:item-start
            ↓Style [ngx.components.UIStyle-1588839628119]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '.checkbox{
                      margin-right:4px !important;
                      }
                      '
        ↓DivInputOption [ngx.components.UIDynamicElement-1588839628122]: 
          beanData: '{"ionBean":"DivTag"}'
          tagName: div
          ↓Style [ngx.components.UIStyle-1588839628125]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    'display: inline-block;
                    /*
                    .text-input{
                    		margin-top: 0px !important;	
                    		margin-bottom: 4px !important;	
                    	}
                    width:70%;
                    */
                    '
          ↓GenericItem [ngx.components.UIDynamicElement-1588839628128]: 
            beanData: '{"ionBean":"GenericItem"}'
            tagName: ion-item
            ↓TextInput [ngx.components.UIDynamicElement-1588839628131]: 
              beanData: |
                '{
                 "ionBean": "Input",
                 "Debounce": "plain:0",
                 "Placeholder": "script:this.global[''text'']",
                 "Value": "script:child.value"
                }'
              tagName: ion-input
              ↓Event [ngx.components.UIControlEvent-1588839628134]: 
                attrName: (change)
                eventName: onChange
                ↓CheckAndRegister [ngx.components.UICustomAction-1588839628137]: 
                  actionValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          		    this.checkNotEmptyAndNameNotExists(event,vars,"nameAlreadyexits");
                          
                  isEnabled: false
                  ↓child [ngx.components.UIControlVariable-1588839628140]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:child
                  ↓item [ngx.components.UIControlVariable-1588839628143]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:item
                  ↓j [ngx.components.UIControlVariable-1588839628146]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:j
                ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1588839628149]: 
                  beanData: '{"ionBean":"InvokeAction"}'
                  isEnabled: false
                  stack: C8Oforms_NGX.MobileApplication.Application.checkAndRegister
                  ↓noCondition [ngx.components.UIControlVariable-1588839628152]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:false
                  ↓path [ngx.components.UIControlVariable-1588839628155]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'obj.value'
                  ↓obj [ngx.components.UIControlVariable-1588839628158]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:this.item
                  ↓allowDuplicate [ngx.components.UIControlVariable-1588839628161]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:false
                  ↓path2 [ngx.components.UIControlVariable-1588839628164]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'obj2.value'
                  ↓obj2 [ngx.components.UIControlVariable-1588839628167]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:child
                  ↓isNumber [ngx.components.UIControlVariable-1588839628170]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:false
                  ↓isSlider [ngx.components.UIControlVariable-1588839628173]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:false
                ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1588839628176]: 
                  beanData: '{"ionBean":"InvokeAction"}'
                  stack: C8Oforms_NGX.MobileApplication.Application.updateState
              ↓Attr [ngx.components.UIAttribute-1588839628179]: 
                attrName: '[(ngModel)]'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:child.value
              ↓Attr2 [ngx.components.UIAttribute-1588839628182]: 
                attrName: ondragstart
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:event.preventDefault();event.stopPropagation();
              ↓Event11 [ngx.components.UIControlEvent-1588839628185]: 
                attrName: (dragover)
                eventName: (dragover)
                ↓refuseDrop [ngx.components.UICustomAction-1588839628188]: 
                  actionValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          		if(event.dataTransfer.types.includes("__c8oformsdrag")){
                          					event.preventDefault();
                          					//this.recursive(event.target, "before");
                          			}
                          		resolve();
                          
              ↓Attr3 [ngx.components.UIAttribute-1588839628191]: 
                attrName: ondragover
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:event.preventDefault()
              ↓Attr31 [ngx.components.UIAttribute-1588839628194]: 
                attrName: ondrop
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:event.preventDefault()
              ↓Attr11 [ngx.components.UIAttribute-1602089228693]: 
                attrName: '[attr.draggable]'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:false
              ↓Event11132 [ngx.components.UIControlEvent-1602176314526]: 
                attrName: (mouseenter)
                eventName: (mouseenter)
                ↓cantDrag [ngx.components.UICustomAction-1602176314529]: 
                  actionValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          	    page.pageOwner.local.canDrag = "false";
                          		page.tick();
                          //		console.log('MOUSEENTER !!');
                          		resolve();
                          
              ↓Event111311 [ngx.components.UIControlEvent-1602176314532]: 
                attrName: (mouseleave)
                eventName: (mouseleave)
                ↓canDrag [ngx.components.UICustomAction-1602176314535]: 
                  actionValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          	    page.pageOwner.local.canDrag = "true";
                          		page.tick();
                          //		console.log('MOUSELEAVE !!');
                          		resolve();
                          
            ↓Attr2 [ngx.components.UIAttribute-1588839628197]: 
              attrName: '[ngClass]'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:'stylegenerictexteditor'
              isEnabled: false
            ↓Style [ngx.components.UIStyle-1588839628200]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      'width: 90%;
                      .label{
                      		margin-top: 0px !important;	
                      		margin-bottom: 0px !important;	
                      	}
                      '
        ↓DivDelete [ngx.components.UIDynamicElement-1588839628203]: 
          beanData: '{"ionBean":"DivTag"}'
          tagName: div
          ↓Style [ngx.components.UIStyle-1588839628206]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    'display: inline-block;
                    .label{
                    margin-bottom:9px;
                    }
                    /*
                    .text-input{
                    		margin-top: 0px !important;	
                    		margin-bottom: 4px !important;	
                    	}
                    width:70%;
                    */
                    '
          ↓GenericItem [ngx.components.UIDynamicElement-1588839628209]: 
            beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
            tagName: ion-item
            ↓DeleteButton [ngx.components.UIDynamicElement-1588839628212]: 
              beanData: |
                '{
                 "ionBean": "Button",
                 "IonColor": "plain:btLight",
                 "IonFill": "plain:clear"
                }'
              tagName: ion-button
              ↓Event [ngx.components.UIControlEvent-1588839628224]: 
                ↓CustomAction [ngx.components.UICustomAction-1588839628239]: 
                  actionValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          		vars.item.children.splice(vars.j, 1);
                          		page.pageOwner.updateState();
                          		resolve();
                          
                  ↓item [ngx.components.UIControlVariable-1588839628242]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:this.item
                  ↓j [ngx.components.UIControlVariable-1588839628245]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:j
              ↓Style [ngx.components.UIStyle-1588839628248]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        'margin-bottom: 0px !important;
                        ion-icon{
                        	color: var(ion-color-btLight)
                        }
                        '
              ↓Icon [ngx.components.UIDynamicElement-1646158801120]: 
                beanData: |
                  '{
                   "ionBean": "Icon",
                   "IconName": "plain:trash-outline",
                   "IonColor": "plain"
                  }'
                tagName: ion-icon
      ↓Attr2 [ngx.components.UIAttribute-1588839628251]: 
        attrName: '*ngIf'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:!child.other
  ↓Directive1 [ngx.components.UIControlDirective-1588839628254]: 
    directiveIndexName: j
    directiveItemName: child
    directiveSource: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:this.item.children
    ↓Item [ngx.components.UIDynamicElement-1588839628257]: 
      beanData: '{"ionBean":"GridRow"}'
      tagName: ion-row
      ↓Event11 [ngx.components.UIControlEvent-1588839628260]: 
        attrName: (dragstart)
        eventName: (dragstart)
        ↓addElementToList [ngx.components.UICustomAction-1588839628263]: 
          actionValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  		if(vars !=  undefined){
                  		    if(vars.item != undefined){
                  		        event.dataTransfer.setData("__c8oformsdrag", true);
                  		        event.dataTransfer.setData(vars.item.type, true);
                  		        event.dataTransfer.setData("origin", "moved");
                  		        event.dataTransfer.setData("index", vars.index);
                  		        event.dataTransfer.setData("dropEffect", "copy");
                  		    }
                  		}
                  		resolve();
                  
          ↓index [ngx.components.UIControlVariable-1588839628266]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:[i,j]
          ↓item [ngx.components.UIControlVariable-1588839628269]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:child
      ↓Attr [ngx.components.UIAttribute-1588839628272]: 
        attrName: id
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:'@prefixc8oitem'+child.name+'@prefixc8otype'+child.type+'c8o_child1'
        isEnabled: false
      ↓Attr1 [ngx.components.UIAttribute-1588839628275]: 
        attrName: draggable
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:true
        isEnabled: false
      ↓GridCol [ngx.components.UIDynamicElement-1588839628278]: 
        beanData: '{"ionBean":"GridCol","Size":"plain:12"}'
        tagName: ion-col
        ↓DivCheckbox [ngx.components.UIDynamicElement-1588839628281]: 
          beanData: '{"ionBean":"DivTag"}'
          tagName: div
          ↓Style [ngx.components.UIStyle-1588839628284]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    'display: inline-block;
                    padding-left: 16px;
                    '
          ↓GenericItem [ngx.components.UIDynamicElement-1588839628287]: 
            beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
            tagName: ion-item
            ↓CheckBox [ngx.components.UIDynamicElement-1588839628290]: 
              beanData: '{"ionBean":"CheckBox"}'
              tagName: ion-checkbox
              ↓Event [ngx.components.UIControlEvent-1588839628293]: 
                attrName: (ionChange)
                eventName: (ionChange)
                ↓CheckAndRegister [ngx.components.UICustomAction-1588839628296]: 
                  actionValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                                      //vars.child.selected = true;
                          		    //vars.child.selected = !vars.child.selected;
                          		    console.log(vars);
                                      page.pageOwner.updateState();
                                      resolve();
                          
                  ↓item [ngx.components.UIControlVariable-1588839628299]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:item
                  ↓child [ngx.components.UIControlVariable-1588839628302]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:child
              ↓Attr [ngx.components.UIAttribute-1588839628305]: 
                attrName: '[(ngModel)]'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.item.children[j].selected
              ↓Attr1 [ngx.components.UIAttribute-1588839628308]: 
                attrName: 
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:item-start
            ↓Style [ngx.components.UIStyle-1588839628311]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '.checkbox{
                      margin-right:4px !important;
                      }
                      '
        ↓DivInputOption [ngx.components.UIDynamicElement-1588839628314]: 
          beanData: '{"ionBean":"DivTag"}'
          tagName: div
          ↓Style [ngx.components.UIStyle-1588839628317]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    'display: inline-block;
                    /*
                    .text-input{
                    		margin-top: 0px !important;	
                    		margin-bottom: 4px !important;	
                    	}
                    width:70%;
                    */
                    '
          ↓GenericItem [ngx.components.UIDynamicElement-1588839628320]: 
            beanData: '{"ionBean":"GenericItem"}'
            tagName: ion-item
            ↓TextInput [ngx.components.UIDynamicElement-1588839628323]: 
              beanData: |
                '{
                 "ionBean": "Input",
                 "Disabled": "plain:true",
                 "Debounce": "plain:0",
                 "Value": "script:(''Other'' | translate) +''...''"
                }'
              tagName: ion-input
              ↓Attr2 [ngx.components.UIAttribute-1602092730187]: 
                attrName: ondragstart
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:event.preventDefault();event.stopPropagation();return false;
              ↓Attr3 [ngx.components.UIAttribute-1602092730190]: 
                attrName: ondragover
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:event.preventDefault()
              ↓Attr31 [ngx.components.UIAttribute-1602092730193]: 
                attrName: ondrop
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:event.preventDefault()
              ↓Attr11 [ngx.components.UIAttribute-1602089356931]: 
                attrName: '[attr.draggable]'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:false
              ↓Event11132 [ngx.components.UIControlEvent-1602176330782]: 
                attrName: (mouseenter)
                eventName: (mouseenter)
                ↓cantDrag [ngx.components.UICustomAction-1602176330785]: 
                  actionValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          	    page.pageOwner.local.canDrag = "false";
                          		page.tick();
                          //		console.log('MOUSEENTER !!');
                          		resolve();
                          
              ↓Event111311 [ngx.components.UIControlEvent-1602176330788]: 
                attrName: (mouseleave)
                eventName: (mouseleave)
                ↓canDrag [ngx.components.UICustomAction-1602176330791]: 
                  actionValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          	    page.pageOwner.local.canDrag = "true";
                          		page.tick();
                          //		console.log('MOUSELEAVE !!');
                          		resolve();
                          
            ↓Attr2 [ngx.components.UIAttribute-1588839628326]: 
              attrName: '[ngClass]'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:'stylegenerictexteditor'
              isEnabled: false
            ↓Style [ngx.components.UIStyle-1588839628329]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      'width: 90%;
                      .label{
                      		margin-top: 0px !important;	
                      		margin-bottom: 0px !important;	
                      	}
                      '
          ↓TextInput [ngx.components.UIDynamicElement-1588839628332]: 
            beanData: |
              '{
               "ionBean": "Input",
               "Debounce": "plain:0",
               "Placeholder": "script:page.global[''text'']",
               "Value": "script:''addcheckbox''|translate"
              }'
            isEnabled: false
            tagName: ion-input
            ↓Attr [ngx.components.UIAttribute-1588839628335]: 
              attrName: disabled
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:true
            ↓Event1 [ngx.components.UIControlEvent-1588839628338]: 
              attrName: (mouseover)
              eventName: (mouseover)
              isEnabled: false
              ↓CustomAction [ngx.components.UICustomAction-1588839628341]: 
          ↓Label [ngx.components.UIDynamicElement-1588839628344]: 
            beanData: '{"ionBean":"Label"}'
            isEnabled: false
            tagName: ion-label
          ↓Label1 [ngx.components.UIDynamicElement-1588839628347]: 
            beanData: '{"ionBean":"Label"}'
            isEnabled: false
            tagName: ion-label
            ↓Style [ngx.components.UIStyle-1588839628350]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      'color: var(--ion-color-primary);
                      '
        ↓DivDelete [ngx.components.UIDynamicElement-1588839628353]: 
          beanData: '{"ionBean":"DivTag"}'
          tagName: div
          ↓Style [ngx.components.UIStyle-1588839628356]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    'display: inline-block;
                    .label{
                    margin-bottom:9px;
                    }
                    /*
                    .text-input{
                    		margin-top: 0px !important;	
                    		margin-bottom: 4px !important;	
                    	}
                    width:70%;
                    */
                    '
          ↓GenericItem [ngx.components.UIDynamicElement-1588839628359]: 
            beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
            tagName: ion-item
            ↓DeleteButton [ngx.components.UIDynamicElement-1588839628362]: 
              beanData: |
                '{
                 "ionBean": "Button",
                 "IonColor": "plain:btLight",
                 "IonFill": "plain:clear"
                }'
              tagName: ion-button
              ↓Event [ngx.components.UIControlEvent-1588839628374]: 
                ↓CustomAction [ngx.components.UICustomAction-1588839628389]: 
                  actionValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          		vars.item.children.splice(vars.j, 1);
                          		page.pageOwner.updateState();
                          		resolve();
                          
                  ↓item [ngx.components.UIControlVariable-1588839628392]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:this.item
                  ↓j [ngx.components.UIControlVariable-1588839628395]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:j
              ↓Style [ngx.components.UIStyle-1588839628398]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        'margin-bottom: 0px !important;
                        ion-icon{
                        	color:var(--ion-color-btLight);
                        }
                        '
              ↓Icon [ngx.components.UIDynamicElement-1646160007133]: 
                beanData: |
                  '{
                   "ionBean": "Icon",
                   "IconName": "plain:trash-outline",
                   "IonColor": "plain"
                  }'
                tagName: ion-icon
      ↓Attr2 [ngx.components.UIAttribute-1588839628401]: 
        attrName: '*ngIf'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:child.other
  ↓UseSharedComponent [ngx.components.UIUseShared-1588839628404]: 
    sharedcomponent: C8Oforms_NGX.MobileApplication.Application.itemAddCheckBoxOrRadio
    ↓item [ngx.components.UIUseVariable-1588839628407]: 
      varValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:this.item
    ↓defaultValue [ngx.components.UIUseVariable-1588839628410]: 
      varValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:'Checkbox'
  ↓Tag2 [ngx.components.UIElement-1588839628413]: 
    selfClose: true
    tagName: br
↓Directive1 [ngx.components.UIControlDirective-1623851806655]: 
  directiveName: If
  directiveSource: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
      - MobileSmartSourceType: script:this.pageOwner.local.advancedEditing
  ↓GridRow2 [ngx.components.UIDynamicElement-1601916807885]: 
    beanData: '{"ionBean":"GridRow"}'
    tagName: ion-row
    ↓GenericItem [ngx.components.UIDynamicElement-1601916807888]: 
      beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
      tagName: ion-item
      ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138075]: 
        beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-uppercase"}'
        comment: FormatLayout
        tagName: div
      ↓Style [ngx.components.UIStyle-1601916807894]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                'color: #ff8206;
                  font-size: 14px;
                  font-weight: 600;
                  font-style: normal;
                  font-stretch: normal;
                  line-height: normal;
                  letter-spacing: normal;
                '
      ↓Text1 [ngx.components.UIText-1601916807897]: 
        i18n: true
        textValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:option
      ↓Style1 [ngx.components.UIStyle-1601916807900]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '	.label{
                		margin-top: 0px !important;	
                		margin-bottom: 0px !important;	
                	}
                '
  ↓GridRow11 [ngx.components.UIDynamicElement-1601916807903]: 
    beanData: '{"ionBean":"GridRow"}'
    tagName: ion-row
    ↓GenericItem [ngx.components.UIDynamicElement-1601916807906]: 
      beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
      tagName: ion-item
      ↓Label [ngx.components.UIDynamicElement-1601916807909]: 
        beanData: '{"ionBean":"Label"}'
        tagName: ion-label
        ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138077]: 
          beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-capitalize"}'
          comment: FormatLayout
          tagName: div
        ↓Text [ngx.components.UIText-1601916807915]: 
          i18n: true
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'mandatory' | translate
      ↓ToggleButton [ngx.components.UIDynamicElement-1601916807918]: 
        beanData: '{"ionBean":"Toggle"}'
        tagName: ion-toggle
        ↓Attr [ngx.components.UIAttribute-1601916807921]: 
          attrName: '[(ngModel)]'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:this.item.config.mandatory
        ↓Event [ngx.components.UIControlEvent-1601916807924]: 
          attrName: (ionChange)
          eventName: (ionChange)
          ↓triggerSave [ngx.components.UICustomAction-1601916807927]: 
            actionValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    		//vars.item.config.mandatory = !vars.item["config"]["mandatory"];
                    		page.pageOwner.updateState();
                    		resolve();
                    
            isEnabled: false
          ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1601916807930]: 
            beanData: '{"ionBean":"InvokeAction"}'
            stack: C8Oforms_NGX.MobileApplication.Application.updateState
            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1601916807933]: 
              beanData: '{"ionBean":"InvokeAction"}'
              stack: C8Oforms_NGX.MobileApplication.Application.tick
        ↓Attr1 [ngx.components.UIAttribute-1601916807936]: 
          attrName: 
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:item-left