scriptContent: 
  - xmlizable: 
    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
    - com.twinsoft.convertigo.beans.common.FormatedContent: 
      →: |
        '/*Begin_c8o_CompImport*/
        /*End_c8o_CompImport*/
        /*Begin_c8o_CompDeclaration*/
        	/*End_c8o_CompDeclaration*/
        /*Begin_c8o_CompConstructor*/
        		/*End_c8o_CompConstructor*/
        /*Begin_c8o_CompInitialization*/
        		/*End_c8o_CompInitialization*/
        /*Begin_c8o_CompFinalization*/
        		/*End_c8o_CompFinalization*/
        /*Begin_c8o_CompChanges*/
        		/*End_c8o_CompChanges*/
        /*Begin_c8o_CompDoCheck*/
        		/*End_c8o_CompDoCheck*/
        /*Begin_c8o_CompAfterContentInit*/
        		/*End_c8o_CompAfterContentInit*/
        /*Begin_c8o_CompAfterContentChecked*/
        		/*End_c8o_CompAfterContentChecked*/
        /*Begin_c8o_CompAfterViewInit*/
        		/*End_c8o_CompAfterViewInit*/
        /*Begin_c8o_CompAfterViewChecked*/
        		/*End_c8o_CompAfterViewChecked*/
        /*Begin_c8o_CompFunction*/
        	showDisplayValue(val){
        		if(val != undefined && val != ""){
        			let day = val.substring(8,10);
        			let month = val.substring(5,7);
        			let year = val.substring(0,4);
        			switch(this.item.config.display_format){
        				case "MM/DD/YY":
        					return month + "/" + day + "/" + year.substring(2);
        				break;
        				case "DD/MM/YY":
        					return day + "/" + month + "/" + year.substring(2);
        				break;
        				case "MM/DD/YYYY":
        					return month + "/" + day + "/" + year;
        				break;
        				case "DD/MM/YYYY":
        					return day + "/" + month + "/" + year
        				break;
        				case "YYYY/MM/DD":
        					return year + "/" + month + "/" + day
        				break;
        				default:
        					return val;
        			}
        		}
        		else{
        			return "";
        		}
        	}
        	/**
        	 * 
        	 * @returns a date formatted like following: 2023-06-02
        	 */
        	public getTodayDateFomatted(){
        		return new Date().toISOString().split(''T'')[0]
        	}
        	/*End_c8o_CompFunction*/
        '
↓item [ngx.components.UICompVariable-1570455198495]: 
  value: 
↓model [ngx.components.UICompVariable-1570479019589]: 
  comment: this.formsSubmit[item['name']]
  value: '{}'
↓redList [ngx.components.UICompVariable-1570484666649]: 
  comment: this.redList[item['name']]
  value: null
↓disabled [ngx.components.UICompVariable-1571135284173]: 
  comment: this.formsSubmit[item['name']]
  value: false
↓Tag [ngx.components.UIElement-1663834523971]: 
  tagName: fieldset
  ↓Tag1 [ngx.components.UIElement-1663834523974]: 
    tagName: legend
    ↓Text [ngx.components.UIText-1663834523977]: 
      textValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:this.pageOwner.removeHTML(this.item.config.html)
  ↓Popover [ngx.components.UIDynamicElement-1657210118750]: 
    beanData: |
      '{
       "ionBean": "InlinePopover",
       "Reference": "plain:event",
       "Size": "plain:auto",
       "Trigger": "script:''date_'' + this.item.name"
      }'
    tagName: ion-popover
    ↓DateTime1 [ngx.components.UIDynamicElement-1570476475379]: 
      beanData: |
        '{
         "ionBean": "DateTime",
         "CancelText": "script:this.translate.instant(''Cancel'')",
         "ClearText": "script:this.translate.instant(''clear'')",
         "DoneText": "plain:Ok",
         "Presentation": "plain:date",
         "ShowClearButton": "plain:true",
         "ShowDefaultButtons": "plain:true",
         "Size": "plain:cover"
        }'
      tagName: ion-datetime
      ↓Attr [ngx.components.UIAttribute-1570476475382]: 
        attrName: '[ngModel]'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:this.model['value']
      ↓Attr4 [ngx.components.UIAttribute-1570476475394]: 
        attrName: '[max]'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: 'script:this.item.config.date_more_than_today == true ? this.getTodayDateFomatted() :  this.item.config.max_datetime'
      ↓Attr5 [ngx.components.UIAttribute-1570476475397]: 
        attrName: '[min]'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: 'script:this.item.config.date_less_than_today == true ? this.getTodayDateFomatted() : this.item.config.min_datetime'
      ↓Event [ngx.components.UIControlEvent-1570476475406]: 
        attrName: (ngModelChange)
        eventName: (ngModelChange)
        ↓CheckFilled [ngx.components.UICustomAction-1570476475409]: 
          actionValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  		if(event != undefined){
                    			page.model["value"] = event.substring(0, 10)
                    		}
                    		else{
                    			page.model["value"] = "";
                    		}
                    		if(vars.item.config.mandatory == true){
                    		    if(event != "" && event != undefined){
                    		        vars.redlist = false;
                    		    }
                    		}
                  		resolve();
                  
          ↓item [ngx.components.UIControlVariable-1570476475412]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.item
          ↓redList [ngx.components.UIControlVariable-1570486919225]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.redList
          ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1596720459496]: 
            beanData: '{"ionBean":"InvokeAction"}'
            stack: C8Oforms.MobileApplication.Application.executeGoToPageIfCondition
            ↓item [ngx.components.UIControlVariable-1596720459499]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.item
            ↓line [ngx.components.UIControlVariable-1596720459502]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:null
            ↓child [ngx.components.UIControlVariable-1596720459505]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:null
            ↓canExec [ngx.components.UIControlVariable-1596720459508]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:true
          ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1609769499573]: 
            beanData: '{"ionBean":"InvokeAction"}'
            stack: C8Oforms.MobileApplication.Application.UpdateFunctionsToBeCalledToDataSource
            ↓item [ngx.components.UIControlVariable-1609769499576]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.item
      ↓Attr6 [ngx.components.UIAttribute-1571411405243]: 
        attrName: '[disabled]'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:this.disabled
    ↓Style [ngx.components.UIStyle-1658739701126]: 
      styleContent: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              '/**
               * Custom properties (sometimes referred to as CSS variables or cascading variables)
               * are entities defined by CSS authors that contain specific values to be reused throughout a document.
               * They are set using custom property notation, e.g.: --main-color: black;
               * and are accessed using the var() function, e.g.: color: var(--main-color);
               * You can find below your component''s properties you can customize within the page.
               * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
               * For more informations see https://ionicframework.com/docs/theming.
              **/
              //--backdrop-opacity	//Opacity of the backdrop
              //--background	//Background of the popover
              //--box-shadow	//Box shadow of the popover
              //--height	//Height of the popover
              //--max-height	//Maximum height of the popover
              //--max-width	//Maximum width of the popover
              --min-height: 392px;	//Minimum height of the popover
              
              //--min-width	//Minimum width of the popover
              //--offset-x	//The amount to move the popover by on the x-axis
              //--offset-y	//The amount to move the popover by on the y-axis
              //--width	//Width of the popover
              '
  ↓Div [ngx.components.UIDynamicElement-1570476475337]: 
    beanData: '{"ionBean":"DivTag"}'
    identifier: divtext
    tagName: div
    ↓UseSharedComponent [ngx.components.UIUseShared-1573676385661]: 
      sharedcomponent: C8Oforms.MobileApplication.Application.sharedLabelElem
      ↓item [ngx.components.UIUseVariable-1573676385664]: 
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:this.item
    ↓Attr11 [ngx.components.UIAttribute-1570476475445]: 
      attrName: '[attr.id]'
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:this.item.name
    ↓Attr [ngx.components.UIAttribute-1571409409602]: 
      attrName: '[ngClass]'
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: 'script:this.redList != undefined ?  this.redList[this.item.name] == true ? (this.item.config.mandatory && this.item.config.disabled == true) ? [''requiredgregoryvpadding'', ''styledivred''] : ''styledivred'': (this.item.config.mandatory && this.item.config.disabled == true) ? [''requiredgregoryv'', ''styledivnormal''] : ''styledivnormal'': (this.item.config.mandatory && this.item.config.disabled == true) ? [''requiredgregoryv'', ''styledivnormal''] : ''styledivnormal'''
    ↓Style [ngx.components.UIStyle-1574866425457]: 
      styleContent: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              position:relative;
              
    ↓Directive [ngx.components.UIControlDirective-1662651166867]: 
      directiveName: If
      directiveSource: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:this.item.config.accessibility else ElseBlock_1662651178918
      ↓GenericItem1 [ngx.components.UIDynamicElement-1662651258106]: 
        beanData: '{"ionBean":"GenericItem","Lines":"plain:inset"}'
        isEnabled: false
        tagName: ion-item
        ↓Attr [ngx.components.UIAttribute-1662651258109]: 
          attrName: 
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:no-lines
        ↓Attr1 [ngx.components.UIAttribute-1662651258112]: 
          attrName: '[class.item-label-stacked]'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:true
        ↓Style [ngx.components.UIStyle-1662651258115]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '	&:hover{
                  		cursor:pointer;
                  	}
                  	ion-input:hover{
                  		cursor:pointer;
                  	}
                  background-color: transparent;
                  	.label{
                  		opacity:1 !important;
                  	}
                  	.datetime{
                  		opacity:1 !important;
                  	}
                  	.class1570476475379 {
                  		opacity:1 !important;
                  	}
                  '
        ↓Attr21 [ngx.components.UIAttribute-1662651258118]: 
          attrName: '[ngClass]'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: 'script:this.redList ? ''stylegenerictextred'': ''stylegenerictextnormal'''
        ↓TextInput [ngx.components.UIDynamicElement-1662651258121]: 
          beanData: |
            '{
             "ionBean": "Input",
             "ControlName": "plain:name1657206422909",
             "Debounce": "plain:0",
             "Type": "plain:date",
             "Value": "plain"
            }'
          tagName: ion-input
          ↓Attr [ngx.components.UIAttribute-1662651258124]: 
            attrName: '[(ngModel)]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.model['value']
            isEnabled: false
          ↓Style [ngx.components.UIStyle-1662651258127]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    '/**
                     * Custom properties (sometimes referred to as CSS variables or cascading variables)
                     * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                     * They are set using custom property notation, e.g.: --main-color: black;
                     * and are accessed using the var() function, e.g.: color: var(--main-color);
                     * You can find below your component''s properties you can customize within the page.
                     * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                     * For more informations see https://ionicframework.com/docs/theming.
                    **/
                    //--background	//Background of the input
                    //--color	//Color of the input text
                    //--padding-bottom	//Bottom padding of the input
                    //--padding-end	//Right padding if direction is left-to-right, and left padding if direction is right-to-left of the input
                    //--padding-start	//Left padding if direction is left-to-right, and right padding if direction is right-to-left of the input
                    //--padding-top	//Top padding of the input
                    //--placeholder-color	//Color of the input placeholder text
                    //--placeholder-font-style	//Font style of the input placeholder text
                    //--placeholder-font-weight	//Font weight of the input placeholder text
                    //--placeholder-opacity	//Opacity of the input placeholder text
                    max-width: 120px !important;
                    &:hover{
                    	cursor:pointer;
                    }
                    '
          ↓Attr3 [ngx.components.UIAttribute-1662651258130]: 
            attrName: '[attr.aria-label]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.pageOwner.removeHTML(this.item.config.html)
      ↓UseSharedComponent [ngx.components.UIUseShared-1662976050304]: 
        sharedcomponent: lib_ExtendedComponents_ui_ngx.MobileApplication.Application.materialDatePicker
        ↓model [ngx.components.UIUseVariable-1662976150867]: 
          binding: twoWayBinding
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:this.model['value']
        ↓inputAriaLabel [ngx.components.UIUseVariable-1662983286225]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:this.pageOwner.removeHTML(this.item.config.html)
        ↓buttonAriaLabel [ngx.components.UIUseVariable-1662983286227]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:this.translate.instant('aria-button-calendar')
    ↓Tag [ngx.components.UIElement-1662651178918]: 
      identifier: ElseBlock_1662651178918
      tagName: ng-template
      ↓GenericItem1 [ngx.components.UIDynamicElement-1570476475340]: 
        beanData: '{"ionBean":"GenericItem","Lines":"plain:inset"}'
        tagName: ion-item
        ↓Attr [ngx.components.UIAttribute-1570476475370]: 
          attrName: 
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:no-lines
        ↓Attr1 [ngx.components.UIAttribute-1570476475373]: 
          attrName: '[class.item-label-stacked]'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:true
        ↓Style [ngx.components.UIStyle-1570476475376]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '	&:hover{
                  		cursor:pointer;
                  	}
                  	ion-input:hover{
                  		cursor:pointer;
                  	}
                  background-color: transparent;
                  	.label{
                  		opacity:1 !important;
                  	}
                  	.datetime{
                  		opacity:1 !important;
                  	}
                  	.class1570476475379 {
                  		opacity:1 !important;
                  	}
                  '
        ↓Attr21 [ngx.components.UIAttribute-1570476475430]: 
          attrName: '[ngClass]'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: 'script:this.redList ? ''stylegenerictextred'': ''stylegenerictextnormal'''
        ↓Button [ngx.components.UIDynamicElement-1657209963437]: 
          beanData: |
            '{
             "ionBean": "Button",
             "IonFill": "plain:clear",
             "IonSize": "plain:default",
             "IconSlot": "plain:end"
            }'
          tagName: ion-button
          ↓Event [ngx.components.UIControlEvent-1657209963443]: 
          ↓Icon [ngx.components.UIDynamicElement-1657206781396]: 
            beanData: |
              '{
               "ionBean": "Icon",
               "IconName": "plain:calendar-outline",
               "IconSlot": "plain:icon-only"
              }'
            tagName: ion-icon
            ↓Attr3 [ngx.components.UIAttribute-1662650712187]: 
              attrName: '[attr.aria-label]'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.translate.instant('aria-button-calendar')
          ↓FormatLayout [ngx.components.UIDynamicAttr-1657209915528]: 
            beanData: '{"ionBean":"FormatLayout","FlexItemAlignment":"plain:ion-align-self-center"}'
            selfClose: false
          ↓Attr3 [ngx.components.UIAttribute-1662650609288]: 
            attrName: '[attr.aria-label]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.translate.instant('aria-button-calendar')
          ↓Style [ngx.components.UIStyle-1663765244293]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    '/**
                     * Custom properties (sometimes referred to as CSS variables or cascading variables)
                     * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                     * They are set using custom property notation, e.g.: --main-color: black;
                     * and are accessed using the var() function, e.g.: color: var(--main-color);
                     * You can find below your component''s properties you can customize within the page.
                     * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                     * For more informations see https://ionicframework.com/docs/theming.
                    **/
                    //--background	//Background of the button
                    //--background-activated	//Background of the button when pressed. Note: setting this will interfere with the Material Design ripple
                    //--background-activated-opacity	//Opacity of the button when pressed
                    //--background-focused	//Background of the button when focused with the tab key
                    //--background-focused-opacity	//Opacity of the button when focused with the tab key
                    //--background-hover	//Background of the button on hover
                    //--background-hover-opacity	//Opacity of the background on hover
                    //--border-color	//Border color of the button
                    //--border-radius	//Border radius of the button
                    //--border-style	//Border style of the button
                    //--border-width	//Border width of the button
                    //--box-shadow	//Box shadow of the button
                    --color: var(--ion-color-convertigo);	//Text color of the button
                    //--color-activated	//Text color of the button when pressed
                    //--color-focused	//Text color of the button when focused with the tab key
                    //--color-hover	//Text color of the button when hover
                    //--opacity	//Opacity of the button
                    //--padding-bottom	//Bottom padding of the button
                    //--padding-end	//Right padding if direction is left-to-right, and left padding if direction is right-to-left of the button
                    //--padding-start	//Left padding if direction is left-to-right, and right padding if direction is right-to-left of the button
                    //--padding-top	//Top padding of the button
                    //--ripple-color	//Color of the button ripple effect
                    //--transition	//Transition of the button
                    '
          ↓Attr [ngx.components.UIAttribute-1663834749323]: 
            attrName: '[attr.for]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.item.name
        ↓TextInput [ngx.components.UIDynamicElement-1657206422909]: 
          beanData: |
            '{
             "ionBean": "Input",
             "ControlName": "plain:name1657206422909",
             "Debounce": "plain:0",
             "Placeholder": "script:this.item.config.display_format == ''MM\/DD\/YY'' ? (''MM_DD_YY'' | translate) : this.item.config.display_format == ''DD\/MM\/YY'' ? (''DD_MM_YY'' | translate) : this.item.config.display_format == ''MM\/DD\/YYYY'' ? (''MM_DD_YYYY'' | translate) : this.item.config.display_format == ''DD\/MM\/YYYY'' ? (''DD_MM_YYYY'' | translate) : this.item.config.display_format == ''DDDD MMMM D, YYYY'' ? (''DDDD_MMMM_D__YYYY'' | translate) : this.item.config.display_format == ''DDDD D MMMM YYYY'' ? (''DDDD_D_MMMMM_YYYY'' | translate) :  this.item.config.display_format == ''YYYY\/MM\/DD'' ? (''YYYY_MM_DD'' | translate) : ''''",
             "Readonly": "plain:true",
             "Type": "plain"
            }'
          tagName: ion-input
          ↓Attr [ngx.components.UIAttribute-1657206422912]: 
            attrName: '[ngModel]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.showDisplayValue(this.model['value'])
          ↓Style [ngx.components.UIStyle-1657206907875]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    '/**
                     * Custom properties (sometimes referred to as CSS variables or cascading variables)
                     * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                     * They are set using custom property notation, e.g.: --main-color: black;
                     * and are accessed using the var() function, e.g.: color: var(--main-color);
                     * You can find below your component''s properties you can customize within the page.
                     * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                     * For more informations see https://ionicframework.com/docs/theming.
                    **/
                    //--background	//Background of the input
                    //--color	//Color of the input text
                    //--padding-bottom	//Bottom padding of the input
                    //--padding-end	//Right padding if direction is left-to-right, and left padding if direction is right-to-left of the input
                    //--padding-start	//Left padding if direction is left-to-right, and right padding if direction is right-to-left of the input
                    //--padding-top	//Top padding of the input
                    //--placeholder-color	//Color of the input placeholder text
                    //--placeholder-font-style	//Font style of the input placeholder text
                    //--placeholder-font-weight	//Font weight of the input placeholder text
                    //--placeholder-opacity	//Opacity of the input placeholder text
                    max-width: 120px !important;
                    &:hover{
                    	cursor:pointer;
                    }
                    '
          ↓Attr3 [ngx.components.UIAttribute-1662649709634]: 
            attrName: '[attr.aria-label]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.pageOwner.removeHTML(this.item.config.html)
          ↓Attr4 [ngx.components.UIAttribute-1662649936741]: 
            attrName: '[attr.aria-readonly]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:true
          ↓Attr1 [ngx.components.UIAttribute-1663834722183]: 
            attrName: '[attr.id]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.item.name
        ↓Attr2 [ngx.components.UIAttribute-1658743969605]: 
          attrName: '[id]'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: 'script:''date_'' + (this.disabled ? '''' : this.item.name)'
        ↓Attr5 [ngx.components.UIAttribute-1662650023785]: 
          attrName: role
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:button
    ↓Directive2 [ngx.components.UIControlDirective-1658849888063]: 
      directiveName: If
      directiveSource: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: 'script:this.redList != null ? this.redList[this.item.name] : false'
      ↓UseSharedComponent [ngx.components.UIUseShared-1658849888066]: 
        sharedcomponent: C8Oforms.MobileApplication.Application.labelFieldMustBeFilled
        ↓text [ngx.components.UIUseVariable-1658849888069]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'repMandartory'