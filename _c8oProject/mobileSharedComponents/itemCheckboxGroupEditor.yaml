isEnabled: false
scriptContent: 
  - xmlizable: 
    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
    - com.twinsoft.convertigo.beans.common.FormatedContent: 
      →: |
        /*Begin_c8o_CompImport*/
        /*End_c8o_CompImport*/
        /*Begin_c8o_CompDeclaration*/
        	/*End_c8o_CompDeclaration*/
        /*Begin_c8o_CompConstructor*/
        		/*End_c8o_CompConstructor*/
        /*Begin_c8o_CompInitialization*/
        		/*End_c8o_CompInitialization*/
        /*Begin_c8o_CompFinalization*/
        		/*End_c8o_CompFinalization*/
        /*Begin_c8o_CompFunction*/
        	/*End_c8o_CompFunction*/
        
↓item [ngx.components.UICompVariable-1575900731366]: 
  value: 
↓idselected [ngx.components.UICompVariable-1575900731369]: 
  value: 
↓PageEvent [ngx.components.UIPageEvent-1575900731372]: 
  isEnabled: false
  ↓SetGlobal [ngx.components.UIDynamicAction-1575900731375]: 
    beanData: '{"ionBean":"SetGlobalAction","Value":"script:(arr)=>{\r\n\t\t      for(let elem in arr){\r\n\t\t          if(arr[elem][''selected'']){\r\n\t\t              return arr[elem][''value''];\r\n\t\t          }\r\n\t\t      }  \r\n\t\t    };"}'
↓isChild [ngx.components.UICompVariable-1575900731378]: 
  value: false
↓UseSharedComponent1 [ngx.components.UIUseShared-1623853679826]: 
  sharedcomponent: C8Oforms_NGX.MobileApplication.Application.sharedQuestionElem
  ↓item [ngx.components.UIUseVariable-1623853679829]: 
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:(page as any).pageOwner.item
↓Grid [ngx.components.UIDynamicElement-1588851455252]: 
  beanData: '{"ionBean":"Grid"}'
  tagName: ion-grid
  ↓GridRow [ngx.components.UIDynamicElement-1588851455255]: 
    beanData: '{"ionBean":"GridRow"}'
    tagName: ion-row
    ↓GridCol [ngx.components.UIDynamicElement-1588851455258]: 
      beanData: '{"ionBean":"GridCol","Size":"plain:6"}'
      tagName: ion-col
      ↓GenericItem [ngx.components.UIDynamicElement-1588851455261]: 
        beanData: '{"ionBean":"GenericItem"}'
        tagName: ion-item
        ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138087]: 
          beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-uppercase"}'
          comment: FormatLayout
          tagName: div
        ↓Text [ngx.components.UIText-1588851455267]: 
          i18n: true
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'lines' | translate
        ↓Style [ngx.components.UIStyle-1588851455270]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  'color: #ff8206;
                    font-size: 14px;
                    font-weight: 600;
                    font-style: normal;
                    font-stretch: normal;
                    line-height: normal;
                    letter-spacing: normal;
                  '
        ↓Style1 [ngx.components.UIStyle-1588851455273]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '	.label{
                  		margin-top: 0px !important;	
                  		margin-bottom: 0px !important;	
                  	}
                  '
      ↓RadioList [ngx.components.UIDynamicElement-1588851455276]: 
        beanData: '{"ionBean":"RadioGroup"}'
        tagName: ion-radio-group
        ↓Directive [ngx.components.UIControlDirective-1588851455279]: 
          directiveIndexName: j
          directiveSource: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:let child of (page as any).pageOwner.item.lines
          ↓Item [ngx.components.UIDynamicElement-1588851455282]: 
            beanData: '{"ionBean":"GridRow"}'
            tagName: ion-row
            ↓Attr [ngx.components.UIAttribute-1588851455285]: 
              attrName: id
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:'@prefixc8oitem'+child.name+'@prefixc8otype'+child.type+'c8o_child1'
            ↓Attr2 [ngx.components.UIAttribute-1588851455288]: 
              attrName: '*ngIf'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:!child.other
            ↓GridCol3 [ngx.components.UIDynamicElement-1588851455291]: 
              beanData: '{"ionBean":"GridCol","Size":"plain:12"}'
              tagName: ion-col
              ↓DivCheckbox [ngx.components.UIDynamicElement-1588851455294]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓Style [ngx.components.UIStyle-1588851455297]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          'display: inline-block;
                          padding-left: 16px;
                          '
                ↓GenericItem [ngx.components.UIDynamicElement-1588851455300]: 
                  beanData: '{"ionBean":"GenericItem"}'
                  tagName: ion-item
                  ↓Style [ngx.components.UIStyle-1588851455303]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            '.checkbox{
                            margin-right:4px !important;
                            }
                            '
                  ↓RadioButton1 [ngx.components.UIDynamicElement-1588851455306]: 
                    beanData: '{"ionBean":"RadioButton","Disabled":"plain:true"}'
                    isEnabled: false
                    tagName: ion-radio
                    ↓Attr2 [ngx.components.UIAttribute-1588851455309]: 
                      attrName: value
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:child.value
                      isEnabled: false
                    ↓Attr3 [ngx.components.UIAttribute-1588851455312]: 
                      attrName: checked
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:child.selected
                      isEnabled: false
                    ↓Event [ngx.components.UIControlEvent-1588851455315]: 
                      attrName: (ionSelect)
                      eventName: (ionSelect)
                      isEnabled: false
                      ↓CheckAndRegister [ngx.components.UICustomAction-1588851455318]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                		    let wasSelected  = vars.child.selected;
                                		    for(let elem of vars.item.children){
                                		        elem.selected = false;
                                		    }
                                            vars.child.selected = !wasSelected;
                                            (page as any).pageOwner.updateState();
                                            //;
                                		resolve();
                                
                        ↓item [ngx.components.UIControlVariable-1588851455321]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:(page as any).pageOwner.item
                        ↓child [ngx.components.UIControlVariable-1588851455324]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:child
                  ↓CheckBox [ngx.components.UIDynamicElement-1588851455327]: 
                    beanData: '{"ionBean":"CheckBox","Disabled":"plain:true"}'
                    tagName: ion-checkbox
              ↓DivInputOption [ngx.components.UIDynamicElement-1588851455330]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓Style [ngx.components.UIStyle-1588851455333]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          'display: inline-block;
                          /*
                          .text-input{
                          		margin-top: 0px !important;	
                          		margin-bottom: 4px !important;	
                          	}
                          width:70%;
                          */
                          '
                ↓GenericItem [ngx.components.UIDynamicElement-1588851455336]: 
                  beanData: '{"ionBean":"GenericItem"}'
                  tagName: ion-item
                  ↓Attr2 [ngx.components.UIAttribute-1588851455339]: 
                    attrName: '[ngClass]'
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'stylegenerictexteditor'
                  ↓Style [ngx.components.UIStyle-1588851455342]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            'width: 90%;
                            .label{
                            		margin-top: 0px !important;	
                            		margin-bottom: 0px !important;	
                            	}
                            '
                  ↓TextInput1 [ngx.components.UIDynamicElement-1588851455345]: 
                    beanData: |
                      '{
                       "ionBean": "Input",
                       "Debounce": "plain:0",
                       "Placeholder": "script:page.global[''text'']",
                       "Value": "script:child.value"
                      }'
                    tagName: ion-input
                    ↓Event [ngx.components.UIControlEvent-1588851455348]: 
                      attrName: (change)
                      eventName: onChange
                      ↓PreventFromDuplicateName [ngx.components.UICustomAction-1588851455387]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                		//prevent from duplicate lines names
                                		let cancel = false;
                                		vars.item.lines.forEach((e, index)=>{
                                			if(vars.index != index){
                                				if(e.title == event.srcElement.value){
                                					cancel = true;
                                				}
                                			}
                                		})
                                		if(cancel){
                                			let oldTitle = JSON.parse(JSON.stringify(vars.item.lines[vars.index].title));
                                            vars.item.lines[vars.index].title = oldTitle + " ";
                                			page.ref.detectChanges();
                                			vars.item.lines[vars.index].title = oldTitle;
                                			page.ref.detectChanges();
                                		}
                                		else{
                                			vars.item.lines[vars.index].title = event.srcElement.value;
                                			page.ref.detectChanges(); 
                                		}
                                		resolve(cancel);
                                
                        ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1588851455390]: 
                          beanData: '{"ionBean":"InvokeAction"}'
                          stack: C8Oforms_NGX.MobileApplication.Application.updateState
                        ↓item [ngx.components.UIControlVariable-1588851455393]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:(page as any).pageOwner.item
                        ↓index [ngx.components.UIControlVariable-1588851455396]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:stack.root.scope.j
                        ↓If [ngx.components.UIDynamicAction-1620118021908]: 
                          beanData: '{"ionBean":"IfAction"}'
                          ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1620118032279]: 
                            beanData: '{"ionBean":"InvokeAction"}'
                            stack: C8Oforms_NGX.MobileApplication.Application.showToast
                            ↓msg [ngx.components.UIControlVariable-1620118062298]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:this.translate.instant('line_name_exists')
                            ↓duration [ngx.components.UIControlVariable-1620118062300]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:'6000'
                            ↓position [ngx.components.UIControlVariable-1620118062302]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:'bottom'
                            ↓cssClass [ngx.components.UIControlVariable-1620118062304]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:'toastWarn'
                    ↓Attr [ngx.components.UIAttribute-1588851455399]: 
                      attrName: '[ngModel]'
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:child.title
                    ↓Attr2 [ngx.components.UIAttribute-1588851455402]: 
                      attrName: ondragstart
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:event.preventDefault();event.stopPropagation();
                    ↓Event11 [ngx.components.UIControlEvent-1588851455405]: 
                      attrName: (dragover)
                      eventName: (dragover)
                      ↓refuseDrop [ngx.components.UICustomAction-1588851455408]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                		if(event.dataTransfer.types.includes("__c8oformsdrag")){
                                					event.preventDefault();
                                					//this.recursive(event.target, "before");
                                			}
                                		resolve();
                                
                    ↓Attr3 [ngx.components.UIAttribute-1588851455411]: 
                      attrName: ondragover
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:event.preventDefault()
                    ↓Attr31 [ngx.components.UIAttribute-1588851455414]: 
                      attrName: ondrop
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:event.preventDefault()
                    ↓Attr11 [ngx.components.UIAttribute-1602089583553]: 
                      attrName: '[attr.draggable]'
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:false
                    ↓Event11132 [ngx.components.UIControlEvent-1602176366053]: 
                      attrName: (mouseenter)
                      eventName: (mouseenter)
                      ↓cantDrag [ngx.components.UICustomAction-1602176366056]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                	    page.local.canDrag = "false";
                                		page.tick();
                                //		console.log('MOUSEENTER !!');
                                		resolve();
                                
                    ↓Event111311 [ngx.components.UIControlEvent-1602176366059]: 
                      attrName: (mouseleave)
                      eventName: (mouseleave)
                      ↓canDrag [ngx.components.UICustomAction-1602176366062]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                	    page.local.canDrag = "true";
                                		page.tick();
                                //		console.log('MOUSELEAVE !!');
                                		resolve();
                                
              ↓DivDelete [ngx.components.UIDynamicElement-1588851455417]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓Style [ngx.components.UIStyle-1588851455420]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          'display: inline-block;
                          .label{
                          margin-bottom:9px;
                          }
                          /*
                          .text-input{
                          		margin-top: 0px !important;	
                          		margin-bottom: 4px !important;	
                          	}
                          width:70%;
                          */
                          '
                ↓GenericItem [ngx.components.UIDynamicElement-1588851455423]: 
                  beanData: '{"ionBean":"GenericItem"}'
                  tagName: ion-item
                  ↓DeleteButton [ngx.components.UIDynamicElement-1588851455426]: 
                    beanData: '{"ionBean":"Button","IonColor":"plain:btLight"}'
                    tagName: ion-button
                    ↓Tag [ngx.components.UIElement-1588851455429]: 
                      tagName: i
                      ↓Attr [ngx.components.UIAttribute-1588851455432]: 
                        attrName: class
                        attrValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: plain:fa fa-trash-o fa-lg
                      ↓Attr1 [ngx.components.UIAttribute-1588851455435]: 
                        attrName: aria-hidden
                        attrValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: plain:true
                    ↓Event [ngx.components.UIControlEvent-1588851455438]: 
                      ↓CustomAction [ngx.components.UICustomAction-1588851455441]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                		vars.item.lines.splice(vars.j, 1);
                                		(page as any).pageOwner.updateState();
                                		;
                                		resolve();
                                
                        ↓item [ngx.components.UIControlVariable-1588851455444]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:(page as any).pageOwner.item
                        ↓j [ngx.components.UIControlVariable-1588851455447]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:j
                    ↓Style [ngx.components.UIStyle-1588851455450]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              'margin-bottom: 0px !important;
                              '
        ↓ItemAddOptions [ngx.components.UIDynamicElement-1588851455453]: 
          beanData: '{"ionBean":"GridRow"}'
          tagName: ion-row
          ↓GridCol [ngx.components.UIDynamicElement-1588851455456]: 
            beanData: '{"ionBean":"GridCol"}'
            tagName: ion-col
            ↓GenericItem1 [ngx.components.UIDynamicElement-1588851455459]: 
              beanData: '{"ionBean":"GenericItem"}'
              tagName: ion-item
              ↓Style [ngx.components.UIStyle-1588851455462]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '	cursor: pointer;
                        .label{
                        		margin-top: 0px !important;	
                        		margin-bottom: 0px !important;	
                        	}
                        '
              ↓Div [ngx.components.UIDynamicElement-1588851455465]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓Text [ngx.components.UIText-1588851455468]: 
                  i18n: true
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:'addLine'|translate
                ↓Style [ngx.components.UIStyle-1588851455471]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          'color: var(--ion-color-primary);
                          display: inline-block;
                          '
                ↓Event [ngx.components.UIControlEvent-1588851455474]: 
                  ↓AddOption [ngx.components.UICustomAction-1588851455477]: 
                    actionValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            		    let localNumbers = [];
                            	        let defaultLabel = "Line";
                            	        (page as any).pageOwner.getlocalNumbersSorted(vars.item, localNumbers, defaultLabel, "lines", "title");
                            	        let val = page["getNextValueDispo"](localNumbers);
                                        vars.item['lines'].push({"title":defaultLabel+ " " +val, "value":[],"id":(Math.random() + "").substring(2)});
                                        (page as any).pageOwner.updateState();
                                        ;
                                		resolve();
                            
                    ↓item [ngx.components.UIControlVariable-1588851455480]: 
                      varValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:(page as any).pageOwner.item
            ↓Style [ngx.components.UIStyle-1588851455483]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '	cursor: pointer;
                      	display: inline-block;
                      '
          ↓Style1 [ngx.components.UIStyle-1588851455486]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    'margin-left: 48px;
                    '
        ↓Tag2 [ngx.components.UIElement-1588851455489]: 
          selfClose: true
          tagName: br
    ↓GridCol1 [ngx.components.UIDynamicElement-1588851455492]: 
      beanData: '{"ionBean":"GridCol","Size":"plain:6"}'
      tagName: ion-col
      ↓GenericItem [ngx.components.UIDynamicElement-1588851455495]: 
        beanData: '{"ionBean":"GenericItem"}'
        tagName: ion-item
        ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138100]: 
          beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-uppercase"}'
          comment: FormatLayout
          tagName: div
        ↓Text [ngx.components.UIText-1588851455501]: 
          i18n: true
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'column' | translate
        ↓Style [ngx.components.UIStyle-1588851455504]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  'color: #ff8206;
                    font-size: 14px;
                    font-weight: 600;
                    font-style: normal;
                    font-stretch: normal;
                    line-height: normal;
                    letter-spacing: normal;
                  '
        ↓Style1 [ngx.components.UIStyle-1588851455507]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '	.label{
                  		margin-top: 0px !important;	
                  		margin-bottom: 0px !important;	
                  	}
                  '
      ↓RadioList [ngx.components.UIDynamicElement-1588851455510]: 
        beanData: '{"ionBean":"RadioGroup"}'
        tagName: ion-radio-group
        ↓Directive [ngx.components.UIControlDirective-1588851455513]: 
          directiveExpression: let j = index
          directiveSource: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:let child of (page as any).pageOwner.item.children
          ↓Item [ngx.components.UIDynamicElement-1588851455516]: 
            beanData: '{"ionBean":"GridRow"}'
            tagName: ion-row
            ↓Attr [ngx.components.UIAttribute-1588851455519]: 
              attrName: id
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:'@prefixc8oitem'+child.name+'@prefixc8otype'+child.type+'c8o_child1'
            ↓Attr2 [ngx.components.UIAttribute-1588851455522]: 
              attrName: '*ngIf'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:!child.other
            ↓GridCol3 [ngx.components.UIDynamicElement-1588851455525]: 
              beanData: '{"ionBean":"GridCol","Size":"plain:12"}'
              tagName: ion-col
              ↓DivCheckbox [ngx.components.UIDynamicElement-1588851455528]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓Style [ngx.components.UIStyle-1588851455531]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          'display: inline-block;
                          padding-left: 16px;
                          '
                ↓GenericItem [ngx.components.UIDynamicElement-1588851455534]: 
                  beanData: '{"ionBean":"GenericItem"}'
                  tagName: ion-item
                  ↓Style [ngx.components.UIStyle-1588851455537]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            '.checkbox{
                            margin-right:4px !important;
                            }
                            '
                  ↓RadioButton1 [ngx.components.UIDynamicElement-1588851455540]: 
                    beanData: '{"ionBean":"RadioButton","Disabled":"plain:true"}'
                    isEnabled: false
                    tagName: ion-radio
                  ↓CheckBox [ngx.components.UIDynamicElement-1588851455543]: 
                    beanData: '{"ionBean":"CheckBox","Disabled":"plain:true"}'
                    tagName: ion-checkbox
              ↓DivInputOption [ngx.components.UIDynamicElement-1588851455546]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓Style [ngx.components.UIStyle-1588851455549]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          'display: inline-block;
                          /*
                          .text-input{
                          		margin-top: 0px !important;	
                          		margin-bottom: 4px !important;	
                          	}
                          width:70%;
                          */
                          '
                ↓GenericItem [ngx.components.UIDynamicElement-1588851455552]: 
                  beanData: '{"ionBean":"GenericItem"}'
                  tagName: ion-item
                  ↓Attr2 [ngx.components.UIAttribute-1588851455555]: 
                    attrName: '[ngClass]'
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'stylegenerictexteditor'
                  ↓Style [ngx.components.UIStyle-1588851455558]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            'width: 90%;
                            .label{
                            		margin-top: 0px !important;	
                            		margin-bottom: 0px !important;	
                            	}
                            '
                  ↓TextInput1 [ngx.components.UIDynamicElement-1588851455561]: 
                    beanData: |
                      '{
                       "ionBean": "Input",
                       "Debounce": "plain:0",
                       "Placeholder": "script:page.global[''text'']",
                       "Value": "script:child.value"
                      }'
                    tagName: ion-input
                    ↓Event [ngx.components.UIControlEvent-1588851455564]: 
                      attrName: (change)
                      eventName: onChange
                      ↓CheckAndRegister [ngx.components.UICustomAction-1588851455567]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                		    this.checkNotEmptyAndNameNotExists(event,vars,"nameAlreadyexits");
                                		resolve();
                                
                        isEnabled: false
                        ↓item [ngx.components.UIControlVariable-1588851455570]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:item
                        ↓child [ngx.components.UIControlVariable-1588851455573]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:child
                      ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1588851455576]: 
                        beanData: '{"ionBean":"InvokeAction"}'
                        isEnabled: false
                        stack: C8Oforms_NGX.MobileApplication.Application.checkAndRegister
                        ↓noCondition [ngx.components.UIControlVariable-1588851455579]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:false
                        ↓path [ngx.components.UIControlVariable-1588851455582]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:'obj.value'
                        ↓obj [ngx.components.UIControlVariable-1588851455585]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:(page as any).pageOwner.item
                        ↓allowDuplicate [ngx.components.UIControlVariable-1588851455588]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:false
                        ↓path2 [ngx.components.UIControlVariable-1588851455591]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:'obj2.value'
                        ↓obj2 [ngx.components.UIControlVariable-1588851455594]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:child
                        ↓isNumber [ngx.components.UIControlVariable-1588851455597]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:false
                        ↓isSlider [ngx.components.UIControlVariable-1588851455600]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:false
                      ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1588851455603]: 
                        beanData: '{"ionBean":"InvokeAction"}'
                        stack: C8Oforms_NGX.MobileApplication.Application.updateState
                    ↓Attr [ngx.components.UIAttribute-1588851455606]: 
                      attrName: '[(ngModel)]'
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:child.value
                    ↓Attr2 [ngx.components.UIAttribute-1588851455609]: 
                      attrName: ondragstart
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:event.preventDefault();event.stopPropagation();
                    ↓Event11 [ngx.components.UIControlEvent-1588851455612]: 
                      attrName: (dragover)
                      eventName: (dragover)
                      ↓refuseDrop [ngx.components.UICustomAction-1588851455615]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                		if(event.dataTransfer.types.includes("__c8oformsdrag")){
                                					event.preventDefault();
                                					//this.recursive(event.target, "before");
                                			}
                                		resolve();
                                
                    ↓Attr3 [ngx.components.UIAttribute-1588851455618]: 
                      attrName: ondragover
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:event.preventDefault()
                    ↓Attr31 [ngx.components.UIAttribute-1588851455621]: 
                      attrName: ondrop
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:event.preventDefault()
                    ↓Attr11 [ngx.components.UIAttribute-1602089594230]: 
                      attrName: '[attr.draggable]'
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:false
                    ↓Event11132 [ngx.components.UIControlEvent-1602176379016]: 
                      attrName: (mouseenter)
                      eventName: (mouseenter)
                      ↓cantDrag [ngx.components.UICustomAction-1602176379019]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                	    page.local.canDrag = "false";
                                		page.tick();
                                //		console.log('MOUSEENTER !!');
                                		resolve();
                                
                    ↓Event111311 [ngx.components.UIControlEvent-1602176379022]: 
                      attrName: (mouseleave)
                      eventName: (mouseleave)
                      ↓canDrag [ngx.components.UICustomAction-1602176379025]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                	    page.local.canDrag = "true";
                                		page.tick();
                                //		console.log('MOUSELEAVE !!');
                                		resolve();
                                
              ↓DivDelete [ngx.components.UIDynamicElement-1588851455624]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓Style [ngx.components.UIStyle-1588851455627]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          'display: inline-block;
                          .label{
                          margin-bottom:9px;
                          }
                          /*
                          .text-input{
                          		margin-top: 0px !important;	
                          		margin-bottom: 4px !important;	
                          	}
                          width:70%;
                          */
                          '
                ↓GenericItem [ngx.components.UIDynamicElement-1588851455630]: 
                  beanData: '{"ionBean":"GenericItem"}'
                  tagName: ion-item
                  ↓DeleteButton [ngx.components.UIDynamicElement-1588851455633]: 
                    beanData: '{"ionBean":"Button","IonColor":"plain:btLight"}'
                    tagName: ion-button
                    ↓Tag [ngx.components.UIElement-1588851455636]: 
                      tagName: i
                      ↓Attr [ngx.components.UIAttribute-1588851455639]: 
                        attrName: class
                        attrValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: plain:fa fa-trash-o fa-lg
                      ↓Attr1 [ngx.components.UIAttribute-1588851455642]: 
                        attrName: aria-hidden
                        attrValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: plain:true
                    ↓Event [ngx.components.UIControlEvent-1588851455645]: 
                      ↓CustomAction [ngx.components.UICustomAction-1588851455648]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                		vars.item.children.splice(vars.j, 1);
                                		(page as any).pageOwner.updateState();
                                		page["tick"]();
                                		resolve();
                                
                        ↓item [ngx.components.UIControlVariable-1588851455651]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:(page as any).pageOwner.item
                        ↓j [ngx.components.UIControlVariable-1588851455654]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:j
                    ↓Style [ngx.components.UIStyle-1588851455657]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              'margin-bottom: 0px !important;
                              '
        ↓ItemAddOptions [ngx.components.UIDynamicElement-1588851455660]: 
          beanData: '{"ionBean":"GridRow"}'
          tagName: ion-row
          ↓GridCol [ngx.components.UIDynamicElement-1588851455663]: 
            beanData: '{"ionBean":"GridCol"}'
            tagName: ion-col
            ↓GenericItem1 [ngx.components.UIDynamicElement-1588851455666]: 
              beanData: '{"ionBean":"GenericItem"}'
              tagName: ion-item
              ↓Style [ngx.components.UIStyle-1588851455669]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '	cursor: pointer;
                        .label{
                        		margin-top: 0px !important;	
                        		margin-bottom: 0px !important;	
                        	}
                        '
              ↓Div [ngx.components.UIDynamicElement-1588851455672]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓Text [ngx.components.UIText-1588851455675]: 
                  i18n: true
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:'addColumn'|translate
                ↓Style [ngx.components.UIStyle-1588851455678]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          'color: var(--ion-color-primary);
                          display: inline-block;
                          '
                ↓Event [ngx.components.UIControlEvent-1588851455681]: 
                  ↓AddOption [ngx.components.UICustomAction-1588851455684]: 
                    actionValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            		    let localNumbers = [];
                            	        let defaultLabel = "Option";
                            	        (page as any).pageOwner.getlocalNumbersSorted(vars.item, localNumbers, defaultLabel);
                            	        let val = (page as any).pageOwner.getNextValueDispo(localNumbers);
                                        vars.item['children'].push({"value":defaultLabel+ " " +val, "selected":false, "id":(Math.random() + "").substring(2)});
                                        (page as any).pageOwner.updateState();
                                        ;
                                		resolve();
                            
                    ↓item [ngx.components.UIControlVariable-1588851455687]: 
                      varValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:(page as any).pageOwner.item
              ↓Div1 [ngx.components.UIDynamicElement-1588851455690]: 
                beanData: '{"ionBean":"DivTag"}'
                isEnabled: false
                tagName: div
                ↓Text [ngx.components.UIText-1588851455693]: 
                  i18n: true
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:'or'|translate
                ↓Style [ngx.components.UIStyle-1588851455696]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          'display: inline-block;
                          '
              ↓Div2 [ngx.components.UIDynamicElement-1588851455699]: 
                beanData: '{"ionBean":"DivTag"}'
                isEnabled: false
                tagName: div
                ↓Text [ngx.components.UIText-1588851455702]: 
                  i18n: true
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:'addother'|translate
                ↓Style [ngx.components.UIStyle-1588851455705]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          'color: var(--ion-color-primary);
                          display: inline-block;
                          '
                ↓Event [ngx.components.UIControlEvent-1588851455708]: 
                  ↓AddOther [ngx.components.UICustomAction-1588851455711]: 
                    actionValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            '        let localNumbers = [];
                                    let defualtLabel = "Checkbox";
                                    (page as any).pageOwner.getlocalNumbersSorted(vars.item, localNumbers, defualtLabel);
                            		let val = (page as any).pageOwner.getNextValueDispo(localNumbers);
                                    vars.item[''children''].push({"value":"", "selected":false,"label_color":"primary","position": ''unset'', "other": true});
                                    (page as any).pageOwner.updateState();
                                    ;
                            		resolve();
                            '
                    ↓item [ngx.components.UIControlVariable-1588851455714]: 
                      varValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:(page as any).pageOwner.item
            ↓Style [ngx.components.UIStyle-1588851455717]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '	cursor: pointer;
                      	display: inline-block;
                      '
          ↓Style1 [ngx.components.UIStyle-1588851455720]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    'margin-left: 48px;
                    '
        ↓Tag2 [ngx.components.UIElement-1588851455723]: 
          selfClose: true
          tagName: br
↓Directive1 [ngx.components.UIControlDirective-1623853737889]: 
  directiveName: If
  directiveSource: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
      - MobileSmartSourceType: script:(page as any).pageOwner.local.advancedEditing
  ↓GridRow2 [ngx.components.UIDynamicElement-1588851455726]: 
    beanData: '{"ionBean":"GridRow"}'
    tagName: ion-row
    ↓GenericItem [ngx.components.UIDynamicElement-1588851455729]: 
      beanData: '{"ionBean":"GenericItem"}'
      tagName: ion-item
      ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138111]: 
        beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-uppercase"}'
        comment: FormatLayout
        tagName: div
      ↓Style [ngx.components.UIStyle-1588851455735]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                'color: #ff8206;
                  font-size: 14px;
                  font-weight: 600;
                  font-style: normal;
                  font-stretch: normal;
                  line-height: normal;
                  letter-spacing: normal;
                '
      ↓Text1 [ngx.components.UIText-1588851455738]: 
        i18n: true
        textValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:option
      ↓Style1 [ngx.components.UIStyle-1588851455741]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '	.label{
                		margin-top: 0px !important;	
                		margin-bottom: 0px !important;	
                	}
                '
  ↓GridRow11 [ngx.components.UIDynamicElement-1588851455744]: 
    beanData: '{"ionBean":"GridRow"}'
    tagName: ion-row
    ↓GridCol [ngx.components.UIDynamicElement-1588851455747]: 
      beanData: '{"ionBean":"GridCol"}'
      tagName: ion-col
      ↓GenericItem [ngx.components.UIDynamicElement-1588851455750]: 
        beanData: '{"ionBean":"GenericItem"}'
        tagName: ion-item
        ↓Label [ngx.components.UIDynamicElement-1588851455753]: 
          beanData: '{"ionBean":"Label"}'
          tagName: ion-label
          ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138113]: 
            beanData: '{"ionBean":"FormatLayout"}'
            comment: FormatLayout
            tagName: div
          ↓Text [ngx.components.UIText-1588851455759]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:'mandatory_by_line' | translate
        ↓ToggleButton [ngx.components.UIDynamicElement-1588851455762]: 
          beanData: '{"ionBean":"Toggle"}'
          tagName: ion-toggle
          ↓Attr [ngx.components.UIAttribute-1588851455765]: 
            attrName: '[(ngModel)]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:(page as any).pageOwner.item.config.mandatory
          ↓Event [ngx.components.UIControlEvent-1588851455768]: 
            attrName: (ionChange)
            eventName: (ionChange)
            ↓triggerSave [ngx.components.UICustomAction-1588851455771]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      		//vars.item.config.mandatory = !vars.item["config"]["mandatory"];
                      		(page as any).pageOwner.updateState();
                      		;
                      		resolve();
                      
              isEnabled: false
            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1588851455774]: 
              beanData: '{"ionBean":"InvokeAction"}'
              stack: C8Oforms_NGX.MobileApplication.Application.updateState
              ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1588851455777]: 
                beanData: '{"ionBean":"InvokeAction"}'
                stack: C8Oforms_NGX.MobileApplication.Application.tick
          ↓Attr1 [ngx.components.UIAttribute-1588851455780]: 
            attrName: 
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:item-left
    ↓GridCol1 [ngx.components.UIDynamicElement-1588851455783]: 
      beanData: '{"ionBean":"GridCol"}'
      tagName: ion-col
      ↓GenericItem [ngx.components.UIDynamicElement-1588851455786]: 
        beanData: '{"ionBean":"GenericItem"}'
        tagName: ion-item
        ↓Label [ngx.components.UIDynamicElement-1588851455789]: 
          beanData: '{"ionBean":"Label"}'
          tagName: ion-label
          ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138115]: 
            beanData: '{"ionBean":"FormatLayout"}'
            comment: FormatLayout
            tagName: div
          ↓Text [ngx.components.UIText-1588851455795]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:'limit_one_response_column' | translate
        ↓ToggleButton [ngx.components.UIDynamicElement-1588851455798]: 
          beanData: '{"ionBean":"Toggle"}'
          tagName: ion-toggle
          ↓Attr [ngx.components.UIAttribute-1588851455801]: 
            attrName: '[(ngModel)]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:(page as any).pageOwner.item.config.different
          ↓Event [ngx.components.UIControlEvent-1588851455804]: 
            attrName: (ionChange)
            eventName: (ionChange)
            ↓triggerSave [ngx.components.UICustomAction-1588851455807]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      		//vars.item.config.mandatory = !vars.item["config"]["mandatory"];
                      		(page as any).pageOwner.updateState();
                      		;
                      		resolve();
                      
              isEnabled: false
            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1588851455810]: 
              beanData: '{"ionBean":"InvokeAction"}'
              stack: C8Oforms_NGX.MobileApplication.Application.updateState
              ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1588851455813]: 
                beanData: '{"ionBean":"InvokeAction"}'
                stack: C8Oforms_NGX.MobileApplication.Application.tick
          ↓Attr1 [ngx.components.UIAttribute-1588851455816]: 
            attrName: 
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:item-left