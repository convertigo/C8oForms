scriptContent: 
  - xmlizable: 
    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
    - com.twinsoft.convertigo.beans.common.FormatedContent: 
      →: |
        /*Begin_c8o_CompImport*/
        /*End_c8o_CompImport*/
        /*Begin_c8o_CompDeclaration*/
        	/*End_c8o_CompDeclaration*/
        /*Begin_c8o_CompConstructor*/
        		/*End_c8o_CompConstructor*/
        /*Begin_c8o_CompInitialization*/
        		/*End_c8o_CompInitialization*/
        /*Begin_c8o_CompFinalization*/
        		/*End_c8o_CompFinalization*/
        /*Begin_c8o_CompFunction*/
        	/*End_c8o_CompFunction*/
        
↓item [ngx.components.UICompVariable-1575900731366]: 
  value: 
↓idselected [ngx.components.UICompVariable-1575900731369]: 
  value: 
↓PageEvent [ngx.components.UIPageEvent-1575900731372]: 
  isEnabled: false
  ↓SetGlobal [ngx.components.UIDynamicAction-1575900731375]: 
    beanData: '{"ionBean":"SetGlobalAction","Value":"script:(arr)=>{\r\n\t\t      for(let elem in arr){\r\n\t\t          if(arr[elem][''selected'']){\r\n\t\t              return arr[elem][''value''];\r\n\t\t          }\r\n\t\t      }  \r\n\t\t    };"}'
↓isChild [ngx.components.UICompVariable-1575900731378]: 
  value: false
↓UseSharedComponent1 [ngx.components.UIUseShared-1623853679826]: 
  sharedcomponent: C8Oforms_NGX.MobileApplication.Application.sharedQuestionElem
  ↓item [ngx.components.UIUseVariable-1623853679829]: 
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:this.item
↓Grid [ngx.components.UIDynamicElement-1588851455252]: 
  beanData: '{"ionBean":"Grid"}'
  tagName: ion-grid
  ↓GridRow [ngx.components.UIDynamicElement-1588851455255]: 
    beanData: '{"ionBean":"GridRow"}'
    tagName: ion-row
    ↓GridCol [ngx.components.UIDynamicElement-1588851455258]: 
      beanData: '{"ionBean":"GridCol","Size":"plain:6"}'
      tagName: ion-col
      ↓Grid [ngx.components.UIDynamicElement-1646167128934]: 
        beanData: '{"ionBean":"Grid","Height":"plain:unset"}'
        tagName: ion-grid
        ↓GridRow [ngx.components.UIDynamicElement-1646167142159]: 
          beanData: '{"ionBean":"GridRow","Height":"plain:unset"}'
          tagName: ion-row
          ↓GridCol [ngx.components.UIDynamicElement-1646167198229]: 
            beanData: '{"ionBean":"GridCol","Size":"plain:12"}'
            tagName: ion-col
            ↓GenericItem [ngx.components.UIDynamicElement-1588851455261]: 
              beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
              tagName: ion-item
              ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138087]: 
                beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-uppercase"}'
                comment: FormatLayout
                tagName: div
              ↓Text [ngx.components.UIText-1588851455267]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:'lines' | translate
              ↓Style [ngx.components.UIStyle-1588851455270]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        'color: #ff8206;
                          font-size: 14px;
                          font-weight: 600;
                          font-style: normal;
                          font-stretch: normal;
                          line-height: normal;
                          letter-spacing: normal;
                        '
              ↓Style1 [ngx.components.UIStyle-1588851455273]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '	.label{
                        		margin-top: 0px !important;	
                        		margin-bottom: 0px !important;	
                        	}
                        '
          ↓GridCol1 [ngx.components.UIDynamicElement-1646167494542]: 
            beanData: '{"ionBean":"GridCol","Size":"plain:12"}'
            tagName: ion-col
            ↓RadioList [ngx.components.UIDynamicElement-1588851455276]: 
              beanData: '{"ionBean":"RadioGroup"}'
              tagName: ion-radio-group
              ↓Directive [ngx.components.UIControlDirective-1588851455279]: 
                directiveIndexName: j
                directiveItemName: child
                directiveSource: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.item.lines
                ↓Div [ngx.components.UIDynamicElement-1646167519706]: 
                  beanData: '{"ionBean":"DivTag"}'
                  tagName: div
                  ↓Attr [ngx.components.UIAttribute-1646167529721]: 
                    attrName: id
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'@prefixc8oitem'+child.name+'@prefixc8otype'+child.type+'c8o_child1'
                  ↓Attr2 [ngx.components.UIAttribute-1646167529724]: 
                    attrName: '*ngIf'
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:!child.other
                  ↓DivCheckbox [ngx.components.UIDynamicElement-1588851455294]: 
                    beanData: '{"ionBean":"DivTag"}'
                    tagName: div
                    ↓Style [ngx.components.UIStyle-1588851455297]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              'display: inline-block;
                              padding-left: 16px;
                              '
                    ↓GenericItem [ngx.components.UIDynamicElement-1588851455300]: 
                      beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                      tagName: ion-item
                      ↓Style [ngx.components.UIStyle-1588851455303]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '.checkbox{
                                margin-right:4px !important;
                                }
                                '
                      ↓RadioButton1 [ngx.components.UIDynamicElement-1588851455306]: 
                        beanData: '{"ionBean":"RadioButton","Disabled":"plain:true"}'
                        isEnabled: false
                        tagName: ion-radio
                        ↓Attr2 [ngx.components.UIAttribute-1588851455309]: 
                          attrName: value
                          attrValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:child.value
                          isEnabled: false
                        ↓Attr3 [ngx.components.UIAttribute-1588851455312]: 
                          attrName: checked
                          attrValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:child.selected
                          isEnabled: false
                        ↓Event [ngx.components.UIControlEvent-1588851455315]: 
                          attrName: (ionSelect)
                          eventName: (ionSelect)
                          isEnabled: false
                          ↓CheckAndRegister [ngx.components.UICustomAction-1588851455318]: 
                            actionValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    		    let wasSelected  = vars.child.selected;
                                    		    for(let elem of vars.item.children){
                                    		        elem.selected = false;
                                    		    }
                                                vars.child.selected = !wasSelected;
                                                page.pageOwner.updateState();
                                                //;
                                    		resolve();
                                    
                            ↓item [ngx.components.UIControlVariable-1588851455321]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:this.item
                            ↓child [ngx.components.UIControlVariable-1588851455324]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:child
                      ↓CheckBox [ngx.components.UIDynamicElement-1588851455327]: 
                        beanData: '{"ionBean":"CheckBox","Disabled":"plain:true"}'
                        tagName: ion-checkbox
                  ↓DivInputOption [ngx.components.UIDynamicElement-1588851455330]: 
                    beanData: '{"ionBean":"DivTag"}'
                    tagName: div
                    ↓Style [ngx.components.UIStyle-1588851455333]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              'display: inline-block;
                              /*
                              .text-input{
                              		margin-top: 0px !important;	
                              		margin-bottom: 4px !important;	
                              	}
                              width:70%;
                              */
                              '
                    ↓GenericItem [ngx.components.UIDynamicElement-1588851455336]: 
                      beanData: '{"ionBean":"GenericItem"}'
                      tagName: ion-item
                      ↓Attr2 [ngx.components.UIAttribute-1588851455339]: 
                        attrName: '[ngClass]'
                        attrValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:'stylegenerictexteditor'
                      ↓Style [ngx.components.UIStyle-1588851455342]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                'width: 90%;
                                .label{
                                		margin-top: 0px !important;	
                                		margin-bottom: 0px !important;	
                                	}
                                '
                      ↓TextInput1 [ngx.components.UIDynamicElement-1588851455345]: 
                        beanData: |
                          '{
                           "ionBean": "Input",
                           "Debounce": "plain:0",
                           "Placeholder": "script:this.global[''text'']",
                           "Value": "script:child.value"
                          }'
                        tagName: ion-input
                        ↓Event [ngx.components.UIControlEvent-1588851455348]: 
                          attrName: (change)
                          eventName: onChange
                          ↓PreventFromDuplicateName [ngx.components.UICustomAction-1588851455387]: 
                            actionValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    		//prevent from duplicate lines names
                                    		let cancel = false;
                                    		vars.item.lines.forEach((e, index)=>{
                                    			if(vars.index != index){
                                    				if(e.title == event.srcElement.value){
                                    					cancel = true;
                                    				}
                                    			}
                                    		})
                                    		if(cancel){
                                    			let oldTitle = JSON.parse(JSON.stringify(vars.item.lines[vars.index].title));
                                                vars.item.lines[vars.index].title = oldTitle + " ";
                                    			page.ref.detectChanges();
                                    			vars.item.lines[vars.index].title = oldTitle;
                                    			page.ref.detectChanges();
                                    		}
                                    		else{
                                    			vars.item.lines[vars.index].title = event.srcElement.value;
                                    			page.ref.detectChanges(); 
                                    		}
                                    		resolve(cancel);
                                    
                            ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1588851455390]: 
                              beanData: '{"ionBean":"InvokeAction"}'
                              stack: C8Oforms_NGX.MobileApplication.Application.updateState
                            ↓item [ngx.components.UIControlVariable-1588851455393]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:this.item
                            ↓index [ngx.components.UIControlVariable-1588851455396]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:stack.root.scope.j
                            ↓If [ngx.components.UIDynamicAction-1620118021908]: 
                              beanData: '{"ionBean":"IfAction"}'
                              ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1620118032279]: 
                                beanData: '{"ionBean":"InvokeAction"}'
                                stack: C8Oforms_NGX.MobileApplication.Application.showToast
                                ↓msg [ngx.components.UIControlVariable-1620118062298]: 
                                  varValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                      - MobileSmartSourceType: script:this.translate.instant('line_name_exists')
                                ↓duration [ngx.components.UIControlVariable-1620118062300]: 
                                  varValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                      - MobileSmartSourceType: script:'6000'
                                ↓position [ngx.components.UIControlVariable-1620118062302]: 
                                  varValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                      - MobileSmartSourceType: script:'bottom'
                                ↓cssClass [ngx.components.UIControlVariable-1620118062304]: 
                                  varValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                      - MobileSmartSourceType: script:'toastWarn'
                        ↓Attr [ngx.components.UIAttribute-1588851455399]: 
                          attrName: '[ngModel]'
                          attrValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:child.title
                        ↓Attr2 [ngx.components.UIAttribute-1588851455402]: 
                          attrName: ondragstart
                          attrValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: plain:event.preventDefault();event.stopPropagation();
                        ↓Event11 [ngx.components.UIControlEvent-1588851455405]: 
                          attrName: (dragover)
                          eventName: (dragover)
                          ↓refuseDrop [ngx.components.UICustomAction-1588851455408]: 
                            actionValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    		if(event.dataTransfer.types.includes("__c8oformsdrag")){
                                    					event.preventDefault();
                                    					//this.recursive(event.target, "before");
                                    			}
                                    		resolve();
                                    
                        ↓Attr3 [ngx.components.UIAttribute-1588851455411]: 
                          attrName: ondragover
                          attrValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: plain:event.preventDefault()
                        ↓Attr31 [ngx.components.UIAttribute-1588851455414]: 
                          attrName: ondrop
                          attrValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: plain:event.preventDefault()
                        ↓Attr11 [ngx.components.UIAttribute-1602089583553]: 
                          attrName: '[attr.draggable]'
                          attrValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: plain:false
                        ↓Event11132 [ngx.components.UIControlEvent-1602176366053]: 
                          attrName: (mouseenter)
                          eventName: (mouseenter)
                          ↓cantDrag [ngx.components.UICustomAction-1602176366056]: 
                            actionValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    	    page.local.canDrag = "false";
                                    		page.tick();
                                    //		console.log('MOUSEENTER !!');
                                    		resolve();
                                    
                        ↓Event111311 [ngx.components.UIControlEvent-1602176366059]: 
                          attrName: (mouseleave)
                          eventName: (mouseleave)
                          ↓canDrag [ngx.components.UICustomAction-1602176366062]: 
                            actionValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    	    page.local.canDrag = "true";
                                    		page.tick();
                                    //		console.log('MOUSELEAVE !!');
                                    		resolve();
                                    
                  ↓DivDelete [ngx.components.UIDynamicElement-1588851455417]: 
                    beanData: '{"ionBean":"DivTag"}'
                    tagName: div
                    ↓Style [ngx.components.UIStyle-1588851455420]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              'display: inline-block;
                              .label{
                              margin-bottom:9px;
                              }
                              /*
                              .text-input{
                              		margin-top: 0px !important;	
                              		margin-bottom: 4px !important;	
                              	}
                              width:70%;
                              */
                              '
                    ↓GenericItem [ngx.components.UIDynamicElement-1588851455423]: 
                      beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                      tagName: ion-item
                      ↓DeleteButton [ngx.components.UIDynamicElement-1588851455426]: 
                        beanData: |
                          '{
                           "ionBean": "Button",
                           "IonColor": "plain:btLight",
                           "IonFill": "plain:clear"
                          }'
                        tagName: ion-button
                        ↓Event [ngx.components.UIControlEvent-1588851455438]: 
                          ↓CustomAction [ngx.components.UICustomAction-1588851455441]: 
                            actionValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    		vars.item.lines.splice(vars.j, 1);
                                    		page.pageOwner.updateState();
                                    		resolve();
                                    
                            ↓item [ngx.components.UIControlVariable-1588851455444]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:this.item
                            ↓j [ngx.components.UIControlVariable-1588851455447]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:j
                        ↓Style [ngx.components.UIStyle-1588851455450]: 
                          styleContent: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  'margin-bottom: 0px !important;
                                  ion-icon{
                                  	color:var(ion-color-btLight);
                                  }
                                  '
                        ↓Icon [ngx.components.UIDynamicElement-1646166943436]: 
                          beanData: |
                            '{
                             "ionBean": "Icon",
                             "IconName": "plain:trash-outline",
                             "IonColor": "plain"
                            }'
                          tagName: ion-icon
          ↓GridCol11 [ngx.components.UIDynamicElement-1646167762291]: 
            beanData: '{"ionBean":"GridCol","Size":"plain:12"}'
            tagName: ion-col
            ↓GenericItem1 [ngx.components.UIDynamicElement-1646167762294]: 
              beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
              tagName: ion-item
              ↓Style [ngx.components.UIStyle-1646167762297]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '	cursor: pointer;
                        .label{
                        		margin-top: 0px !important;	
                        		margin-bottom: 0px !important;	
                        	}
                        '
              ↓Div [ngx.components.UIDynamicElement-1646167762300]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓Text [ngx.components.UIText-1646167762303]: 
                  i18n: true
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:'addLine'|translate
                ↓Style [ngx.components.UIStyle-1646167762306]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          'color: var(--ion-color-primary);
                          display: inline-block;
                          margin-left: 48px;
                          
                          '
                ↓Event [ngx.components.UIControlEvent-1646167762309]: 
                  ↓AddOption [ngx.components.UICustomAction-1646167762312]: 
                    actionValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            		    let localNumbers = [];
                            	        let defaultLabel = "Line";
                            	        page.pageOwner.getlocalNumbersSorted(vars.item, localNumbers, defaultLabel, "lines", "title");
                            	        let val = page.pageOwner["getNextValueDispo"](localNumbers);
                                        vars.item['lines'].push({"title":defaultLabel+ " " +val, "value":[],"id":(Math.random() + "").substring(2)});
                                        page.pageOwner.updateState();
                                		resolve();
                            
                    ↓item [ngx.components.UIControlVariable-1646167762315]: 
                      varValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:this.item
            ↓Style [ngx.components.UIStyle-1646167762318]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '	cursor: pointer;
                      	display: inline-block;
                      '
          ↓Tag2 [ngx.components.UIElement-1646167762324]: 
            selfClose: true
            tagName: br
    ↓GridCol1 [ngx.components.UIDynamicElement-1588851455492]: 
      beanData: '{"ionBean":"GridCol","Size":"plain:6"}'
      tagName: ion-col
      ↓Grid [ngx.components.UIDynamicElement-1646167814314]: 
        beanData: '{"ionBean":"Grid"}'
        tagName: ion-grid
        ↓GridRow [ngx.components.UIDynamicElement-1646167819435]: 
          beanData: '{"ionBean":"GridRow"}'
          tagName: ion-row
          ↓GridCol [ngx.components.UIDynamicElement-1646167824098]: 
            beanData: '{"ionBean":"GridCol","Size":"plain:12"}'
            tagName: ion-col
            ↓GenericItem [ngx.components.UIDynamicElement-1646167840852]: 
              beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
              tagName: ion-item
              ↓FormatLayout [ngx.components.UIDynamicAttr-1646167840855]: 
                beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-uppercase"}'
                comment: FormatLayout
                tagName: div
              ↓Text [ngx.components.UIText-1646167840858]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:'column' | translate
              ↓Style [ngx.components.UIStyle-1646167840861]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        'color: #ff8206;
                          font-size: 14px;
                          font-weight: 600;
                          font-style: normal;
                          font-stretch: normal;
                          line-height: normal;
                          letter-spacing: normal;
                        '
              ↓Style1 [ngx.components.UIStyle-1646167840864]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '	.label{
                        		margin-top: 0px !important;	
                        		margin-bottom: 0px !important;	
                        	}
                        '
          ↓GridCol1 [ngx.components.UIDynamicElement-1646167829932]: 
            beanData: '{"ionBean":"GridCol","Size":"plain:12"}'
            tagName: ion-col
            ↓RadioList [ngx.components.UIDynamicElement-1646167859697]: 
              beanData: '{"ionBean":"RadioGroup","ControlName":"plain:name1646167859697"}'
              tagName: ion-radio-group
              ↓Directive [ngx.components.UIControlDirective-1646167859700]: 
                directiveIndexName: j
                directiveItemName: child
                directiveSource: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.item.children
                ↓Div [ngx.components.UIDynamicElement-1646167891570]: 
                  beanData: '{"ionBean":"DivTag"}'
                  tagName: div
                  ↓Attr [ngx.components.UIAttribute-1646167912894]: 
                    attrName: id
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'@prefixc8oitem'+child.name+'@prefixc8otype'+child.type+'c8o_child1'
                  ↓Attr2 [ngx.components.UIAttribute-1646167912897]: 
                    attrName: '*ngIf'
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:!child.other
                  ↓DivCheckbox [ngx.components.UIDynamicElement-1646167921301]: 
                    beanData: '{"ionBean":"DivTag"}'
                    tagName: div
                    ↓Style [ngx.components.UIStyle-1646167921304]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              'display: inline-block;
                              padding-left: 16px;
                              '
                    ↓GenericItem [ngx.components.UIDynamicElement-1646167921307]: 
                      beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                      tagName: ion-item
                      ↓Style [ngx.components.UIStyle-1646167921310]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '.checkbox{
                                margin-right:4px !important;
                                }
                                '
                      ↓RadioButton1 [ngx.components.UIDynamicElement-1646167921313]: 
                        beanData: '{"ionBean":"RadioButton","Disabled":"plain:true"}'
                        isEnabled: false
                        tagName: ion-radio
                      ↓CheckBox [ngx.components.UIDynamicElement-1646167921316]: 
                        beanData: |
                          '{
                           "ionBean": "CheckBox",
                           "ControlName": "plain:name1646167921316",
                           "Disabled": "plain:true"
                          }'
                        tagName: ion-checkbox
                  ↓DivInputOption [ngx.components.UIDynamicElement-1646167921319]: 
                    beanData: '{"ionBean":"DivTag"}'
                    tagName: div
                    ↓Style [ngx.components.UIStyle-1646167921322]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              'display: inline-block;
                              /*
                              .text-input{
                              		margin-top: 0px !important;	
                              		margin-bottom: 4px !important;	
                              	}
                              width:70%;
                              */
                              '
                    ↓GenericItem [ngx.components.UIDynamicElement-1646167921325]: 
                      beanData: '{"ionBean":"GenericItem"}'
                      tagName: ion-item
                      ↓Attr2 [ngx.components.UIAttribute-1646167921328]: 
                        attrName: '[ngClass]'
                        attrValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:'stylegenerictexteditor'
                      ↓Style [ngx.components.UIStyle-1646167921331]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                'width: 90%;
                                .label{
                                		margin-top: 0px !important;	
                                		margin-bottom: 0px !important;	
                                	}
                                '
                      ↓TextInput1 [ngx.components.UIDynamicElement-1646167921334]: 
                        beanData: |
                          '{
                           "ionBean": "Input",
                           "ControlName": "plain:name1646167921334",
                           "Debounce": "plain:0",
                           "Placeholder": "script:this.global[''text'']",
                           "Value": "script:child.value"
                          }'
                        tagName: ion-input
                        ↓Event [ngx.components.UIControlEvent-1646167921337]: 
                          attrName: (change)
                          eventName: onChange
                          ↓CheckAndRegister [ngx.components.UICustomAction-1646167921340]: 
                            actionValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    		    this.checkNotEmptyAndNameNotExists(event,vars,"nameAlreadyexits");
                                    		resolve();
                                    
                            isEnabled: false
                            ↓item [ngx.components.UIControlVariable-1646167921343]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:item
                            ↓child [ngx.components.UIControlVariable-1646167921346]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:child
                          ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1646167921349]: 
                            beanData: '{"ionBean":"InvokeAction"}'
                            isEnabled: false
                            stack: C8Oforms_NGX.MobileApplication.Application.checkAndRegister
                            ↓noCondition [ngx.components.UIControlVariable-1646167921352]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:false
                            ↓path [ngx.components.UIControlVariable-1646167921355]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:'obj.value'
                            ↓obj [ngx.components.UIControlVariable-1646167921358]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:this.item
                            ↓allowDuplicate [ngx.components.UIControlVariable-1646167921361]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:false
                            ↓path2 [ngx.components.UIControlVariable-1646167921364]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:'obj2.value'
                            ↓obj2 [ngx.components.UIControlVariable-1646167921367]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:child
                            ↓isNumber [ngx.components.UIControlVariable-1646167921370]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:false
                            ↓isSlider [ngx.components.UIControlVariable-1646167921373]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:false
                          ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1646167921376]: 
                            beanData: '{"ionBean":"InvokeAction"}'
                            stack: C8Oforms_NGX.MobileApplication.Application.updateState
                        ↓Attr [ngx.components.UIAttribute-1646167921379]: 
                          attrName: '[(ngModel)]'
                          attrValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:child.value
                        ↓Attr2 [ngx.components.UIAttribute-1646167921382]: 
                          attrName: ondragstart
                          attrValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: plain:event.preventDefault();event.stopPropagation();
                        ↓Event11 [ngx.components.UIControlEvent-1646167921385]: 
                          attrName: (dragover)
                          eventName: (dragover)
                          ↓refuseDrop [ngx.components.UICustomAction-1646167921388]: 
                            actionValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    		if(event.dataTransfer.types.includes("__c8oformsdrag")){
                                    					event.preventDefault();
                                    					//this.recursive(event.target, "before");
                                    			}
                                    		resolve();
                                    
                        ↓Attr3 [ngx.components.UIAttribute-1646167921391]: 
                          attrName: ondragover
                          attrValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: plain:event.preventDefault()
                        ↓Attr31 [ngx.components.UIAttribute-1646167921394]: 
                          attrName: ondrop
                          attrValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: plain:event.preventDefault()
                        ↓Attr11 [ngx.components.UIAttribute-1646167921397]: 
                          attrName: '[attr.draggable]'
                          attrValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: plain:false
                        ↓Event11132 [ngx.components.UIControlEvent-1646167921400]: 
                          attrName: (mouseenter)
                          eventName: (mouseenter)
                          ↓cantDrag [ngx.components.UICustomAction-1646167921403]: 
                            actionValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    	    page.local.canDrag = "false";
                                    		page.tick();
                                    //		console.log('MOUSEENTER !!');
                                    		resolve();
                                    
                        ↓Event111311 [ngx.components.UIControlEvent-1646167921406]: 
                          attrName: (mouseleave)
                          eventName: (mouseleave)
                          ↓canDrag [ngx.components.UICustomAction-1646167921409]: 
                            actionValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    	    page.local.canDrag = "true";
                                    		page.tick();
                                    //		console.log('MOUSELEAVE !!');
                                    		resolve();
                                    
                  ↓DivDelete [ngx.components.UIDynamicElement-1646167921412]: 
                    beanData: '{"ionBean":"DivTag"}'
                    tagName: div
                    ↓Style [ngx.components.UIStyle-1646167921415]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              'display: inline-block;
                              .label{
                              margin-bottom:9px;
                              }
                              /*
                              .text-input{
                              		margin-top: 0px !important;	
                              		margin-bottom: 4px !important;	
                              	}
                              width:70%;
                              */
                              '
                    ↓GenericItem [ngx.components.UIDynamicElement-1646167921418]: 
                      beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                      tagName: ion-item
                      ↓DeleteButton [ngx.components.UIDynamicElement-1646167921421]: 
                        beanData: |
                          '{
                           "ionBean": "Button",
                           "IonColor": "plain:btLight",
                           "IonFill": "plain:clear"
                          }'
                        tagName: ion-button
                        ↓Event [ngx.components.UIControlEvent-1646167921424]: 
                          ↓CustomAction [ngx.components.UICustomAction-1646167921427]: 
                            actionValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    		vars.item.children.splice(vars.j, 1);
                                    		page.pageOwner.updateState();
                                    		page["tick"]();
                                    		resolve();
                                    
                            ↓item [ngx.components.UIControlVariable-1646167921430]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:this.item
                            ↓j [ngx.components.UIControlVariable-1646167921433]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:j
                        ↓Style [ngx.components.UIStyle-1646167921436]: 
                          styleContent: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  'margin-bottom: 0px !important;
                                  ion-icon{
                                  	color:var(ion-color-btLight);
                                  }
                                  '
                        ↓Icon [ngx.components.UIDynamicElement-1646167921439]: 
                          beanData: |
                            '{
                             "ionBean": "Icon",
                             "IconName": "plain:trash-outline",
                             "IonColor": "plain"
                            }'
                          tagName: ion-icon
          ↓GridCol3 [ngx.components.UIDynamicElement-1646167999064]: 
            beanData: '{"ionBean":"GridCol"}'
            tagName: ion-col
            ↓GenericItem1 [ngx.components.UIDynamicElement-1646167999067]: 
              beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
              tagName: ion-item
              ↓Style [ngx.components.UIStyle-1646167999070]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '	cursor: pointer;
                        .label{
                        		margin-top: 0px !important;	
                        		margin-bottom: 0px !important;	
                        	}
                        '
              ↓Div [ngx.components.UIDynamicElement-1646167999073]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓Text [ngx.components.UIText-1646167999076]: 
                  i18n: true
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:'addColumn'|translate
                ↓Style [ngx.components.UIStyle-1646167999079]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          'color: var(--ion-color-primary);
                          display: inline-block;
                          margin-left: 48px;
                          '
                ↓Event [ngx.components.UIControlEvent-1646167999082]: 
                  ↓AddOption [ngx.components.UICustomAction-1646167999085]: 
                    actionValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            		    let localNumbers = [];
                            	        let defaultLabel = "Option";
                            	        page.pageOwner.getlocalNumbersSorted(vars.item, localNumbers, defaultLabel);
                            	        let val = page.pageOwner.getNextValueDispo(localNumbers);
                                        vars.item['children'].push({"value":defaultLabel+ " " +val, "selected":false, "id":(Math.random() + "").substring(2)});
                                        page.pageOwner.updateState();
                                		resolve();
                            
                    ↓item [ngx.components.UIControlVariable-1646167999088]: 
                      varValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:this.item
            ↓Style [ngx.components.UIStyle-1646167999118]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '	cursor: pointer;
                      	display: inline-block;
                      '
          ↓Tag2 [ngx.components.UIElement-1646167999121]: 
            selfClose: true
            tagName: br
↓Directive1 [ngx.components.UIControlDirective-1623853737889]: 
  directiveName: If
  directiveSource: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
      - MobileSmartSourceType: script:this.pageOwner.local.advancedEditing
  ↓GridRow2 [ngx.components.UIDynamicElement-1588851455726]: 
    beanData: '{"ionBean":"GridRow"}'
    tagName: ion-row
    ↓GenericItem [ngx.components.UIDynamicElement-1588851455729]: 
      beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
      tagName: ion-item
      ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138111]: 
        beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-uppercase"}'
        comment: FormatLayout
        tagName: div
      ↓Style [ngx.components.UIStyle-1588851455735]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                'color: #ff8206;
                  font-size: 14px;
                  font-weight: 600;
                  font-style: normal;
                  font-stretch: normal;
                  line-height: normal;
                  letter-spacing: normal;
                '
      ↓Text1 [ngx.components.UIText-1588851455738]: 
        i18n: true
        textValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:option
      ↓Style1 [ngx.components.UIStyle-1588851455741]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '	.label{
                		margin-top: 0px !important;	
                		margin-bottom: 0px !important;	
                	}
                '
  ↓GridRow11 [ngx.components.UIDynamicElement-1588851455744]: 
    beanData: '{"ionBean":"GridRow"}'
    tagName: ion-row
    ↓GridCol [ngx.components.UIDynamicElement-1588851455747]: 
      beanData: '{"ionBean":"GridCol"}'
      tagName: ion-col
      ↓GenericItem [ngx.components.UIDynamicElement-1588851455750]: 
        beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
        tagName: ion-item
        ↓Label [ngx.components.UIDynamicElement-1588851455753]: 
          beanData: '{"ionBean":"Label"}'
          tagName: ion-label
          ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138113]: 
            beanData: '{"ionBean":"FormatLayout"}'
            comment: FormatLayout
            tagName: div
          ↓Text [ngx.components.UIText-1588851455759]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:'mandatory_by_line' | translate
        ↓ToggleButton [ngx.components.UIDynamicElement-1588851455762]: 
          beanData: '{"ionBean":"Toggle"}'
          tagName: ion-toggle
          ↓Attr [ngx.components.UIAttribute-1588851455765]: 
            attrName: '[(ngModel)]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.item.config.mandatory
          ↓Event [ngx.components.UIControlEvent-1588851455768]: 
            attrName: (ionChange)
            eventName: (ionChange)
            ↓triggerSave [ngx.components.UICustomAction-1588851455771]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      		//vars.item.config.mandatory = !vars.item["config"]["mandatory"];
                      		page.pageOwner.updateState();
                      		resolve();
                      
              isEnabled: false
            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1588851455774]: 
              beanData: '{"ionBean":"InvokeAction"}'
              stack: C8Oforms_NGX.MobileApplication.Application.updateState
              ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1588851455777]: 
                beanData: '{"ionBean":"InvokeAction"}'
                stack: C8Oforms_NGX.MobileApplication.Application.tick
          ↓Attr1 [ngx.components.UIAttribute-1646168978839]: 
            attrName: slot
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:start
    ↓GridCol1 [ngx.components.UIDynamicElement-1588851455783]: 
      beanData: '{"ionBean":"GridCol"}'
      tagName: ion-col
      ↓GenericItem [ngx.components.UIDynamicElement-1588851455786]: 
        beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
        tagName: ion-item
        ↓Label [ngx.components.UIDynamicElement-1588851455789]: 
          beanData: '{"ionBean":"Label"}'
          tagName: ion-label
          ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138115]: 
            beanData: '{"ionBean":"FormatLayout"}'
            comment: FormatLayout
            tagName: div
          ↓Text [ngx.components.UIText-1588851455795]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:'limit_one_response_column' | translate
        ↓ToggleButton [ngx.components.UIDynamicElement-1588851455798]: 
          beanData: '{"ionBean":"Toggle"}'
          tagName: ion-toggle
          ↓Attr [ngx.components.UIAttribute-1588851455801]: 
            attrName: '[(ngModel)]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.item.config.different
          ↓Event [ngx.components.UIControlEvent-1588851455804]: 
            attrName: (ionChange)
            eventName: (ionChange)
            ↓triggerSave [ngx.components.UICustomAction-1588851455807]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      		//vars.item.config.mandatory = !vars.item["config"]["mandatory"];
                      		page.pageOwner.updateState();
                      		resolve();
                      
              isEnabled: false
            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1588851455810]: 
              beanData: '{"ionBean":"InvokeAction"}'
              stack: C8Oforms_NGX.MobileApplication.Application.updateState
              ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1588851455813]: 
                beanData: '{"ionBean":"InvokeAction"}'
                stack: C8Oforms_NGX.MobileApplication.Application.tick
          ↓Attr1 [ngx.components.UIAttribute-1646168963980]: 
            attrName: slot
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:start