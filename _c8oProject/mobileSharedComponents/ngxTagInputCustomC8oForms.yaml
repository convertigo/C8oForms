↓Tag [ngx.components.UIElement-1613566780029]: 
  identifier: ngxTag
  tagName: tag-input
  ↓Attr [ngx.components.UIAttribute-1613566780032]: 
    attrName: '[(ngModel)]'
    attrValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:this.items
  ↓Attr41 [ngx.components.UIAttribute-1613566780035]: 
    attrName: '[theme]'
    attrValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:this.theme
  ↓Attr4 [ngx.components.UIAttribute-1613566780038]: 
    attrName: '[maxItems]'
    attrValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:this.maxItems
  ↓Attr5 [ngx.components.UIAttribute-1613566780041]: 
    attrName: '[placeholder]'
    attrValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:this.placeholder
  ↓Attr51 [ngx.components.UIAttribute-1613566780044]: 
    attrName: '[secondaryPlaceholder]'
    attrValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:this.secondaryPlaceholder
  ↓Attr3 [ngx.components.UIAttribute-1613566780047]: 
    attrName: '[editable]'
    attrValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:this.editableTag
  ↓Attr31 [ngx.components.UIAttribute-1613566780050]: 
    attrName: '[removable]'
    attrValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:this.removableTag
  ↓Fragment [ngx.components.UICustom-1613566780053]: 
    htmlTemplate: |
      '<ng-template let-item="item" let-index="index" > <!-- DEFINE HERE YOUR TEMPLATE -->
      		<span *ngIf="item.type == ''group'' else ElseBlock1212">
       			<ion-icon name="people"></ion-icon>  {{ item.display}} 
              </span>
              <ng-template #ElseBlock1212>
      	        <span *ngIf="item.type == ''user'' else ElseBlock1213">
      	 			<ion-icon name="person"></ion-icon> <b>{{ item.displayName != undefined ? item.displayName + " " : ""}}</b> <i>{{item.displayMail}}</i>
      	        </span>
              </ng-template>
              <ng-template #ElseBlock1213>
      	        <span>
      	 			<ion-icon name="person-add"></ion-icon>  {{ item.value}} 
      	        </span>
              </ng-template>
              <delete-icon (click)="ngxTag.removeItem(item, index)"></delete-icon>
          </ng-template>'
  ↓Tag [ngx.components.UIElement-1613566780056]: 
    tagName: tag-input-dropdown
    ↓Attr [ngx.components.UIAttribute-1613566780059]: 
      attrName: '[autocompleteItems]'
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:this.autocompleteItems
    ↓Attr11 [ngx.components.UIAttribute-1613566780062]: 
      attrName: '[showDropdownIfEmpty]'
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:this.showAutoCompleteDropdownIfEmpty
    ↓Fragment [ngx.components.UICustom-1613566780065]: 
      htmlTemplate: |
        '<ng-template let-item="item" let-index="index">
            <ion-item *ngIf="item.type == ''group'' else ElseBlock1212" style="padding:0 !important">
                <ion-avatar item-start style="">
                    <img [src]="item.picture" />
                </ion-avatar>
                <ion-label style="margin-top: 0; margin-bottom:0;">
                    <p>{{ item.display}}</p>
                </ion-label>
            </ion-item>
            <ng-template #ElseBlock1212>
                <ion-item *ngIf="item.type == ''user'' else ElseBlock1213" style="padding:0 !important">
                    <ion-avatar item-start style="">
                        <img [src]="item.picture" />
                    </ion-avatar>
                    <ion-label style="margin-top: 0; margin-bottom:0;">
                        <h2>{{ item.displayName != undefined ? item.displayName + " " : ""}}</h2>
                        <p>{{item.displayMail}}</p>
                    </ion-label>
                </ion-item>
            </ng-template>
            <ng-template #ElseBlock1213>
                <span>
        	 			<ion-icon name="person-add"></ion-icon>  {{ item.value}} 
        	        </span>
            </ng-template>
        </ng-template>'
    ↓Attr1 [ngx.components.UIAttribute-1622454002906]: 
      attrName: '[limitItemsTo]'
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:100
  ↓Attr2 [ngx.components.UIAttribute-1613566780068]: 
    attrName: '[identifyBy]'
    attrValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:this.pageOwner.itemIdentifyBy
  ↓Attr21 [ngx.components.UIAttribute-1613566780071]: 
    attrName: '[displayBy]'
    attrValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:this.pageOwner.itemDisplayBy
  ↓Attr1 [ngx.components.UIAttribute-1613566780074]: 
    attrName: '[onlyFromAutocomplete]'
    attrValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:this.onlyFromAutocomplete
  ↓Attr6 [ngx.components.UIAttribute-1613566780077]: 
    attrName: '[inputText]'
    attrValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:this.inputtext
  ↓Event [ngx.components.UIControlEvent-1613566780080]: 
    attrName: (onTagEdited)
    eventName: (onTagEdited)
    ↓EmitEvent [ngx.components.UIDynamicEmit-1645090139213]: 
      beanData: |
        '{
         "ionBean": "EmitEventAction",
         "event": "plain:C8Oforms_NGX.MobileApplication.Application.ngxTagInputCustomC8oForms.ngxTagInputEdited",
         "data": "script:event"
        }'
  ↓Event1 [ngx.components.UIControlEvent-1613566780086]: 
    attrName: (onAdd)
    eventName: (onAdd)
    ↓EmitEvent [ngx.components.UIDynamicEmit-1645090139217]: 
      beanData: |
        '{
         "ionBean": "EmitEventAction",
         "event": "plain:C8Oforms_NGX.MobileApplication.Application.ngxTagInputCustomC8oForms.ngxTagInputAdded",
         "data": "script:event"
        }'
  ↓Event2 [ngx.components.UIControlEvent-1613566780092]: 
    attrName: (onRemove)
    eventName: (onRemove)
    ↓EmitEvent [ngx.components.UIDynamicEmit-1645090139221]: 
      beanData: |
        '{
         "ionBean": "EmitEventAction",
         "event": "plain:C8Oforms_NGX.MobileApplication.Application.ngxTagInputCustomC8oForms.ngxTagInputRemoved",
         "data": "script:event"
        }'
  ↓Event3 [ngx.components.UIControlEvent-1613566780098]: 
    attrName: (onSelect)
    eventName: (onSelect)
    ↓EmitEvent [ngx.components.UIDynamicEmit-1645090139225]: 
      beanData: |
        '{
         "ionBean": "EmitEventAction",
         "event": "plain:C8Oforms_NGX.MobileApplication.Application.ngxTagInputCustomC8oForms.ngxTagInputSelected",
         "data": "script:event"
        }'
  ↓Event4 [ngx.components.UIControlEvent-1613566780104]: 
    attrName: (onFocus)
    eventName: (onFocus)
    ↓EmitEvent [ngx.components.UIDynamicEmit-1645090139229]: 
      beanData: |
        '{
         "ionBean": "EmitEventAction",
         "event": "plain:C8Oforms_NGX.MobileApplication.Application.ngxTagInputCustomC8oForms.ngxTagInputFocused",
         "data": "script:event"
        }'
  ↓Event5 [ngx.components.UIControlEvent-1613566780110]: 
    attrName: (onBlur)
    eventName: (onBlur)
    ↓EmitEvent [ngx.components.UIDynamicEmit-1645090139233]: 
      beanData: |
        '{
         "ionBean": "EmitEventAction",
         "event": "plain:C8Oforms_NGX.MobileApplication.Application.ngxTagInputCustomC8oForms.ngxTagInputBlured",
         "data": "script:event"
        }'
  ↓Event6 [ngx.components.UIControlEvent-1613566780116]: 
    attrName: (onTextChange)
    eventName: (onTextChange)
    ↓EmitEvent [ngx.components.UIDynamicEmit-1645090139237]: 
      beanData: |
        '{
         "ionBean": "EmitEventAction",
         "event": "plain:C8Oforms_NGX.MobileApplication.Application.ngxTagInputCustomC8oForms.ngxTagInputChanged",
         "data": "script:event"
        }'
  ↓Event7 [ngx.components.UIControlEvent-1613566780122]: 
    attrName: (onPaste)
    eventName: (onPaste)
    ↓EmitEvent [ngx.components.UIDynamicEmit-1645090139241]: 
      beanData: |
        '{
         "ionBean": "EmitEventAction",
         "event": "plain:C8Oforms_NGX.MobileApplication.Application.ngxTagInputCustomC8oForms.ngxTagInputPasted",
         "data": "script:event"
        }'
  ↓Event8 [ngx.components.UIControlEvent-1613566780128]: 
    attrName: (onValidationError)
    eventName: (onValidationError)
    ↓EmitEvent [ngx.components.UIDynamicEmit-1645090139245]: 
      beanData: |
        '{
         "ionBean": "EmitEventAction",
         "event": "plain:C8Oforms_NGX.MobileApplication.Application.ngxTagInputCustomC8oForms.ngxTagInputValidationError",
         "data": "script:event"
        }'
  ↓Event81 [ngx.components.UIControlEvent-1613566780134]: 
    attrName: (ngModelChange)
    eventName: (ngModelChange)
    ↓EmitEvent [ngx.components.UIDynamicEmit-1645090139249]: 
      beanData: |
        '{
         "ionBean": "EmitEventAction",
         "event": "plain:C8Oforms_NGX.MobileApplication.Application.ngxTagInputCustomC8oForms.ngxTagInputNgModelChange",
         "data": "script:event"
        }'
  ↓Attr61 [ngx.components.UIAttribute-1614594587830]: 
    attrName: '[errorMessages]'
    attrValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:this.errorMessages
  ↓Attr62 [ngx.components.UIAttribute-1614594592995]: 
    attrName: '[validators]'
    attrValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:this.validators
  ↓Attr611 [ngx.components.UIAttribute-1615221537736]: 
    attrName: '[addOnBlur]'
    attrValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:true
↓items [ngx.components.UICompVariable-1613566788424]: 
  autoEmit: true
  value: '[]'
↓inputtext [ngx.components.UICompVariable-1613566788427]: 
↓theme [ngx.components.UICompVariable-1613566788430]: 
↓maxItems [ngx.components.UICompVariable-1613566788433]: 
  value: 100
↓placeholder [ngx.components.UICompVariable-1613566788436]: 
↓secondaryPlaceholder [ngx.components.UICompVariable-1613566788439]: 
↓editableTag [ngx.components.UICompVariable-1613566788442]: 
  value: true
↓removableTag [ngx.components.UICompVariable-1613566788445]: 
  value: true
↓itemIdentifyBy [ngx.components.UICompVariable-1613566788448]: 
  value: '''value'''
↓itemDisplayBy [ngx.components.UICompVariable-1613566788451]: 
  value: '''display'''
↓autocompleteItems [ngx.components.UICompVariable-1613566788454]: 
  value: '[]'
↓onlyFromAutocomplete [ngx.components.UICompVariable-1613566788457]: 
  value: false
↓showAutoCompleteDropdownIfEmpty [ngx.components.UICompVariable-1613566788460]: 
  value: false
↓PageEvent [ngx.components.UIEventSubscriber-1645090139198]: 
  comment: Old implementation of onCanEnter. Prefer using AppGuard now.
  topic: CanEnter
  ↓initialization [ngx.components.UICustomAction-1613566963939]: 
    comment: Do not delete or disable !!
    module_ng_imports: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
        - com.twinsoft.convertigo.beans.common.XMLVector: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
            - com.twinsoft.convertigo.beans.common.XMLVector: 
              - java.lang.String: 
                - ↑value: TagInputModule
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
            - com.twinsoft.convertigo.beans.common.XMLVector: 
              - java.lang.String: 
                - ↑value: BrowserAnimationsModule 
    module_ts_imports: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
        - com.twinsoft.convertigo.beans.common.XMLVector: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
            - com.twinsoft.convertigo.beans.common.XMLVector: 
              - java.lang.String: 
                - ↑value: TagInputModule
              - java.lang.String: 
                - ↑value: ngx-chips
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
            - com.twinsoft.convertigo.beans.common.XMLVector: 
              - java.lang.String: 
                - ↑value: BrowserAnimationsModule 
              - java.lang.String: 
                - ↑value: '@angular/platform-browser/animations'
    package_dependencies: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
        - com.twinsoft.convertigo.beans.common.XMLVector: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
            - com.twinsoft.convertigo.beans.common.XMLVector: 
              - java.lang.String: 
                - ↑value: ngx-chips
              - java.lang.String: 
                - ↑value: 2.2.2
↓errorMessages [ngx.components.UICompVariable-1614594552467]: 
  value: '{}'
↓validators [ngx.components.UICompVariable-1614594569120]: 
  value: '[]'
↓ngxTagInputEdited [ngx.components.UICompEvent-1645090139201]: 
  attrName: ngxTagInputEdited
↓ngxTagInputAdded [ngx.components.UICompEvent-1645090139215]: 
  attrName: ngxTagInputAdded
↓ngxTagInputRemoved [ngx.components.UICompEvent-1645090139219]: 
  attrName: ngxTagInputRemoved
↓ngxTagInputSelected [ngx.components.UICompEvent-1645090139223]: 
  attrName: ngxTagInputSelected
↓ngxTagInputFocused [ngx.components.UICompEvent-1645090139227]: 
  attrName: ngxTagInputFocused
↓ngxTagInputBlured [ngx.components.UICompEvent-1645090139231]: 
  attrName: ngxTagInputBlured
↓ngxTagInputChanged [ngx.components.UICompEvent-1645090139235]: 
  attrName: ngxTagInputChanged
↓ngxTagInputPasted [ngx.components.UICompEvent-1645090139239]: 
  attrName: ngxTagInputPasted
↓ngxTagInputValidationError [ngx.components.UICompEvent-1645090139243]: 
  attrName: ngxTagInputValidationError
↓ngxTagInputNgModelChange [ngx.components.UICompEvent-1645090139247]: 
  attrName: ngxTagInputNgModelChange