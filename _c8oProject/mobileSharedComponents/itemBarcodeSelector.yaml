isEnabled: false
scriptContent: 
  - xmlizable: 
    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
    - com.twinsoft.convertigo.beans.common.FormatedContent: 
      →: |
        '/*Begin_c8o_CompImport*/
        /*End_c8o_CompImport*/
        /*Begin_c8o_CompDeclaration*/
        	/*End_c8o_CompDeclaration*/
        /*Begin_c8o_CompConstructor*/
        		/*End_c8o_CompConstructor*/
        /*Begin_c8o_CompInitialization*/
        		/*End_c8o_CompInitialization*/
        /*Begin_c8o_CompFinalization*/
        		/*End_c8o_CompFinalization*/
        /*Begin_c8o_CompFunction*/
        	/*End_c8o_CompFunction*/
        '
↓item [ngx.components.UICompVariable-1571660946644]: 
  value: 
↓idselected [ngx.components.UICompVariable-1571660946647]: 
  value: 
↓isChild [ngx.components.UICompVariable-1571845658901]: 
  value: false
↓UseSharedComponent1 [ngx.components.UIUseShared-1605801329749]: 
  sharedcomponent: C8Oforms_NGX.MobileApplication.Application.sharedQuestionElem
  ↓item [ngx.components.UIUseVariable-1605801329752]: 
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:this.item
↓GridRow1 [ngx.components.UIDynamicElement-1605803151794]: 
  beanData: '{"ionBean":"GridRow"}'
  tagName: ion-row
  ↓GenericItem [ngx.components.UIDynamicElement-1605803151797]: 
    beanData: '{"ionBean":"GenericItem"}'
    tagName: ion-item
    ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138508]: 
      beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-uppercase"}'
      comment: FormatLayout
      tagName: div
    ↓Style [ngx.components.UIStyle-1605803151803]: 
      styleContent: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              'color: #ff8206;
                font-size: 14px;
                font-weight: 600;
                font-style: normal;
                font-stretch: normal;
                line-height: normal;
                letter-spacing: normal;
              '
    ↓Text [ngx.components.UIText-1605803151806]: 
      i18n: true
      textValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: 'script:(this.local.advancedEditing ? ''input'' : ''text_visible_before'')| translate'
  ↓GridCol [ngx.components.UIDynamicElement-1605803151809]: 
    beanData: |
      '{
       "ionBean": "GridCol",
       "SizeLg": "plain:6",
       "SizeXl": "plain:6"
      }'
    tagName: ion-col
    ↓GenericItem [ngx.components.UIDynamicElement-1605803151812]: 
      beanData: '{"ionBean":"GenericItem"}'
      tagName: ion-item
      ↓Label [ngx.components.UIDynamicElement-1605803151815]: 
        beanData: '{"ionBean":"Label","Position":"plain:stacked"}'
        tagName: ion-label
        ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138510]: 
          beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-capitalize"}'
          comment: FormatLayout
          tagName: div
        ↓Text [ngx.components.UIText-1605803151821]: 
          i18n: true
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'placeholder' | translate
        ↓Style [ngx.components.UIStyle-1605803151824]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  'color: var(--ion-color-primary);
                  '
      ↓TextInput [ngx.components.UIDynamicElement-1605803151827]: 
        beanData: '{"ionBean":"Input","Debounce":"plain:0"}'
        tagName: ion-input
        ↓Attr [ngx.components.UIAttribute-1605803151830]: 
          attrName: '[(ngModel)]'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:this.item.config.placeholder
        ↓Event [ngx.components.UIControlEvent-1605803151833]: 
          attrName: (change)
          eventName: onChange
          ↓CheckAndRegister [ngx.components.UICustomAction-1605803151836]: 
            actionValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    		if(event.srcElement.value != ""){
                    
                    		    vars.item.config.placeholder = event.srcElement.value;
                    
                    		    this.pageOwner.updateState();
                    
                    		    this.tick();
                    
                    		}
                    
                    		else{
                    
                    		    //event.srcElement.value = this.form._id;
                    
                    		    let a = vars.item.config.placeholder;
                    
                    		    vars.item.config.placeholder = vars.item.config.placeholder + " ";
                    
                    		    this.tick();
                    
                    		    vars.item.config.placeholder= a;
                    
                    		    this.tick();
                    
                    		}
                    
                    		resolve();
                    
                    
            isEnabled: false
            ↓item [ngx.components.UIControlVariable-1605803151839]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:item
          ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1605803151842]: 
            beanData: '{"ionBean":"InvokeAction"}'
            isEnabled: false
            stack: C8Oforms_NGX.MobileApplication.Application.checkAndRegister
            ↓noCondition [ngx.components.UIControlVariable-1605803151845]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:true
            ↓path [ngx.components.UIControlVariable-1605803151848]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:'obj.config.placeholder'
            ↓obj [ngx.components.UIControlVariable-1605803151851]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.item
            ↓allowDuplicate [ngx.components.UIControlVariable-1605803151854]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:true
            ↓path2 [ngx.components.UIControlVariable-1605803151857]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:''
            ↓obj2 [ngx.components.UIControlVariable-1605803151860]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:
            ↓isNumber [ngx.components.UIControlVariable-1605803151863]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:false
            ↓isSlider [ngx.components.UIControlVariable-1605803151866]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:false
          ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1605803151869]: 
            beanData: '{"ionBean":"InvokeAction"}'
            stack: C8Oforms_NGX.MobileApplication.Application.updateState
        ↓Attr2 [ngx.components.UIAttribute-1605803151872]: 
          attrName: ondragstart
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:event.preventDefault();event.stopPropagation();
        ↓Event11 [ngx.components.UIControlEvent-1605803151875]: 
          attrName: (dragover)
          eventName: (dragover)
          ↓refuseDrop [ngx.components.UICustomAction-1605803151878]: 
            actionValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    		if(event.dataTransfer.types.includes("__c8oformsdrag")){
                    					event.preventDefault();
                    					//this.recursive(event.target, "before");
                    			}
                    		resolve();
                    
        ↓Attr3 [ngx.components.UIAttribute-1605803151881]: 
          attrName: ondragover
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:event.preventDefault()
        ↓Attr31 [ngx.components.UIAttribute-1605803151884]: 
          attrName: ondrop
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:event.preventDefault()
        ↓Attr11 [ngx.components.UIAttribute-1605803151887]: 
          attrName: '[attr.draggable]'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:false
        ↓Event11132 [ngx.components.UIControlEvent-1605803151890]: 
          attrName: (mouseenter)
          eventName: (mouseenter)
          ↓cantDrag [ngx.components.UICustomAction-1605803151893]: 
            actionValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    	    page.local.canDrag = "false";
                    		page.tick();
                    //		console.log('MOUSEENTER !!');
                    		resolve();
                    
        ↓Event111311 [ngx.components.UIControlEvent-1605803151896]: 
          attrName: (mouseleave)
          eventName: (mouseleave)
          ↓canDrag [ngx.components.UICustomAction-1605803151899]: 
            actionValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    	    page.local.canDrag = "true";
                    		page.tick();
                    //		console.log('MOUSELEAVE !!');
                    		resolve();
                    
      ↓Style [ngx.components.UIStyle-1605803151902]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                'width: 90%;
                .label{
                		margin-top: 0px !important;	
                		margin-bottom: 0px !important;	
                	}
                '
      ↓Attr2 [ngx.components.UIAttribute-1605803151905]: 
        attrName: '[ngClass]'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:'stylegenerictexteditor'
↓Directive1 [ngx.components.UIControlDirective-1623856791841]: 
  directiveName: If
  directiveSource: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
      - MobileSmartSourceType: script:this.local.advancedEditing
  ↓GridRow11 [ngx.components.UIDynamicElement-1605803151995]: 
    beanData: '{"ionBean":"GridRow"}'
    tagName: ion-row
    ↓GenericItem [ngx.components.UIDynamicElement-1605803151998]: 
      beanData: '{"ionBean":"GenericItem"}'
      tagName: ion-item
      ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138514]: 
        beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-uppercase"}'
        comment: FormatLayout
        tagName: div
      ↓Style [ngx.components.UIStyle-1605803152004]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                'color: #ff8206;
                  font-size: 14px;
                  font-weight: 600;
                  font-style: normal;
                  font-stretch: normal;
                  line-height: normal;
                  letter-spacing: normal;
                '
      ↓Text [ngx.components.UIText-1605803152007]: 
        i18n: true
        textValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:'option'| translate
      ↓Style1 [ngx.components.UIStyle-1605803152010]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '	.label{
                		margin-top: 0px !important;	
                		margin-bottom: 0px !important;	
                	}
                '
    ↓DividerItem [ngx.components.UIDynamicElement-1605803152013]: 
      beanData: '{"ionBean":"Listdivider","IonColor":"plain:primary"}'
      isEnabled: false
      tagName: ion-item-divider
      ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138516]: 
        beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-capitalize"}'
        comment: FormatLayout
        tagName: div
      ↓Text [ngx.components.UIText-1605803152019]: 
        i18n: true
        textValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:'option'| translate
    ↓GridCol [ngx.components.UIDynamicElement-1605803152022]: 
      beanData: |
        '{
         "ionBean": "GridCol",
         "SizeLg": "plain:6",
         "SizeXl": "plain:6"
        }'
      isEnabled: false
      tagName: ion-col
      ↓Div [ngx.components.UIDynamicElement-1605803152025]: 
        beanData: '{"ionBean":"DivTag"}'
        tagName: div
        ↓RadioList [ngx.components.UIDynamicElement-1605803152028]: 
          beanData: '{"ionBean":"RadioGroup"}'
          tagName: ion-radio-group
          ↓Attr [ngx.components.UIAttribute-1605803152031]: 
            attrName: '[(ngModel)]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.item.config.short
          ↓GenericItem [ngx.components.UIDynamicElement-1605803152034]: 
            beanData: '{"ionBean":"GenericItem"}'
            tagName: ion-item
            ↓RadioButton [ngx.components.UIDynamicElement-1605803152037]: 
              beanData: '{"ionBean":"RadioButton","Value":"script:true"}'
              tagName: ion-radio
              ↓Attr [ngx.components.UIAttribute-1605803152040]: 
                attrName: 
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:item-left
            ↓Label [ngx.components.UIDynamicElement-1605803152043]: 
              beanData: '{"ionBean":"Label"}'
              tagName: ion-label
              ↓Text [ngx.components.UIText-1605803152046]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:'shortResp' | translate
          ↓GenericItem1 [ngx.components.UIDynamicElement-1605803152049]: 
            beanData: '{"ionBean":"GenericItem"}'
            tagName: ion-item
            ↓Label [ngx.components.UIDynamicElement-1605803152052]: 
              beanData: '{"ionBean":"Label"}'
              tagName: ion-label
              ↓Text [ngx.components.UIText-1605803152055]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:'longResp' | translate
            ↓RadioButton1 [ngx.components.UIDynamicElement-1605803152058]: 
              beanData: '{"ionBean":"RadioButton","Value":"script:false"}'
              tagName: ion-radio
              ↓Attr [ngx.components.UIAttribute-1605803152061]: 
                attrName: 
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:item-left
          ↓Event [ngx.components.UIControlEvent-1605803152064]: 
            attrName: (ngModelChange)
            eventName: (ngModelChange)
            ↓triggerSave [ngx.components.UICustomAction-1605803152067]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      		this.pageOwner.updateState();
                      		this.tick();
                      		resolve();
                      
              isEnabled: false
            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1605803152070]: 
              beanData: '{"ionBean":"InvokeAction"}'
              stack: C8Oforms_NGX.MobileApplication.Application.updateState
          ↓Style1 [ngx.components.UIStyle-1605803152073]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    '	.label{
                    		margin-top: 0px !important;	
                    		margin-bottom: 0px !important;	
                    	}
                    	.item-cover {
                    		padding-top:0px !important;
                    		padding-bottom:0px !important;
                    	}
                    	.radio {
                    		margin-top: 0px !important;
                    		margin-bottom: 0px !important;
                    	}
                    
                    '
        ↓Attr [ngx.components.UIAttribute-1605803152076]: 
          attrName: '[ngClass]'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'styledivnormal'
        ↓Style [ngx.components.UIStyle-1605803152079]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  'margin-top:0px;
                  margin-bottom:0px;
                  	.item {
                  		max-height: 0.5rem !important;
                  	}
                  '
      ↓GenericItem [ngx.components.UIDynamicElement-1605803152082]: 
        beanData: '{"ionBean":"GenericItem"}'
        isEnabled: false
        tagName: ion-item
        ↓Label [ngx.components.UIDynamicElement-1605803152085]: 
          beanData: '{"ionBean":"Label"}'
          tagName: ion-label
          ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138518]: 
            beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-capitalize"}'
            comment: FormatLayout
            tagName: div
          ↓Text [ngx.components.UIText-1605803152091]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:'mandatory' | translate
        ↓ToggleButton [ngx.components.UIDynamicElement-1605803152094]: 
          beanData: '{"ionBean":"Toggle"}'
          tagName: ion-toggle
          ↓Attr [ngx.components.UIAttribute-1605803152097]: 
            attrName: '[(ngModel)]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.item.config.mandatory
          ↓Event [ngx.components.UIControlEvent-1605803152100]: 
            attrName: (ionChange)
            eventName: (ionChange)
            ↓triggerSave [ngx.components.UICustomAction-1605803152103]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      		//vars.item.config.mandatory = !vars.item["config"]["mandatory"];
                      		this.pageOwner.updateState();
                      		this.tick();
                      		resolve();
                      
              isEnabled: false
            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1605803152106]: 
              beanData: '{"ionBean":"InvokeAction"}'
              stack: C8Oforms_NGX.MobileApplication.Application.updateState
              ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1605803152109]: 
                beanData: '{"ionBean":"InvokeAction"}'
                stack: C8Oforms_NGX.MobileApplication.Application.tick
    ↓GridCol1 [ngx.components.UIDynamicElement-1605803152112]: 
      beanData: '{"ionBean":"GridCol"}'
      tagName: ion-col
      ↓GenericItem [ngx.components.UIDynamicElement-1605803152115]: 
        beanData: '{"ionBean":"GenericItem"}'
        tagName: ion-item
        ↓Label [ngx.components.UIDynamicElement-1605803152118]: 
          beanData: '{"ionBean":"Label"}'
          tagName: ion-label
          ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138520]: 
            beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-capitalize"}'
            comment: FormatLayout
            tagName: div
          ↓Text [ngx.components.UIText-1605803152124]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:'mandatory' | translate
        ↓ToggleButton [ngx.components.UIDynamicElement-1605803152127]: 
          beanData: '{"ionBean":"Toggle"}'
          tagName: ion-toggle
          ↓Attr [ngx.components.UIAttribute-1605803152130]: 
            attrName: '[(ngModel)]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.item.config.mandatory
          ↓Event [ngx.components.UIControlEvent-1605803152133]: 
            attrName: (ionChange)
            eventName: (ionChange)
            ↓triggerSave [ngx.components.UICustomAction-1605803152136]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      		//vars.item.config.mandatory = !vars.item["config"]["mandatory"];
                      		this.pageOwner.updateState();
                      		this.tick();
                      		resolve();
                      
              isEnabled: false
            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1605803152139]: 
              beanData: '{"ionBean":"InvokeAction"}'
              stack: C8Oforms_NGX.MobileApplication.Application.updateState
              ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1605803152142]: 
                beanData: '{"ionBean":"InvokeAction"}'
                stack: C8Oforms_NGX.MobileApplication.Application.tick
          ↓Attr1 [ngx.components.UIAttribute-1605803152145]: 
            attrName: 
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:item-left