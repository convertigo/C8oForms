↓Div [ngx.components.UIDynamicElement-1608286979440]: 
  beanData: '{"ionBean":"DivTag"}'
  identifier: divtext
  tagName: div
  ↓Attr [ngx.components.UIAttribute-1608286979443]: 
    attrName: '[ngClass]'
    attrValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: 'script:this.redList != undefined ?  this.redList[(page as any).pageOwner.item.name] == true ? ((page as any).pageOwner.item.config.mandatory && (page as any).pageOwner.item.config.disabled == true) ? [''requiredgregoryvpadding'', ''styledivred''] : ''styledivred'': ((page as any).pageOwner.item.config.mandatory && (page as any).pageOwner.item.config.disabled == true) ? [''requiredgregoryv''] : []: ((page as any).pageOwner.item.config.mandatory && (page as any).pageOwner.item.config.disabled == true) ? [''requiredgregoryv''] : []'
    comment: 'this.redList != undefined ?  this.redList[(page as any).pageOwner.item.name] == true ? ((page as any).pageOwner.item.config.mandatory && (page as any).pageOwner.item.config.disabled == true) ? [''requiredgregoryvpadding'', ''styledivred''] : ''styledivred'': ((page as any).pageOwner.item.config.mandatory && (page as any).pageOwner.item.config.disabled == true) ? [''requiredgregoryv'', ''styledivnormal''] : ''styledivnormal'': ((page as any).pageOwner.item.config.mandatory && (page as any).pageOwner.item.config.disabled == true) ? [''requiredgregoryv'', ''styledivnormal''] : ''styledivnormal'''
  ↓Attr1 [ngx.components.UIAttribute-1608286979446]: 
    attrName: '[attr.id]'
    attrValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:(page as any).pageOwner.item.name
  ↓Style [ngx.components.UIStyle-1608286979449]: 
    styleContent: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            position:relative;
            
  ↓Directive2 [ngx.components.UIControlDirective-1608286979755]: 
    directiveName: If
    directiveSource: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: 'script:this.redList != null ? this.redList[(page as any).pageOwner.item.name] : false'
    isEnabled: false
    ↓itemErrorText [ngx.components.UIDynamicElement-1608286979758]: 
      beanData: '{"ionBean":"GenericItem"}'
      tagName: ion-item
      ↓Text [ngx.components.UIText-1608286979761]: 
        i18n: true
        textValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:'repMandartory'| translate
      ↓Style [ngx.components.UIStyle-1608286979764]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                'background-color: transparent;
                margin:0px;
                padding:0px;
                color:#ff0000;
                '
  ↓Directive [ngx.components.UIControlDirective-1627489474757]: 
    directiveName: If
    directiveSource: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:this.disabled else ElseBlock_1627489489614
    ↓UseSharedComponent [ngx.components.UIUseShared-1627489659265]: 
      sharedcomponent: C8Oforms_NGX.MobileApplication.Application.sharedLabelElem
      ↓item [ngx.components.UIUseVariable-1627489659268]: 
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:(page as any).pageOwner.item
      ↓setStyle [ngx.components.UIUseVariable-1627489659271]: 
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:true
  ↓Tag [ngx.components.UIElement-1627489489614]: 
    identifier: ElseBlock_1627489489614
    tagName: ng-template
    ↓Div [ngx.components.UIDynamicElement-1627489589350]: 
      beanData: '{"ionBean":"DivTag"}'
      tagName: div
      ↓Attr2 [ngx.components.UIAttribute-1627489618115]: 
        attrName: '[ngClass]'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:['styledivnormal']
      ↓UseSharedComponent [ngx.components.UIUseShared-1608286979452]: 
        sharedcomponent: C8Oforms_NGX.MobileApplication.Application.sharedLabelElem
        ↓item [ngx.components.UIUseVariable-1608286979455]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:(page as any).pageOwner.item
        ↓setStyle [ngx.components.UIUseVariable-1610359558623]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:true
  ↓Attr2 [ngx.components.UIAttribute-1608286979767]: 
    attrName: '[ngClass]'
    attrValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: 'script:((page as any).pageOwner.item.config.mandatory && (page as any).pageOwner.item.config.disabled == true) ? ''requiredgregoryv'' : '''''
    isEnabled: false
  ↓UseSharedComponent1 [ngx.components.UIUseShared-1608287009174]: 
    sharedcomponent: lib_ExtendedComponents_ui_ngx.MobileApplication.Application.agGrid
    ↓pagination [ngx.components.UIUseVariable-1608287020779]: 
      comment: 'boolean: true (default) or false'
      varValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:!page.global?.mobilePlat
    ↓paginationPageSize [ngx.components.UIUseVariable-1608287020781]: 
      comment: 'integer: 10 by default'
      varValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:10
    ↓rowSelection [ngx.components.UIUseVariable-1608287020783]: 
      comment: 'string: ''single'' (default) or ''multiple'''
      varValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:'single'
    ↓rowDeselection [ngx.components.UIUseVariable-1608287020785]: 
      comment: 'boolean: true (default) or false'
      varValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:true
    ↓defaultColDef [ngx.components.UIUseVariable-1608287020787]: 
      comment: 'default is {hide: false, editable: true, sortable: true, resizable: true, filter: true, checkboxSelection: false, singleClickEdit: false}'
      varValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: 'script:{autoHeight: true, hide: false, editable: true, sortable: true, resizable: true, filter: true, checkboxSelection: false, singleClickEdit: false}'
    ↓columnDefs [ngx.components.UIUseVariable-1608287020789]: 
      comment: 'Array of columnDef {headerName: ''headerName'', field: ''fieldName''} objects'
      varValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: 'script:(page as any).model?.colDef != undefined ? (page as any).model.colDef : this.disabled == true ? [{ field: ''make'' },{ field: ''model'' },{ field: ''price'' }]:[]'
    ↓rowData [ngx.components.UIUseVariable-1608287020791]: 
      comment: 'Array of row { fieldName1: ''value1'', fieldName2: ''value2'', fieldName3: true, ...} objects'
      varValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: 'script:(page as any).model?.data != undefined ? (page as any).model.data : this.disabled == true ? [{ make: ''Manufacturer 1'', model: ''Model A'', price: 35000 },{ make: ''Manufacturer 2'', model: ''Model B'', price: 32000 },{ make: ''Manufacturer 3'', model: ''Model C'', price: 72000 }] : []'
    ↓width [ngx.components.UIUseVariable-1608287020793]: 
      comment: width value in % or px
      varValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:'100%'
    ↓height [ngx.components.UIUseVariable-1608287020795]: 
      comment: height is 'auto' or value in % or px
      varValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:'auto'
    ↓class [ngx.components.UIUseVariable-1608287020797]: 
      comment: |
        'One of the themes provided here :
        
        https://www.ag-grid.com/javascript-grid-themes-provided/
        
        Also be shure to add the theme in the Theme object as :
        
        @import "../../node_modules/ag-grid-community/dist/styles/ag-theme-balham-dark/sass/ag-theme-balham-dark.scss";
        
        
        
        '
      varValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:'ag-theme-material'
    ↓id [ngx.components.UIUseVariable-1610009430303]: 
      varValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:(page as any).pageOwner.item.id
    ↓suppressCellSelection [ngx.components.UIUseVariable-1610104950014]: 
      varValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:(page as any).pageOwner.item.config.returned_value != 'cell_selected'
    ↓suppressRowClickSelection [ngx.components.UIUseVariable-1610104950016]: 
      varValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:(page as any).pageOwner.item.config.returned_value != 'row_selected'
    ↓ref [ngx.components.UIUseVariable-1610117610363]: 
      varValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:(page as any).pageOwner.item.id
    ↓overlayLoadingTemplate [ngx.components.UIUseVariable-1610136306911]: 
      varValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:page.global.overlayNoRowsTemplate
    ↓overlayNoRowsTemplate [ngx.components.UIUseVariable-1610136490779]: 
      isEnabled: false
      varValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:page.global.overlayNoRowsTemplate2
    ↓localeTextFunc [ngx.components.UIUseVariable-1616703579280]: 
      varValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: 'script:(page as any).pageOwner.local.parami18n.agGridLocaleTextFunc != null ?page.local.agGridLocaleTextFunc: null'
    ↓wrapperClass [ngx.components.UIUseVariable-1639423682389]: 
      varValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:'blue-theme'
  ↓Attr3 [ngx.components.UIAttribute-1616705808726]: 
    attrName: '*ngIf'
    attrValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: plain:page.global.relaodAgGrid == undefined
↓item [ngx.components.UICompVariable-1608287349269]: 
  value: 
↓model [ngx.components.UICompVariable-1608287349272]: 
  comment: this.formsSubmit[item['name']]
  value: '{}'
↓redList [ngx.components.UICompVariable-1608287349275]: 
  comment: this.redList[item['name']]
  value: null
↓disabled [ngx.components.UICompVariable-1608287349278]: 
  comment: this.formsSubmit[item['name']]
  value: false
↓Subscribe_Handler [ngx.components.UIEventSubscriber-1610106181577]: 
  topic: agGridCellClicked
  ↓doCellClicked [ngx.components.UICustomAction-1610106209967]: 
    actionValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            '		let callSources = false;
            		let item = null;
            		if(event.ref != undefined && event.ref != '''' && page.constructor.name === "viewerPage" && page["getPathById"] != undefined){
            			 item = page["getItemById"](+event.ref)
            			if(item != null && item.config.returned_value === "cell_selected"){
            				//keep a reference on a row
            				if((page as any).pageOwner.local.parami18n.techGrid == undefined){
            					(page as any).pageOwner.local.parami18n.techGrid = {};
            				}
            				(page as any).pageOwner.local.parami18n.techGrid[item.name] = event.event.node;
            				let grossData = event.event.value;
            				let data = "";
            				if(typeof(grossData) !== "string"){
            					data = grossData.value;
            				}
            				else{
            					data = grossData;
            				}
            				eval(page["getPathById"](event.ref) + " = data");
            				callSources = true;
            			}
            			
            		}
            		resolve({canCall: callSources, item: item}); 		
            '
    ↓If [ngx.components.UIDynamicAction-1610375875179]: 
      beanData: '{"ionBean":"IfAction","condition":"script:parent.out.canCall"}'
      ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1610375917134]: 
        beanData: '{"ionBean":"InvokeAction"}'
        stack: C8Oforms_NGX.MobileApplication.Application.UpdateFunctionsToBeCalledToDataSource
        ↓item [ngx.components.UIControlVariable-1610375944899]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:stack.doCellClicked.out.item
      ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1641317809671]: 
        beanData: '{"ionBean":"InvokeAction"}'
        stack: C8Oforms_NGX.MobileApplication.Application.executeGoToPageIfCondition
        ↓item [ngx.components.UIControlVariable-1641317809674]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:stack.doCellClicked.out.item
        ↓line [ngx.components.UIControlVariable-1641317809677]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:null
        ↓child [ngx.components.UIControlVariable-1641317809680]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:null
        ↓canExec [ngx.components.UIControlVariable-1641317809683]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:true
↓Subscribe_Handler1 [ngx.components.UIEventSubscriber-1610113781812]: 
  topic: agGridRowClicked
  ↓doAgGridRowClicked [ngx.components.UICustomAction-1610113781815]: 
    actionValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            '		let callSources = false;
            		let item = null;
            		if(event.ref != undefined && event.ref != '''' && page.constructor.name === "viewerPage" && page["getPathById"] != undefined){
            			item = page["getItemById"](+event.ref)
            			if(item != null && item.config.returned_value === "row_selected"){
            				//keep a reference on a row
            				if((page as any).pageOwner.local.parami18n.techGrid == undefined){
            					(page as any).pageOwner.local.parami18n.techGrid = {};
            				}
            				(page as any).pageOwner.local.parami18n.techGrid[item.name] = event.event.node;
            				// save result
            				let grossData = event.event.data;
            				let data = {};
            				if(grossData.__rowValue != undefined){
            					data =  grossData.__rowValue
            				}
            				else{
            					for(let i in grossData){
            						if(typeof(grossData[i]) !== "string"){
            							data[grossData[i].technicalName] = grossData[i].value;
            						}
            						else{
            							data[i] = grossData[i];
            						}
            					}
            				}
            				
            				eval(page["getPathById"](event.ref) + " = data");
            				callSources = true;
            			}
            		}
            		resolve({canCall: callSources, item: item});
            '
    ↓If [ngx.components.UIDynamicAction-1610376471655]: 
      beanData: '{"ionBean":"IfAction","condition":"script:parent.out.canCall"}'
      ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1610376471658]: 
        beanData: '{"ionBean":"InvokeAction"}'
        stack: C8Oforms_NGX.MobileApplication.Application.UpdateFunctionsToBeCalledToDataSource
        ↓item [ngx.components.UIControlVariable-1610376471661]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:stack.doAgGridRowClicked.out.item
      ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1641317853622]: 
        beanData: '{"ionBean":"InvokeAction"}'
        stack: C8Oforms_NGX.MobileApplication.Application.executeGoToPageIfCondition
        ↓item [ngx.components.UIControlVariable-1641317853625]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:stack.doAgGridRowClicked.out.item
        ↓line [ngx.components.UIControlVariable-1641317853628]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:null
        ↓child [ngx.components.UIControlVariable-1641317853631]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:null
        ↓canExec [ngx.components.UIControlVariable-1641317853634]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:true
↓Subscribe_Handler11 [ngx.components.UIEventSubscriber-1610376862261]: 
  topic: agGridRowDataChanged
  ↓doAgGridRowDataChanged [ngx.components.UICustomAction-1610376862264]: 
    actionValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            '		let callSources = false;
            		let item = null;
            		if(event.ref != undefined && event.ref != '''' && page.constructor.name === "viewerPage" && page["getPathById"] != undefined){
            			item = page["getItemById"](+event.ref);
            			if(item != null){
            				if(item.config.returned_value === "all_the_data"){
            					callSources = true;
            				}
            				else{
            					setTimeout(()=>{
            						page[''updateGridValues''](event, item);	
            					}, 0)
            				}
            			}
            		}
            		resolve({canCall: callSources, item: item});
            '
    ↓If [ngx.components.UIDynamicAction-1610376862267]: 
      beanData: '{"ionBean":"IfAction","condition":"script:parent.out.canCall"}'
      ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1610376862270]: 
        beanData: '{"ionBean":"InvokeAction"}'
        stack: C8Oforms_NGX.MobileApplication.Application.UpdateFunctionsToBeCalledToDataSource
        ↓item [ngx.components.UIControlVariable-1610376862273]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:stack.doAgGridRowDataChanged.out.item
      ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1641317861156]: 
        beanData: '{"ionBean":"InvokeAction"}'
        stack: C8Oforms_NGX.MobileApplication.Application.executeGoToPageIfCondition
        ↓item [ngx.components.UIControlVariable-1641317861161]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:stack.doAgGridRowDataChanged.out.item
        ↓line [ngx.components.UIControlVariable-1641317861164]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:null
        ↓child [ngx.components.UIControlVariable-1641317861167]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:null
        ↓canExec [ngx.components.UIControlVariable-1641317861170]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:true
↓Subscribe_Handler111 [ngx.components.UIEventSubscriber-1639576943161]: 
  isEnabled: false
  topic: agGridModelUpdated
  ↓doAgGridModelUpdated [ngx.components.UICustomAction-1639576943164]: 
    actionValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            '		console.log("there");
            		
            		let callSources = false;
            		let item = null;
            		if(event.ref != undefined && event.ref != '''' && page.constructor.name === "viewerPage" && page["getPathById"] != undefined){
            			item = page["getItemById"](+event.ref);
            			if(item != null){
            				setTimeout(()=>{
            					page[''updateGridValues''](event, item);	
            				}, 0)
            			}
            		}
            		resolve({canCall: callSources, item: item});
            '