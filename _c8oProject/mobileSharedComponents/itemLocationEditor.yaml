isEnabled: false
↓item [ngx.components.UICompVariable-1609942881601]: 
  value: 
↓idselected [ngx.components.UICompVariable-1609942881604]: 
  value: 
↓isChild [ngx.components.UICompVariable-1609942881607]: 
  value: false
↓UseSharedComponent1 [ngx.components.UIUseShared-1609942939874]: 
  sharedcomponent: C8Oforms_NGX.MobileApplication.Application.sharedQuestionElem
  ↓item [ngx.components.UIUseVariable-1609942939877]: 
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:(page as any).pageOwner.item
↓GridRowInput [ngx.components.UIDynamicElement-1609944602275]: 
  beanData: '{"ionBean":"GridRow"}'
  tagName: ion-row
  ↓GenericItem [ngx.components.UIDynamicElement-1609944602278]: 
    beanData: '{"ionBean":"GenericItem"}'
    tagName: ion-item
    ↓FormatLayout [ngx.components.UIDynamicAttr-1645090139138]: 
      beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-uppercase"}'
      comment: FormatLayout
      tagName: div
    ↓Style [ngx.components.UIStyle-1609944602284]: 
      styleContent: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              'color: #ff8206;
                font-size: 14px;
                font-weight: 600;
                font-style: normal;
                font-stretch: normal;
                line-height: normal;
                letter-spacing: normal;
              '
    ↓Text [ngx.components.UIText-1609944602287]: 
      i18n: true
      textValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: 'script:((page as any).pageOwner.local.parami18n.advancedEditing ? ''input'' : ''text_visible_before'')| translate'
  ↓GridCol [ngx.components.UIDynamicElement-1609944602290]: 
    beanData: |
      '{
       "ionBean": "GridCol",
       "SizeLg": "plain:6",
       "SizeXl": "plain:6"
      }'
    tagName: ion-col
    ↓GenericItem [ngx.components.UIDynamicElement-1609944602293]: 
      beanData: '{"ionBean":"GenericItem"}'
      tagName: ion-item
      ↓Label [ngx.components.UIDynamicElement-1609944602296]: 
        beanData: '{"ionBean":"Label","Position":"plain:stacked"}'
        tagName: ion-label
        ↓FormatLayout [ngx.components.UIDynamicAttr-1645090139140]: 
          beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-capitalize"}'
          comment: FormatLayout
          tagName: div
        ↓Text [ngx.components.UIText-1609944602302]: 
          i18n: true
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'placeholder' | translate
        ↓Style [ngx.components.UIStyle-1609944602305]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  'color: var(--ion-color-primary);
                  '
      ↓TextInput [ngx.components.UIDynamicElement-1609944602308]: 
        beanData: '{"ionBean":"Input","Debounce":"plain:0"}'
        tagName: ion-input
        ↓Attr [ngx.components.UIAttribute-1609944602311]: 
          attrName: '[(ngModel)]'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:(page as any).pageOwner.item.config.placeholder
        ↓Event [ngx.components.UIControlEvent-1609944602314]: 
          attrName: (change)
          eventName: onChange
          ↓CheckAndRegister [ngx.components.UICustomAction-1609944602317]: 
            actionValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    		if(event.srcElement.value != ""){
                    
                    		    vars.item.config.placeholder = event.srcElement.value;
                    
                    		    (page as any).pageOwner.updateState();
                    
                    		    ;
                    
                    		}
                    
                    		else{
                    
                    		    //event.srcElement.value = this.form._id;
                    
                    		    let a = vars.item.config.placeholder;
                    
                    		    vars.item.config.placeholder = vars.item.config.placeholder + " ";
                    
                    		    ;
                    
                    		    vars.item.config.placeholder= a;
                    
                    		    ;
                    
                    		}
                    
                    		resolve();
                    
                    
            isEnabled: false
            ↓item [ngx.components.UIControlVariable-1609944602320]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:item
          ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1609944602323]: 
            beanData: '{"ionBean":"InvokeAction"}'
            isEnabled: false
            stack: C8Oforms_NGX.MobileApplication.Application.checkAndRegister
            ↓noCondition [ngx.components.UIControlVariable-1609944602326]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:true
            ↓path [ngx.components.UIControlVariable-1609944602329]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:'obj.config.placeholder'
            ↓obj [ngx.components.UIControlVariable-1609944602332]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:(page as any).pageOwner.item
            ↓allowDuplicate [ngx.components.UIControlVariable-1609944602335]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:true
            ↓path2 [ngx.components.UIControlVariable-1609944602338]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:''
            ↓obj2 [ngx.components.UIControlVariable-1609944602341]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:
            ↓isNumber [ngx.components.UIControlVariable-1609944602344]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:false
            ↓isSlider [ngx.components.UIControlVariable-1609944602347]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:false
          ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1609944602350]: 
            beanData: '{"ionBean":"InvokeAction"}'
            stack: C8Oforms_NGX.MobileApplication.Application.updateState
        ↓Attr2 [ngx.components.UIAttribute-1609944602353]: 
          attrName: ondragstart
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:event.preventDefault();event.stopPropagation();
        ↓Event11 [ngx.components.UIControlEvent-1609944602356]: 
          attrName: (dragover)
          eventName: (dragover)
          ↓refuseDrop [ngx.components.UICustomAction-1609944602359]: 
            actionValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    		if(event.dataTransfer.types.includes("__c8oformsdrag")){
                    					event.preventDefault();
                    					//this.recursive(event.target, "before");
                    			}
                    		resolve();
                    
        ↓Attr3 [ngx.components.UIAttribute-1609944602362]: 
          attrName: ondragover
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:event.preventDefault()
        ↓Attr31 [ngx.components.UIAttribute-1609944602365]: 
          attrName: ondrop
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:event.preventDefault()
        ↓Attr11 [ngx.components.UIAttribute-1609944602368]: 
          attrName: '[attr.draggable]'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:false
        ↓Event11132 [ngx.components.UIControlEvent-1609944602371]: 
          attrName: (mouseenter)
          eventName: (mouseenter)
          ↓cantDrag [ngx.components.UICustomAction-1609944602374]: 
            actionValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    	    page.local.canDrag = "false";
                    		page.tick();
                    //		console.log('MOUSEENTER !!');
                    		resolve();
                    
        ↓Event111311 [ngx.components.UIControlEvent-1609944602377]: 
          attrName: (mouseleave)
          eventName: (mouseleave)
          ↓canDrag [ngx.components.UICustomAction-1609944602380]: 
            actionValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    	    page.local.canDrag = "true";
                    		page.tick();
                    //		console.log('MOUSELEAVE !!');
                    		resolve();
                    
      ↓Style [ngx.components.UIStyle-1609944602383]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                'width: 90%;
                .label{
                		margin-top: 0px !important;	
                		margin-bottom: 0px !important;	
                	}
                '
      ↓Attr2 [ngx.components.UIAttribute-1609944602386]: 
        attrName: '[ngClass]'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:'stylegenerictexteditor'
↓Directive1 [ngx.components.UIControlDirective-1623857155872]: 
  directiveName: If
  directiveSource: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
      - MobileSmartSourceType: script:(page as any).pageOwner.local.parami18n.advancedEditing
  ↓GridRowOptions [ngx.components.UIDynamicElement-1609944723587]: 
    beanData: '{"ionBean":"GridRow"}'
    tagName: ion-row
    ↓GenericItem [ngx.components.UIDynamicElement-1609944723590]: 
      beanData: '{"ionBean":"GenericItem"}'
      tagName: ion-item
      ↓FormatLayout [ngx.components.UIDynamicAttr-1645090139142]: 
        beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-uppercase"}'
        comment: FormatLayout
        tagName: div
      ↓Style [ngx.components.UIStyle-1609944723596]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                'color: #ff8206;
                  font-size: 14px;
                  font-weight: 600;
                  font-style: normal;
                  font-stretch: normal;
                  line-height: normal;
                  letter-spacing: normal;
                '
      ↓Text [ngx.components.UIText-1609944723599]: 
        i18n: true
        textValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:'option'| translate
      ↓Style1 [ngx.components.UIStyle-1609944723602]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '	.label{
                		margin-top: 0px !important;	
                		margin-bottom: 0px !important;	
                	}
                '
    ↓GridColLocationOrArea [ngx.components.UIDynamicElement-1610190383894]: 
      beanData: '{"ionBean":"GridCol","Size":"plain:12"}'
      tagName: ion-col
      ↓GenericItem [ngx.components.UIDynamicElement-1610190383897]: 
        beanData: '{"ionBean":"GenericItem"}'
        tagName: ion-item
        ↓Label [ngx.components.UIDynamicElement-1610190383900]: 
          beanData: '{"ionBean":"Label","Position":"plain:stacked"}'
          tagName: ion-label
          ↓FormatLayout [ngx.components.UIDynamicAttr-1645090139144]: 
            beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-capitalize"}'
            comment: FormatLayout
            tagName: div
          ↓Style [ngx.components.UIStyle-1610190383906]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    'color: var(--ion-color-primary);
                    '
          ↓Text [ngx.components.UIText-1610190383909]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:returned_value
        ↓Attr2 [ngx.components.UIAttribute-1610190383912]: 
          attrName: '[ngClass]'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'stylegenerictexteditor'
        ↓Style [ngx.components.UIStyle-1610190383915]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  'width: 90%;
                  .label{
                  		margin-top: 0px !important;	
                  		margin-bottom: 0px !important;	
                  	}
                  '
        ↓SelectContainer [ngx.components.UIDynamicElement-1610190383918]: 
          beanData: '{"ionBean":"Select","Interface":"plain:popover"}'
          tagName: ion-select
          ↓SelectOption [ngx.components.UIDynamicElement-1610190383921]: 
            beanData: '{"ionBean":"SelectOption","Value":"plain:get_location"}'
            tagName: ion-select-option
            ↓Text [ngx.components.UIText-1610190383924]: 
              i18n: true
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:get_location
          ↓SelectOption1 [ngx.components.UIDynamicElement-1610190383927]: 
            beanData: '{"ionBean":"SelectOption","Value":"plain:area_around_location"}'
            tagName: ion-select-option
            ↓Text [ngx.components.UIText-1610190383930]: 
              i18n: true
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:area_around_location
          ↓Attr [ngx.components.UIAttribute-1610190383939]: 
            attrName: '[(ngModel)]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:(page as any).pageOwner.item.config.returned_value
          ↓Event [ngx.components.UIControlEvent-1610190383942]: 
            attrName: (ngModelChange)
            eventName: (ngModelChange)
            ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1610190383945]: 
              beanData: '{"ionBean":"InvokeAction"}'
              stack: C8Oforms_NGX.MobileApplication.Application.updateState
    ↓GridCol2 [ngx.components.UIDynamicElement-1610191981857]: 
      beanData: '{"ionBean":"GridCol","Size":"plain:12"}'
      tagName: ion-col
      ↓GenericItem [ngx.components.UIDynamicElement-1610191981860]: 
        beanData: '{"ionBean":"GenericItem"}'
        tagName: ion-item
        ↓Label [ngx.components.UIDynamicElement-1610191981863]: 
          beanData: '{"ionBean":"Label","Position":"plain:stacked"}'
          tagName: ion-label
          ↓FormatLayout [ngx.components.UIDynamicAttr-1645090139146]: 
            beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-capitalize"}'
            comment: FormatLayout
            tagName: div
          ↓Text [ngx.components.UIText-1610191981869]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:radius_around_loc
        ↓Attr2 [ngx.components.UIAttribute-1610191981920]: 
          attrName: '[ngClass]'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'stylegenerictexteditor'
        ↓Style [ngx.components.UIStyle-1610191981923]: 
          isEnabled: false
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  'width: 90%;
                  .label{
                  		margin-top: 0px !important;	
                  		margin-bottom: 0px !important;	
                  	}
                  '
        ↓TextInput [ngx.components.UIDynamicElement-1610192011311]: 
          beanData: '{"ionBean":"Input","Debounce":"plain:0"}'
          tagName: ion-input
          ↓Attr [ngx.components.UIAttribute-1610192022816]: 
            attrName: '[(ngModel)]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:(page as any).pageOwner.item.config.radius
          ↓Event [ngx.components.UIControlEvent-1610192115777]: 
            attrName: (ngModelChange)
            eventName: (ngModelChange)
            ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1610192115780]: 
              beanData: '{"ionBean":"InvokeAction"}'
              stack: C8Oforms_NGX.MobileApplication.Application.updateState
      ↓Attr [ngx.components.UIAttribute-1610192518261]: 
        attrName: '*ngIf'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:(page as any).pageOwner.item.config.returned_value == 'area_around_location'
    ↓GridColAuoPosition [ngx.components.UIDynamicElement-1609944835833]: 
      beanData: '{"ionBean":"GridCol","Size":"plain:6"}'
      tagName: ion-col
      ↓GenericItem [ngx.components.UIDynamicElement-1609944835836]: 
        beanData: '{"ionBean":"GenericItem"}'
        tagName: ion-item
        ↓Label [ngx.components.UIDynamicElement-1609944835839]: 
          beanData: '{"ionBean":"Label"}'
          tagName: ion-label
          ↓FormatLayout [ngx.components.UIDynamicAttr-1645090139148]: 
            beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-capitalize"}'
            comment: FormatLayout
            tagName: div
          ↓Text [ngx.components.UIText-1609944835845]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:auto_get_position
        ↓ToggleButton [ngx.components.UIDynamicElement-1609944835848]: 
          beanData: '{"ionBean":"Toggle"}'
          tagName: ion-toggle
          ↓Attr [ngx.components.UIAttribute-1609944835851]: 
            attrName: '[(ngModel)]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:(page as any).pageOwner.item.config.position_auto
          ↓Event [ngx.components.UIControlEvent-1609944835854]: 
            attrName: (ionChange)
            eventName: (ionChange)
            ↓triggerSave [ngx.components.UICustomAction-1609944835857]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      		//vars.item.config.mandatory = !vars.item["config"]["mandatory"];
                      		(page as any).pageOwner.updateState();
                      		;
                      		resolve();
                      
              isEnabled: false
            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1609944835860]: 
              beanData: '{"ionBean":"InvokeAction"}'
              stack: C8Oforms_NGX.MobileApplication.Application.updateState
              ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1609944835863]: 
                beanData: '{"ionBean":"InvokeAction"}'
                stack: C8Oforms_NGX.MobileApplication.Application.tick
          ↓Attr1 [ngx.components.UIAttribute-1609944835866]: 
            attrName: 
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:item-left
    ↓GridColDisplayCorrespondingAddress [ngx.components.UIDynamicElement-1609945158811]: 
      beanData: '{"ionBean":"GridCol","Size":"plain:6"}'
      tagName: ion-col
      ↓GenericItem [ngx.components.UIDynamicElement-1609945158814]: 
        beanData: '{"ionBean":"GenericItem"}'
        tagName: ion-item
        ↓Label [ngx.components.UIDynamicElement-1609945158817]: 
          beanData: '{"ionBean":"Label"}'
          tagName: ion-label
          ↓FormatLayout [ngx.components.UIDynamicAttr-1645090139150]: 
            beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-capitalize"}'
            comment: FormatLayout
            tagName: div
          ↓Text [ngx.components.UIText-1609945158823]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:display_corresponding_address
        ↓ToggleButton [ngx.components.UIDynamicElement-1609945158826]: 
          beanData: '{"ionBean":"Toggle"}'
          tagName: ion-toggle
          ↓Attr [ngx.components.UIAttribute-1609945158829]: 
            attrName: '[(ngModel)]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:(page as any).pageOwner.item.config.corresp_addr
          ↓Event [ngx.components.UIControlEvent-1609945158832]: 
            attrName: (ionChange)
            eventName: (ionChange)
            ↓triggerSave [ngx.components.UICustomAction-1609945158835]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      		//vars.item.config.mandatory = !vars.item["config"]["mandatory"];
                      		(page as any).pageOwner.updateState();
                      		;
                      		resolve();
                      
              isEnabled: false
            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1609945158838]: 
              beanData: '{"ionBean":"InvokeAction"}'
              stack: C8Oforms_NGX.MobileApplication.Application.updateState
              ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1609945158841]: 
                beanData: '{"ionBean":"InvokeAction"}'
                stack: C8Oforms_NGX.MobileApplication.Application.tick
          ↓Attr1 [ngx.components.UIAttribute-1609945158844]: 
            attrName: 
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:item-left
    ↓GridColMandatory [ngx.components.UIDynamicElement-1609944723704]: 
      beanData: '{"ionBean":"GridCol"}'
      tagName: ion-col
      ↓GenericItem [ngx.components.UIDynamicElement-1609944723707]: 
        beanData: '{"ionBean":"GenericItem"}'
        tagName: ion-item
        ↓Label [ngx.components.UIDynamicElement-1609944723710]: 
          beanData: '{"ionBean":"Label"}'
          tagName: ion-label
          ↓FormatLayout [ngx.components.UIDynamicAttr-1645090139152]: 
            beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-capitalize"}'
            comment: FormatLayout
            tagName: div
          ↓Text [ngx.components.UIText-1609944723716]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:'mandatory' | translate
        ↓ToggleButton [ngx.components.UIDynamicElement-1609944723719]: 
          beanData: '{"ionBean":"Toggle"}'
          tagName: ion-toggle
          ↓Attr [ngx.components.UIAttribute-1609944723722]: 
            attrName: '[(ngModel)]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:(page as any).pageOwner.item.config.mandatory
          ↓Event [ngx.components.UIControlEvent-1609944723725]: 
            attrName: (ionChange)
            eventName: (ionChange)
            ↓triggerSave [ngx.components.UICustomAction-1609944723728]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      		//vars.item.config.mandatory = !vars.item["config"]["mandatory"];
                      		(page as any).pageOwner.updateState();
                      		;
                      		resolve();
                      
              isEnabled: false
            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1609944723731]: 
              beanData: '{"ionBean":"InvokeAction"}'
              stack: C8Oforms_NGX.MobileApplication.Application.updateState
              ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1609944723734]: 
                beanData: '{"ionBean":"InvokeAction"}'
                stack: C8Oforms_NGX.MobileApplication.Application.tick
          ↓Attr1 [ngx.components.UIAttribute-1609944723737]: 
            attrName: 
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:item-left