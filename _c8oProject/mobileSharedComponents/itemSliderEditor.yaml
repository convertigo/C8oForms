↓item [ngx.components.UICompVariable-1571323041796]: 
  value: 
↓idselected [ngx.components.UICompVariable-1571323041799]: 
  value: 
↓isChild [ngx.components.UICompVariable-1571845642791]: 
  value: false
↓UseSharedComponent1 [ngx.components.UIUseShared-1573666216730]: 
  sharedcomponent: C8Oforms_NGX.MobileApplication.Application.sharedQuestionElem
  ↓item [ngx.components.UIUseVariable-1573666216733]: 
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:this.item
↓GroupItemSlider [ngx.components.UIDynamicElement-1571323946585]: 
  beanData: '{"ionBean":"Listgroup"}'
  comment: LABEL
  tagName: ion-item-group
  ↓GenericItem [ngx.components.UIDynamicElement-1571324016974]: 
    beanData: '{"ionBean":"GenericItem"}'
    tagName: ion-item
    ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138209]: 
      beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-uppercase"}'
      comment: FormatLayout
      tagName: div
    ↓Text [ngx.components.UIText-1571324016980]: 
      i18n: true
      textValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:'forms_slider_style' | translate
    ↓Style [ngx.components.UIStyle-1571324016983]: 
      styleContent: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              'color: #ff8206;
                font-size: 14px;
                font-weight: 600;
                font-style: normal;
                font-stretch: normal;
                line-height: normal;
                letter-spacing: normal;
              '
    ↓Style1 [ngx.components.UIStyle-1571324016986]: 
      styleContent: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              '	.label{
              		margin-top: 0px !important;	
              		margin-bottom: 0px !important;	
              	}
              '
  ↓GridRow [ngx.components.UIDynamicElement-1571325537503]: 
    beanData: '{"ionBean":"GridRow"}'
    tagName: ion-row
    ↓GridCol_DefaultValue [ngx.components.UIDynamicElement-1571325885895]: 
      beanData: '{"ionBean":"GridCol"}'
      tagName: ion-col
      ↓GenericItem [ngx.components.UIDynamicElement-1571325885898]: 
        beanData: '{"ionBean":"GenericItem"}'
        tagName: ion-item
        ↓Attr2 [ngx.components.UIAttribute-1571325885901]: 
          attrName: '[ngClass]'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'stylegenerictexteditor'
        ↓Style [ngx.components.UIStyle-1571325885904]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  'width: 90%;
                  .label{
                  		margin-top: 0px !important;	
                  		margin-bottom: 0px !important;	
                  	}
                  '
        ↓Label [ngx.components.UIDynamicElement-1571325900497]: 
          beanData: '{"ionBean":"Label","Position":"plain:stacked"}'
          tagName: ion-label
          ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138213]: 
            beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-capitalize"}'
            comment: FormatLayout
            tagName: div
          ↓Text [ngx.components.UIText-1571325900503]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:'defaultvalue' | translate
        ↓TextInput [ngx.components.UIDynamicElement-1571325900506]: 
          beanData: |
            '{
             "ionBean": "Input",
             "Debounce": "plain:0",
             "Type": "plain:number"
            }'
          tagName: ion-input
          ↓Attr [ngx.components.UIAttribute-1571325900509]: 
            attrName: '[(ngModel)]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.item.config.defaultvalue
          ↓Event [ngx.components.UIControlEvent-1571325900512]: 
            attrName: (change)
            eventName: onChange
            ↓CheckAndRegister [ngx.components.UICustomAction-1571325900515]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '		if(event.srcElement.value != ""){
                      		    vars.item.config.defaultvalue = +event.srcElement.value;
                      		    (page as any).pageOwner.updateState();
                      
                      		    ;
                      		}
                      		else{
                      		    let a = vars.item.config.defaultvalue;
                      
                      		    vars.item.config.defaultvalue  == "" ? a = 0: null;
                      
                      		    vars.item.config.defaultvalue = vars.item.config.defaultvalue-1;
                      
                      		    ;
                      
                      		    vars.item.config.defaultvalue= a;
                      
                      		    ;
                      		}
                      
                      		resolve();
                      '
              isEnabled: false
              ↓item [ngx.components.UIControlVariable-1571325900518]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:item
            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1571325900521]: 
              beanData: '{"ionBean":"InvokeAction"}'
              isEnabled: false
              stack: C8Oforms_NGX.MobileApplication.Application.checkAndRegister
              ↓noCondition [ngx.components.UIControlVariable-1571325900524]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:false
              ↓path [ngx.components.UIControlVariable-1571325900527]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:'obj.config.defaultvalue'
              ↓obj [ngx.components.UIControlVariable-1571325900530]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.item
              ↓allowDuplicate [ngx.components.UIControlVariable-1571325900533]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:true
              ↓path2 [ngx.components.UIControlVariable-1571325900536]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:''
              ↓obj2 [ngx.components.UIControlVariable-1571325900539]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:
              ↓isNumber [ngx.components.UIControlVariable-1571325900542]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:true
              ↓isSlider [ngx.components.UIControlVariable-1571325900545]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:true
            ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1572538999166]: 
              beanData: '{"ionBean":"InvokeAction"}'
              stack: C8Oforms_NGX.MobileApplication.Application.updateState
          ↓Attr2 [ngx.components.UIAttribute-1573739358345]: 
            attrName: ondragstart
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:event.preventDefault();event.stopPropagation();
          ↓Event11 [ngx.components.UIControlEvent-1573739358348]: 
            attrName: (dragover)
            eventName: (dragover)
            ↓refuseDrop [ngx.components.UICustomAction-1573739358351]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      		if(event.dataTransfer.types.includes("__c8oformsdrag")){
                      					event.preventDefault();
                      					//this.recursive(event.target, "before");
                      			}
                      		resolve();
                      
          ↓Attr3 [ngx.components.UIAttribute-1586359668142]: 
            attrName: ondragover
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:event.preventDefault()
          ↓Attr31 [ngx.components.UIAttribute-1586359668145]: 
            attrName: ondrop
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:event.preventDefault()
          ↓Attr11 [ngx.components.UIAttribute-1602089951733]: 
            attrName: '[attr.draggable]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:false
          ↓Event11132 [ngx.components.UIControlEvent-1602181145693]: 
            attrName: (mouseenter)
            eventName: (mouseenter)
            ↓cantDrag [ngx.components.UICustomAction-1602181145696]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      	    page.local.canDrag = "false";
                      		page.tick();
                      //		console.log('MOUSEENTER !!');
                      		resolve();
                      
          ↓Event111311 [ngx.components.UIControlEvent-1602181145699]: 
            attrName: (mouseleave)
            eventName: (mouseleave)
            ↓canDrag [ngx.components.UICustomAction-1602181145702]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      	    page.local.canDrag = "true";
                      		page.tick();
                      //		console.log('MOUSELEAVE !!');
                      		resolve();
                      
      ↓Style [ngx.components.UIStyle-1571325885958]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                max-width:150px;
                
      ↓Attr [ngx.components.UIAttribute-1623855901117]: 
        attrName: '*ngIf'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:page.pageOwner.local.parami18n.advancedEditing
    ↓GridCol_MinValue [ngx.components.UIDynamicElement-1571325903342]: 
      beanData: '{"ionBean":"GridCol"}'
      tagName: ion-col
      ↓GenericItem [ngx.components.UIDynamicElement-1571325903345]: 
        beanData: '{"ionBean":"GenericItem"}'
        tagName: ion-item
        ↓Attr2 [ngx.components.UIAttribute-1571325903348]: 
          attrName: '[ngClass]'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'stylegenerictexteditor'
        ↓Style [ngx.components.UIStyle-1571325903351]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  'width: 90%;
                  .label{
                  		margin-top: 0px !important;	
                  		margin-bottom: 0px !important;	
                  	}
                  '
        ↓Label [ngx.components.UIDynamicElement-1571323946708]: 
          beanData: '{"ionBean":"Label","Position":"plain:stacked"}'
          tagName: ion-label
          ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138218]: 
            beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-capitalize"}'
            comment: FormatLayout
            tagName: div
          ↓Text [ngx.components.UIText-1571323946714]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:'minvalue' | translate
        ↓TextInput [ngx.components.UIDynamicElement-1571323946717]: 
          beanData: |
            '{
             "ionBean": "Input",
             "Debounce": "plain:0",
             "Type": "plain:number"
            }'
          tagName: ion-input
          ↓Attr [ngx.components.UIAttribute-1571323946720]: 
            attrName: '[(ngModel)]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.item.config.min
          ↓Event [ngx.components.UIControlEvent-1571323946723]: 
            attrName: (change)
            eventName: onChange
            ↓CheckAndRegister [ngx.components.UICustomAction-1571323946726]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '		if(event.srcElement.value != ""){
                      		    vars.item.config.min = +event.srcElement.value;
                      		    (page as any).pageOwner.updateState();
                      
                      		    ;
                      		}
                      		else{
                      		    let a = vars.item.config.min;
                      
                      		    vars.item.config.min  == "" ? a = 0: null;
                      
                      		    vars.item.config.min = vars.item.config.min-1;
                      
                      		    ;
                      
                      		    vars.item.config.min= a;
                      
                      		    ;
                      		}
                      
                      		resolve();
                      '
              isEnabled: false
              ↓item [ngx.components.UIControlVariable-1571323946729]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:item
            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1571323946732]: 
              beanData: '{"ionBean":"InvokeAction"}'
              isEnabled: false
              stack: C8Oforms_NGX.MobileApplication.Application.checkAndRegister
              ↓noCondition [ngx.components.UIControlVariable-1571323946735]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:false
              ↓path [ngx.components.UIControlVariable-1571323946738]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:'obj.config.min'
              ↓obj [ngx.components.UIControlVariable-1571323946741]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.item
              ↓allowDuplicate [ngx.components.UIControlVariable-1571323946744]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:true
              ↓path2 [ngx.components.UIControlVariable-1571323946747]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:''
              ↓obj2 [ngx.components.UIControlVariable-1571323946750]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:
              ↓isNumber [ngx.components.UIControlVariable-1571323946753]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:true
              ↓isSlider [ngx.components.UIControlVariable-1571323946756]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:true
            ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1572538974035]: 
              beanData: '{"ionBean":"InvokeAction"}'
              stack: C8Oforms_NGX.MobileApplication.Application.updateState
          ↓Attr2 [ngx.components.UIAttribute-1573739363982]: 
            attrName: ondragstart
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:event.preventDefault();event.stopPropagation();
          ↓Event11 [ngx.components.UIControlEvent-1573739363985]: 
            attrName: (dragover)
            eventName: (dragover)
            ↓refuseDrop [ngx.components.UICustomAction-1573739363988]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      		if(event.dataTransfer.types.includes("__c8oformsdrag")){
                      					event.preventDefault();
                      					//this.recursive(event.target, "before");
                      			}
                      		resolve();
                      
          ↓Attr3 [ngx.components.UIAttribute-1586359674714]: 
            attrName: ondragover
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:event.preventDefault()
          ↓Attr31 [ngx.components.UIAttribute-1586359674717]: 
            attrName: ondrop
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:event.preventDefault()
          ↓Attr11 [ngx.components.UIAttribute-1602090022135]: 
            attrName: '[attr.draggable]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:false
          ↓Event11132 [ngx.components.UIControlEvent-1602181154461]: 
            attrName: (mouseenter)
            eventName: (mouseenter)
            ↓cantDrag [ngx.components.UICustomAction-1602181154464]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      	    page.local.canDrag = "false";
                      		page.tick();
                      //		console.log('MOUSEENTER !!');
                      		resolve();
                      
          ↓Event111311 [ngx.components.UIControlEvent-1602181154467]: 
            attrName: (mouseleave)
            eventName: (mouseleave)
            ↓canDrag [ngx.components.UICustomAction-1602181154470]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      	    page.local.canDrag = "true";
                      		page.tick();
                      //		console.log('MOUSELEAVE !!');
                      		resolve();
                      
      ↓Style [ngx.components.UIStyle-1571325903405]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                max-width:140px;
                
    ↓GridCol_MinLabel [ngx.components.UIDynamicElement-1602778117586]: 
      beanData: '{"ionBean":"GridCol"}'
      tagName: ion-col
      ↓GenericItem [ngx.components.UIDynamicElement-1602778117589]: 
        beanData: '{"ionBean":"GenericItem"}'
        tagName: ion-item
        ↓Attr2 [ngx.components.UIAttribute-1602778117592]: 
          attrName: '[ngClass]'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'stylegenerictexteditor'
        ↓Style [ngx.components.UIStyle-1602778117595]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  'width: 90%;
                  .label{
                  		margin-top: 0px !important;	
                  		margin-bottom: 0px !important;	
                  	}
                  '
        ↓Label [ngx.components.UIDynamicElement-1602778117598]: 
          beanData: '{"ionBean":"Label","Position":"plain:stacked"}'
          tagName: ion-label
          ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138222]: 
            beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-capitalize"}'
            comment: FormatLayout
            tagName: div
          ↓Text [ngx.components.UIText-1602778117604]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:'sliderLeftLabel' | translate
        ↓TextInput [ngx.components.UIDynamicElement-1602778117607]: 
          beanData: '{"ionBean":"Input","Debounce":"plain:0"}'
          tagName: ion-input
          ↓Attr [ngx.components.UIAttribute-1602778117610]: 
            attrName: '[(ngModel)]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.item.config.sliderLeftLabel
          ↓Event [ngx.components.UIControlEvent-1602778117613]: 
            attrName: (change)
            eventName: onChange
            ↓CheckAndRegister [ngx.components.UICustomAction-1602778117616]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '		if(event.srcElement.value != ""){
                      		    vars.item.config.defaultvalue = +event.srcElement.value;
                      		    (page as any).pageOwner.updateState();
                      
                      		    ;
                      		}
                      		else{
                      		    let a = vars.item.config.defaultvalue;
                      
                      		    vars.item.config.defaultvalue  == "" ? a = 0: null;
                      
                      		    vars.item.config.defaultvalue = vars.item.config.defaultvalue-1;
                      
                      		    ;
                      
                      		    vars.item.config.defaultvalue= a;
                      
                      		    ;
                      		}
                      
                      		resolve();
                      '
              isEnabled: false
              ↓item [ngx.components.UIControlVariable-1602778117619]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:item
            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1602778117622]: 
              beanData: '{"ionBean":"InvokeAction"}'
              isEnabled: false
              stack: C8Oforms_NGX.MobileApplication.Application.checkAndRegister
              ↓noCondition [ngx.components.UIControlVariable-1602778117625]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:false
              ↓path [ngx.components.UIControlVariable-1602778117628]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:'obj.config.defaultvalue'
              ↓obj [ngx.components.UIControlVariable-1602778117631]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.item
              ↓allowDuplicate [ngx.components.UIControlVariable-1602778117634]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:true
              ↓path2 [ngx.components.UIControlVariable-1602778117637]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:''
              ↓obj2 [ngx.components.UIControlVariable-1602778117640]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:
              ↓isNumber [ngx.components.UIControlVariable-1602778117643]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:true
              ↓isSlider [ngx.components.UIControlVariable-1602778117646]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:true
            ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1602778117649]: 
              beanData: '{"ionBean":"InvokeAction"}'
              stack: C8Oforms_NGX.MobileApplication.Application.updateState
          ↓Attr2 [ngx.components.UIAttribute-1602778117652]: 
            attrName: ondragstart
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:event.preventDefault();event.stopPropagation();
          ↓Event11 [ngx.components.UIControlEvent-1602778117655]: 
            attrName: (dragover)
            eventName: (dragover)
            ↓refuseDrop [ngx.components.UICustomAction-1602778117658]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      		if(event.dataTransfer.types.includes("__c8oformsdrag")){
                      					event.preventDefault();
                      					//this.recursive(event.target, "before");
                      			}
                      		resolve();
                      
          ↓Attr3 [ngx.components.UIAttribute-1602778117661]: 
            attrName: ondragover
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:event.preventDefault()
          ↓Attr31 [ngx.components.UIAttribute-1602778117664]: 
            attrName: ondrop
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:event.preventDefault()
          ↓Attr11 [ngx.components.UIAttribute-1602778117667]: 
            attrName: '[attr.draggable]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:false
          ↓Event11132 [ngx.components.UIControlEvent-1602778117670]: 
            attrName: (mouseenter)
            eventName: (mouseenter)
            ↓cantDrag [ngx.components.UICustomAction-1602778117673]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      	    page.local.canDrag = "false";
                      		page.tick();
                      //		console.log('MOUSEENTER !!');
                      		resolve();
                      
          ↓Event111311 [ngx.components.UIControlEvent-1602778117676]: 
            attrName: (mouseleave)
            eventName: (mouseleave)
            ↓canDrag [ngx.components.UICustomAction-1602778117679]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      	    page.local.canDrag = "true";
                      		page.tick();
                      //		console.log('MOUSELEAVE !!');
                      		resolve();
                      
      ↓Style [ngx.components.UIStyle-1602778117682]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                max-width:200px;
                
      ↓Attr [ngx.components.UIAttribute-1623855990330]: 
        attrName: '*ngIf'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:page.pageOwner.local.parami18n.advancedEditing
    ↓GridCol_MaxValue [ngx.components.UIDynamicElement-1571325935593]: 
      beanData: '{"ionBean":"GridCol"}'
      tagName: ion-col
      ↓GenericItem [ngx.components.UIDynamicElement-1571325935596]: 
        beanData: '{"ionBean":"GenericItem"}'
        tagName: ion-item
        ↓Attr2 [ngx.components.UIAttribute-1571325935599]: 
          attrName: '[ngClass]'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'stylegenerictexteditor'
        ↓Style [ngx.components.UIStyle-1571325935602]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  'width: 90%;
                  .label{
                  		margin-top: 0px !important;	
                  		margin-bottom: 0px !important;	
                  	}
                  '
        ↓Label [ngx.components.UIDynamicElement-1571323946762]: 
          beanData: '{"ionBean":"Label","Position":"plain:stacked"}'
          tagName: ion-label
          ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138226]: 
            beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-capitalize"}'
            comment: FormatLayout
            tagName: div
          ↓Text [ngx.components.UIText-1571323946768]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:'maxvalue' | translate
        ↓TextInput [ngx.components.UIDynamicElement-1571323946771]: 
          beanData: |
            '{
             "ionBean": "Input",
             "Debounce": "plain:0",
             "Type": "plain:number"
            }'
          tagName: ion-input
          ↓Attr [ngx.components.UIAttribute-1571323946774]: 
            attrName: '[(ngModel)]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.item.config.max
          ↓Event [ngx.components.UIControlEvent-1571323946777]: 
            attrName: (change)
            eventName: onChange
            ↓CheckAndRegister [ngx.components.UICustomAction-1571323946780]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '		if(event.srcElement.value != ""){
                      		    vars.item.config.max = +event.srcElement.value;
                      		    (page as any).pageOwner.updateState();
                      
                      		    ;
                      		}
                      		else{
                      		    let a = vars.item.config.max;
                      
                      		    vars.item.config.max  == "" ? a = 0: null;
                      
                      		    vars.item.config.max = vars.item.config.max-1;
                      
                      		    ;
                      
                      		    vars.item.config.max= a;
                      
                      		    ;
                      		}
                      
                      		resolve();
                      '
              isEnabled: false
              ↓item [ngx.components.UIControlVariable-1571323946783]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:item
            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1571323946786]: 
              beanData: '{"ionBean":"InvokeAction"}'
              isEnabled: false
              stack: C8Oforms_NGX.MobileApplication.Application.checkAndRegister
              ↓noCondition [ngx.components.UIControlVariable-1571323946789]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:false
              ↓path [ngx.components.UIControlVariable-1571323946792]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:'obj.config.max'
              ↓obj [ngx.components.UIControlVariable-1571323946795]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.item
              ↓allowDuplicate [ngx.components.UIControlVariable-1571323946798]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:true
              ↓path2 [ngx.components.UIControlVariable-1571323946801]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:''
              ↓obj2 [ngx.components.UIControlVariable-1571323946804]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:
              ↓isNumber [ngx.components.UIControlVariable-1571323946807]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:true
              ↓isSlider [ngx.components.UIControlVariable-1571323946810]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:true
            ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1572538939493]: 
              beanData: '{"ionBean":"InvokeAction"}'
              stack: C8Oforms_NGX.MobileApplication.Application.updateState
          ↓Attr2 [ngx.components.UIAttribute-1573739374468]: 
            attrName: ondragstart
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:event.preventDefault();event.stopPropagation();
          ↓Event11 [ngx.components.UIControlEvent-1573739374471]: 
            attrName: (dragover)
            eventName: (dragover)
            ↓refuseDrop [ngx.components.UICustomAction-1573739374474]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      		if(event.dataTransfer.types.includes("__c8oformsdrag")){
                      					event.preventDefault();
                      					//this.recursive(event.target, "before");
                      			}
                      		resolve();
                      
          ↓Attr3 [ngx.components.UIAttribute-1586359679833]: 
            attrName: ondragover
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:event.preventDefault()
          ↓Attr31 [ngx.components.UIAttribute-1586359679836]: 
            attrName: ondrop
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:event.preventDefault()
          ↓Attr11 [ngx.components.UIAttribute-1602090026926]: 
            attrName: '[attr.draggable]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:false
          ↓Event11132 [ngx.components.UIControlEvent-1602181170960]: 
            attrName: (mouseenter)
            eventName: (mouseenter)
            ↓cantDrag [ngx.components.UICustomAction-1602181170963]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      	    page.local.canDrag = "false";
                      		page.tick();
                      //		console.log('MOUSEENTER !!');
                      		resolve();
                      
          ↓Event111311 [ngx.components.UIControlEvent-1602181170966]: 
            attrName: (mouseleave)
            eventName: (mouseleave)
            ↓canDrag [ngx.components.UICustomAction-1602181170969]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      	    page.local.canDrag = "true";
                      		page.tick();
                      //		console.log('MOUSELEAVE !!');
                      		resolve();
                      
      ↓Style [ngx.components.UIStyle-1571325935656]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                max-width:140px;
                
    ↓GridCol_MaxLabel [ngx.components.UIDynamicElement-1602778715556]: 
      beanData: '{"ionBean":"GridCol"}'
      tagName: ion-col
      ↓GenericItem [ngx.components.UIDynamicElement-1602778715559]: 
        beanData: '{"ionBean":"GenericItem"}'
        tagName: ion-item
        ↓Attr2 [ngx.components.UIAttribute-1602778715562]: 
          attrName: '[ngClass]'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'stylegenerictexteditor'
        ↓Style [ngx.components.UIStyle-1602778715565]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  'width: 90%;
                  .label{
                  		margin-top: 0px !important;	
                  		margin-bottom: 0px !important;	
                  	}
                  '
        ↓Label [ngx.components.UIDynamicElement-1602778715568]: 
          beanData: '{"ionBean":"Label","Position":"plain:stacked"}'
          tagName: ion-label
          ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138230]: 
            beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-capitalize"}'
            comment: FormatLayout
            tagName: div
          ↓Text [ngx.components.UIText-1602778715574]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:'sliderRightLabel' | translate
        ↓TextInput [ngx.components.UIDynamicElement-1602778715577]: 
          beanData: '{"ionBean":"Input","Debounce":"plain:0"}'
          tagName: ion-input
          ↓Attr [ngx.components.UIAttribute-1602778715580]: 
            attrName: '[(ngModel)]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.item.config.sliderRightLabel
          ↓Event [ngx.components.UIControlEvent-1602778715583]: 
            attrName: (change)
            eventName: onChange
            ↓CheckAndRegister [ngx.components.UICustomAction-1602778715586]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '		if(event.srcElement.value != ""){
                      		    vars.item.config.defaultvalue = +event.srcElement.value;
                      		    (page as any).pageOwner.updateState();
                      
                      		    ;
                      		}
                      		else{
                      		    let a = vars.item.config.defaultvalue;
                      
                      		    vars.item.config.defaultvalue  == "" ? a = 0: null;
                      
                      		    vars.item.config.defaultvalue = vars.item.config.defaultvalue-1;
                      
                      		    ;
                      
                      		    vars.item.config.defaultvalue= a;
                      
                      		    ;
                      		}
                      
                      		resolve();
                      '
              isEnabled: false
              ↓item [ngx.components.UIControlVariable-1602778715589]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:item
            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1602778715592]: 
              beanData: '{"ionBean":"InvokeAction"}'
              isEnabled: false
              stack: C8Oforms_NGX.MobileApplication.Application.checkAndRegister
              ↓noCondition [ngx.components.UIControlVariable-1602778715595]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:false
              ↓path [ngx.components.UIControlVariable-1602778715598]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:'obj.config.defaultvalue'
              ↓obj [ngx.components.UIControlVariable-1602778715601]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.item
              ↓allowDuplicate [ngx.components.UIControlVariable-1602778715604]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:true
              ↓path2 [ngx.components.UIControlVariable-1602778715607]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:''
              ↓obj2 [ngx.components.UIControlVariable-1602778715610]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:
              ↓isNumber [ngx.components.UIControlVariable-1602778715613]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:true
              ↓isSlider [ngx.components.UIControlVariable-1602778715616]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:true
            ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1602778715619]: 
              beanData: '{"ionBean":"InvokeAction"}'
              stack: C8Oforms_NGX.MobileApplication.Application.updateState
          ↓Attr2 [ngx.components.UIAttribute-1602778715622]: 
            attrName: ondragstart
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:event.preventDefault();event.stopPropagation();
          ↓Event11 [ngx.components.UIControlEvent-1602778715625]: 
            attrName: (dragover)
            eventName: (dragover)
            ↓refuseDrop [ngx.components.UICustomAction-1602778715628]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      		if(event.dataTransfer.types.includes("__c8oformsdrag")){
                      					event.preventDefault();
                      					//this.recursive(event.target, "before");
                      			}
                      		resolve();
                      
          ↓Attr3 [ngx.components.UIAttribute-1602778715631]: 
            attrName: ondragover
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:event.preventDefault()
          ↓Attr31 [ngx.components.UIAttribute-1602778715634]: 
            attrName: ondrop
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:event.preventDefault()
          ↓Attr11 [ngx.components.UIAttribute-1602778715637]: 
            attrName: '[attr.draggable]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:false
          ↓Event11132 [ngx.components.UIControlEvent-1602778715640]: 
            attrName: (mouseenter)
            eventName: (mouseenter)
            ↓cantDrag [ngx.components.UICustomAction-1602778715643]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      	    page.local.canDrag = "false";
                      		page.tick();
                      //		console.log('MOUSEENTER !!');
                      		resolve();
                      
          ↓Event111311 [ngx.components.UIControlEvent-1602778715646]: 
            attrName: (mouseleave)
            eventName: (mouseleave)
            ↓canDrag [ngx.components.UICustomAction-1602778715649]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      	    page.local.canDrag = "true";
                      		page.tick();
                      //		console.log('MOUSELEAVE !!');
                      		resolve();
                      
      ↓Style [ngx.components.UIStyle-1602778715652]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                max-width:200px;
                
      ↓Attr [ngx.components.UIAttribute-1623855998888]: 
        attrName: '*ngIf'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:page.pageOwner.local.parami18n.advancedEditing
    ↓GridCol_Step [ngx.components.UIDynamicElement-1571325948524]: 
      beanData: '{"ionBean":"GridCol"}'
      tagName: ion-col
      ↓GenericItem [ngx.components.UIDynamicElement-1571325948527]: 
        beanData: '{"ionBean":"GenericItem"}'
        tagName: ion-item
        ↓Attr2 [ngx.components.UIAttribute-1571325948530]: 
          attrName: '[ngClass]'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'stylegenerictexteditor'
        ↓Style [ngx.components.UIStyle-1571325948533]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  'width: 90%;
                  .label{
                  		margin-top: 0px !important;	
                  		margin-bottom: 0px !important;	
                  	}
                  '
        ↓Label [ngx.components.UIDynamicElement-1571323946816]: 
          beanData: '{"ionBean":"Label","Position":"plain:stacked"}'
          tagName: ion-label
          ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138234]: 
            beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-capitalize"}'
            comment: FormatLayout
            tagName: div
          ↓Text [ngx.components.UIText-1571323946822]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:'step' | translate
        ↓TextInput [ngx.components.UIDynamicElement-1571323946825]: 
          beanData: |
            '{
             "ionBean": "Input",
             "Debounce": "plain:0",
             "Type": "plain:number"
            }'
          tagName: ion-input
          ↓Attr [ngx.components.UIAttribute-1571323946828]: 
            attrName: '[(ngModel)]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.item.config.step
          ↓Event [ngx.components.UIControlEvent-1571323946831]: 
            attrName: (change)
            eventName: onChange
            ↓CheckAndRegister [ngx.components.UICustomAction-1571323946834]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '		if(event.srcElement.value != ""){
                      		    vars.item.config.step = +event.srcElement.value;
                      		    (page as any).pageOwner.updateState();
                      
                      		    ;
                      		}
                      		else{
                      		    let a = vars.item.config.step;
                      
                      		    vars.item.config.step  == "" ? a = 0: null;
                      
                      		    vars.item.config.step = vars.item.config.step-1;
                      
                      		    ;
                      
                      		    vars.item.config.step= a;
                      
                      		    ;
                      		}
                      
                      		resolve();
                      '
              isEnabled: false
              ↓item [ngx.components.UIControlVariable-1571323946837]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:item
            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1571323946840]: 
              beanData: '{"ionBean":"InvokeAction"}'
              isEnabled: false
              stack: C8Oforms_NGX.MobileApplication.Application.checkAndRegister
              ↓noCondition [ngx.components.UIControlVariable-1571323946843]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:false
              ↓path [ngx.components.UIControlVariable-1571323946846]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:'obj.config.step'
              ↓obj [ngx.components.UIControlVariable-1571323946849]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.item
              ↓allowDuplicate [ngx.components.UIControlVariable-1571323946852]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:true
              ↓path2 [ngx.components.UIControlVariable-1571323946855]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:''
              ↓obj2 [ngx.components.UIControlVariable-1571323946858]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:
              ↓isNumber [ngx.components.UIControlVariable-1571323946861]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:true
              ↓isSlider [ngx.components.UIControlVariable-1571323946864]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:false
            ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1572538911422]: 
              beanData: '{"ionBean":"InvokeAction"}'
              stack: C8Oforms_NGX.MobileApplication.Application.updateState
          ↓Attr2 [ngx.components.UIAttribute-1573739380461]: 
            attrName: ondragstart
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:event.preventDefault();event.stopPropagation();
          ↓Event11 [ngx.components.UIControlEvent-1573739380464]: 
            attrName: (dragover)
            eventName: (dragover)
            ↓refuseDrop [ngx.components.UICustomAction-1573739380467]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      		if(event.dataTransfer.types.includes("__c8oformsdrag")){
                      					event.preventDefault();
                      					//this.recursive(event.target, "before");
                      			}
                      		resolve();
                      
          ↓Attr3 [ngx.components.UIAttribute-1586359685768]: 
            attrName: ondragover
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:event.preventDefault()
          ↓Attr31 [ngx.components.UIAttribute-1586359685771]: 
            attrName: ondrop
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:event.preventDefault()
          ↓Attr11 [ngx.components.UIAttribute-1602090035495]: 
            attrName: '[attr.draggable]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:false
          ↓Event11132 [ngx.components.UIControlEvent-1602181187220]: 
            attrName: (mouseenter)
            eventName: (mouseenter)
            ↓cantDrag [ngx.components.UICustomAction-1602181187223]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      	    page.local.canDrag = "false";
                      		page.tick();
                      //		console.log('MOUSEENTER !!');
                      		resolve();
                      
          ↓Event111311 [ngx.components.UIControlEvent-1602181187226]: 
            attrName: (mouseleave)
            eventName: (mouseleave)
            ↓canDrag [ngx.components.UICustomAction-1602181187229]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      	    page.local.canDrag = "true";
                      		page.tick();
                      //		console.log('MOUSELEAVE !!');
                      		resolve();
                      
      ↓Style [ngx.components.UIStyle-1571325948536]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                max-width:140px;
                
  ↓Tag [ngx.components.UIElement-1571326365261]: 
    selfClose: true
    tagName: br
  ↓GridRow1 [ngx.components.UIDynamicElement-1571326059160]: 
    beanData: '{"ionBean":"GridRow"}'
    tagName: ion-row
    ↓GridCol111111 [ngx.components.UIDynamicElement-1571326059493]: 
      beanData: '{"ionBean":"GridCol"}'
      tagName: ion-col
      ↓GenericItem [ngx.components.UIDynamicElement-1571326059496]: 
        beanData: '{"ionBean":"GenericItem"}'
        tagName: ion-item
        ↓Attr2 [ngx.components.UIAttribute-1571326059499]: 
          attrName: '[ngClass]'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'stylegenerictexteditor'
          isEnabled: false
        ↓Style [ngx.components.UIStyle-1571326059502]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  'width: 90%;
                  .label{
                  		margin-top: 0px !important;	
                  		margin-bottom: 0px !important;	
                  	}
                  '
        ↓Label [ngx.components.UIDynamicElement-1571326059505]: 
          beanData: '{"ionBean":"Label"}'
          tagName: ion-label
          ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138239]: 
            beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-capitalize"}'
            comment: FormatLayout
            tagName: div
          ↓Text [ngx.components.UIText-1571326059511]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:Pin
        ↓ToggleButton [ngx.components.UIDynamicElement-1571326059514]: 
          beanData: '{"ionBean":"Toggle"}'
          identifier: checkedCheckbox
          tagName: ion-toggle
          ↓Attr [ngx.components.UIAttribute-1571326059517]: 
            attrName: '[(ngModel)]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.item.config.pin
          ↓Event [ngx.components.UIControlEvent-1571326059520]: 
            attrName: (ionChange)
            eventName: (ionChange)
            ↓triggerSave [ngx.components.UICustomAction-1571326059523]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      		
                      
                      
                      
                      
                      
                      
                      
                      		(page as any).pageOwner.updateState();
                      
                      
                      
                      		resolve();
                      
                      
                      
                      
          ↓Attr1 [ngx.components.UIAttribute-1571326148791]: 
            attrName: 
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:item-left
      ↓Style [ngx.components.UIStyle-1571326059526]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                max-width:180px;
                
    ↓GridCol1111111 [ngx.components.UIDynamicElement-1571326059529]: 
      beanData: '{"ionBean":"GridCol"}'
      tagName: ion-col
      ↓GenericItem [ngx.components.UIDynamicElement-1571326059532]: 
        beanData: '{"ionBean":"GenericItem"}'
        tagName: ion-item
        ↓Attr2 [ngx.components.UIAttribute-1571326059535]: 
          attrName: '[ngClass]'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'stylegenerictexteditor'
          isEnabled: false
        ↓Style [ngx.components.UIStyle-1571326059538]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  'width: 90%;
                  .label{
                  		margin-top: 0px !important;	
                  		margin-bottom: 0px !important;	
                  	}
                  '
        ↓Label [ngx.components.UIDynamicElement-1571326059541]: 
          beanData: '{"ionBean":"Label"}'
          tagName: ion-label
          ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138243]: 
            beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-capitalize"}'
            comment: FormatLayout
            tagName: div
          ↓Text [ngx.components.UIText-1571326059547]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:Snaps
        ↓ToggleButton [ngx.components.UIDynamicElement-1571326059550]: 
          beanData: '{"ionBean":"Toggle"}'
          identifier: checkedCheckbox
          tagName: ion-toggle
          ↓Attr [ngx.components.UIAttribute-1571326059553]: 
            attrName: '[(ngModel)]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.item.config.snaps
          ↓Event [ngx.components.UIControlEvent-1571326059556]: 
            attrName: (ionChange)
            eventName: (ionChange)
            ↓triggerSave [ngx.components.UICustomAction-1571326059559]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      		
                      
                      
                      
                      
                      
                      
                      
                      		(page as any).pageOwner.updateState();
                      
                      
                      
                      		resolve();
                      
                      
                      
                      
          ↓GridRow [ngx.components.UIDynamicElement-1571326170281]: 
            beanData: '{"ionBean":"GridRow"}'
            tagName: ion-row
            ↓GridCol1 [ngx.components.UIDynamicElement-1571326170284]: 
              beanData: '{"ionBean":"GridCol"}'
              tagName: ion-col
              ↓GenericItem [ngx.components.UIDynamicElement-1571326170287]: 
                beanData: '{"ionBean":"GenericItem"}'
                tagName: ion-item
                ↓Attr2 [ngx.components.UIAttribute-1571326170290]: 
                  attrName: '[ngClass]'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:'stylegenerictexteditor'
                ↓Style [ngx.components.UIStyle-1571326170293]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          'width: 90%;
                          .label{
                          		margin-top: 0px !important;	
                          		margin-bottom: 0px !important;	
                          	}
                          '
                ↓Label [ngx.components.UIDynamicElement-1571326170296]: 
                  beanData: '{"ionBean":"Label","Position":"plain:stacked"}'
                  tagName: ion-label
                  ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138246]: 
                    beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-capitalize"}'
                    comment: FormatLayout
                    tagName: div
                  ↓Text [ngx.components.UIText-1571326170302]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:debounce
                ↓TextInput [ngx.components.UIDynamicElement-1571326170305]: 
                  beanData: |
                    '{
                     "ionBean": "Input",
                     "Debounce": "plain:0",
                     "Type": "plain:number"
                    }'
                  tagName: ion-input
                  ↓Attr [ngx.components.UIAttribute-1571326170308]: 
                    attrName: '[ngModel]'
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:this.item.config.debounce
                  ↓Event [ngx.components.UIControlEvent-1571326170311]: 
                    attrName: (change)
                    eventName: onChange
                    ↓CheckAndRegister [ngx.components.UICustomAction-1571326170314]: 
                      actionValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '		if(event.srcElement.value != ""){
                              		    vars.item.config.debounce = +event.srcElement.value;
                              		    (page as any).pageOwner.updateState();
                              		    ;
                              		}
                              		else{
                              		    let a = vars.item.config.debounce;
                              		    vars.item.config.debounce  == "" ? a = 0: null;
                              		    vars.item.config.debounce = vars.item.config.debounce-1;
                              		    ;
                              		    vars.item.config.debounce= a;
                              		    ;
                              		}
                              		resolve();
                              '
                      isEnabled: false
                      ↓item [ngx.components.UIControlVariable-1571326170317]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:item
                    ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1571326170320]: 
                      beanData: '{"ionBean":"InvokeAction"}'
                      stack: C8Oforms_NGX.MobileApplication.Application.checkAndRegister
                      ↓noCondition [ngx.components.UIControlVariable-1571326170323]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:false
                      ↓path [ngx.components.UIControlVariable-1571326170326]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:'obj.config.debounce'
                      ↓obj [ngx.components.UIControlVariable-1571326170329]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:item
                      ↓allowDuplicate [ngx.components.UIControlVariable-1571326170332]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:true
                      ↓path2 [ngx.components.UIControlVariable-1571326170335]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:''
                      ↓obj2 [ngx.components.UIControlVariable-1571326170338]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:
                      ↓isNumber [ngx.components.UIControlVariable-1571326170341]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:true
                      ↓isSlider [ngx.components.UIControlVariable-1571326170344]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:false
              ↓Style [ngx.components.UIStyle-1571326170347]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        max-width:120px;
                        
            ↓GridCol11 [ngx.components.UIDynamicElement-1571326170350]: 
              beanData: '{"ionBean":"GridCol"}'
              tagName: ion-col
              ↓GenericItem [ngx.components.UIDynamicElement-1571326170353]: 
                beanData: '{"ionBean":"GenericItem"}'
                tagName: ion-item
                ↓Attr2 [ngx.components.UIAttribute-1571326170356]: 
                  attrName: '[ngClass]'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:'stylegenerictexteditor'
                ↓Style [ngx.components.UIStyle-1571326170359]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          'width: 90%;
                          .label{
                          		margin-top: 0px !important;	
                          		margin-bottom: 0px !important;	
                          	}
                          '
                ↓Label [ngx.components.UIDynamicElement-1571326170362]: 
                  beanData: '{"ionBean":"Label","Position":"plain:stacked"}'
                  tagName: ion-label
                  ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138249]: 
                    beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-capitalize"}'
                    comment: FormatLayout
                    tagName: div
                  ↓Text [ngx.components.UIText-1571326170368]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'defaultvalue' | translate
                ↓TextInput [ngx.components.UIDynamicElement-1571326170371]: 
                  beanData: |
                    '{
                     "ionBean": "Input",
                     "Debounce": "plain:0",
                     "Type": "plain:number"
                    }'
                  tagName: ion-input
                  ↓Attr [ngx.components.UIAttribute-1571326170374]: 
                    attrName: '[ngModel]'
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:this.item.config.defaultvalue
                  ↓Event [ngx.components.UIControlEvent-1571326170377]: 
                    attrName: (change)
                    eventName: onChange
                    ↓CheckAndRegister [ngx.components.UICustomAction-1571326170380]: 
                      actionValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '		if(event.srcElement.value != ""){
                              		    vars.item.config.defaultvalue = +event.srcElement.value;
                              		    (page as any).pageOwner.updateState();
                              
                              		    ;
                              		}
                              		else{
                              		    let a = vars.item.config.defaultvalue;
                              
                              		    vars.item.config.defaultvalue  == "" ? a = 0: null;
                              
                              		    vars.item.config.defaultvalue = vars.item.config.defaultvalue-1;
                              
                              		    ;
                              
                              		    vars.item.config.defaultvalue= a;
                              
                              		    ;
                              		}
                              
                              		resolve();
                              '
                      isEnabled: false
                      ↓item [ngx.components.UIControlVariable-1571326170383]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:item
                    ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1571326170386]: 
                      beanData: '{"ionBean":"InvokeAction"}'
                      stack: C8Oforms_NGX.MobileApplication.Application.checkAndRegister
                      ↓noCondition [ngx.components.UIControlVariable-1571326170389]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:false
                      ↓path [ngx.components.UIControlVariable-1571326170392]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:'obj.config.defaultvalue'
                      ↓obj [ngx.components.UIControlVariable-1571326170395]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:item
                      ↓allowDuplicate [ngx.components.UIControlVariable-1571326170398]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:true
                      ↓path2 [ngx.components.UIControlVariable-1571326170401]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:''
                      ↓obj2 [ngx.components.UIControlVariable-1571326170404]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:
                      ↓isNumber [ngx.components.UIControlVariable-1571326170407]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:true
                      ↓isSlider [ngx.components.UIControlVariable-1571326170410]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:true
              ↓Style [ngx.components.UIStyle-1571326170413]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        max-width:120px;
                        
            ↓GridCol111 [ngx.components.UIDynamicElement-1571326170416]: 
              beanData: '{"ionBean":"GridCol"}'
              tagName: ion-col
              ↓GenericItem [ngx.components.UIDynamicElement-1571326170419]: 
                beanData: '{"ionBean":"GenericItem"}'
                tagName: ion-item
                ↓Attr2 [ngx.components.UIAttribute-1571326170422]: 
                  attrName: '[ngClass]'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:'stylegenerictexteditor'
                ↓Style [ngx.components.UIStyle-1571326170425]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          'width: 90%;
                          .label{
                          		margin-top: 0px !important;	
                          		margin-bottom: 0px !important;	
                          	}
                          '
                ↓Label [ngx.components.UIDynamicElement-1571326170428]: 
                  beanData: '{"ionBean":"Label","Position":"plain:stacked"}'
                  tagName: ion-label
                  ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138251]: 
                    beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-capitalize"}'
                    comment: FormatLayout
                    tagName: div
                  ↓Text [ngx.components.UIText-1571326170434]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'minvalue' | translate
                ↓TextInput [ngx.components.UIDynamicElement-1571326170437]: 
                  beanData: |
                    '{
                     "ionBean": "Input",
                     "Debounce": "plain:0",
                     "Type": "plain:number"
                    }'
                  tagName: ion-input
                  ↓Attr [ngx.components.UIAttribute-1571326170440]: 
                    attrName: '[ngModel]'
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:this.item.config.min
                  ↓Event [ngx.components.UIControlEvent-1571326170443]: 
                    attrName: (change)
                    eventName: onChange
                    ↓CheckAndRegister [ngx.components.UICustomAction-1571326170446]: 
                      actionValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '		if(event.srcElement.value != ""){
                              		    vars.item.config.min = +event.srcElement.value;
                              		    (page as any).pageOwner.updateState();
                              
                              		    ;
                              		}
                              		else{
                              		    let a = vars.item.config.min;
                              
                              		    vars.item.config.min  == "" ? a = 0: null;
                              
                              		    vars.item.config.min = vars.item.config.min-1;
                              
                              		    ;
                              
                              		    vars.item.config.min= a;
                              
                              		    ;
                              		}
                              
                              		resolve();
                              '
                      isEnabled: false
                      ↓item [ngx.components.UIControlVariable-1571326170449]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:item
                    ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1571326170452]: 
                      beanData: '{"ionBean":"InvokeAction"}'
                      stack: C8Oforms_NGX.MobileApplication.Application.checkAndRegister
                      ↓noCondition [ngx.components.UIControlVariable-1571326170455]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:false
                      ↓path [ngx.components.UIControlVariable-1571326170458]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:'obj.config.min'
                      ↓obj [ngx.components.UIControlVariable-1571326170461]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:item
                      ↓allowDuplicate [ngx.components.UIControlVariable-1571326170464]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:true
                      ↓path2 [ngx.components.UIControlVariable-1571326170467]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:''
                      ↓obj2 [ngx.components.UIControlVariable-1571326170470]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:
                      ↓isNumber [ngx.components.UIControlVariable-1571326170473]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:true
                      ↓isSlider [ngx.components.UIControlVariable-1571326170476]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:true
              ↓Style [ngx.components.UIStyle-1571326170479]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        max-width:120px;
                        
            ↓GridCol1111 [ngx.components.UIDynamicElement-1571326170482]: 
              beanData: '{"ionBean":"GridCol"}'
              tagName: ion-col
              ↓GenericItem [ngx.components.UIDynamicElement-1571326170485]: 
                beanData: '{"ionBean":"GenericItem"}'
                tagName: ion-item
                ↓Attr2 [ngx.components.UIAttribute-1571326170488]: 
                  attrName: '[ngClass]'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:'stylegenerictexteditor'
                ↓Style [ngx.components.UIStyle-1571326170491]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          'width: 90%;
                          .label{
                          		margin-top: 0px !important;	
                          		margin-bottom: 0px !important;	
                          	}
                          '
                ↓Label [ngx.components.UIDynamicElement-1571326170494]: 
                  beanData: '{"ionBean":"Label","Position":"plain:stacked"}'
                  tagName: ion-label
                  ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138254]: 
                    beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-capitalize"}'
                    comment: FormatLayout
                    tagName: div
                  ↓Text [ngx.components.UIText-1571326170500]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'maxvalue' | translate
                ↓TextInput [ngx.components.UIDynamicElement-1571326170503]: 
                  beanData: |
                    '{
                     "ionBean": "Input",
                     "Debounce": "plain:0",
                     "Type": "plain:number"
                    }'
                  tagName: ion-input
                  ↓Attr [ngx.components.UIAttribute-1571326170506]: 
                    attrName: '[ngModel]'
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:this.item.config.max
                  ↓Event [ngx.components.UIControlEvent-1571326170509]: 
                    attrName: (change)
                    eventName: onChange
                    ↓CheckAndRegister [ngx.components.UICustomAction-1571326170512]: 
                      actionValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '		if(event.srcElement.value != ""){
                              		    vars.item.config.max = +event.srcElement.value;
                              		    (page as any).pageOwner.updateState();
                              
                              		    ;
                              		}
                              		else{
                              		    let a = vars.item.config.max;
                              
                              		    vars.item.config.max  == "" ? a = 0: null;
                              
                              		    vars.item.config.max = vars.item.config.max-1;
                              
                              		    ;
                              
                              		    vars.item.config.max= a;
                              
                              		    ;
                              		}
                              
                              		resolve();
                              '
                      isEnabled: false
                      ↓item [ngx.components.UIControlVariable-1571326170515]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:item
                    ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1571326170518]: 
                      beanData: '{"ionBean":"InvokeAction"}'
                      stack: C8Oforms_NGX.MobileApplication.Application.checkAndRegister
                      ↓noCondition [ngx.components.UIControlVariable-1571326170521]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:false
                      ↓path [ngx.components.UIControlVariable-1571326170524]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:'obj.config.max'
                      ↓obj [ngx.components.UIControlVariable-1571326170527]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:item
                      ↓allowDuplicate [ngx.components.UIControlVariable-1571326170530]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:true
                      ↓path2 [ngx.components.UIControlVariable-1571326170533]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:''
                      ↓obj2 [ngx.components.UIControlVariable-1571326170536]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:
                      ↓isNumber [ngx.components.UIControlVariable-1571326170539]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:true
                      ↓isSlider [ngx.components.UIControlVariable-1571326170542]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:true
              ↓Style [ngx.components.UIStyle-1571326170545]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        max-width:120px;
                        
            ↓GridCol11111 [ngx.components.UIDynamicElement-1571326170548]: 
              beanData: '{"ionBean":"GridCol"}'
              tagName: ion-col
              ↓GenericItem [ngx.components.UIDynamicElement-1571326170551]: 
                beanData: '{"ionBean":"GenericItem"}'
                tagName: ion-item
                ↓Attr2 [ngx.components.UIAttribute-1571326170554]: 
                  attrName: '[ngClass]'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:'stylegenerictexteditor'
                ↓Style [ngx.components.UIStyle-1571326170557]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          'width: 90%;
                          .label{
                          		margin-top: 0px !important;	
                          		margin-bottom: 0px !important;	
                          	}
                          '
                ↓Label [ngx.components.UIDynamicElement-1571326170560]: 
                  beanData: '{"ionBean":"Label","Position":"plain:stacked"}'
                  tagName: ion-label
                  ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138257]: 
                    beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-capitalize"}'
                    comment: FormatLayout
                    tagName: div
                  ↓Text [ngx.components.UIText-1571326170566]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'step' | translate
                ↓TextInput [ngx.components.UIDynamicElement-1571326170569]: 
                  beanData: |
                    '{
                     "ionBean": "Input",
                     "Debounce": "plain:0",
                     "Type": "plain:number"
                    }'
                  tagName: ion-input
                  ↓Attr [ngx.components.UIAttribute-1571326170572]: 
                    attrName: '[ngModel]'
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:this.item.config.step
                  ↓Event [ngx.components.UIControlEvent-1571326170575]: 
                    attrName: (change)
                    eventName: onChange
                    ↓CheckAndRegister [ngx.components.UICustomAction-1571326170578]: 
                      actionValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '		if(event.srcElement.value != ""){
                              		    vars.item.config.step = +event.srcElement.value;
                              		    (page as any).pageOwner.updateState();
                              
                              		    ;
                              		}
                              		else{
                              		    let a = vars.item.config.step;
                              
                              		    vars.item.config.step  == "" ? a = 0: null;
                              
                              		    vars.item.config.step = vars.item.config.step-1;
                              
                              		    ;
                              
                              		    vars.item.config.step= a;
                              
                              		    ;
                              		}
                              
                              		resolve();
                              '
                      isEnabled: false
                      ↓item [ngx.components.UIControlVariable-1571326170581]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:item
                    ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1571326170584]: 
                      beanData: '{"ionBean":"InvokeAction"}'
                      stack: C8Oforms_NGX.MobileApplication.Application.checkAndRegister
                      ↓noCondition [ngx.components.UIControlVariable-1571326170587]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:false
                      ↓path [ngx.components.UIControlVariable-1571326170590]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:'obj.config.step'
                      ↓obj [ngx.components.UIControlVariable-1571326170593]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:item
                      ↓allowDuplicate [ngx.components.UIControlVariable-1571326170596]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:true
                      ↓path2 [ngx.components.UIControlVariable-1571326170599]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:''
                      ↓obj2 [ngx.components.UIControlVariable-1571326170602]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:
                      ↓isNumber [ngx.components.UIControlVariable-1571326170605]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:true
                      ↓isSlider [ngx.components.UIControlVariable-1571326170608]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:false
              ↓Style [ngx.components.UIStyle-1571326170611]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        max-width:120px;
                        
            ↓GridCol111111 [ngx.components.UIDynamicElement-1571326170614]: 
              beanData: '{"ionBean":"GridCol"}'
              tagName: ion-col
              ↓GenericItem [ngx.components.UIDynamicElement-1571326170617]: 
                beanData: '{"ionBean":"GenericItem"}'
                tagName: ion-item
                ↓Attr2 [ngx.components.UIAttribute-1571326170620]: 
                  attrName: '[ngClass]'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:'stylegenerictexteditor'
                ↓Style [ngx.components.UIStyle-1571326170623]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          'width: 90%;
                          .label{
                          		margin-top: 0px !important;	
                          		margin-bottom: 0px !important;	
                          	}
                          '
                ↓Label [ngx.components.UIDynamicElement-1571326170626]: 
                  beanData: '{"ionBean":"Label","Position":"plain:stacked"}'
                  tagName: ion-label
                  ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138260]: 
                    beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-capitalize"}'
                    comment: FormatLayout
                    tagName: div
                  ↓Text [ngx.components.UIText-1571326170632]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:Pin
                ↓ToggleButton [ngx.components.UIDynamicElement-1571326170635]: 
                  beanData: '{"ionBean":"Toggle"}'
                  identifier: checkedCheckbox
                  tagName: ion-toggle
                  ↓Attr [ngx.components.UIAttribute-1571326170638]: 
                    attrName: '[(ngModel)]'
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:this.item.config.pin
                  ↓Event [ngx.components.UIControlEvent-1571326170641]: 
                    attrName: (ionChange)
                    eventName: (ionChange)
                    ↓triggerSave [ngx.components.UICustomAction-1571326170644]: 
                      actionValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              		
                              
                              
                              
                              
                              
                              
                              
                              		(page as any).pageOwner.updateState();
                              
                              
                              
                              		resolve();
                              
                              
                              
                              
              ↓Style [ngx.components.UIStyle-1571326170647]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        max-width:120px;
                        
            ↓GridCol1111111 [ngx.components.UIDynamicElement-1571326170650]: 
              beanData: '{"ionBean":"GridCol"}'
              tagName: ion-col
              ↓GenericItem [ngx.components.UIDynamicElement-1571326170653]: 
                beanData: '{"ionBean":"GenericItem"}'
                tagName: ion-item
                ↓Attr2 [ngx.components.UIAttribute-1571326170656]: 
                  attrName: '[ngClass]'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:'stylegenerictexteditor'
                ↓Style [ngx.components.UIStyle-1571326170659]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          'width: 90%;
                          .label{
                          		margin-top: 0px !important;	
                          		margin-bottom: 0px !important;	
                          	}
                          '
                ↓Label [ngx.components.UIDynamicElement-1571326170662]: 
                  beanData: '{"ionBean":"Label","Position":"plain:stacked"}'
                  tagName: ion-label
                  ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138262]: 
                    beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-capitalize"}'
                    comment: FormatLayout
                    tagName: div
                  ↓Text [ngx.components.UIText-1571326170668]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:Snaps
                ↓ToggleButton [ngx.components.UIDynamicElement-1571326170671]: 
                  beanData: '{"ionBean":"Toggle"}'
                  identifier: checkedCheckbox
                  tagName: ion-toggle
                  ↓Attr [ngx.components.UIAttribute-1571326170674]: 
                    attrName: '[(ngModel)]'
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:this.item.config.snaps
                  ↓Event [ngx.components.UIControlEvent-1571326170677]: 
                    attrName: (ionChange)
                    eventName: (ionChange)
                    ↓triggerSave [ngx.components.UICustomAction-1571326170680]: 
                      actionValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              		
                              
                              
                              
                              
                              
                              
                              
                              		(page as any).pageOwner.updateState();
                              
                              
                              
                              		resolve();
                              
                              
                              
                              
              ↓Style [ngx.components.UIStyle-1571326170683]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        max-width:120px;
                        
          ↓Attr1 [ngx.components.UIAttribute-1571326526752]: 
            attrName: 
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:item-left
      ↓Style [ngx.components.UIStyle-1571326059562]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                'max-width: 250px;
                '
    ↓Attr [ngx.components.UIAttribute-1623856013775]: 
      attrName: '*ngIf'
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: plain:page.pageOwner.local.parami18n.advancedEditing
↓Directive1 [ngx.components.UIControlDirective-1623855653389]: 
  directiveName: If
  directiveSource: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
      - MobileSmartSourceType: script:page.pageOwner.local.parami18n.advancedEditing
  ↓GridRow11 [ngx.components.UIDynamicElement-1571323946915]: 
    beanData: '{"ionBean":"GridRow"}'
    tagName: ion-row
    ↓GenericItem [ngx.components.UIDynamicElement-1571326383306]: 
      beanData: '{"ionBean":"GenericItem"}'
      tagName: ion-item
      ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138264]: 
        beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-uppercase"}'
        comment: FormatLayout
        tagName: div
      ↓Style [ngx.components.UIStyle-1571326383315]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                'color: #ff8206;
                  font-size: 14px;
                  font-weight: 600;
                  font-style: normal;
                  font-stretch: normal;
                  line-height: normal;
                  letter-spacing: normal;
                '
      ↓Text [ngx.components.UIText-1571326402329]: 
        i18n: true
        textValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:'option'| translate
      ↓Style1 [ngx.components.UIStyle-1571326383318]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '	.label{
                		margin-top: 0px !important;	
                		margin-bottom: 0px !important;	
                	}
                '
    ↓DividerItem [ngx.components.UIDynamicElement-1571323946918]: 
      beanData: '{"ionBean":"Listdivider","IonColor":"plain:primary"}'
      isEnabled: false
      tagName: ion-item-divider
      ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138266]: 
        beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-capitalize"}'
        comment: FormatLayout
        tagName: div
      ↓Text [ngx.components.UIText-1571323946924]: 
        i18n: true
        textValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:'option'| translate
    ↓GridCol [ngx.components.UIDynamicElement-1571323946927]: 
      beanData: '{"ionBean":"GridCol"}'
      tagName: ion-col
      ↓GenericItem [ngx.components.UIDynamicElement-1571323946930]: 
        beanData: '{"ionBean":"GenericItem"}'
        tagName: ion-item
        ↓Label [ngx.components.UIDynamicElement-1571323946933]: 
          beanData: '{"ionBean":"Label"}'
          tagName: ion-label
          ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138268]: 
            beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-capitalize"}'
            comment: FormatLayout
            tagName: div
          ↓Text [ngx.components.UIText-1571323946939]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:'mandatory' | translate
        ↓ToggleButton [ngx.components.UIDynamicElement-1571323946942]: 
          beanData: '{"ionBean":"Toggle"}'
          identifier: checkedCheckbox
          tagName: ion-toggle
          ↓Attr [ngx.components.UIAttribute-1571323946945]: 
            attrName: '[(ngModel)]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.item.config.mandatory
          ↓Event [ngx.components.UIControlEvent-1571323946948]: 
            attrName: (ionChange)
            eventName: (ionChange)
            ↓triggerSave [ngx.components.UICustomAction-1571323946951]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      		
                      		(page as any).pageOwner.updateState();
                      		resolve();
                      
          ↓Attr1 [ngx.components.UIAttribute-1571327928934]: 
            attrName: 
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:item-left