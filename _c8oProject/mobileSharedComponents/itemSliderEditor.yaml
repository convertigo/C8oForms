↓item [ngx.components.UICompVariable-1571323041796]: 
  value: 
↓idselected [ngx.components.UICompVariable-1571323041799]: 
  value: 
↓isChild [ngx.components.UICompVariable-1571845642791]: 
  value: false
↓UseSharedComponent1 [ngx.components.UIUseShared-1573666216730]: 
  sharedcomponent: C8Oforms_NGX.MobileApplication.Application.sharedQuestionElem
  ↓item [ngx.components.UIUseVariable-1573666216733]: 
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:this.item
↓GroupItemSlider [ngx.components.UIDynamicElement-1571323946585]: 
  beanData: '{"ionBean":"Listgroup"}'
  comment: LABEL
  tagName: ion-item-group
  ↓GenericItem [ngx.components.UIDynamicElement-1571324016974]: 
    beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
    tagName: ion-item
    ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138209]: 
      beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-uppercase"}'
      comment: FormatLayout
      tagName: div
    ↓Text [ngx.components.UIText-1571324016980]: 
      i18n: true
      textValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:'forms_slider_style' | translate
    ↓Style [ngx.components.UIStyle-1571324016983]: 
      styleContent: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              'color: #ff8206;
                font-size: 14px;
                font-weight: 600;
                font-style: normal;
                font-stretch: normal;
                line-height: normal;
                letter-spacing: normal;
              '
    ↓Style1 [ngx.components.UIStyle-1571324016986]: 
      styleContent: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              '	.label{
              		margin-top: 0px !important;	
              		margin-bottom: 0px !important;	
              	}
              '
  ↓GridRow [ngx.components.UIDynamicElement-1571325537503]: 
    beanData: '{"ionBean":"GridRow"}'
    tagName: ion-row
    ↓GridCol_DefaultValue [ngx.components.UIDynamicElement-1571325885895]: 
      beanData: '{"ionBean":"GridCol"}'
      tagName: ion-col
      ↓GenericItem [ngx.components.UIDynamicElement-1571325885898]: 
        beanData: '{"ionBean":"GenericItem"}'
        tagName: ion-item
        ↓Attr2 [ngx.components.UIAttribute-1571325885901]: 
          attrName: '[ngClass]'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'stylegenerictexteditor'
        ↓Style [ngx.components.UIStyle-1571325885904]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  'width: 90%;
                  .label{
                  		margin-top: 0px !important;	
                  		margin-bottom: 0px !important;	
                  	}
                  '
        ↓Label [ngx.components.UIDynamicElement-1571325900497]: 
          beanData: '{"ionBean":"Label","Position":"plain:stacked"}'
          tagName: ion-label
          ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138213]: 
            beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-capitalize"}'
            comment: FormatLayout
            tagName: div
          ↓Text [ngx.components.UIText-1571325900503]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:'defaultvalue' | translate
        ↓TextInput [ngx.components.UIDynamicElement-1571325900506]: 
          beanData: |
            '{
             "ionBean": "Input",
             "Debounce": "plain:0",
             "Type": "plain:number"
            }'
          tagName: ion-input
          ↓Attr [ngx.components.UIAttribute-1571325900509]: 
            attrName: '[(ngModel)]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.item.config.defaultvalue
          ↓Event [ngx.components.UIControlEvent-1571325900512]: 
            attrName: (change)
            eventName: onChange
            ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1572538999166]: 
              beanData: '{"ionBean":"InvokeAction"}'
              stack: C8Oforms_NGX.MobileApplication.Application.updateState
          ↓Attr2 [ngx.components.UIAttribute-1573739358345]: 
            attrName: ondragstart
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:event.preventDefault();event.stopPropagation();
          ↓Event11 [ngx.components.UIControlEvent-1573739358348]: 
            attrName: (dragover)
            eventName: (dragover)
            ↓refuseDrop [ngx.components.UICustomAction-1573739358351]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      		if(event.dataTransfer.types.includes("__c8oformsdrag")){
                      					event.preventDefault();
                      					//this.recursive(event.target, "before");
                      			}
                      		resolve();
                      
          ↓Attr3 [ngx.components.UIAttribute-1586359668142]: 
            attrName: ondragover
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:event.preventDefault()
          ↓Attr31 [ngx.components.UIAttribute-1586359668145]: 
            attrName: ondrop
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:event.preventDefault()
          ↓Attr11 [ngx.components.UIAttribute-1602089951733]: 
            attrName: '[attr.draggable]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:false
          ↓Event11132 [ngx.components.UIControlEvent-1602181145693]: 
            attrName: (mouseenter)
            eventName: (mouseenter)
            ↓cantDrag [ngx.components.UICustomAction-1602181145696]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      	    page.pageOwner.local.canDrag = "false";
                      		page.tick();
                      //		console.log('MOUSEENTER !!');
                      		resolve();
                      
          ↓Event111311 [ngx.components.UIControlEvent-1602181145699]: 
            attrName: (mouseleave)
            eventName: (mouseleave)
            ↓canDrag [ngx.components.UICustomAction-1602181145702]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      	    page.pageOwner.local.canDrag = "true";
                      		page.tick();
                      //		console.log('MOUSELEAVE !!');
                      		resolve();
                      
      ↓Style [ngx.components.UIStyle-1571325885958]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                max-width:150px;
                
      ↓Attr [ngx.components.UIAttribute-1623855901117]: 
        attrName: '*ngIf'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:this.pageOwner.local.advancedEditing
    ↓GridCol_MinValue [ngx.components.UIDynamicElement-1571325903342]: 
      beanData: '{"ionBean":"GridCol"}'
      tagName: ion-col
      ↓GenericItem [ngx.components.UIDynamicElement-1571325903345]: 
        beanData: '{"ionBean":"GenericItem"}'
        tagName: ion-item
        ↓Attr2 [ngx.components.UIAttribute-1571325903348]: 
          attrName: '[ngClass]'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'stylegenerictexteditor'
        ↓Style [ngx.components.UIStyle-1571325903351]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  'width: 90%;
                  .label{
                  		margin-top: 0px !important;	
                  		margin-bottom: 0px !important;	
                  	}
                  '
        ↓Label [ngx.components.UIDynamicElement-1571323946708]: 
          beanData: '{"ionBean":"Label","Position":"plain:stacked"}'
          tagName: ion-label
          ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138218]: 
            beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-capitalize"}'
            comment: FormatLayout
            tagName: div
          ↓Text [ngx.components.UIText-1571323946714]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:'minvalue' | translate
        ↓TextInput [ngx.components.UIDynamicElement-1571323946717]: 
          beanData: |
            '{
             "ionBean": "Input",
             "Debounce": "plain:0",
             "Type": "plain:number"
            }'
          tagName: ion-input
          ↓Attr [ngx.components.UIAttribute-1571323946720]: 
            attrName: '[(ngModel)]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.item.config.min
          ↓Event [ngx.components.UIControlEvent-1571323946723]: 
            attrName: (change)
            eventName: onChange
            ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1572538974035]: 
              beanData: '{"ionBean":"InvokeAction"}'
              stack: C8Oforms_NGX.MobileApplication.Application.updateState
            ↓CustomAsyncAction [ngx.components.UICustomAsyncAction-1646231594683]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      		try {
                      			console.log("onChange MinValue");
                      		} catch (e) {
                      		
                      		} finally {
                      			return;
                      		}
                      
          ↓Attr2 [ngx.components.UIAttribute-1573739363982]: 
            attrName: ondragstart
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:event.preventDefault();event.stopPropagation();
          ↓Event11 [ngx.components.UIControlEvent-1573739363985]: 
            attrName: (dragover)
            eventName: (dragover)
            ↓refuseDrop [ngx.components.UICustomAction-1573739363988]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      		if(event.dataTransfer.types.includes("__c8oformsdrag")){
                      					event.preventDefault();
                      					//this.recursive(event.target, "before");
                      			}
                      		resolve();
                      
          ↓Attr3 [ngx.components.UIAttribute-1586359674714]: 
            attrName: ondragover
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:event.preventDefault()
          ↓Attr31 [ngx.components.UIAttribute-1586359674717]: 
            attrName: ondrop
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:event.preventDefault()
          ↓Attr11 [ngx.components.UIAttribute-1602090022135]: 
            attrName: '[attr.draggable]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:false
          ↓Event11132 [ngx.components.UIControlEvent-1602181154461]: 
            attrName: (mouseenter)
            eventName: (mouseenter)
            ↓cantDrag [ngx.components.UICustomAction-1602181154464]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      	    page.pageOwner.local.canDrag = "false";
                      		page.tick();
                      //		console.log('MOUSEENTER !!');
                      		resolve();
                      
          ↓Event111311 [ngx.components.UIControlEvent-1602181154467]: 
            attrName: (mouseleave)
            eventName: (mouseleave)
            ↓canDrag [ngx.components.UICustomAction-1602181154470]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      	    page.pageOwner.local.canDrag = "true";
                      		page.tick();
                      //		console.log('MOUSELEAVE !!');
                      		resolve();
                      
      ↓Style [ngx.components.UIStyle-1571325903405]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                max-width:140px;
                
    ↓GridCol_MinLabel [ngx.components.UIDynamicElement-1602778117586]: 
      beanData: '{"ionBean":"GridCol"}'
      tagName: ion-col
      ↓GenericItem [ngx.components.UIDynamicElement-1602778117589]: 
        beanData: '{"ionBean":"GenericItem"}'
        tagName: ion-item
        ↓Attr2 [ngx.components.UIAttribute-1602778117592]: 
          attrName: '[ngClass]'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'stylegenerictexteditor'
        ↓Style [ngx.components.UIStyle-1602778117595]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  'width: 90%;
                  .label{
                  		margin-top: 0px !important;	
                  		margin-bottom: 0px !important;	
                  	}
                  '
        ↓Label [ngx.components.UIDynamicElement-1602778117598]: 
          beanData: '{"ionBean":"Label","Position":"plain:stacked"}'
          tagName: ion-label
          ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138222]: 
            beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-capitalize"}'
            comment: FormatLayout
            tagName: div
          ↓Text [ngx.components.UIText-1602778117604]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:'sliderLeftLabel' | translate
        ↓TextInput [ngx.components.UIDynamicElement-1602778117607]: 
          beanData: '{"ionBean":"Input","Debounce":"plain:0"}'
          tagName: ion-input
          ↓Attr [ngx.components.UIAttribute-1602778117610]: 
            attrName: '[(ngModel)]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.item.config.sliderLeftLabel
          ↓Event [ngx.components.UIControlEvent-1602778117613]: 
            attrName: (change)
            eventName: onChange
            ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1602778117649]: 
              beanData: '{"ionBean":"InvokeAction"}'
              stack: C8Oforms_NGX.MobileApplication.Application.updateState
          ↓Attr2 [ngx.components.UIAttribute-1602778117652]: 
            attrName: ondragstart
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:event.preventDefault();event.stopPropagation();
          ↓Event11 [ngx.components.UIControlEvent-1602778117655]: 
            attrName: (dragover)
            eventName: (dragover)
            ↓refuseDrop [ngx.components.UICustomAction-1602778117658]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      		if(event.dataTransfer.types.includes("__c8oformsdrag")){
                      					event.preventDefault();
                      					//this.recursive(event.target, "before");
                      			}
                      		resolve();
                      
          ↓Attr3 [ngx.components.UIAttribute-1602778117661]: 
            attrName: ondragover
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:event.preventDefault()
          ↓Attr31 [ngx.components.UIAttribute-1602778117664]: 
            attrName: ondrop
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:event.preventDefault()
          ↓Attr11 [ngx.components.UIAttribute-1602778117667]: 
            attrName: '[attr.draggable]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:false
          ↓Event11132 [ngx.components.UIControlEvent-1602778117670]: 
            attrName: (mouseenter)
            eventName: (mouseenter)
            ↓cantDrag [ngx.components.UICustomAction-1602778117673]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      	    page.pageOwner.local.canDrag = "false";
                      		page.tick();
                      //		console.log('MOUSEENTER !!');
                      		resolve();
                      
          ↓Event111311 [ngx.components.UIControlEvent-1602778117676]: 
            attrName: (mouseleave)
            eventName: (mouseleave)
            ↓canDrag [ngx.components.UICustomAction-1602778117679]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      	    page.pageOwner.local.canDrag = "true";
                      		page.tick();
                      //		console.log('MOUSELEAVE !!');
                      		resolve();
                      
      ↓Style [ngx.components.UIStyle-1602778117682]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                max-width:200px;
                
      ↓Attr [ngx.components.UIAttribute-1623855990330]: 
        attrName: '*ngIf'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:this.pageOwner.local.advancedEditing
    ↓GridCol_MaxValue [ngx.components.UIDynamicElement-1571325935593]: 
      beanData: '{"ionBean":"GridCol"}'
      tagName: ion-col
      ↓GenericItem [ngx.components.UIDynamicElement-1571325935596]: 
        beanData: '{"ionBean":"GenericItem"}'
        tagName: ion-item
        ↓Attr2 [ngx.components.UIAttribute-1571325935599]: 
          attrName: '[ngClass]'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'stylegenerictexteditor'
        ↓Style [ngx.components.UIStyle-1571325935602]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  'width: 90%;
                  .label{
                  		margin-top: 0px !important;	
                  		margin-bottom: 0px !important;	
                  	}
                  '
        ↓Label [ngx.components.UIDynamicElement-1571323946762]: 
          beanData: '{"ionBean":"Label","Position":"plain:stacked"}'
          tagName: ion-label
          ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138226]: 
            beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-capitalize"}'
            comment: FormatLayout
            tagName: div
          ↓Text [ngx.components.UIText-1571323946768]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:'maxvalue' | translate
        ↓TextInput [ngx.components.UIDynamicElement-1571323946771]: 
          beanData: |
            '{
             "ionBean": "Input",
             "Debounce": "plain:0",
             "Type": "plain:number"
            }'
          tagName: ion-input
          ↓Attr [ngx.components.UIAttribute-1571323946774]: 
            attrName: '[(ngModel)]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.item.config.max
          ↓Event [ngx.components.UIControlEvent-1571323946777]: 
            attrName: (change)
            eventName: onChange
            ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1572538939493]: 
              beanData: '{"ionBean":"InvokeAction"}'
              stack: C8Oforms_NGX.MobileApplication.Application.updateState
          ↓Attr2 [ngx.components.UIAttribute-1573739374468]: 
            attrName: ondragstart
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:event.preventDefault();event.stopPropagation();
          ↓Event11 [ngx.components.UIControlEvent-1573739374471]: 
            attrName: (dragover)
            eventName: (dragover)
            ↓refuseDrop [ngx.components.UICustomAction-1573739374474]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      		if(event.dataTransfer.types.includes("__c8oformsdrag")){
                      					event.preventDefault();
                      					//this.recursive(event.target, "before");
                      			}
                      		resolve();
                      
          ↓Attr3 [ngx.components.UIAttribute-1586359679833]: 
            attrName: ondragover
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:event.preventDefault()
          ↓Attr31 [ngx.components.UIAttribute-1586359679836]: 
            attrName: ondrop
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:event.preventDefault()
          ↓Attr11 [ngx.components.UIAttribute-1602090026926]: 
            attrName: '[attr.draggable]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:false
          ↓Event11132 [ngx.components.UIControlEvent-1602181170960]: 
            attrName: (mouseenter)
            eventName: (mouseenter)
            ↓cantDrag [ngx.components.UICustomAction-1602181170963]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      	    page.pageOwner.local.canDrag = "false";
                      		page.tick();
                      //		console.log('MOUSEENTER !!');
                      		resolve();
                      
          ↓Event111311 [ngx.components.UIControlEvent-1602181170966]: 
            attrName: (mouseleave)
            eventName: (mouseleave)
            ↓canDrag [ngx.components.UICustomAction-1602181170969]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      	    page.pageOwner.local.canDrag = "true";
                      		page.tick();
                      //		console.log('MOUSELEAVE !!');
                      		resolve();
                      
      ↓Style [ngx.components.UIStyle-1571325935656]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                max-width:140px;
                
    ↓GridCol_MaxLabel [ngx.components.UIDynamicElement-1602778715556]: 
      beanData: '{"ionBean":"GridCol"}'
      tagName: ion-col
      ↓GenericItem [ngx.components.UIDynamicElement-1602778715559]: 
        beanData: '{"ionBean":"GenericItem"}'
        tagName: ion-item
        ↓Attr2 [ngx.components.UIAttribute-1602778715562]: 
          attrName: '[ngClass]'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'stylegenerictexteditor'
        ↓Style [ngx.components.UIStyle-1602778715565]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  'width: 90%;
                  .label{
                  		margin-top: 0px !important;	
                  		margin-bottom: 0px !important;	
                  	}
                  '
        ↓Label [ngx.components.UIDynamicElement-1602778715568]: 
          beanData: '{"ionBean":"Label","Position":"plain:stacked"}'
          tagName: ion-label
          ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138230]: 
            beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-capitalize"}'
            comment: FormatLayout
            tagName: div
          ↓Text [ngx.components.UIText-1602778715574]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:'sliderRightLabel' | translate
        ↓TextInput [ngx.components.UIDynamicElement-1602778715577]: 
          beanData: '{"ionBean":"Input","Debounce":"plain:0"}'
          tagName: ion-input
          ↓Attr [ngx.components.UIAttribute-1602778715580]: 
            attrName: '[(ngModel)]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.item.config.sliderRightLabel
          ↓Event [ngx.components.UIControlEvent-1602778715583]: 
            attrName: (change)
            eventName: onChange
            ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1602778715619]: 
              beanData: '{"ionBean":"InvokeAction"}'
              stack: C8Oforms_NGX.MobileApplication.Application.updateState
          ↓Attr2 [ngx.components.UIAttribute-1602778715622]: 
            attrName: ondragstart
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:event.preventDefault();event.stopPropagation();
          ↓Event11 [ngx.components.UIControlEvent-1602778715625]: 
            attrName: (dragover)
            eventName: (dragover)
            ↓refuseDrop [ngx.components.UICustomAction-1602778715628]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      		if(event.dataTransfer.types.includes("__c8oformsdrag")){
                      					event.preventDefault();
                      					//this.recursive(event.target, "before");
                      			}
                      		resolve();
                      
          ↓Attr3 [ngx.components.UIAttribute-1602778715631]: 
            attrName: ondragover
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:event.preventDefault()
          ↓Attr31 [ngx.components.UIAttribute-1602778715634]: 
            attrName: ondrop
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:event.preventDefault()
          ↓Attr11 [ngx.components.UIAttribute-1602778715637]: 
            attrName: '[attr.draggable]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:false
          ↓Event11132 [ngx.components.UIControlEvent-1602778715640]: 
            attrName: (mouseenter)
            eventName: (mouseenter)
            ↓cantDrag [ngx.components.UICustomAction-1602778715643]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      	    page.pageOwner.local.canDrag = "false";
                      		page.tick();
                      //		console.log('MOUSEENTER !!');
                      		resolve();
                      
          ↓Event111311 [ngx.components.UIControlEvent-1602778715646]: 
            attrName: (mouseleave)
            eventName: (mouseleave)
            ↓canDrag [ngx.components.UICustomAction-1602778715649]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      	    page.pageOwner.local.canDrag = "true";
                      		page.tick();
                      //		console.log('MOUSELEAVE !!');
                      		resolve();
                      
      ↓Style [ngx.components.UIStyle-1602778715652]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                max-width:200px;
                
      ↓Attr [ngx.components.UIAttribute-1623855998888]: 
        attrName: '*ngIf'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:this.pageOwner.local.advancedEditing
    ↓GridCol_Step [ngx.components.UIDynamicElement-1571325948524]: 
      beanData: '{"ionBean":"GridCol"}'
      tagName: ion-col
      ↓GenericItem [ngx.components.UIDynamicElement-1571325948527]: 
        beanData: '{"ionBean":"GenericItem"}'
        tagName: ion-item
        ↓Attr2 [ngx.components.UIAttribute-1571325948530]: 
          attrName: '[ngClass]'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'stylegenerictexteditor'
        ↓Style [ngx.components.UIStyle-1571325948533]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  'width: 90%;
                  .label{
                  		margin-top: 0px !important;	
                  		margin-bottom: 0px !important;	
                  	}
                  '
        ↓Label [ngx.components.UIDynamicElement-1571323946816]: 
          beanData: '{"ionBean":"Label","Position":"plain:stacked"}'
          tagName: ion-label
          ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138234]: 
            beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-capitalize"}'
            comment: FormatLayout
            tagName: div
          ↓Text [ngx.components.UIText-1571323946822]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:'step' | translate
        ↓TextInput [ngx.components.UIDynamicElement-1571323946825]: 
          beanData: |
            '{
             "ionBean": "Input",
             "Debounce": "plain:0",
             "Type": "plain:number"
            }'
          tagName: ion-input
          ↓Attr [ngx.components.UIAttribute-1571323946828]: 
            attrName: '[(ngModel)]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.item.config.step
          ↓Event [ngx.components.UIControlEvent-1571323946831]: 
            attrName: (change)
            eventName: onChange
            ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1572538911422]: 
              beanData: '{"ionBean":"InvokeAction"}'
              stack: C8Oforms_NGX.MobileApplication.Application.updateState
          ↓Attr2 [ngx.components.UIAttribute-1573739380461]: 
            attrName: ondragstart
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:event.preventDefault();event.stopPropagation();
          ↓Event11 [ngx.components.UIControlEvent-1573739380464]: 
            attrName: (dragover)
            eventName: (dragover)
            ↓refuseDrop [ngx.components.UICustomAction-1573739380467]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      		if(event.dataTransfer.types.includes("__c8oformsdrag")){
                      					event.preventDefault();
                      					//this.recursive(event.target, "before");
                      			}
                      		resolve();
                      
          ↓Attr3 [ngx.components.UIAttribute-1586359685768]: 
            attrName: ondragover
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:event.preventDefault()
          ↓Attr31 [ngx.components.UIAttribute-1586359685771]: 
            attrName: ondrop
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:event.preventDefault()
          ↓Attr11 [ngx.components.UIAttribute-1602090035495]: 
            attrName: '[attr.draggable]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:false
          ↓Event11132 [ngx.components.UIControlEvent-1602181187220]: 
            attrName: (mouseenter)
            eventName: (mouseenter)
            ↓cantDrag [ngx.components.UICustomAction-1602181187223]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      	    page.pageOwner.local.canDrag = "false";
                      		page.tick();
                      //		console.log('MOUSEENTER !!');
                      		resolve();
                      
          ↓Event111311 [ngx.components.UIControlEvent-1602181187226]: 
            attrName: (mouseleave)
            eventName: (mouseleave)
            ↓canDrag [ngx.components.UICustomAction-1602181187229]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      	    page.pageOwner.local.canDrag = "true";
                      		page.tick();
                      //		console.log('MOUSELEAVE !!');
                      		resolve();
                      
      ↓Style [ngx.components.UIStyle-1571325948536]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                max-width:140px;
                
  ↓Tag [ngx.components.UIElement-1571326365261]: 
    selfClose: true
    tagName: br
  ↓GridRow1 [ngx.components.UIDynamicElement-1571326059160]: 
    beanData: '{"ionBean":"GridRow"}'
    tagName: ion-row
    ↓GridCol111111 [ngx.components.UIDynamicElement-1571326059493]: 
      beanData: '{"ionBean":"GridCol"}'
      tagName: ion-col
      ↓GenericItem [ngx.components.UIDynamicElement-1571326059496]: 
        beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
        tagName: ion-item
        ↓Attr2 [ngx.components.UIAttribute-1571326059499]: 
          attrName: '[ngClass]'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'stylegenerictexteditor'
          isEnabled: false
        ↓Style [ngx.components.UIStyle-1571326059502]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  'width: 90%;
                  .label{
                  		margin-top: 0px !important;	
                  		margin-bottom: 0px !important;	
                  	}
                  '
        ↓Label [ngx.components.UIDynamicElement-1571326059505]: 
          beanData: '{"ionBean":"Label"}'
          tagName: ion-label
          ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138239]: 
            beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-capitalize"}'
            comment: FormatLayout
            tagName: div
          ↓Text [ngx.components.UIText-1571326059511]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:Pin
        ↓ToggleButton [ngx.components.UIDynamicElement-1571326059514]: 
          beanData: '{"ionBean":"Toggle","SetPosition":"plain"}'
          identifier: checkedCheckbox
          tagName: ion-toggle
          ↓Attr [ngx.components.UIAttribute-1571326059517]: 
            attrName: '[(ngModel)]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.item.config.pin
          ↓Attr1 [ngx.components.UIAttribute-1646231232276]: 
            attrName: slot
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:start
          ↓Event1 [ngx.components.UIControlEvent-1646237894175]: 
            attrName: (ngModelChange)
            eventName: (ngModelChange)
            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1646237894178]: 
              beanData: '{"ionBean":"InvokeAction"}'
              stack: C8Oforms_NGX.MobileApplication.Application.updateState
      ↓Style [ngx.components.UIStyle-1571326059526]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                max-width:180px;
                
    ↓GridCol1111111 [ngx.components.UIDynamicElement-1571326059529]: 
      beanData: '{"ionBean":"GridCol"}'
      tagName: ion-col
      ↓GenericItem [ngx.components.UIDynamicElement-1571326059532]: 
        beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
        tagName: ion-item
        ↓Attr2 [ngx.components.UIAttribute-1571326059535]: 
          attrName: '[ngClass]'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'stylegenerictexteditor'
          isEnabled: false
        ↓Style [ngx.components.UIStyle-1571326059538]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  'width: 90%;
                  .label{
                  		margin-top: 0px !important;	
                  		margin-bottom: 0px !important;	
                  	}
                  '
        ↓Label [ngx.components.UIDynamicElement-1571326059541]: 
          beanData: '{"ionBean":"Label"}'
          tagName: ion-label
          ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138243]: 
            beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-capitalize"}'
            comment: FormatLayout
            tagName: div
          ↓Text [ngx.components.UIText-1571326059547]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:Snaps
        ↓ToggleButton [ngx.components.UIDynamicElement-1571326059550]: 
          beanData: '{"ionBean":"Toggle","SetPosition":"plain"}'
          identifier: checkedCheckbox
          tagName: ion-toggle
          ↓Attr [ngx.components.UIAttribute-1571326059553]: 
            attrName: '[(ngModel)]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.item.config.snaps
          ↓Attr11 [ngx.components.UIAttribute-1646231249874]: 
            attrName: slot
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:start
          ↓Event1 [ngx.components.UIControlEvent-1646237905011]: 
            attrName: (ngModelChange)
            eventName: (ngModelChange)
            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1646237905014]: 
              beanData: '{"ionBean":"InvokeAction"}'
              stack: C8Oforms_NGX.MobileApplication.Application.updateState
      ↓Style [ngx.components.UIStyle-1571326059562]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                'max-width: 250px;
                '
    ↓Attr [ngx.components.UIAttribute-1623856013775]: 
      attrName: '*ngIf'
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: plain:this.pageOwner.local.advancedEditing
↓Directive1 [ngx.components.UIControlDirective-1623855653389]: 
  directiveName: If
  directiveSource: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
      - MobileSmartSourceType: script:this.pageOwner.local.advancedEditing
  ↓GridRow11 [ngx.components.UIDynamicElement-1571323946915]: 
    beanData: '{"ionBean":"GridRow"}'
    tagName: ion-row
    ↓GridCol1 [ngx.components.UIDynamicElement-1646231295331]: 
      beanData: '{"ionBean":"GridCol","Size":"plain:12"}'
      tagName: ion-col
      ↓GenericItem [ngx.components.UIDynamicElement-1571326383306]: 
        beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
        tagName: ion-item
        ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138264]: 
          beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-uppercase"}'
          comment: FormatLayout
          tagName: div
        ↓Style [ngx.components.UIStyle-1571326383315]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  'color: #ff8206;
                    font-size: 14px;
                    font-weight: 600;
                    font-style: normal;
                    font-stretch: normal;
                    line-height: normal;
                    letter-spacing: normal;
                  '
        ↓Text [ngx.components.UIText-1571326402329]: 
          i18n: true
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'option'| translate
        ↓Style1 [ngx.components.UIStyle-1571326383318]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '	.label{
                  		margin-top: 0px !important;	
                  		margin-bottom: 0px !important;	
                  	}
                  '
    ↓GridCol [ngx.components.UIDynamicElement-1571323946927]: 
      beanData: '{"ionBean":"GridCol"}'
      tagName: ion-col
      ↓GenericItem [ngx.components.UIDynamicElement-1571323946930]: 
        beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
        tagName: ion-item
        ↓Label [ngx.components.UIDynamicElement-1571323946933]: 
          beanData: '{"ionBean":"Label"}'
          tagName: ion-label
          ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138268]: 
            beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-capitalize"}'
            comment: FormatLayout
            tagName: div
          ↓Text [ngx.components.UIText-1571323946939]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:'mandatory' | translate
        ↓ToggleButton [ngx.components.UIDynamicElement-1571323946942]: 
          beanData: '{"ionBean":"Toggle","SetPosition":"plain"}'
          identifier: checkedCheckbox
          tagName: ion-toggle
          ↓Attr [ngx.components.UIAttribute-1571323946945]: 
            attrName: '[(ngModel)]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.item.config.mandatory
          ↓Attr1 [ngx.components.UIAttribute-1571327928934]: 
            attrName: 
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:item-left
          ↓Attr11 [ngx.components.UIAttribute-1646231254077]: 
            attrName: slot
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:start
          ↓Event1 [ngx.components.UIControlEvent-1646237920214]: 
            attrName: (ngModelChange)
            eventName: (ngModelChange)
            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1646237920217]: 
              beanData: '{"ionBean":"InvokeAction"}'
              stack: C8Oforms_NGX.MobileApplication.Application.updateState