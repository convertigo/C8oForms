scriptContent: 
  - xmlizable: 
    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
    - com.twinsoft.convertigo.beans.common.FormatedContent: 
      →: |
        '/*Begin_c8o_CompImport*/
        import { C8Oforms_PopOverSourceCompletion } from ''../c8oforms.popoversourcecompletion/c8oforms-popoversourcecompletion'';
        import {KeyValue} from ''@angular/common'';
        /*End_c8o_CompImport*/
        /*Begin_c8o_CompDeclaration*/
        	/*End_c8o_CompDeclaration*/
        /*Begin_c8o_CompConstructor*/
        		/*End_c8o_CompConstructor*/
        /*Begin_c8o_CompInitialization*/
        		window["dt"] = this;
        		this.buildFilters();
        		/*End_c8o_CompInitialization*/
        /*Begin_c8o_CompFinalization*/
        		/*End_c8o_CompFinalization*/
        /*Begin_c8o_CompChanges*/
        		/*End_c8o_CompChanges*/
        /*Begin_c8o_CompDoCheck*/
        		/*End_c8o_CompDoCheck*/
        /*Begin_c8o_CompAfterContentInit*/
        		/*End_c8o_CompAfterContentInit*/
        /*Begin_c8o_CompAfterContentChecked*/
        		/*End_c8o_CompAfterContentChecked*/
        /*Begin_c8o_CompAfterViewInit*/
        		/*End_c8o_CompAfterViewInit*/
        /*Begin_c8o_CompAfterViewChecked*/
        		/*End_c8o_CompAfterViewChecked*/
        /*Begin_c8o_CompFunction*/
        	public isJSON(el){
        		try{
        			JSON.parse(el)
        			return true;
        		}
        		catch(e){
        			return false;
        		}
        	}
        	public keys(el){
        		return Object.keys(el);
        	}
        	public cptString(key, el){
        		el = JSON.parse(el);
        		let str =   this.translate.instant(key) + ": ";
        		 if(Array.isArray(el[key])){
        			str +=  el[key].join(", ")
        		 }else{
        			 str += el[key]
        		 }
        		 return str;
        	}
        	
        	public async buildFilters(){
        		try{
        			this.local.compl = null;
        			if(this.pageOwner.getTypeByActions(this.sources, this.isSource) == ''filter''){
        				let baseURL = window.location.href.indexOf("localhost") == -1 ? window.location.href.substring(0, (window.location.href.indexOf("/projects/") + 10 )  ) : "http://localhost:18080/convertigo/projects/"; 
        				let req = this.pageOwner.getEnabled(this.sources);
        				this.sources[req].vars
        				let defaultVars = {};
        				let regex = /\$\$(?:START)?(\d+)(.*?)(?:END)?(?:\d+)?\$\$/
        				try{
        					defaultVars = defaultVars = Object.keys(this.sources[req].vars).map((x=>{return {key: x, value: this.sources[req].vars[x].str != undefined ? this.sources[req].vars[x].str.replace(regex, "") : "" }})).reduce((obj, item) => Object.assign(obj, { [item.key]: item.value }), {});
        				}
        				catch(e){
        					
        				}
        				let res = await this.c8o.callJsonObject(req,{model: true, ...defaultVars}).async();
        				if(res.data && res.data[0]){
        					this.local.compl = Object.keys(res.data[0]);
        				}
        			}
        			//else{
        				//console.log("else");
        			//}
        		}
        		catch(e){
        			
        		}
        		
        	}
        	private onCompare(_left: KeyValue<any, any>, _right: KeyValue<any, any>): number {
        		return -1;
        	}
        	/*End_c8o_CompFunction*/
        '
↓GridRow1 [ngx.components.UIDynamicElement-1688138558930]: 
  beanData: '{"ionBean":"GridRow"}'
  isEnabled: false
  tagName: ion-row
  ↓GridCol [ngx.components.UIDynamicElement-1688138558919]: 
    beanData: '{"ionBean":"GridCol","Size":"plain:3"}'
    tagName: ion-col
    ↓Style [ngx.components.UIStyle-1688138629275]: 
      styleContent: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              '/**
               * Custom properties (sometimes referred to as CSS variables or cascading variables)
               * are entities defined by CSS authors that contain specific values to be reused throughout a document.
               * They are set using custom property notation, e.g.: --main-color: black;
               * and are accessed using the var() function, e.g.: color: var(--main-color);
               * You can find below your component''s properties you can customize within the page.
               * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
               * For more informations see https://ionicframework.com/docs/theming.
              **/
              //--ion-grid-column-padding	//Padding for the Column
              //--ion-grid-column-padding-lg	//Padding for the Column on lg screens and up
              //--ion-grid-column-padding-md	//Padding for the Column on md screens and up
              //--ion-grid-column-padding-sm	//Padding for the Column on sm screens and up
              //--ion-grid-column-padding-xl	//Padding for the Column on xl screens and up
              //--ion-grid-column-padding-xs	//Padding for the Column on xs screens and up
              //--ion-grid-columns	//The number of total Columns in the Grid
              background-color: #f8fafb;
              
              '
    ↓Label [ngx.components.UIDynamicElement-1688139564577]: 
      beanData: '{"ionBean":"Label"}'
      tagName: ion-label
      ↓some_text [ngx.components.UIText-1688139564580]: 
        textValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:Toolbox
      ↓Style [ngx.components.UIStyle-1688139933586]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '/**
                 * Custom properties (sometimes referred to as CSS variables or cascading variables)
                 * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                 * They are set using custom property notation, e.g.: --main-color: black;
                 * and are accessed using the var() function, e.g.: color: var(--main-color);
                 * You can find below your component''s properties you can customize within the page.
                 * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                 * For more informations see https://ionicframework.com/docs/theming.
                **/
                //--color	//Color of the label
                padding-left: 8px;
                '
  ↓GridCol1 [ngx.components.UIDynamicElement-1688138558925]: 
    beanData: '{"ionBean":"GridCol"}'
    tagName: ion-col
    ↓Label [ngx.components.UIDynamicElement-1688138558927]: 
      beanData: '{"ionBean":"Label"}'
      isEnabled: false
      tagName: ion-label
      ↓some_text [ngx.components.UIText-1688138558929]: 
        textValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:Editor
    ↓Style [ngx.components.UIStyle-1688138639137]: 
      styleContent: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              '/**
               * Custom properties (sometimes referred to as CSS variables or cascading variables)
               * are entities defined by CSS authors that contain specific values to be reused throughout a document.
               * They are set using custom property notation, e.g.: --main-color: black;
               * and are accessed using the var() function, e.g.: color: var(--main-color);
               * You can find below your component''s properties you can customize within the page.
               * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
               * For more informations see https://ionicframework.com/docs/theming.
              **/
              //--ion-grid-column-padding	//Padding for the Column
              //--ion-grid-column-padding-lg	//Padding for the Column on lg screens and up
              //--ion-grid-column-padding-md	//Padding for the Column on md screens and up
              //--ion-grid-column-padding-sm	//Padding for the Column on sm screens and up
              //--ion-grid-column-padding-xl	//Padding for the Column on xl screens and up
              //--ion-grid-column-padding-xs	//Padding for the Column on xs screens and up
              //--ion-grid-columns	//The number of total Columns in the Grid
              background-color: #f8fafb;
              '
    ↓Div [ngx.components.UIDynamicElement-1688138705507]: 
      beanData: '{"ionBean":"DivTag"}'
      isEnabled: false
      tagName: div
      ↓Style [ngx.components.UIStyle-1688138710096]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                'display: flex;
                '
      ↓Div [ngx.components.UIDynamicElement-1688138721855]: 
        beanData: '{"ionBean":"DivTag"}'
        tagName: div
        ↓Style [ngx.components.UIStyle-1688138727092]: 
        ↓Button [ngx.components.UIDynamicElement-1688138802015]: 
          beanData: '{"ionBean":"Button"}'
          tagName: ion-button
          ↓Label [ngx.components.UIDynamicElement-1688138802010]: 
            beanData: '{"ionBean":"Label"}'
            tagName: ion-label
            ↓some_text [ngx.components.UIText-1688138802012]: 
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:Router
          ↓attr [ngx.components.UIControlEvent-1688138802014]: 
          ↓Icon [ngx.components.UIDynamicElement-1688138811382]: 
            beanData: |
              '{
               "ionBean": "Icon",
               "IconName": "plain:document-outline",
               "IconSlot": "plain:start"
              }'
            tagName: ion-icon
      ↓Div1 [ngx.components.UIDynamicElement-1688138733572]: 
        beanData: '{"ionBean":"DivTag"}'
        tagName: div
        ↓Style [ngx.components.UIStyle-1688138733575]: 
        ↓SelectContainer [ngx.components.UIDynamicElement-1688139164362]: 
          beanData: '{"ionBean":"Select","ControlName":"plain:name1688139164362"}'
          tagName: ion-select
          ↓SelectOption [ngx.components.UIDynamicElement-1688139317541]: 
            beanData: '{"ionBean":"SelectOption"}'
            tagName: ion-select-option
            ↓some_text [ngx.components.UIText-1688139495637]: 
          ↓SelectOption1 [ngx.components.UIDynamicElement-1688139322954]: 
            beanData: '{"ionBean":"SelectOption"}'
            tagName: ion-select-option
            ↓some_text [ngx.components.UIText-1688139502614]: 
    ↓Breadcrumbs [ngx.components.UIDynamicElement-1688140142710]: 
      beanData: '{"ionBean":"Breadcrumbs","IonColor":"plain:primary"}'
      tagName: ion-breadcrumbs
      ↓Breadcrumb [ngx.components.UIDynamicElement-1688140142687]: 
        beanData: '{"ionBean":"Breadcrumb"}'
        tagName: ion-breadcrumb
        ↓some_text [ngx.components.UIText-1688140142689]: 
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:Home
        ↓Icon [ngx.components.UIDynamicElement-1688140282613]: 
          beanData: |
            '{
             "ionBean": "Icon",
             "IconName": "plain:arrow-forward-outline",
             "IconSlot": "plain:separator"
            }'
          tagName: ion-icon
        ↓Style [ngx.components.UIStyle-1688140323032]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '/**
                   * Custom properties (sometimes referred to as CSS variables or cascading variables)
                   * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                   * They are set using custom property notation, e.g.: --main-color: black;
                   * and are accessed using the var() function, e.g.: color: var(--main-color);
                   * You can find below your component''s properties you can customize within the page.
                   * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                   * For more informations see https://ionicframework.com/docs/theming.
                  **/
                  //--background-focused	//Background color of the breadcrumb when focused
                  //--color	//Text color of the breadcrumb
                  //--color-active	//Text color of the active breadcrumb
                  //--color-focused	//Text color of the breadcrumb when focused
                  //--color-hover	//Text color of the breadcrumb on hover
                  cursor: pointer;
                  	&:hover{
                  		text-decoration: underline;
                  	}
                  '
      ↓Breadcrumb1 [ngx.components.UIDynamicElement-1688140142691]: 
        beanData: '{"ionBean":"Breadcrumb"}'
        tagName: ion-breadcrumb
        ↓some_text [ngx.components.UIText-1688140142693]: 
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:Electronics
      ↓Breadcrumb2 [ngx.components.UIDynamicElement-1688140142695]: 
        beanData: '{"ionBean":"Breadcrumb"}'
        tagName: ion-breadcrumb
        ↓some_text [ngx.components.UIText-1688140142697]: 
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:Photography
      ↓Breadcrumb3 [ngx.components.UIDynamicElement-1688140142699]: 
        beanData: '{"ionBean":"Breadcrumb"}'
        tagName: ion-breadcrumb
        ↓some_text [ngx.components.UIText-1688140142701]: 
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:Cameras
      ↓Breadcrumb4 [ngx.components.UIDynamicElement-1688140142703]: 
        beanData: '{"ionBean":"Breadcrumb"}'
        tagName: ion-breadcrumb
        ↓some_text [ngx.components.UIText-1688140142705]: 
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:Film
      ↓Breadcrumb5 [ngx.components.UIDynamicElement-1688140142707]: 
        beanData: '{"ionBean":"Breadcrumb"}'
        tagName: ion-breadcrumb
        ↓some_text [ngx.components.UIText-1688140142709]: 
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:35 mm
↓GridRow [ngx.components.UIDynamicElement-1610637187950]: 
  beanData: '{"ionBean":"GridRow"}'
  tagName: ion-row
  ↓GridColSourcePicker [ngx.components.UIDynamicElement-1610637187953]: 
    beanData: '{"ionBean":"GridCol","Size":"plain:3"}'
    tagName: ion-col
    ↓Style [ngx.components.UIStyle-1610637187956]: 
      styleContent: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              'padding-right:20px;
              padding-left: 5px;
              
              height:100%;
              background-color: #f8fafb;
              
              '
    ↓SearchBar [ngx.components.UIDynamicElement-1634675546788]: 
      beanData: '{"ionBean":"Searchbar"}'
      tagName: ion-searchbar
      ↓Attr [ngx.components.UIAttribute-1634676653111]: 
        attrName: '[ngModel]'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:this.pageOwner.filterActions
      ↓Attr1 [ngx.components.UIAttribute-1634677968187]: 
        attrName: (ngModelChange)
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:this.pageOwner.filterActions = $event;this.ref.detectChanges()
    ↓ScrollArea [ngx.components.UIDynamicElement-1610637187959]: 
      beanData: '{"ionBean":"DivTag"}'
      tagName: div
      ↓Directive [ngx.components.UIControlDirective-1610637187962]: 
        directiveName: If
        directiveSource: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:this.pageOwner.form.pages != undefined && this.pageOwner.form.formulaire != undefined
        ↓Directive [ngx.components.UIControlDirective-1610637187965]: 
          directiveIndexName: i1
          directiveItemName: item1
          directiveSource: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:this.pageOwner.form.pages
          ↓DivPage [ngx.components.UIDynamicElement-1610637187968]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓Div [ngx.components.UIDynamicElement-1610637187971]: 
              beanData: '{"ionBean":"DivTag"}'
              tagName: div
              ↓Style [ngx.components.UIStyle-1610637187974]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        'font-size: 14px;
                          font-weight: normal;
                          font-style: normal;
                          font-stretch: normal;
                          line-height: normal;
                          letter-spacing: normal;
                          color: #4a4a4a;
                        }
                        
                        .class1610637187971:hover {
                        	cursor: pointer;
                        '
              ↓Event [ngx.components.UIControlEvent-1610637187977]: 
                ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1610637187980]: 
                  beanData: '{"ionBean":"InvokeAction"}'
                  stack: C8Oforms.MobileApplication.Application.setLocal
                  ↓val [ngx.components.UIControlVariable-1610637187983]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: 'script:this.pageOwner.local[''__hidenparams''+stack.root.scope.item1.name] == null ? false : null'
                  ↓path [ngx.components.UIControlVariable-1610637187986]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'__hidenparams'+stack.root.scope.item1.name
                  ↓InvokeSharedAction2 [ngx.components.UIDynamicInvoke-1610637187989]: 
                    beanData: '{"ionBean":"InvokeAction"}'
                    stack: C8Oforms.MobileApplication.Application.detectChanges
              ↓Icon [ngx.components.UIDynamicElement-1610637187992]: 
                beanData: '{"ionBean":"Icon","IconName":"script:this.pageOwner.local[''__hidenparams''+item1.name] == null ? ''arrow-dropdown'' : ''arrow-dropright''"}'
                comment: arrow-dropright
                tagName: ion-icon
                ↓Style [ngx.components.UIStyle-1610637187995]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '
                          }
                          
                          .class1600344265649:hover {
                          cursor: pointer;
                          '
              ↓Paragraph [ngx.components.UIDynamicElement-1610637187998]: 
                beanData: '{"ionBean":"Paragraph"}'
                tagName: p
                ↓Style [ngx.components.UIStyle-1610637188001]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          'display: inline-block;
                          margin-top:0px;
                          margin-bottom:0px;
                          }
                          .class1600344265667:hover{
                          	cursor:pointer;
                          '
                ↓Text [ngx.components.UIText-1610637188004]: 
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:item1.name
            ↓Grid [ngx.components.UIDynamicElement-1610637188007]: 
              beanData: '{"ionBean":"Grid"}'
              tagName: ion-grid
              ↓GridRow [ngx.components.UIDynamicElement-1610637188010]: 
                beanData: '{"ionBean":"GridRow"}'
                tagName: ion-row
                ↓Style [ngx.components.UIStyle-1610637188013]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '/*margin-top: 2vh;*/
                          '
                ↓Directive [ngx.components.UIControlDirective-1610637188016]: 
                  directiveIndexName: i2
                  directiveItemName: item2
                  directiveSource: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this.pageOwner.form.formulaire
                  ↓Directive1 [ngx.components.UIControlDirective-1610637188019]: 
                    directiveName: If
                    directiveSource: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:item2.config.page == this.pageOwner.form.pages[i1].pageTechName
                    ↓Directive [ngx.components.UIControlDirective-1610637188022]: 
                      directiveName: If
                      directiveSource: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:item2.type == 'ion-card' else ElseBlock_1600159691271
                      ↓Directive [ngx.components.UIControlDirective-1610637188025]: 
                        directiveIndexName: i3
                        directiveItemName: item3
                        directiveSource: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:item2.children
                        ↓Directive1 [ngx.components.UIControlDirective-1634677526963]: 
                          directiveName: If
                          directiveSource: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:this.pageOwner.getIndexOfNormalized(item3, this.pageOwner.filterActions)
                          ↓Directive [ngx.components.UIControlDirective-1610637188028]: 
                            directiveName: If
                            directiveSource: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: 'script:[''ion-label'', ''ion-title'', ''description''].indexOf(item2.type) == -1 && (this.pageOwner.getTypeByActions(this.sources) == ''html'' ? [''img'', ''file'', ''signature''].indexOf(item2.type) == -1  : true)'
                            ↓GridColTitle [ngx.components.UIDynamicElement-1646404524179]: 
                              beanData: |
                                '{
                                 "ionBean": "GridCol",
                                 "Size": "plain:4",
                                 "SizeLg": "plain:6",
                                 "SizeMd": "plain:6",
                                 "SizeSm": "plain:12",
                                 "SizeXl": "plain:3",
                                 "SizeXs": "plain:12"
                                }'
                              tagName: ion-col
                              ↓UseSharedComponent [ngx.components.UIUseShared-1610637188106]: 
                                sharedcomponent: C8Oforms.MobileApplication.Application.DraggableElementActionPalette
                                ↓item2ActionPalette [ngx.components.UIUseVariable-1610637188109]: 
                                  varValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                      - MobileSmartSourceType: script:item3
                                ↓targetType [ngx.components.UIUseVariable-1625565256247]: 
                                  varValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                      - MobileSmartSourceType: script:this.pageOwner.getTypeByActions(this.sources)
                                ↓isTs [ngx.components.UIUseVariable-1688048584779]: 
                                  varValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                      - MobileSmartSourceType: source:{"filter":"Shared","project":"C8Oforms","input":"","model":{"data":[{"priority":1610637118444,"regular":true}],"path":"?.currentObject","prefix":"","suffix":"?.type == 'ts'","custom":"","useCustom":false}}
                                ↓transform_toTsMonaco [ngx.components.UIUseVariable-1688049870219]: 
                                  varValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                      - MobileSmartSourceType: script:this.c8oforms_monacoeditor
                    ↓Tag [ngx.components.UIElement-1610637188112]: 
                      identifier: ElseBlock_1600159691271
                      tagName: ng-template
                      ↓Directive [ngx.components.UIControlDirective-1610637188115]: 
                        directiveName: If
                        directiveSource: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:item2.cat != 'action'
                        ↓Directive [ngx.components.UIControlDirective-1610637188118]: 
                          directiveName: If
                          directiveSource: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: 'script:[''ion-label'', ''ion-title'', ''description''].indexOf(item2.type) == -1 && (this.pageOwner.getTypeByActions(this.sources) == ''html'' ? [''img'', ''file'', ''signature''].indexOf(item2.type) == -1  : true)'
                          ↓Directive1 [ngx.components.UIControlDirective-1634677668380]: 
                            directiveName: If
                            directiveSource: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: script:this.pageOwner.getIndexOfNormalized(item2, this.pageOwner.filterActions)
                            ↓GridColTitle [ngx.components.UIDynamicElement-1646404363747]: 
                              beanData: |
                                '{
                                 "ionBean": "GridCol",
                                 "Size": "plain:4",
                                 "SizeLg": "plain:6",
                                 "SizeMd": "plain:6",
                                 "SizeSm": "plain:12",
                                 "SizeXl": "plain:3",
                                 "SizeXs": "plain:12"
                                }'
                              tagName: ion-col
                              ↓UseSharedComponent [ngx.components.UIUseShared-1610637188202]: 
                                sharedcomponent: C8Oforms.MobileApplication.Application.DraggableElementActionPalette
                                ↓item2ActionPalette [ngx.components.UIUseVariable-1610637188205]: 
                                  varValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                      - MobileSmartSourceType: script:item2
                                ↓targetType [ngx.components.UIUseVariable-1625565249573]: 
                                  varValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                      - MobileSmartSourceType: 'script:this.pageOwner.getTypeByActions(this.sources) != '''' ? this.pageOwner.getTypeByActions(this.sources) : this.type'
                                ↓isTs [ngx.components.UIUseVariable-1688043036930]: 
                                  varValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                      - MobileSmartSourceType: source:{"filter":"Shared","project":"C8Oforms","input":"","model":{"data":[{"priority":1610637118444,"regular":true}],"path":"?.currentObject","prefix":"","suffix":"?.type == 'ts'","custom":"","useCustom":false}}
                                ↓transform_toTsMonaco [ngx.components.UIUseVariable-1688049874284]: 
                                  varValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                      - MobileSmartSourceType: script:this.c8oforms_monacoeditor
                              ↓attr [ngx.components.UIControlEvent-1688043515140]: 
                                ↓CustomAsyncAction [ngx.components.UICustomAsyncAction-1688043520726]: 
                                  actionValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                        →: |
                                          '		try {
                                          			debugger;
                                          			page.c8o.log.debug(''[MB] ''+ props.actionFunction +'': ''+ props.actionName);
                                          		} catch (e) {
                                          		
                                          		} finally {
                                          			return;
                                          		}
                                          '
              ↓Attr [ngx.components.UIAttribute-1610637188208]: 
                attrName: '*ngIf'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:this.pageOwner.local['__hidenparams'+item1.name] == null
            ↓Style [ngx.components.UIStyle-1610637188211]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '	border-bottom: 1px solid grey;
                      }
                      .class1608568354293:hover {
                      	cursor:pointer;
                      '
      ↓Style [ngx.components.UIStyle-1610637188214]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                'height:600px;
                background-color: #f8fafb;
                overflow-x: scroll;
                '
      ↓Directive1 [ngx.components.UIControlDirective-1610657823737]: 
        directiveName: If
        directiveSource: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:this.pageOwner.form?.actions != undefined && this.pageOwner.form?.actions?.length > 0
        ↓DivActions [ngx.components.UIDynamicElement-1610658061384]: 
          beanData: '{"ionBean":"DivTag"}'
          tagName: div
          ↓Div [ngx.components.UIDynamicElement-1610658061387]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓Style [ngx.components.UIStyle-1610658061390]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      'font-size: 14px;
                        font-weight: normal;
                        font-style: normal;
                        font-stretch: normal;
                        line-height: normal;
                        letter-spacing: normal;
                        color: #4a4a4a;
                      }
                      
                      .class1610658061387:hover {
                      	cursor: pointer;
                      '
            ↓Event [ngx.components.UIControlEvent-1610658061393]: 
              ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1610658061396]: 
                beanData: '{"ionBean":"InvokeAction"}'
                stack: C8Oforms.MobileApplication.Application.setLocal
                ↓val [ngx.components.UIControlVariable-1610658061399]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: 'script:this.pageOwner.local[''__hidenparams_C8O_actions''] == null ? false : null'
                ↓path [ngx.components.UIControlVariable-1610658061402]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:'__hidenparamsparams_C8O_actions'
                ↓InvokeSharedAction2 [ngx.components.UIDynamicInvoke-1610658061405]: 
                  beanData: '{"ionBean":"InvokeAction"}'
                  stack: C8Oforms.MobileApplication.Application.detectChanges
            ↓Icon [ngx.components.UIDynamicElement-1610658061408]: 
              beanData: '{"ionBean":"Icon","IconName":"script:this.pageOwner.local[''__hidenparamsparams_C8O_actions''] == null ? ''arrow-dropdown'' : ''arrow-dropright''"}'
              comment: arrow-dropright
              tagName: ion-icon
              ↓Style [ngx.components.UIStyle-1610658061411]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '
                        }
                        
                        .class1600344265649:hover {
                        cursor: pointer;
                        '
            ↓Paragraph [ngx.components.UIDynamicElement-1610658061414]: 
              beanData: '{"ionBean":"Paragraph"}'
              tagName: p
              ↓Style [ngx.components.UIStyle-1610658061417]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        'display: inline-block;
                        margin-top:0px;
                        margin-bottom:0px;
                        }
                        .class1600344265667:hover{
                        	cursor:pointer;
                        '
              ↓Text [ngx.components.UIText-1610658061420]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:Actions
          ↓Grid [ngx.components.UIDynamicElement-1610658061423]: 
            beanData: '{"ionBean":"Grid"}'
            tagName: ion-grid
            ↓GridRow [ngx.components.UIDynamicElement-1610658061426]: 
              beanData: '{"ionBean":"GridRow"}'
              tagName: ion-row
              ↓Style [ngx.components.UIStyle-1610658061429]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '/*margin-top: 2vh;*/
                        '
              ↓Directive [ngx.components.UIControlDirective-1610658061432]: 
                directiveIndexName: i2
                directiveItemName: item2
                directiveSource: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.pageOwner.form.actions
                ↓Directive [ngx.components.UIControlDirective-1610658061531]: 
                  directiveName: If
                  directiveSource: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:item2.cat == 'action' && item2.type != 'submit'
                  ↓Directive1 [ngx.components.UIControlDirective-1634677734339]: 
                    directiveName: If
                    directiveSource: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:this.pageOwner.getIndexOfNormalized(item2, this.pageOwner.filterActions)
                    ↓GridColTitle [ngx.components.UIDynamicElement-1646404888057]: 
                      beanData: |
                        '{
                         "ionBean": "GridCol",
                         "Size": "plain:4",
                         "SizeLg": "plain:6",
                         "SizeMd": "plain:6",
                         "SizeSm": "plain:12",
                         "SizeXl": "plain:3",
                         "SizeXs": "plain:12"
                        }'
                      tagName: ion-col
                      ↓UseSharedComponent [ngx.components.UIUseShared-1610658061618]: 
                        sharedcomponent: C8Oforms.MobileApplication.Application.DraggableElementActionPalette
                        ↓item2ActionPalette [ngx.components.UIUseVariable-1610658061621]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:item2
                        ↓targetType [ngx.components.UIUseVariable-1625565235598]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:this.pageOwner.getTypeByActions(this.sources)
                        ↓isTs [ngx.components.UIUseVariable-1688048596112]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: source:{"filter":"Shared","project":"C8Oforms","input":"","model":{"data":[{"priority":1610637118444,"regular":true}],"path":"?.currentObject","prefix":"","suffix":"?.type == 'ts'","custom":"","useCustom":false}}
                        ↓transform_toTsMonaco [ngx.components.UIUseVariable-1688049877834]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:this.c8oforms_monacoeditor
            ↓Attr [ngx.components.UIAttribute-1610658061624]: 
              attrName: '*ngIf'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:this.pageOwner.local['__hidenparamsparams_C8O_actions'] == null
          ↓Style [ngx.components.UIStyle-1610658061627]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    '	border-bottom: 1px solid grey;
                    }
                    .class1608568354293:hover {
                    	cursor:pointer;
                    '
      ↓tag [ngx.components.UIControlDirective-1688374400820]: 
        directiveName: If
        directiveSource: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: source:{"filter":"Shared","project":"C8Oforms","input":"","model":{"data":[{"priority":1610637118444,"regular":true}],"path":"?.currentObject","prefix":"","suffix":"?.type == 'ts'","custom":"","useCustom":false}}
        ↓DivRouter [ngx.components.UIDynamicElement-1688374443352]: 
          beanData: '{"ionBean":"DivTag"}'
          tagName: div
          ↓Div [ngx.components.UIDynamicElement-1688374443355]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓Style [ngx.components.UIStyle-1688374443358]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      'font-size: 14px;
                        font-weight: normal;
                        font-style: normal;
                        font-stretch: normal;
                        line-height: normal;
                        letter-spacing: normal;
                        color: #4a4a4a;
                      }
                      
                      .class1610658061387:hover {
                      	cursor: pointer;
                      '
            ↓Event [ngx.components.UIControlEvent-1688374443361]: 
              ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1688374443364]: 
                beanData: '{"ionBean":"InvokeAction"}'
                stack: C8Oforms.MobileApplication.Application.setLocal
                ↓val [ngx.components.UIControlVariable-1688374443367]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: 'script:this.pageOwner.local[''__hidenparams_C8O_actions''] == null ? false : null'
                ↓path [ngx.components.UIControlVariable-1688374443370]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:'__hidenparamsparams_C8O_actions'
                ↓InvokeSharedAction2 [ngx.components.UIDynamicInvoke-1688374443373]: 
                  beanData: '{"ionBean":"InvokeAction"}'
                  stack: C8Oforms.MobileApplication.Application.detectChanges
            ↓Icon [ngx.components.UIDynamicElement-1688374443376]: 
              beanData: '{"ionBean":"Icon","IconName":"script:this.pageOwner.local[''__hidenparamsparams_C8O_actions''] == null ? ''arrow-dropdown'' : ''arrow-dropright''"}'
              comment: arrow-dropright
              tagName: ion-icon
              ↓Style [ngx.components.UIStyle-1688374443379]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '
                        }
                        
                        .class1600344265649:hover {
                        cursor: pointer;
                        '
            ↓Paragraph [ngx.components.UIDynamicElement-1688374443382]: 
              beanData: '{"ionBean":"Paragraph"}'
              tagName: p
              ↓Style [ngx.components.UIStyle-1688374443385]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        'display: inline-block;
                        margin-top:0px;
                        margin-bottom:0px;
                        }
                        .class1600344265667:hover{
                        	cursor:pointer;
                        '
              ↓Text [ngx.components.UIText-1688374443388]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:Router
          ↓Grid [ngx.components.UIDynamicElement-1688374443391]: 
            beanData: '{"ionBean":"Grid"}'
            tagName: ion-grid
            ↓GridRow [ngx.components.UIDynamicElement-1688374443394]: 
              beanData: '{"ionBean":"GridRow"}'
              tagName: ion-row
              ↓Style [ngx.components.UIStyle-1688374443397]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '/*margin-top: 2vh;*/
                        '
              ↓Directive [ngx.components.UIControlDirective-1688374443400]: 
                directiveIndexName: indexRouter
                directiveItemName: itemRouter
                directiveSource: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.apiRouter | keyvalue
                ↓Directive1 [ngx.components.UIControlDirective-1688480002671]: 
                  directiveName: If
                  directiveSource: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this.pageOwner.getIndexOfNormalized2(itemRouter.key, this.pageOwner.filterActions)
                  ↓GridColTitle [ngx.components.UIDynamicElement-1688374443409]: 
                    beanData: |
                      '{
                       "ionBean": "GridCol",
                       "Size": "plain:4",
                       "SizeLg": "plain:6",
                       "SizeMd": "plain:6",
                       "SizeSm": "plain:12",
                       "SizeXl": "plain:3",
                       "SizeXs": "plain:12"
                      }'
                    tagName: ion-col
                    ↓UseSharedComponent [ngx.components.UIUseShared-1688374443412]: 
                      sharedcomponent: C8Oforms.MobileApplication.Application.DraggableElementApiPalette
                      ↓item2ActionPalette [ngx.components.UIUseVariable-1688374443415]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: 'script:{''name'': itemRouter.key, icon: itemRouter.value?.icon}'
                      ↓targetType [ngx.components.UIUseVariable-1688374443418]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:this.pageOwner.getTypeByActions(this.sources)
                      ↓isTs [ngx.components.UIUseVariable-1688374443421]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: source:{"filter":"Shared","project":"C8Oforms","input":"","model":{"data":[{"priority":1610637118444,"regular":true}],"path":"?.currentObject","prefix":"","suffix":"?.type == 'ts'","custom":"","useCustom":false}}
                      ↓transform_toTsMonaco [ngx.components.UIUseVariable-1688374443424]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:this.c8oforms_monacoeditor
                      ↓targetCode [ngx.components.UIUseVariable-1688376359333]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:itemRouter.value?.code
            ↓Attr [ngx.components.UIAttribute-1688374443427]: 
              attrName: '*ngIf'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:this.pageOwner.local['__hidenparamsparams_C8O_actions'] == null
          ↓Style [ngx.components.UIStyle-1688374443430]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    '	border-bottom: 1px solid grey;
                    }
                    .class1608568354293:hover {
                    	cursor:pointer;
                    '
        ↓DivApp [ngx.components.UIDynamicElement-1688475714635]: 
          beanData: '{"ionBean":"DivTag"}'
          tagName: div
          ↓Div [ngx.components.UIDynamicElement-1688475714638]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓Style [ngx.components.UIStyle-1688475714641]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      'font-size: 14px;
                        font-weight: normal;
                        font-style: normal;
                        font-stretch: normal;
                        line-height: normal;
                        letter-spacing: normal;
                        color: #4a4a4a;
                      }
                      
                      .class1610658061387:hover {
                      	cursor: pointer;
                      '
            ↓Event [ngx.components.UIControlEvent-1688475714644]: 
              ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1688475714647]: 
                beanData: '{"ionBean":"InvokeAction"}'
                stack: C8Oforms.MobileApplication.Application.setLocal
                ↓val [ngx.components.UIControlVariable-1688475714650]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: 'script:this.pageOwner.local[''__hidenparams_C8O_actions''] == null ? false : null'
                ↓path [ngx.components.UIControlVariable-1688475714653]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:'__hidenparamsparams_C8O_actions'
                ↓InvokeSharedAction2 [ngx.components.UIDynamicInvoke-1688475714656]: 
                  beanData: '{"ionBean":"InvokeAction"}'
                  stack: C8Oforms.MobileApplication.Application.detectChanges
            ↓Icon [ngx.components.UIDynamicElement-1688475714659]: 
              beanData: '{"ionBean":"Icon","IconName":"script:this.pageOwner.local[''__hidenparamsparams_C8O_actions''] == null ? ''arrow-dropdown'' : ''arrow-dropright''"}'
              comment: arrow-dropright
              tagName: ion-icon
              ↓Style [ngx.components.UIStyle-1688475714662]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '
                        }
                        
                        .class1600344265649:hover {
                        cursor: pointer;
                        '
            ↓Paragraph [ngx.components.UIDynamicElement-1688475714665]: 
              beanData: '{"ionBean":"Paragraph"}'
              tagName: p
              ↓Style [ngx.components.UIStyle-1688475714668]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        'display: inline-block;
                        margin-top:0px;
                        margin-bottom:0px;
                        }
                        .class1600344265667:hover{
                        	cursor:pointer;
                        '
              ↓Text [ngx.components.UIText-1688475714671]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:Application
          ↓Grid [ngx.components.UIDynamicElement-1688475714674]: 
            beanData: '{"ionBean":"Grid"}'
            tagName: ion-grid
            ↓GridRow [ngx.components.UIDynamicElement-1688475714677]: 
              beanData: '{"ionBean":"GridRow"}'
              tagName: ion-row
              ↓Style [ngx.components.UIStyle-1688475714680]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '/*margin-top: 2vh;*/
                        '
              ↓Directive [ngx.components.UIControlDirective-1688475714683]: 
                directiveIndexName: indexRouter
                directiveItemName: itemRouter
                directiveSource: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.apiApp | keyvalue
                ↓Directive1 [ngx.components.UIControlDirective-1688479808524]: 
                  directiveName: If
                  directiveSource: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this.pageOwner.getIndexOfNormalized2(itemRouter.key, this.pageOwner.filterActions)
                  ↓GridColTitle [ngx.components.UIDynamicElement-1688475714686]: 
                    beanData: |
                      '{
                       "ionBean": "GridCol",
                       "Size": "plain:4",
                       "SizeLg": "plain:6",
                       "SizeMd": "plain:6",
                       "SizeSm": "plain:12",
                       "SizeXl": "plain:3",
                       "SizeXs": "plain:12"
                      }'
                    tagName: ion-col
                    ↓UseSharedComponent [ngx.components.UIUseShared-1688475714689]: 
                      sharedcomponent: C8Oforms.MobileApplication.Application.DraggableElementApiPalette
                      ↓item2ActionPalette [ngx.components.UIUseVariable-1688475714692]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: 'script:{''name'': itemRouter.key, icon: itemRouter.value?.icon}'
                      ↓targetType [ngx.components.UIUseVariable-1688475714695]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:this.pageOwner.getTypeByActions(this.sources)
                      ↓isTs [ngx.components.UIUseVariable-1688475714698]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: source:{"filter":"Shared","project":"C8Oforms","input":"","model":{"data":[{"priority":1610637118444,"regular":true}],"path":"?.currentObject","prefix":"","suffix":"?.type == 'ts'","custom":"","useCustom":false}}
                      ↓transform_toTsMonaco [ngx.components.UIUseVariable-1688475714701]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:this.c8oforms_monacoeditor
                      ↓targetCode [ngx.components.UIUseVariable-1688475714704]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:itemRouter.value?.code
            ↓Attr [ngx.components.UIAttribute-1688475714707]: 
              attrName: '*ngIf'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:this.pageOwner.local['__hidenparamsparams_C8O_actions'] == null
          ↓Style [ngx.components.UIStyle-1688475714710]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    '	border-bottom: 1px solid grey;
                    }
                    .class1608568354293:hover {
                    	cursor:pointer;
                    '
        ↓DivForm [ngx.components.UIDynamicElement-1688476756386]: 
          beanData: '{"ionBean":"DivTag"}'
          tagName: div
          ↓Div [ngx.components.UIDynamicElement-1688476756389]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓Style [ngx.components.UIStyle-1688476756392]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      'font-size: 14px;
                        font-weight: normal;
                        font-style: normal;
                        font-stretch: normal;
                        line-height: normal;
                        letter-spacing: normal;
                        color: #4a4a4a;
                      }
                      
                      .class1610658061387:hover {
                      	cursor: pointer;
                      '
            ↓Event [ngx.components.UIControlEvent-1688476756395]: 
              ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1688476756398]: 
                beanData: '{"ionBean":"InvokeAction"}'
                stack: C8Oforms.MobileApplication.Application.setLocal
                ↓val [ngx.components.UIControlVariable-1688476756401]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: 'script:this.pageOwner.local[''__hidenparams_C8O_actions''] == null ? false : null'
                ↓path [ngx.components.UIControlVariable-1688476756404]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:'__hidenparamsparams_C8O_actions'
                ↓InvokeSharedAction2 [ngx.components.UIDynamicInvoke-1688476756407]: 
                  beanData: '{"ionBean":"InvokeAction"}'
                  stack: C8Oforms.MobileApplication.Application.detectChanges
            ↓Icon [ngx.components.UIDynamicElement-1688476756410]: 
              beanData: '{"ionBean":"Icon","IconName":"script:this.pageOwner.local[''__hidenparamsparams_C8O_actions''] == null ? ''arrow-dropdown'' : ''arrow-dropright''"}'
              comment: arrow-dropright
              tagName: ion-icon
              ↓Style [ngx.components.UIStyle-1688476756413]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '
                        }
                        
                        .class1600344265649:hover {
                        cursor: pointer;
                        '
            ↓Paragraph [ngx.components.UIDynamicElement-1688476756416]: 
              beanData: '{"ionBean":"Paragraph"}'
              tagName: p
              ↓Style [ngx.components.UIStyle-1688476756419]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        'display: inline-block;
                        margin-top:0px;
                        margin-bottom:0px;
                        }
                        .class1600344265667:hover{
                        	cursor:pointer;
                        '
              ↓Text [ngx.components.UIText-1688476756422]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:Form
          ↓Grid [ngx.components.UIDynamicElement-1688476756425]: 
            beanData: '{"ionBean":"Grid"}'
            tagName: ion-grid
            ↓GridRow [ngx.components.UIDynamicElement-1688476756428]: 
              beanData: '{"ionBean":"GridRow"}'
              tagName: ion-row
              ↓Style [ngx.components.UIStyle-1688476756431]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '/*margin-top: 2vh;*/
                        '
              ↓Directive [ngx.components.UIControlDirective-1688476756434]: 
                directiveIndexName: indexRouter
                directiveItemName: itemRouter
                directiveSource: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.apiForm | keyvalue
                ↓Directive1 [ngx.components.UIControlDirective-1688479939581]: 
                  directiveName: If
                  directiveSource: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this.pageOwner.getIndexOfNormalized2(itemRouter.key, this.pageOwner.filterActions)
                  ↓GridColTitle [ngx.components.UIDynamicElement-1688476756437]: 
                    beanData: |
                      '{
                       "ionBean": "GridCol",
                       "Size": "plain:4",
                       "SizeLg": "plain:6",
                       "SizeMd": "plain:6",
                       "SizeSm": "plain:12",
                       "SizeXl": "plain:3",
                       "SizeXs": "plain:12"
                      }'
                    tagName: ion-col
                    ↓UseSharedComponent [ngx.components.UIUseShared-1688476756440]: 
                      sharedcomponent: C8Oforms.MobileApplication.Application.DraggableElementApiPalette
                      ↓item2ActionPalette [ngx.components.UIUseVariable-1688476756443]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: 'script:{''name'': itemRouter.key, icon: itemRouter.value?.icon}'
                      ↓targetType [ngx.components.UIUseVariable-1688476756446]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:this.pageOwner.getTypeByActions(this.sources)
                      ↓isTs [ngx.components.UIUseVariable-1688476756449]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: source:{"filter":"Shared","project":"C8Oforms","input":"","model":{"data":[{"priority":1610637118444,"regular":true}],"path":"?.currentObject","prefix":"","suffix":"?.type == 'ts'","custom":"","useCustom":false}}
                      ↓transform_toTsMonaco [ngx.components.UIUseVariable-1688476756452]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:this.c8oforms_monacoeditor
                      ↓targetCode [ngx.components.UIUseVariable-1688476756455]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:itemRouter.value?.code
            ↓Attr [ngx.components.UIAttribute-1688476756458]: 
              attrName: '*ngIf'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:this.pageOwner.local['__hidenparamsparams_C8O_actions'] == null
          ↓Style [ngx.components.UIStyle-1688476756461]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    '	border-bottom: 1px solid grey;
                    }
                    .class1608568354293:hover {
                    	cursor:pointer;
                    '
        ↓DivUser [ngx.components.UIDynamicElement-1688477752374]: 
          beanData: '{"ionBean":"DivTag"}'
          tagName: div
          ↓Div [ngx.components.UIDynamicElement-1688477752377]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓Style [ngx.components.UIStyle-1688477752380]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      'font-size: 14px;
                        font-weight: normal;
                        font-style: normal;
                        font-stretch: normal;
                        line-height: normal;
                        letter-spacing: normal;
                        color: #4a4a4a;
                      }
                      
                      .class1610658061387:hover {
                      	cursor: pointer;
                      '
            ↓Event [ngx.components.UIControlEvent-1688477752383]: 
              ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1688477752386]: 
                beanData: '{"ionBean":"InvokeAction"}'
                stack: C8Oforms.MobileApplication.Application.setLocal
                ↓val [ngx.components.UIControlVariable-1688477752389]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: 'script:this.pageOwner.local[''__hidenparams_C8O_actions''] == null ? false : null'
                ↓path [ngx.components.UIControlVariable-1688477752392]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:'__hidenparamsparams_C8O_actions'
                ↓InvokeSharedAction2 [ngx.components.UIDynamicInvoke-1688477752395]: 
                  beanData: '{"ionBean":"InvokeAction"}'
                  stack: C8Oforms.MobileApplication.Application.detectChanges
            ↓Icon [ngx.components.UIDynamicElement-1688477752398]: 
              beanData: '{"ionBean":"Icon","IconName":"script:this.pageOwner.local[''__hidenparamsparams_C8O_actions''] == null ? ''arrow-dropdown'' : ''arrow-dropright''"}'
              comment: arrow-dropright
              tagName: ion-icon
              ↓Style [ngx.components.UIStyle-1688477752401]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '
                        }
                        
                        .class1600344265649:hover {
                        cursor: pointer;
                        '
            ↓Paragraph [ngx.components.UIDynamicElement-1688477752404]: 
              beanData: '{"ionBean":"Paragraph"}'
              tagName: p
              ↓Style [ngx.components.UIStyle-1688477752407]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        'display: inline-block;
                        margin-top:0px;
                        margin-bottom:0px;
                        }
                        .class1600344265667:hover{
                        	cursor:pointer;
                        '
              ↓Text [ngx.components.UIText-1688477752410]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:User
          ↓Grid [ngx.components.UIDynamicElement-1688477752413]: 
            beanData: '{"ionBean":"Grid"}'
            tagName: ion-grid
            ↓GridRow [ngx.components.UIDynamicElement-1688477752416]: 
              beanData: '{"ionBean":"GridRow"}'
              tagName: ion-row
              ↓Style [ngx.components.UIStyle-1688477752419]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '/*margin-top: 2vh;*/
                        '
              ↓Directive [ngx.components.UIControlDirective-1688477752422]: 
                directiveIndexName: indexRouter
                directiveItemName: itemRouter
                directiveSource: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.apiUser | keyvalue
                ↓Directive1 [ngx.components.UIControlDirective-1688479986854]: 
                  directiveName: If
                  directiveSource: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this.pageOwner.getIndexOfNormalized2(itemRouter.key, this.pageOwner.filterActions)
                  ↓GridColTitle [ngx.components.UIDynamicElement-1688477752425]: 
                    beanData: |
                      '{
                       "ionBean": "GridCol",
                       "Size": "plain:4",
                       "SizeLg": "plain:6",
                       "SizeMd": "plain:6",
                       "SizeSm": "plain:12",
                       "SizeXl": "plain:3",
                       "SizeXs": "plain:12"
                      }'
                    tagName: ion-col
                    ↓UseSharedComponent [ngx.components.UIUseShared-1688477752428]: 
                      sharedcomponent: C8Oforms.MobileApplication.Application.DraggableElementApiPalette
                      ↓item2ActionPalette [ngx.components.UIUseVariable-1688477752431]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: 'script:{''name'': itemRouter.key, icon: itemRouter.value?.icon}'
                      ↓targetType [ngx.components.UIUseVariable-1688477752434]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:this.pageOwner.getTypeByActions(this.sources)
                      ↓isTs [ngx.components.UIUseVariable-1688477752437]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: source:{"filter":"Shared","project":"C8Oforms","input":"","model":{"data":[{"priority":1610637118444,"regular":true}],"path":"?.currentObject","prefix":"","suffix":"?.type == 'ts'","custom":"","useCustom":false}}
                      ↓transform_toTsMonaco [ngx.components.UIUseVariable-1688477752440]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:this.c8oforms_monacoeditor
                      ↓targetCode [ngx.components.UIUseVariable-1688477752443]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:itemRouter.value?.code
            ↓Attr [ngx.components.UIAttribute-1688477752446]: 
              attrName: '*ngIf'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:this.pageOwner.local['__hidenparamsparams_C8O_actions'] == null
          ↓Style [ngx.components.UIStyle-1688477752449]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    '	border-bottom: 1px solid grey;
                    }
                    .class1608568354293:hover {
                    	cursor:pointer;
                    '
        ↓DivPage [ngx.components.UIDynamicElement-1688478057363]: 
          beanData: '{"ionBean":"DivTag"}'
          tagName: div
          ↓Div [ngx.components.UIDynamicElement-1688478057366]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓Style [ngx.components.UIStyle-1688478057369]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      'font-size: 14px;
                        font-weight: normal;
                        font-style: normal;
                        font-stretch: normal;
                        line-height: normal;
                        letter-spacing: normal;
                        color: #4a4a4a;
                      }
                      
                      .class1610658061387:hover {
                      	cursor: pointer;
                      '
            ↓Event [ngx.components.UIControlEvent-1688478057372]: 
              ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1688478057375]: 
                beanData: '{"ionBean":"InvokeAction"}'
                stack: C8Oforms.MobileApplication.Application.setLocal
                ↓val [ngx.components.UIControlVariable-1688478057378]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: 'script:this.pageOwner.local[''__hidenparams_C8O_actions''] == null ? false : null'
                ↓path [ngx.components.UIControlVariable-1688478057381]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:'__hidenparamsparams_C8O_actions'
                ↓InvokeSharedAction2 [ngx.components.UIDynamicInvoke-1688478057384]: 
                  beanData: '{"ionBean":"InvokeAction"}'
                  stack: C8Oforms.MobileApplication.Application.detectChanges
            ↓Icon [ngx.components.UIDynamicElement-1688478057387]: 
              beanData: '{"ionBean":"Icon","IconName":"script:this.pageOwner.local[''__hidenparamsparams_C8O_actions''] == null ? ''arrow-dropdown'' : ''arrow-dropright''"}'
              comment: arrow-dropright
              tagName: ion-icon
              ↓Style [ngx.components.UIStyle-1688478057390]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '
                        }
                        
                        .class1600344265649:hover {
                        cursor: pointer;
                        '
            ↓Paragraph [ngx.components.UIDynamicElement-1688478057393]: 
              beanData: '{"ionBean":"Paragraph"}'
              tagName: p
              ↓Style [ngx.components.UIStyle-1688478057396]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        'display: inline-block;
                        margin-top:0px;
                        margin-bottom:0px;
                        }
                        .class1600344265667:hover{
                        	cursor:pointer;
                        '
              ↓Text [ngx.components.UIText-1688478057399]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:Page
          ↓Grid [ngx.components.UIDynamicElement-1688478057402]: 
            beanData: '{"ionBean":"Grid"}'
            tagName: ion-grid
            ↓GridRow [ngx.components.UIDynamicElement-1688478057405]: 
              beanData: '{"ionBean":"GridRow"}'
              tagName: ion-row
              ↓Style [ngx.components.UIStyle-1688478057408]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '/*margin-top: 2vh;*/
                        '
              ↓Directive [ngx.components.UIControlDirective-1688478057411]: 
                directiveIndexName: indexRouter
                directiveItemName: itemRouter
                directiveSource: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.apiPage | keyvalue
                ↓Directive1 [ngx.components.UIControlDirective-1688479978280]: 
                  directiveName: If
                  directiveSource: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this.pageOwner.getIndexOfNormalized2(itemRouter.key, this.pageOwner.filterActions)
                  ↓GridColTitle [ngx.components.UIDynamicElement-1688478057414]: 
                    beanData: |
                      '{
                       "ionBean": "GridCol",
                       "Size": "plain:4",
                       "SizeLg": "plain:6",
                       "SizeMd": "plain:6",
                       "SizeSm": "plain:12",
                       "SizeXl": "plain:3",
                       "SizeXs": "plain:12"
                      }'
                    tagName: ion-col
                    ↓UseSharedComponent [ngx.components.UIUseShared-1688478057417]: 
                      sharedcomponent: C8Oforms.MobileApplication.Application.DraggableElementApiPalette
                      ↓item2ActionPalette [ngx.components.UIUseVariable-1688478057420]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: 'script:{''name'': itemRouter.key, icon: itemRouter.value?.icon}'
                      ↓targetType [ngx.components.UIUseVariable-1688478057423]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:this.pageOwner.getTypeByActions(this.sources)
                      ↓isTs [ngx.components.UIUseVariable-1688478057426]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: source:{"filter":"Shared","project":"C8Oforms","input":"","model":{"data":[{"priority":1610637118444,"regular":true}],"path":"?.currentObject","prefix":"","suffix":"?.type == 'ts'","custom":"","useCustom":false}}
                      ↓transform_toTsMonaco [ngx.components.UIUseVariable-1688478057429]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:this.c8oforms_monacoeditor
                      ↓targetCode [ngx.components.UIUseVariable-1688478057432]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:itemRouter.value?.code
            ↓Attr [ngx.components.UIAttribute-1688478057435]: 
              attrName: '*ngIf'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:this.pageOwner.local['__hidenparamsparams_C8O_actions'] == null
          ↓Style [ngx.components.UIStyle-1688478057438]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    '	border-bottom: 1px solid grey;
                    }
                    .class1608568354293:hover {
                    	cursor:pointer;
                    '
        ↓DivTranslate [ngx.components.UIDynamicElement-1688478433359]: 
          beanData: '{"ionBean":"DivTag"}'
          tagName: div
          ↓Div [ngx.components.UIDynamicElement-1688478433362]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓Style [ngx.components.UIStyle-1688478433365]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      'font-size: 14px;
                        font-weight: normal;
                        font-style: normal;
                        font-stretch: normal;
                        line-height: normal;
                        letter-spacing: normal;
                        color: #4a4a4a;
                      }
                      
                      .class1610658061387:hover {
                      	cursor: pointer;
                      '
            ↓Event [ngx.components.UIControlEvent-1688478433368]: 
              ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1688478433371]: 
                beanData: '{"ionBean":"InvokeAction"}'
                stack: C8Oforms.MobileApplication.Application.setLocal
                ↓val [ngx.components.UIControlVariable-1688478433374]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: 'script:this.pageOwner.local[''__hidenparams_C8O_actions''] == null ? false : null'
                ↓path [ngx.components.UIControlVariable-1688478433377]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:'__hidenparamsparams_C8O_actions'
                ↓InvokeSharedAction2 [ngx.components.UIDynamicInvoke-1688478433380]: 
                  beanData: '{"ionBean":"InvokeAction"}'
                  stack: C8Oforms.MobileApplication.Application.detectChanges
            ↓Icon [ngx.components.UIDynamicElement-1688478433383]: 
              beanData: '{"ionBean":"Icon","IconName":"script:this.pageOwner.local[''__hidenparamsparams_C8O_actions''] == null ? ''arrow-dropdown'' : ''arrow-dropright''"}'
              comment: arrow-dropright
              tagName: ion-icon
              ↓Style [ngx.components.UIStyle-1688478433386]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '
                        }
                        
                        .class1600344265649:hover {
                        cursor: pointer;
                        '
            ↓Paragraph [ngx.components.UIDynamicElement-1688478433389]: 
              beanData: '{"ionBean":"Paragraph"}'
              tagName: p
              ↓Style [ngx.components.UIStyle-1688478433392]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        'display: inline-block;
                        margin-top:0px;
                        margin-bottom:0px;
                        }
                        .class1600344265667:hover{
                        	cursor:pointer;
                        '
              ↓Text [ngx.components.UIText-1688478433395]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:Translation
          ↓Grid [ngx.components.UIDynamicElement-1688478433398]: 
            beanData: '{"ionBean":"Grid"}'
            tagName: ion-grid
            ↓GridRow [ngx.components.UIDynamicElement-1688478433401]: 
              beanData: '{"ionBean":"GridRow"}'
              tagName: ion-row
              ↓Style [ngx.components.UIStyle-1688478433404]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '/*margin-top: 2vh;*/
                        '
              ↓Directive [ngx.components.UIControlDirective-1688478433407]: 
                directiveIndexName: indexRouter
                directiveItemName: itemRouter
                directiveSource: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.apiTranslate | keyvalue
                ↓Directive1 [ngx.components.UIControlDirective-1688479970252]: 
                  directiveName: If
                  directiveSource: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this.pageOwner.getIndexOfNormalized2(itemRouter.key, this.pageOwner.filterActions)
                  ↓GridColTitle [ngx.components.UIDynamicElement-1688478433410]: 
                    beanData: |
                      '{
                       "ionBean": "GridCol",
                       "Size": "plain:4",
                       "SizeLg": "plain:6",
                       "SizeMd": "plain:6",
                       "SizeSm": "plain:12",
                       "SizeXl": "plain:3",
                       "SizeXs": "plain:12"
                      }'
                    tagName: ion-col
                    ↓UseSharedComponent [ngx.components.UIUseShared-1688478433413]: 
                      sharedcomponent: C8Oforms.MobileApplication.Application.DraggableElementApiPalette
                      ↓item2ActionPalette [ngx.components.UIUseVariable-1688478433416]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: 'script:{''name'': itemRouter.key, icon: itemRouter.value?.icon}'
                      ↓targetType [ngx.components.UIUseVariable-1688478433419]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:this.pageOwner.getTypeByActions(this.sources)
                      ↓isTs [ngx.components.UIUseVariable-1688478433422]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: source:{"filter":"Shared","project":"C8Oforms","input":"","model":{"data":[{"priority":1610637118444,"regular":true}],"path":"?.currentObject","prefix":"","suffix":"?.type == 'ts'","custom":"","useCustom":false}}
                      ↓transform_toTsMonaco [ngx.components.UIUseVariable-1688478433425]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:this.c8oforms_monacoeditor
                      ↓targetCode [ngx.components.UIUseVariable-1688478433428]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:itemRouter.value?.code
            ↓Attr [ngx.components.UIAttribute-1688478433431]: 
              attrName: '*ngIf'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:this.pageOwner.local['__hidenparamsparams_C8O_actions'] == null
          ↓Style [ngx.components.UIStyle-1688478433434]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    '	border-bottom: 1px solid grey;
                    }
                    .class1608568354293:hover {
                    	cursor:pointer;
                    '
        ↓DivC8o [ngx.components.UIDynamicElement-1688479128060]: 
          beanData: '{"ionBean":"DivTag"}'
          tagName: div
          ↓Div [ngx.components.UIDynamicElement-1688479128063]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓Style [ngx.components.UIStyle-1688479128066]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      'font-size: 14px;
                        font-weight: normal;
                        font-style: normal;
                        font-stretch: normal;
                        line-height: normal;
                        letter-spacing: normal;
                        color: #4a4a4a;
                      }
                      
                      .class1610658061387:hover {
                      	cursor: pointer;
                      '
            ↓Event [ngx.components.UIControlEvent-1688479128069]: 
              ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1688479128072]: 
                beanData: '{"ionBean":"InvokeAction"}'
                stack: C8Oforms.MobileApplication.Application.setLocal
                ↓val [ngx.components.UIControlVariable-1688479128075]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: 'script:this.pageOwner.local[''__hidenparams_C8O_actions''] == null ? false : null'
                ↓path [ngx.components.UIControlVariable-1688479128078]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:'__hidenparamsparams_C8O_actions'
                ↓InvokeSharedAction2 [ngx.components.UIDynamicInvoke-1688479128081]: 
                  beanData: '{"ionBean":"InvokeAction"}'
                  stack: C8Oforms.MobileApplication.Application.detectChanges
            ↓Icon [ngx.components.UIDynamicElement-1688479128084]: 
              beanData: '{"ionBean":"Icon","IconName":"script:this.pageOwner.local[''__hidenparamsparams_C8O_actions''] == null ? ''arrow-dropdown'' : ''arrow-dropright''"}'
              comment: arrow-dropright
              tagName: ion-icon
              ↓Style [ngx.components.UIStyle-1688479128087]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '
                        }
                        
                        .class1600344265649:hover {
                        cursor: pointer;
                        '
            ↓Paragraph [ngx.components.UIDynamicElement-1688479128090]: 
              beanData: '{"ionBean":"Paragraph"}'
              tagName: p
              ↓Style [ngx.components.UIStyle-1688479128093]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        'display: inline-block;
                        margin-top:0px;
                        margin-bottom:0px;
                        }
                        .class1600344265667:hover{
                        	cursor:pointer;
                        '
              ↓Text [ngx.components.UIText-1688479128096]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:Convertigo SDK
          ↓Grid [ngx.components.UIDynamicElement-1688479128099]: 
            beanData: '{"ionBean":"Grid"}'
            tagName: ion-grid
            ↓GridRow [ngx.components.UIDynamicElement-1688479128102]: 
              beanData: '{"ionBean":"GridRow"}'
              tagName: ion-row
              ↓Style [ngx.components.UIStyle-1688479128105]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '/*margin-top: 2vh;*/
                        '
              ↓Directive [ngx.components.UIControlDirective-1688479128108]: 
                directiveIndexName: indexRouter
                directiveItemName: itemRouter
                directiveSource: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.apiC8o | keyvalue
                ↓Directive1 [ngx.components.UIControlDirective-1688479949392]: 
                  directiveName: If
                  directiveSource: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this.pageOwner.getIndexOfNormalized2(itemRouter.key, this.pageOwner.filterActions)
                  ↓GridColTitle [ngx.components.UIDynamicElement-1688479128111]: 
                    beanData: |
                      '{
                       "ionBean": "GridCol",
                       "Size": "plain:4",
                       "SizeLg": "plain:6",
                       "SizeMd": "plain:6",
                       "SizeSm": "plain:12",
                       "SizeXl": "plain:3",
                       "SizeXs": "plain:12"
                      }'
                    tagName: ion-col
                    ↓UseSharedComponent [ngx.components.UIUseShared-1688479128114]: 
                      sharedcomponent: C8Oforms.MobileApplication.Application.DraggableElementApiPalette
                      ↓item2ActionPalette [ngx.components.UIUseVariable-1688479128117]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: 'script:{''name'': itemRouter.key, icon: itemRouter.value?.icon}'
                      ↓targetType [ngx.components.UIUseVariable-1688479128120]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:this.pageOwner.getTypeByActions(this.sources)
                      ↓isTs [ngx.components.UIUseVariable-1688479128123]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: source:{"filter":"Shared","project":"C8Oforms","input":"","model":{"data":[{"priority":1610637118444,"regular":true}],"path":"?.currentObject","prefix":"","suffix":"?.type == 'ts'","custom":"","useCustom":false}}
                      ↓transform_toTsMonaco [ngx.components.UIUseVariable-1688479128126]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:this.c8oforms_monacoeditor
                      ↓targetCode [ngx.components.UIUseVariable-1688479128129]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:itemRouter.value?.code
            ↓Attr [ngx.components.UIAttribute-1688479128132]: 
              attrName: '*ngIf'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:this.pageOwner.local['__hidenparamsparams_C8O_actions'] == null
          ↓Style [ngx.components.UIStyle-1688479128135]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    '	border-bottom: 1px solid grey;
                    }
                    .class1608568354293:hover {
                    	cursor:pointer;
                    '
    ↓attr [ngx.components.UIAttribute-1678808705494]: 
      attrName: '*ngIf'
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: plain:this.type != 'configure'
  ↓GridColEditor [ngx.components.UIDynamicElement-1610637188217]: 
    beanData: '{"ionBean":"GridCol"}'
    isEnabled: false
    tagName: ion-col
    ↓Div [ngx.components.UIDynamicElement-1610637188220]: 
      beanData: '{"ionBean":"DivTag"}'
      tagName: div
      ↓Style [ngx.components.UIStyle-1610637188223]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '	font-size: 14px;
                  	font-weight: normal;
                 	font-style: normal;
                  	font-stretch: normal;
                  	line-height: normal;
                  	letter-spacing: normal;
                	height:100%;
                }
                
                .class1610637188220:hover {
                	cursor: pointer;
                '
      ↓Div [ngx.components.UIDynamicElement-1610637188226]: 
        beanData: '{"ionBean":"DivTag"}'
        tagName: div
        ↓Style [ngx.components.UIStyle-1610637188229]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  'height:100%;
                  .styleBadge{
                  	/* comes from ion-badge style */
                  	padding: 3px 8px;
                      text-align: center;
                      display: inline-block;
                      min-width: 10px;
                      font-size: 1.3rem;
                      font-weight: bold;
                      line-height: 1;
                      white-space: nowrap;
                      vertical-align: baseline;
                      /* custom */
                      user-select: none !important;
                  	user-drag:element;
                      border-radius: 10px 10px 10px 10px;
                      }
                  '
        ↓Directive [ngx.components.UIControlDirective-1610637188232]: 
          directiveName: Switch
          directiveSource: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:this.pageOwner.getTypeByActions(this.sources, this.isSource)
          ↓Directive [ngx.components.UIControlDirective-1610637188235]: 
            directiveExpression: '''html'''
            directiveName: SwitchCase
            ↓Div [ngx.components.UIDynamicElement-1646648239226]: 
              beanData: '{"ionBean":"DivTag"}'
              tagName: div
              ↓UseSharedComponent11 [ngx.components.UIUseShared-1639342613084]: 
                sharedcomponent: lib_ExtendedComponents_ui_ngx.MobileApplication.Application.tinyMce
                ↓model [ngx.components.UIUseVariable-1639342613087]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:null
                ↓init [ngx.components.UIUseVariable-1639342613090]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: |
                          'script:{
                              placeholder: translate.instant(''placeholder_editor''),
                                  plugins: ''noneditable print preview paste importcss searchreplace autolink autosave save directionality code visualblocks visualchars fullscreen image link media template codesample table charmap hr pagebreak nonbreaking anchor toc insertdatetime advlist lists wordcount imagetools textpattern noneditable help charmap quickbars emoticons'',
                                  imagetools_cors_hosts: [''picsum.photos''],
                                  menubar: ''file edit view insert format tools table help'',
                                  toolbar: ''undo redo | bold italic underline strikethrough | fontselect fontsizeselect formatselect | alignleft aligncenter alignright alignjustify | outdent indent |  numlist bullist | forecolor backcolor removeformat | pagebreak | charmap emoticons | fullscreen  preview save print | insertfile image media template link anchor codesample | ltr rtl'',
                                  toolbar_sticky: true,
                                  autosave_ask_before_unload: true,
                                  autosave_interval: ''30s'',
                                  autosave_prefix: ''{path}{query}-{id}-'',
                                  autosave_restore_when_empty: false,
                                  autosave_retention: ''2m'',
                                  image_advtab: true,
                                  importcss_append: true,
                                  template_cdate_format: ''[Date Created (CDATE): %m/%d/%Y : %H:%M:%S]'',
                                  template_mdate_format: ''[Date Modified (MDATE): %m/%d/%Y : %H:%M:%S]'',
                                  height: 600,
                                  image_caption: true,
                                  quickbars_selection_toolbar: ''bold italic | quicklink h2 h3 blockquote quickimage quicktable'',
                                  noneditable_noneditable_class: ''mceNonEditable'',
                                  toolbar_mode: ''sliding'',
                                  contextmenu: ''link image imagetools table'',
                                  content_css:  this.pageOwner.getTinyCssPath(''html''),
                                  language: this.pageOwner.getTinyLang(this.global.settings.language),
                                  language_url: this.pageOwner.getTinyPathLang(this.global.settings.language),
                                  allow_html_in_named_anchor: true,
                                  branding: false,
                                  setup: this.pageOwner.tinyFuncDrop,
                                  valid_elements : ''*[*]'',
                          	 apply_source_formatting : false,                
                                  verify_html : false
                              }'
                ↓disabled [ngx.components.UIUseVariable-1639342613093]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:''
                ↓apiKey [ngx.components.UIUseVariable-1639342613096]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:''
                ↓cloudChannel [ngx.components.UIUseVariable-1639342613099]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:''
                ↓id [ngx.components.UIUseVariable-1639342613102]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:''
                ↓initialValue [ngx.components.UIUseVariable-1639342613105]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this.pageOwner.transform$toHtml(this.pageOwner.getItemNameById(this.pageOwner.getKeyIndex(this.sources)))
                ↓inline [ngx.components.UIUseVariable-1639342613108]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:false
                ↓plugins [ngx.components.UIUseVariable-1639342613114]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:['noneditable advlist autolink lists link image charmap print preview anchor','searchreplace visualblocks code fullscreen','insertdatetime media table paste code imagetools help wordcount']
                ↓toolbar [ngx.components.UIUseVariable-1639342613117]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:'undo redo | formatselect | bold italic backcolor | alignleft aligncenter alignright alignjustify | \bullist numlist outdent indent | removeformat | link image | help'
                ↓Event [ngx.components.UIControlEvent-1646648476784]: 
                  attrName: (onBlur)
                  eventName: onBlur
                  ↓CustomAsyncAction [ngx.components.UICustomAsyncAction-1646648518311]: 
                    actionValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            		try {
                            			const enabled = page.pageOwner.getEnabled(page.sources);
                            			const keyIndex = page.pageOwner.keyIndex(page.sources);
                            			let html = page.pageOwner.transformHtmlto$(event.editor.getContent(), true);
                                        page.item[page.path][enabled]["vars"][keyIndex].str = html;
                            			page.item[page.path][enabled]["vars"][keyIndex].html = true;
                            		} catch (e) {
                            			console.log("error saving html", e);
                            		} finally {
                            			return;
                            		}
                            
                    ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1646650468904]: 
                      beanData: '{"ionBean":"InvokeAction"}'
                      stack: C8Oforms.MobileApplication.Application.updateState
          ↓Directive1 [ngx.components.UIControlDirective-1615384977367]: 
            directiveExpression: '''file'''
            directiveName: SwitchCase
            ↓Style [ngx.components.UIStyle-1615385009430]: 
            ↓Div [ngx.components.UIDynamicElement-1615385014878]: 
              beanData: '{"ionBean":"DivTag"}'
              tagName: div
              ↓Style [ngx.components.UIStyle-1615385014881]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        padding:5px;
                        
              ↓Attr21 [ngx.components.UIAttribute-1615385014884]: 
                attrName: '[ngStyle]'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: 'script:this.pageOwner.local.dragging == true ? {''border-width'': ''2px'', ''border-color'': ''#e3e6e6'', ''border-style'': ''dashed''}: {}'
              ↓DivParentFlex [ngx.components.UIDynamicElement-1615385014887]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓Style [ngx.components.UIStyle-1615385014890]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '	display: flex;
                          '
                ↓Div [ngx.components.UIDynamicElement-1615385014980]: 
                  beanData: '{"ionBean":"DivTag"}'
                  tagName: div
                  ↓Style [ngx.components.UIStyle-1615385014983]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            '	flex-grow: 1;
                            	color: black !important;
                            	display: flex;
                                align-items: center;
                            width:100%;
                            '
                  ↓Attr2 [ngx.components.UIAttribute-1615385014986]: 
                    attrName: '[ngClass]'
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'stylegenerictextnormal'
                  ↓Div [ngx.components.UIDynamicElement-1615385014989]: 
                    beanData: '{"ionBean":"DivTag"}'
                    tagName: div
                    ↓Style [ngx.components.UIStyle-1615385014992]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              width:100%;
                              
                    ↓UseSharedComponent1 [ngx.components.UIUseShared-1615385014995]: 
                      sharedcomponent: lib_ExtendedComponents_ui_ngx.MobileApplication.Application.tinyMce
                      ↓model [ngx.components.UIUseVariable-1615385014998]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:null
                      ↓init [ngx.components.UIUseVariable-1615385015001]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: |
                                'script:{
                                    placeholder: translate.instant(''placeholder_editor''),
                                    toolbar: false,
                                    menubar:false,
                                    statusbar: false,
                                    branding: false,
                                    importcss_append: true,
                                    height: 200,
                                    height: 600,
                                   forced_root_block : false,
                                    noneditable_noneditable_class: ''mceNonEditable'',
                                    content_css: ''assets/css/customTiny.css'',
                                    language: this.pageOwner.getTinyLang(this.global.settings.language),
                                    language_url: this.pageOwner.getTinyPathLang(this.global.settings.language),
                                    setup: this.pageOwner.cancelKeyDownForTiny(editor)
                                }'
                      ↓disabled [ngx.components.UIUseVariable-1615385015004]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:''
                      ↓apiKey [ngx.components.UIUseVariable-1615385015007]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:''
                      ↓cloudChannel [ngx.components.UIUseVariable-1615385015010]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:''
                      ↓id [ngx.components.UIUseVariable-1615385015013]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:''
                      ↓initialValue [ngx.components.UIUseVariable-1615385015016]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:this.pageOwner.transform$toHtml(this.pageOwner.getItemNameById(this.pageOwner.getKeyIndex(this.sources)))
                      ↓inline [ngx.components.UIUseVariable-1615385015019]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:true
                      ↓ref [ngx.components.UIUseVariable-1615385015022]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: 'script:{refName: ''actionsVar3'', thingIndex: this.thingIndex, enabled: this.pageowner.getEnabled(this.sources), keyIndex: this.pageOwner.keyIndex(this.sources), path: this.path, item:this.item}'
                    ↓Attr [ngx.components.UIAttribute-1615385258942]: 
                      attrName: '*ngIf'
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:this.pageOwner.getKeyIndex(this.sources)?.type == 'ts' else ElseBlock_1615385751903
                  ↓Tag [ngx.components.UIElement-1615385751903]: 
                    identifier: ElseBlock_1615385751903
                    tagName: ng-template
                    ↓Div [ngx.components.UIDynamicElement-1615385805867]: 
                      beanData: '{"ionBean":"DivTag"}'
                      tagName: div
                      ↓Tag [ngx.components.UIElement-1615385842212]: 
                        selfClose: true
                        tagName: input
                        ↓Attr [ngx.components.UIAttribute-1615385842215]: 
                          attrName: type
                          attrValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: plain:file
                        ↓Attr1 [ngx.components.UIAttribute-1615385842218]: 
                          attrName: accept
                          attrValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: plain:file
                        ↓Style [ngx.components.UIStyle-1615385842221]: 
                          styleContent: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  '	display: none;
                                  '
                        ↓Event [ngx.components.UIControlEvent-1615385842224]: 
                          attrName: (change)
                          eventName: (change)
                          ↓AddFIles [ngx.components.UICustomAction-1615385842227]: 
                            actionValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    '		if(event["srcElement"]["files"][0] != undefined){
                                    			var file = event["srcElement"]["files"][0];
                                    			const enabled = page.pageOwner.getEnabled(page.sources)
                                    			const keyIndex = page.pageOwner.keyIndex(page.sources);
                                    			let obj : any= null;
                                    			
                                    			//remove previous files
                                    			try{
                                    				if(page.item[page.path][enabled][''vars''][keyIndex].from_attachment == true){
                                    					obj = JSON.parse(JSON.stringify({"docid": page["form"]["_id"], "name": page.item[page.path][enabled][''vars''][keyIndex]["attchament_name"]}));
                                    				}	
                                    			}
                                    			catch(e){
                                    				
                                    			}
                                    			// define file will come from atatchment
                                    			page.item[page.path][enabled][''vars''][keyIndex].from_attachment = true;
                                    			// save original name
                                    			page.item[page.path][enabled][''vars''][keyIndex].original_name = file.name;
                                    			// generate unique id for file
                                    			page.item[page.path][enabled][''vars''][keyIndex].attchament_name = ""+new Date().getTime();
                                    			// put attchament
                                    			page.c8o.callJsonObject("fs://c8oforms_fs.put_attachment",{
                                    					"docid": page.pageOwner.form["_id"],
                                    					"name": page.item[page.path][enabled][''vars''][keyIndex].attchament_name,
                                    					"content_type": file.type,
                                    					"content": file
                                    				}
                                    			)
                                    			.then((res)=>{
                                    				console.log("ok", res);
                                    				page.pageOwner.updateState()
                                    				.then((res)=>{
                                    					try{
                                    						if(obj != null){
                                    							page.c8o.callJsonObject("fs://c8oforms_fs.delete_attachment",obj )
                                    							.then((res)=>{
                                    								console.log("succesfully deleted :"+ obj["name"]);
                                    								return null;
                                    							})
                                    						}	
                                    					}
                                    					catch(e){
                                    						
                                    					}
                                    				})
                                    				return null
                                    			})
                                    			.fail((e)=>{
                                    				console.error("my error", e);
                                    			})
                                    		}
                                    		
                                    		resolve();
                                    '
                            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1615385842230]: 
                              beanData: '{"ionBean":"InvokeAction"}'
                              stack: C8Oforms.MobileApplication.Application.tick
                        ↓Attr11 [ngx.components.UIAttribute-1615385842242]: 
                          attrName: '[attr.id]'
                          attrValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: plain:1615385751903
                      ↓Button1 [ngx.components.UIDynamicElement-1615385842245]: 
                        beanData: '{"ionBean":"Button","IonColor":"plain:primary"}'
                        tagName: ion-button
                        ↓Event [ngx.components.UIControlEvent-1615385842248]: 
                          ↓CustomAction [ngx.components.UICustomAction-1615385842251]: 
                            actionValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    		document.getElementById(vars.id).click();
                                    		resolve();
                                    
                            ↓id [ngx.components.UIControlVariable-1615385842254]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: plain:1615385751903
                        ↓Icon [ngx.components.UIDynamicElement-1615385842257]: 
                          beanData: '{"ionBean":"Icon","IconName":"plain:cloud-upload-outline"}'
                          tagName: ion-icon
                          ↓Style [ngx.components.UIStyle-1615385842260]: 
                            styleContent: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    '	margin-right: 5px !important;
                                    '
                        ↓Text [ngx.components.UIText-1615386448762]: 
                          i18n: true
                          textValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: plain:Import_File
                        ↓Style [ngx.components.UIStyle-1646656988311]: 
                          styleContent: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  '	color: var(--ion-color-white);
                                  	ion-icon{
                                  		color: var(--ion-color-white);
                                  	}
                                  '
                      ↓Text [ngx.components.UIText-1615392130271]: 
                        i18n: true
                        textValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:this.pageOwner.getFileNameOrDefaultStr(this)
                    ↓Style [ngx.components.UIStyle-1615385811916]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              width:100%;
                              
                ↓DivSwitchToJS [ngx.components.UIDynamicElement-1615385015025]: 
                  beanData: '{"ionBean":"DivTag"}'
                  isEnabled: false
                  tagName: div
                  ↓Style [ngx.components.UIStyle-1615385015028]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            'display: inline;
                            white-space:nowrap;
                            '
                  ↓ButtonText [ngx.components.UIDynamicElement-1615385015031]: 
                    beanData: '{"ionBean":"Button","IonSize":"plain:large"}'
                    tagName: ion-button
                    ↓Icon [ngx.components.UIDynamicElement-1615385015034]: 
                      beanData: '{"ionBean":"Icon","IconName":"plain:md-cloud-upload"}'
                      tagName: ion-icon
                    ↓Style [ngx.components.UIStyle-1615385015037]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              	padding:0px;
                              
                    ↓Event [ngx.components.UIControlEvent-1615385015040]: 
                      ↓setType [ngx.components.UICustomAction-1615385015043]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '		const name = this.pageOwner.getEnabled(page.sources)
                                        let keyIndex = (Object.keys(page.sources[name][''vars''])[page.pageOwner.local.index]);
                                        if(keyIndex == undefined){
                                            keyIndex = page.pageOwner.local.treeSource.filter(x => x.name == name.split(".")[0])[0].sequences.filter(x => x.name == name.split(".")[1])[0].variables.name[page.pageOwner.local.index];
                                            page.sources[name][''vars''][keyIndex] = {"source": false, str:"", "type":"text"};
                                        }
                                		else{
                                			if(page.sources[name][''vars''][keyIndex] != undefined){
                                				page.sources[name][''vars''][keyIndex]["type"] = "text";
                                			}
                                			else{
                                				page.sources[name][''vars''][keyIndex] = {"source": false, str:"", "type":"text"};
                                			}	
                                		}
                                		resolve();
                                '
                        ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1615385015046]: 
                          beanData: '{"ionBean":"InvokeAction"}'
                          stack: C8Oforms.MobileApplication.Application.updateState
                        ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1615385015049]: 
                          beanData: '{"ionBean":"InvokeAction"}'
                          stack: C8Oforms.MobileApplication.Application.detectChanges
                    ↓Attr [ngx.components.UIAttribute-1615385015052]: 
                      attrName: tooltip
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:'hover_text' | translate
                    ↓Attr1 [ngx.components.UIAttribute-1615385015055]: 
                      attrName: 
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:arrow
                    ↓Attr2 [ngx.components.UIAttribute-1615385015058]: 
                      attrName: positionV
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:top
                  ↓ButtonTS [ngx.components.UIDynamicElement-1615385015061]: 
                    beanData: '{"ionBean":"Button","IonSize":"plain:large"}'
                    tagName: ion-button
                    ↓Icon [ngx.components.UIDynamicElement-1615385015064]: 
                      beanData: '{"ionBean":"Icon","IconName":"plain:custom-ts-active"}'
                      tagName: ion-icon
                    ↓Style [ngx.components.UIStyle-1615385015067]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              	padding:0px;
                              
                    ↓Event [ngx.components.UIControlEvent-1615385015070]: 
                      ↓setType [ngx.components.UICustomAction-1615385015073]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '		const name = this.pageOwner.getEnabled(page.sources)
                                        let keyIndex = (Object.keys(page.sources[name][''vars''])[page.pageOwner.local.index]);
                                        if(keyIndex == undefined){
                                            keyIndex = page.pageOwner.local.treeSource.filter(x => x.name == name.split(".")[0])[0].sequences.filter(x => x.name == name.split(".")[1])[0].variables.name[page.pageOwner.local.index];
                                            page.sources[name][''vars''][keyIndex] = {"source": false, str:"", "type":"text"};
                                        }
                                		else{
                                			if(page.sources[name][''vars''][keyIndex] != undefined){
                                				page.sources[name][''vars''][keyIndex]["type"] = "ts";
                                			}
                                			else{
                                				page.sources[name][''vars''][keyIndex] = {"source": false, str:"", "type":"ts"};
                                			}	
                                		}
                                		resolve();
                                '
                        ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1615385015076]: 
                          beanData: '{"ionBean":"InvokeAction"}'
                          stack: C8Oforms.MobileApplication.Application.updateState
                        ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1615385015079]: 
                          beanData: '{"ionBean":"InvokeAction"}'
                          stack: C8Oforms.MobileApplication.Application.detectChanges
                    ↓Attr [ngx.components.UIAttribute-1615385015082]: 
                      attrName: tooltip
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:'hover_ts' | translate
                    ↓Attr1 [ngx.components.UIAttribute-1615385015085]: 
                      attrName: 
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:arrow
                    ↓Attr2 [ngx.components.UIAttribute-1615385015088]: 
                      attrName: positionV
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:top
          ↓Directive2 [ngx.components.UIControlDirective-1663321001661]: 
            directiveExpression: '''configure'''
            directiveName: SwitchCase
            ↓Style [ngx.components.UIStyle-1663321001664]: 
            ↓Div [ngx.components.UIDynamicElement-1663321001667]: 
              beanData: '{"ionBean":"DivTag"}'
              tagName: div
              ↓Style [ngx.components.UIStyle-1663321001670]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        padding:5px;
                        
              ↓Attr21 [ngx.components.UIAttribute-1663321001673]: 
                attrName: '[ngStyle]'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: 'script:this.pageOwner.local.dragging == true ? {''border-width'': ''2px'', ''border-color'': ''#e3e6e6'', ''border-style'': ''dashed''}: {}'
              ↓DivParentFlex [ngx.components.UIDynamicElement-1663321001676]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓Style [ngx.components.UIStyle-1663321001679]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '	display: flex;
                          	flex-direction: column;
                          '
                ↓Div [ngx.components.UIDynamicElement-1663321001682]: 
                  beanData: '{"ionBean":"DivTag"}'
                  tagName: div
                  ↓Style [ngx.components.UIStyle-1663321001685]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            '	flex-grow: 1;
                            	color: black !important;
                            	display: flex;
                                align-items: center;
                            	width:100%;
                            	ion-icon {
                            	  color: var(--ion-color-primary-contrast);
                            	}
                            '
                  ↓Attr2 [ngx.components.UIAttribute-1663321001688]: 
                    attrName: '[ngClass]'
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'stylegenerictextnormal'
                  ↓Div1 [ngx.components.UIDynamicElement-1663321351605]: 
                    beanData: '{"ionBean":"DivTag"}'
                    tagName: div
                    ↓Button1 [ngx.components.UIDynamicElement-1663321351632]: 
                      beanData: '{"ionBean":"Button","IonColor":"plain:primary"}'
                      tagName: ion-button
                      ↓Event [ngx.components.UIControlEvent-1663321351635]: 
                        ↓ComputeURL [ngx.components.UICustomAction-1663321351638]: 
                          actionValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  '		const enabled = page.pageOwner.getEnabled(page.sources)
                                  		const keyIndex = page.pageOwner.keyIndex(page.sources);		
                                  		try{
                                  			let tree;
                                  			if(page.isSource){
                                  				tree = page.pageOwner.local.treeSource
                                  			}
                                  			else{
                                  				tree = page.pageOwner.local.tree;
                                  			}
                                  	        let str = page.pageOwner.getEnabled(page.sources);
                                  	        let name = str.split(".")[0]
                                  	        let val;
                                  	        for(let i in tree){
                                  	            if(tree[i].name == name){
                                  	                let iSeq = page.pageOwner.getSequenceByName(tree[i].sequences, str.split(".")[1]);
                                  	                val = tree[i].sequences[iSeq]["variables"].type[page.pageOwner.local.index];
                                  	                break;
                                  	            }
                                  	        } 
                                  	        let baseUrl = window.location.href.indexOf("localhost") == -1 ? window.location.href.substring(0, (window.location.href.indexOf("/projects/") + 10 )  ) : "http://localhost:18080/convertigo/projects/"; 
                                  	        let configure = val.substring(10)
                                  	        resolve(baseUrl + configure);
                                  	    }
                                  	    catch(e){
                                  	        
                                  	    }
                                  '
                          ↓ModalPage [ngx.components.UIDynamicAction-1663326377489]: 
                            beanData: |
                              '{
                               "ionBean": "ModalAction",
                               "page": "plain:C8Oforms.MobileApplication.Application.modalConfigure",
                               "data": "script:{url: parent.out}",
                               "cssClass": "plain:modalCloud"
                              }'
                            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1663334384540]: 
                              beanData: '{"ionBean":"InvokeAction"}'
                              stack: C8Oforms.MobileApplication.Application.tick
                      ↓Icon [ngx.components.UIDynamicElement-1663321351644]: 
                        beanData: |
                          '{
                           "ionBean": "Icon",
                           "IconName": "plain:settings-outline",
                           "IconSlot": "plain:start"
                          }'
                        tagName: ion-icon
                        ↓Style [ngx.components.UIStyle-1663321351647]: 
                          styleContent: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  '	margin-right: 5px !important;
                                  '
                      ↓Text [ngx.components.UIText-1663321351650]: 
                        i18n: true
                        textValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: plain:configure
                      ↓Style [ngx.components.UIStyle-1663321351653]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '	--color: var(--ion-color-dark);
                                	ion-icon{
                                		color: var(--ion-color-dark);
                                	}
                                '
                ↓DivSwitchToJS [ngx.components.UIDynamicElement-1663321001790]: 
                  beanData: '{"ionBean":"DivTag"}'
                  isEnabled: false
                  tagName: div
                  ↓Style [ngx.components.UIStyle-1663321001793]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            'display: inline;
                            white-space:nowrap;
                            '
                  ↓ButtonText [ngx.components.UIDynamicElement-1663321001796]: 
                    beanData: '{"ionBean":"Button","IonSize":"plain:large"}'
                    tagName: ion-button
                    ↓Icon [ngx.components.UIDynamicElement-1663321001799]: 
                      beanData: '{"ionBean":"Icon","IconName":"plain:md-cloud-upload"}'
                      tagName: ion-icon
                    ↓Style [ngx.components.UIStyle-1663321001802]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              	padding:0px;
                              
                    ↓Event [ngx.components.UIControlEvent-1663321001805]: 
                      ↓setType [ngx.components.UICustomAction-1663321001808]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '		const name = this.pageOwner.getEnabled(page.sources)
                                        let keyIndex = (Object.keys(page.sources[name][''vars''])[page.pageOwner.local.index]);
                                        if(keyIndex == undefined){
                                            keyIndex = page.pageOwner.local.treeSource.filter(x => x.name == name.split(".")[0])[0].sequences.filter(x => x.name == name.split(".")[1])[0].variables.name[page.pageOwner.local.index];
                                            page.sources[name][''vars''][keyIndex] = {"source": false, str:"", "type":"text"};
                                        }
                                		else{
                                			if(page.sources[name][''vars''][keyIndex] != undefined){
                                				page.sources[name][''vars''][keyIndex]["type"] = "text";
                                			}
                                			else{
                                				page.sources[name][''vars''][keyIndex] = {"source": false, str:"", "type":"text"};
                                			}	
                                		}
                                		resolve();
                                '
                        ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1663321001811]: 
                          beanData: '{"ionBean":"InvokeAction"}'
                          stack: C8Oforms.MobileApplication.Application.updateState
                        ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1663321001814]: 
                          beanData: '{"ionBean":"InvokeAction"}'
                          stack: C8Oforms.MobileApplication.Application.detectChanges
                    ↓Attr [ngx.components.UIAttribute-1663321001817]: 
                      attrName: tooltip
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:'hover_text' | translate
                    ↓Attr1 [ngx.components.UIAttribute-1663321001820]: 
                      attrName: 
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:arrow
                    ↓Attr2 [ngx.components.UIAttribute-1663321001823]: 
                      attrName: positionV
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:top
                  ↓ButtonTS [ngx.components.UIDynamicElement-1663321001826]: 
                    beanData: '{"ionBean":"Button","IonSize":"plain:large"}'
                    tagName: ion-button
                    ↓Icon [ngx.components.UIDynamicElement-1663321001829]: 
                      beanData: '{"ionBean":"Icon","IconName":"plain:custom-ts-active"}'
                      tagName: ion-icon
                    ↓Style [ngx.components.UIStyle-1663321001832]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              	padding:0px;
                              
                    ↓Event [ngx.components.UIControlEvent-1663321001835]: 
                      ↓setType [ngx.components.UICustomAction-1663321001838]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '		const name = this.pageOwner.getEnabled(page.sources)
                                        let keyIndex = (Object.keys(page.sources[name][''vars''])[page.pageOwner.local.index]);
                                        if(keyIndex == undefined){
                                            keyIndex = page.pageOwner.local.treeSource.filter(x => x.name == name.split(".")[0])[0].sequences.filter(x => x.name == name.split(".")[1])[0].variables.name[page.pageOwner.local.index];
                                            page.sources[name][''vars''][keyIndex] = {"source": false, str:"", "type":"text"};
                                        }
                                		else{
                                			if(page.sources[name][''vars''][keyIndex] != undefined){
                                				page.sources[name][''vars''][keyIndex]["type"] = "ts";
                                			}
                                			else{
                                				page.sources[name][''vars''][keyIndex] = {"source": false, str:"", "type":"ts"};
                                			}	
                                		}
                                		resolve();
                                '
                        ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1663321001841]: 
                          beanData: '{"ionBean":"InvokeAction"}'
                          stack: C8Oforms.MobileApplication.Application.updateState
                        ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1663321001844]: 
                          beanData: '{"ionBean":"InvokeAction"}'
                          stack: C8Oforms.MobileApplication.Application.detectChanges
                    ↓Attr [ngx.components.UIAttribute-1663321001847]: 
                      attrName: tooltip
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:'hover_ts' | translate
                    ↓Attr1 [ngx.components.UIAttribute-1663321001850]: 
                      attrName: 
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:arrow
                    ↓Attr2 [ngx.components.UIAttribute-1663321001853]: 
                      attrName: positionV
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:top
                ↓DivJSON [ngx.components.UIDynamicElement-1678802976253]: 
                  beanData: '{"ionBean":"DivTag"}'
                  tagName: div
                  ↓tag [ngx.components.UIControlDirective-1678802994482]: 
                    directiveName: If
                    directiveSource: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:this.isJSON(this.item[this.path][this.pageOwner.getEnabled(this.sources)].vars[this.pageOwner.keyIndex(this.sources)].str) else ElseBlock_1678803138285
                    ↓ListContainer [ngx.components.UIDynamicElement-1678803744168]: 
                      beanData: '{"ionBean":"List"}'
                      tagName: ion-list
                      ↓ListHeader [ngx.components.UIDynamicElement-1678803744153]: 
                        beanData: '{"ionBean":"Listheader"}'
                        isEnabled: false
                        tagName: ion-list-header
                        ↓Label [ngx.components.UIDynamicElement-1678803744155]: 
                          beanData: '{"ionBean":"Label"}'
                          tagName: ion-label
                          ↓Heading [ngx.components.UIDynamicTag-1678803744157]: 
                            beanData: '{"ionBean":"Heading"}'
                            tagName: h1
                            ↓some_text [ngx.components.UIText-1678803744159]: 
                              textValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: plain:some list header
                      ↓tag1 [ngx.components.UIControlDirective-1678803344488]: 
                        directiveIndexName: idx
                        directiveItemName: key
                        directiveSource: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:this.keys(JSON.parse(this.item[this.path][this.pageOwner.getEnabled(this.sources)].vars[this.pageOwner.keyIndex(this.sources)].str))
                        ↓some_text [ngx.components.UIText-1678803380790]: 
                          isEnabled: false
                        ↓ListItem [ngx.components.UIDynamicElement-1678803757814]: 
                          beanData: '{"ionBean":"ListItem","Lines":"plain:full"}'
                          tagName: ion-item
                          ↓Label [ngx.components.UIDynamicElement-1678803757817]: 
                            beanData: '{"ionBean":"Label"}'
                            tagName: ion-label
                            ↓some_text [ngx.components.UIText-1678803757820]: 
                              textValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:this.cptString(key, this.item[this.path][this.pageOwner.getEnabled(this.sources)].vars[this.pageOwner.keyIndex(this.sources)].str)
                  ↓tag1 [ngx.components.UIElement-1678803138285]: 
                    identifier: ElseBlock_1678803138285
                    tagName: ng-template
                    ↓Text [ngx.components.UIText-1663334018256]: 
                      i18n: true
                      textValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:this.item[this.path][this.pageOwner.getEnabled(this.sources)].vars[this.pageOwner.keyIndex(this.sources)].str
          ↓Directive4 [ngx.components.UIControlDirective-1678808871664]: 
            directiveExpression: '''filter'''
            directiveName: SwitchCase
            ↓Style [ngx.components.UIStyle-1678808871667]: 
            ↓Div [ngx.components.UIDynamicElement-1678808871670]: 
              beanData: '{"ionBean":"DivTag"}'
              tagName: div
              ↓Style [ngx.components.UIStyle-1678808871673]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        padding:5px;
                        
              ↓Attr21 [ngx.components.UIAttribute-1678808871676]: 
                attrName: '[ngStyle]'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: 'script:this.pageOwner.local.dragging == true ? {''border-width'': ''2px'', ''border-color'': ''#e3e6e6'', ''border-style'': ''dashed''}: {}'
              ↓DivParentFlex [ngx.components.UIDynamicElement-1678808871679]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓Style [ngx.components.UIStyle-1678808871682]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '	display: flex;
                          	flex-direction: column;
                          '
                ↓Div [ngx.components.UIDynamicElement-1678808871685]: 
                  beanData: '{"ionBean":"DivTag"}'
                  tagName: div
                  ↓Style [ngx.components.UIStyle-1678808871688]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            '	flex-grow: 1;
                            	color: black !important;
                            	display: flex;
                                align-items: center;
                            	width:100%;
                            	ion-icon {
                            	  color: var(--ion-color-primary-contrast);
                            	}
                            '
                  ↓Attr2 [ngx.components.UIAttribute-1678808871691]: 
                    attrName: '[ngClass]'
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'stylegenerictextnormal'
                  ↓Div1 [ngx.components.UIDynamicElement-1678808871694]: 
                    beanData: '{"ionBean":"DivTag"}'
                    tagName: div
                    ↓Button1 [ngx.components.UIDynamicElement-1678808871697]: 
                      beanData: '{"ionBean":"Button","IonColor":"plain:primary"}'
                      tagName: ion-button
                      ↓Event [ngx.components.UIControlEvent-1678808871700]: 
                        ↓ComputeURL [ngx.components.UICustomAction-1678808871703]: 
                          actionValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  '		const enabled = page.pageOwner.getEnabled(page.sources)
                                  		const keyIndex = page.pageOwner.keyIndex(page.sources);		
                                  		try{
                                  			let tree;
                                  			if(page.isSource){
                                  				tree = page.pageOwner.local.treeSource
                                  			}
                                  			else{
                                  				tree = page.pageOwner.local.tree;
                                  			}
                                  	        let str = page.pageOwner.getEnabled(page.sources);
                                  	        let name = str.split(".")[0]
                                  	        let val;
                                  	        for(let i in tree){
                                  	            if(tree[i].name == name){
                                  	                let iSeq = page.pageOwner.getSequenceByName(tree[i].sequences, str.split(".")[1]);
                                  	                val = tree[i].sequences[iSeq]["variables"].type[page.pageOwner.local.index];
                                  	                break;
                                  	            }
                                  	        } 
                                  	        let baseUrl = window.location.href.indexOf("localhost") == -1 ? window.location.href.substring(0, (window.location.href.indexOf("/projects/") + 10 )  ) : "http://localhost:18080/convertigo/projects/"; 
                                  	        let configure = val.substring(10)
                                  	        resolve(baseUrl + configure);
                                  	    }
                                  	    catch(e){
                                  	        
                                  	    }
                                  '
                          ↓ModalPage [ngx.components.UIDynamicAction-1678808871706]: 
                            beanData: |
                              '{
                               "ionBean": "ModalAction",
                               "page": "plain:C8Oforms.MobileApplication.Application.modalConfigure",
                               "data": "script:{url: parent.out}",
                               "cssClass": "plain:modalCloud"
                              }'
                            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1678808871709]: 
                              beanData: '{"ionBean":"InvokeAction"}'
                              stack: C8Oforms.MobileApplication.Application.tick
                      ↓Icon [ngx.components.UIDynamicElement-1678808871712]: 
                        beanData: |
                          '{
                           "ionBean": "Icon",
                           "IconName": "plain:settings-outline",
                           "IconSlot": "plain:start"
                          }'
                        tagName: ion-icon
                        ↓Style [ngx.components.UIStyle-1678808871715]: 
                          styleContent: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  '	margin-right: 5px !important;
                                  '
                      ↓Text [ngx.components.UIText-1678808871718]: 
                        i18n: true
                        textValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: plain:configure
                      ↓Style [ngx.components.UIStyle-1678808871721]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '	--color: var(--ion-color-dark);
                                	ion-icon{
                                		color: var(--ion-color-dark);
                                	}
                                '
                ↓DivSwitchToJS [ngx.components.UIDynamicElement-1678808871724]: 
                  beanData: '{"ionBean":"DivTag"}'
                  isEnabled: false
                  tagName: div
                  ↓Style [ngx.components.UIStyle-1678808871727]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            'display: inline;
                            white-space:nowrap;
                            '
                  ↓ButtonText [ngx.components.UIDynamicElement-1678808871730]: 
                    beanData: '{"ionBean":"Button","IonSize":"plain:large"}'
                    tagName: ion-button
                    ↓Icon [ngx.components.UIDynamicElement-1678808871733]: 
                      beanData: '{"ionBean":"Icon","IconName":"plain:md-cloud-upload"}'
                      tagName: ion-icon
                    ↓Style [ngx.components.UIStyle-1678808871736]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              	padding:0px;
                              
                    ↓Event [ngx.components.UIControlEvent-1678808871739]: 
                      ↓setType [ngx.components.UICustomAction-1678808871742]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '		const name = this.pageOwner.getEnabled(page.sources)
                                        let keyIndex = (Object.keys(page.sources[name][''vars''])[page.pageOwner.local.index]);
                                        if(keyIndex == undefined){
                                            keyIndex = page.pageOwner.local.treeSource.filter(x => x.name == name.split(".")[0])[0].sequences.filter(x => x.name == name.split(".")[1])[0].variables.name[page.pageOwner.local.index];
                                            page.sources[name][''vars''][keyIndex] = {"source": false, str:"", "type":"text"};
                                        }
                                		else{
                                			if(page.sources[name][''vars''][keyIndex] != undefined){
                                				page.sources[name][''vars''][keyIndex]["type"] = "text";
                                			}
                                			else{
                                				page.sources[name][''vars''][keyIndex] = {"source": false, str:"", "type":"text"};
                                			}	
                                		}
                                		resolve();
                                '
                        ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1678808871745]: 
                          beanData: '{"ionBean":"InvokeAction"}'
                          stack: C8Oforms.MobileApplication.Application.updateState
                        ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1678808871748]: 
                          beanData: '{"ionBean":"InvokeAction"}'
                          stack: C8Oforms.MobileApplication.Application.detectChanges
                    ↓Attr [ngx.components.UIAttribute-1678808871751]: 
                      attrName: tooltip
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:'hover_text' | translate
                    ↓Attr1 [ngx.components.UIAttribute-1678808871754]: 
                      attrName: 
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:arrow
                    ↓Attr2 [ngx.components.UIAttribute-1678808871757]: 
                      attrName: positionV
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:top
                  ↓ButtonTS [ngx.components.UIDynamicElement-1678808871760]: 
                    beanData: '{"ionBean":"Button","IonSize":"plain:large"}'
                    tagName: ion-button
                    ↓Icon [ngx.components.UIDynamicElement-1678808871763]: 
                      beanData: '{"ionBean":"Icon","IconName":"plain:custom-ts-active"}'
                      tagName: ion-icon
                    ↓Style [ngx.components.UIStyle-1678808871766]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              	padding:0px;
                              
                    ↓Event [ngx.components.UIControlEvent-1678808871769]: 
                      ↓setType [ngx.components.UICustomAction-1678808871772]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '		const name = this.pageOwner.getEnabled(page.sources)
                                        let keyIndex = (Object.keys(page.sources[name][''vars''])[page.pageOwner.local.index]);
                                        if(keyIndex == undefined){
                                            keyIndex = page.pageOwner.local.treeSource.filter(x => x.name == name.split(".")[0])[0].sequences.filter(x => x.name == name.split(".")[1])[0].variables.name[page.pageOwner.local.index];
                                            page.sources[name][''vars''][keyIndex] = {"source": false, str:"", "type":"text"};
                                        }
                                		else{
                                			if(page.sources[name][''vars''][keyIndex] != undefined){
                                				page.sources[name][''vars''][keyIndex]["type"] = "ts";
                                			}
                                			else{
                                				page.sources[name][''vars''][keyIndex] = {"source": false, str:"", "type":"ts"};
                                			}	
                                		}
                                		resolve();
                                '
                        ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1678808871775]: 
                          beanData: '{"ionBean":"InvokeAction"}'
                          stack: C8Oforms.MobileApplication.Application.updateState
                        ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1678808871778]: 
                          beanData: '{"ionBean":"InvokeAction"}'
                          stack: C8Oforms.MobileApplication.Application.detectChanges
                    ↓Attr [ngx.components.UIAttribute-1678808871781]: 
                      attrName: tooltip
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:'hover_ts' | translate
                    ↓Attr1 [ngx.components.UIAttribute-1678808871784]: 
                      attrName: 
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:arrow
                    ↓Attr2 [ngx.components.UIAttribute-1678808871787]: 
                      attrName: positionV
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:top
                ↓DivJSON [ngx.components.UIDynamicElement-1678808871790]: 
                  beanData: '{"ionBean":"DivTag"}'
                  tagName: div
                  ↓tag [ngx.components.UIControlDirective-1678808871793]: 
                    directiveName: If
                    directiveSource: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:this.isJSON(this.item[this.path][this.pageOwner.getEnabled(this.sources)].vars[this.pageOwner.keyIndex(this.sources)].str) else ElseBlock_1678803138285
                    ↓ListContainer [ngx.components.UIDynamicElement-1678808871796]: 
                      beanData: '{"ionBean":"List"}'
                      tagName: ion-list
                      ↓ListHeader [ngx.components.UIDynamicElement-1678808871799]: 
                        beanData: '{"ionBean":"Listheader"}'
                        isEnabled: false
                        tagName: ion-list-header
                        ↓Label [ngx.components.UIDynamicElement-1678808871802]: 
                          beanData: '{"ionBean":"Label"}'
                          tagName: ion-label
                          ↓Heading [ngx.components.UIDynamicTag-1678808871805]: 
                            beanData: '{"ionBean":"Heading"}'
                            tagName: h1
                            ↓some_text [ngx.components.UIText-1678808871808]: 
                              textValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: plain:some list header
                      ↓tag1 [ngx.components.UIControlDirective-1678808871811]: 
                        directiveIndexName: idx
                        directiveItemName: key
                        directiveSource: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:this.keys(JSON.parse(this.item[this.path][this.pageOwner.getEnabled(this.sources)].vars[this.pageOwner.keyIndex(this.sources)].str))
                        ↓some_text [ngx.components.UIText-1678808871814]: 
                          isEnabled: false
                        ↓ListItem [ngx.components.UIDynamicElement-1678808871817]: 
                          beanData: '{"ionBean":"ListItem","Lines":"plain:full"}'
                          tagName: ion-item
                          ↓Label [ngx.components.UIDynamicElement-1678808871820]: 
                            beanData: '{"ionBean":"Label"}'
                            tagName: ion-label
                            ↓some_text [ngx.components.UIText-1678808871823]: 
                              textValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:this.cptString(key, this.item[this.path][this.pageOwner.getEnabled(this.sources)].vars[this.pageOwner.keyIndex(this.sources)].str)
                  ↓tag1 [ngx.components.UIElement-1678808871826]: 
                    identifier: ElseBlock_1678803138285
                    tagName: ng-template
                    ↓Text [ngx.components.UIText-1678808871829]: 
                      i18n: true
                      textValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:this.item[this.path][this.pageOwner.getEnabled(this.sources)].vars[this.pageOwner.keyIndex(this.sources)].str
          ↓Directive3 [ngx.components.UIControlDirective-1610637188325]: 
            directiveName: SwitchDefault
            ↓Style [ngx.components.UIStyle-1610637188328]: 
            ↓Div [ngx.components.UIDynamicElement-1610637188331]: 
              beanData: '{"ionBean":"DivTag"}'
              tagName: div
              ↓Style [ngx.components.UIStyle-1610637188334]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        padding:5px;
                        
              ↓Attr21 [ngx.components.UIAttribute-1610637188373]: 
                attrName: '[ngStyle]'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: 'script:this.pageOwner.local.dragging == true ? {''border-width'': ''2px'', ''border-color'': ''#e3e6e6'', ''border-style'': ''dashed''}: {}'
              ↓DivParentFlex [ngx.components.UIDynamicElement-1610638008634]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓Style [ngx.components.UIStyle-1610638014138]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '	display: flex;
                          '
                ↓GenericItem [ngx.components.UIDynamicElement-1610637188337]: 
                  beanData: '{"ionBean":"GenericItem"}'
                  isEnabled: false
                  tagName: ion-item
                  ↓Attr2 [ngx.components.UIAttribute-1610637188340]: 
                    attrName: '[ngClass]'
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'stylegenerictextnormal'
                  ↓DivEditor [ngx.components.UIDynamicElement-1610637188343]: 
                    beanData: '{"ionBean":"DivTag"}'
                    isEnabled: false
                    tagName: div
                    ↓Attr [ngx.components.UIAttribute-1610637188346]: 
                      attrName: contenteditable
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:true
                    ↓Attr1 [ngx.components.UIAttribute-1610637188349]: 
                      attrName: '[(innerHTML)]'
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:this.router.sanitizer.bypassSecurityTrustHtml(this.pageOwner.transform$toHtml(this.pageOwner.getItemNameById(this.pageOwner.getKeyIndex(this.sources))))
                      comment: 'this.pageOwner.getItemNameById(this.pageOwner.getKeyIndex(this.item.actions)) != '''' ? this.router.sanitizer.bypassSecurityTrustHtml(this.transform$toHtml(this.pageOwner.getItemNameById(this.pageOwner.getKeyIndex(this.item.actions)))) : ''<p>my place holder</p>'''
                    ↓Style [ngx.components.UIStyle-1610637188352]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '[contentEditable=true]:empty:not(:focus)::before{
                                      content:attr(placeholder)
                                  }
                              }
                              .class1600173001671:empty:not(:focus)::before{
                                      content:attr(placeholder)
                                  '
                    ↓Attr2 [ngx.components.UIAttribute-1610637188355]: 
                      attrName: spellcheck
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:false
                    ↓Event2 [ngx.components.UIControlEvent-1610637188358]: 
                      attrName: (input)
                      eventName: (input)
                      ↓CustomAction [ngx.components.UICustomAction-1610637188361]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '		//let path = page.path;
                                		if(event.target.innerHTML != undefined){
                                			let caretOffset = page["getCarretPosition"](event.target);
                                		    let initalHtml = event.target.innerHTML;
                                		    var parser = new DOMParser();
                                		    let doc = parser.parseFromString(initalHtml, "text/html");
                                		    for(var i = 0; i < doc.body.children.length; i++){
                                		        if(doc.body.children[i].id == undefined || doc.body.children[i].id == ""){
                                		            doc.body.removeChild(doc.body.children[i])
                                		        }
                                		    }
                                		    
                                		    let html = page["transformHtmlto$"](doc.body.innerHTML);
                                			var newDiv = document.createElement("div");
                                			newDiv.innerHTML = html
                                			html = newDiv.innerText;
                                		    const name = page.pageOwner.getEnabled(page.sources)
                                            let keyIndex = (Object.keys(page.sources[name][''vars''])[page.pageOwner.local.index]);
                                            if(keyIndex == undefined){
                                                keyIndex = page.pageOwner.local.treeSource.filter(x => x.name == name.split(".")[0])[0].sequences.filter(x => x.name == name.split(".")[1])[0].variables.name[page.pageOwner.local.index];
                                                page.sources[name][''vars''][keyIndex] = {"source": false, str:""};
                                            }
                                            if(page.sources[name][''vars''][keyIndex][''source''] == false || page.sources[name][''vars''][keyIndex][''source''] == undefined){
                                                page.sources[name][''vars''][keyIndex][''str''] = html;
                                            }
                                			page["setCaretPosition"](event.target.id, caretOffset);
                                		    resolve();
                                		}
                                '
                        isEnabled: false
                        ↓id [ngx.components.UIControlVariable-1610979540275]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:'edition' + this.item.id
                      ↓CustomAction1 [ngx.components.UICustomAction-1610972446257]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                		console.log("input !!!!!");
                                		resolve();
                                
                    ↓Event [ngx.components.UIControlEvent-1610637188364]: 
                      attrName: (blur)
                      eventName: (blur)
                      ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1610637188367]: 
                        beanData: '{"ionBean":"InvokeAction"}'
                        isEnabled: false
                        stack: C8Oforms.MobileApplication.Application.updateState
                      ↓CustomAction [ngx.components.UICustomAction-1610972272794]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                		console.log("blur !!!!!");
                                		resolve();
                                
                    ↓Attr3 [ngx.components.UIAttribute-1610637188370]: 
                      attrName: '[attr.placeholder]'
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:translate.instant('placeholder_editor')
                    ↓Attr4 [ngx.components.UIAttribute-1610978859120]: 
                      attrName: '[attr.id]'
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:'edition' + this.item.id
                    ↓Event1 [ngx.components.UIControlEvent-1610979313982]: 
                      attrName: (drop)
                      eventName: (drop)
                      ↓CustomAction [ngx.components.UICustomAction-1610979329928]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                		console.log("drop");
                                		event.preventDefault();
                                		event.stopPropagation();
                                		let html = event.dataTransfer.getData('text/html');
                                		resolve();
                                
                        isEnabled: false
                  ↓Style [ngx.components.UIStyle-1610638446184]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            '	flex-grow: 1;
                            '
                  ↓UseSharedComponent1 [ngx.components.UIUseShared-1611052763212]: 
                    sharedcomponent: lib_ExtendedComponents_ui_ngx.MobileApplication.Application.tinyMce
                    ↓model [ngx.components.UIUseVariable-1611052763215]: 
                      varValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:null
                    ↓init [ngx.components.UIUseVariable-1611052763218]: 
                      varValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: |
                              'script:{
                                  placeholder: translate.instant(''placeholder_editor''),
                                  toolbar: false,
                                  menubar:false,
                                  statusbar: false,
                                  branding: false,
                                  importcss_append: true,
                                  forced_root_block : false,
                                  language: this.pageOwner.getTinyLang(this.global.settings.language),
                                  language_url: this.pageOwner.getTinyPathLang(this.global.settings.language),
                                  setup: this.pageOwner.cancelKeyDownForTiny(editor)
                              }'
                    ↓disabled [ngx.components.UIUseVariable-1611052763221]: 
                      varValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:''
                    ↓apiKey [ngx.components.UIUseVariable-1611052763224]: 
                      varValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:''
                    ↓cloudChannel [ngx.components.UIUseVariable-1611052763227]: 
                      varValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:''
                    ↓id [ngx.components.UIUseVariable-1611052763230]: 
                      varValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:''
                    ↓initialValue [ngx.components.UIUseVariable-1611052763233]: 
                      varValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:this.pageOwner.transform$toHtml(this.pageOwner.getItemNameById(this.pageOwner.getKeyIndex(this.sources)))
                    ↓inline [ngx.components.UIUseVariable-1611052763236]: 
                      varValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:true
                    ↓ref [ngx.components.UIUseVariable-1611052763248]: 
                      varValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: 'script:{refName: ''actionsVar3'', thingIndex: this.thingIndex, enabled: this.getEnabled(this.item.actions), keyIndex: this.keyIndex(this.item.actions)}'
                ↓Div [ngx.components.UIDynamicElement-1611067049058]: 
                  beanData: '{"ionBean":"DivTag"}'
                  tagName: div
                  ↓Style [ngx.components.UIStyle-1611067074793]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            '	flex-grow: 1;
                            	color: black !important;
                            	display: flex;
                                align-items: center;
                            width:100%;
                            '
                  ↓Attr2 [ngx.components.UIAttribute-1611067080708]: 
                    attrName: '[ngClass]'
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'stylegenerictextnormal'
                  ↓Div [ngx.components.UIDynamicElement-1611068022030]: 
                    beanData: '{"ionBean":"DivTag"}'
                    tagName: div
                    ↓Style [ngx.components.UIStyle-1611068030565]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              width:100%;
                              
                    ↓UseSharedComponent1 [ngx.components.UIUseShared-1611067062552]: 
                      identifier: currentEdit
                      sharedcomponent: lib_ExtendedComponents_ui_ngx.MobileApplication.Application.tinyMce
                      ↓model [ngx.components.UIUseVariable-1611067062555]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:this.pageOwner.transform$toHtml(this.pageOwner.getItemNameById(this.pageOwner.getKeyIndex(this.sources)))
                      ↓init [ngx.components.UIUseVariable-1611067062558]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: |
                                'script:this.pageOwner.getKeyIndex(this.sources)?.type != ''ts'' ? {
                                    placeholder: this.translate.instant(''placeholder_editor''),
                                    toolbar: false,
                                    menubar:false,
                                    statusbar: false,
                                    branding: false,
                                    indent: false,
                                    quickbars_selection_toolbar: false,
                                    importcss_append: true,
                                    height: 300,
                                    force_br_newlines : false,
                                    force_p_newlines : false,
                                    noneditable_noneditable_class: ''mceNonEditable'',
                                    content_css: this.pageOwner.getTinyCssPath(),
                                    language: this.pageOwner.getTinyLang(this.global.settings.language),
                                    language_url: this.pageOwner.getTinyPathLang(this.global.settings.language),
                                    setup: this.pageOwner.tinyFuncDropWithCancel,
                                    content_style:''.mce-content-body { background: #FFF3CD; color:#000;}'',
                                    oninit: this.pageOwner.tinyPostInit,
                                    valid_elements : ''*[*]'',
                                    apply_source_formatting : false,                
                                    verify_html : false
                                } : {
                                    placeholder: this.translate.instant(''placeholder_editor''),
                                    toolbar: false,
                                    menubar:false,
                                    statusbar: false,
                                    branding: false,
                                    indent: false,
                                    quickbars_selection_toolbar: false,
                                    importcss_append: true,
                                    height: 300,
                                    force_br_newlines : false,
                                    force_p_newlines : false,
                                    noneditable_noneditable_class: ''mceNonEditable'',
                                    content_css: this.pageOwner.getTinyCssPath(),
                                    language: this.pageOwner.getTinyLang(this.global.settings.language),
                                    language_url: this.pageOwner.getTinyPathLang(this.global.settings.language),
                                    setup: this.pageOwner.tinyFuncDropWithCancel,
                                    content_style:''.mce-content-body { background: #88bdff; color:#000;}'',
                                    oninit: this.pageOwner.tinyPostInit,
                                    valid_elements : ''*[*]'',
                                    apply_source_formatting : false,                
                                    verify_html : false
                                }'
                      ↓disabled [ngx.components.UIUseVariable-1611067062561]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:''
                      ↓apiKey [ngx.components.UIUseVariable-1611067062564]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:''
                      ↓cloudChannel [ngx.components.UIUseVariable-1611067062567]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:''
                      ↓id [ngx.components.UIUseVariable-1611067062570]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:''
                      ↓initialValue [ngx.components.UIUseVariable-1611067062573]: 
                        isEnabled: false
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:this.pageOwner.transform$toHtml(this.pageOwner.getItemNameById(this.pageOwner.getKeyIndex(this.sources)))
                      ↓inline [ngx.components.UIUseVariable-1611067062576]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:true
                      ↓Event [ngx.components.UIControlEvent-1646385780552]: 
                        attrName: (onBlur)
                        eventName: onBlur
                        ↓CustomAsyncAction [ngx.components.UICustomAsyncAction-1646385787524]: 
                          actionValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  		try {
                                  			// case editing variable type text or ts
                                  			let enabled = page.pageOwner.getEnabled(page.sources);
                                  			let keyIndex = page.pageOwner.keyIndex(page.sources);
                                  			let html = page.pageOwner.transformHtmlto$(event.editor.getContent());
                                  			var newDiv = document.createElement("div");
                                  			newDiv.innerHTML = html
                                  			html = newDiv.innerText;
                                  			page.item[page.path][enabled]["vars"][keyIndex].str = html;
                                  			page.item[page.path][enabled]["vars"][keyIndex].html = false;
                                  		} catch (e) {
                                  			console.log("error", e);
                                  		} finally {
                                  			return;
                                  		}
                                  
                          ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1646386091557]: 
                            beanData: '{"ionBean":"InvokeAction"}'
                            stack: C8Oforms.MobileApplication.Application.updateState
                ↓DivSwitchToJS [ngx.components.UIDynamicElement-1610638069924]: 
                  beanData: '{"ionBean":"DivTag"}'
                  tagName: div
                  ↓Style [ngx.components.UIStyle-1610638091317]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            '	display: inline;
                            	white-space:nowrap;
                            	ion-button{
                            		--padding-start: 0px;
                            		--padding-end: 0px;
                            	}
                            '
                  ↓ButtonText [ngx.components.UIDynamicElement-1610638825669]: 
                    beanData: |
                      '{
                       "ionBean": "Button",
                       "IonFill": "plain:clear",
                       "IonSize": "plain:large",
                       "IconSlot": "plain:icon-only"
                      }'
                    tagName: ion-button
                    ↓Icon [ngx.components.UIDynamicElement-1610638825672]: 
                      beanData: '{"ionBean":"Icon","IconName":"plain:text-outline"}'
                      tagName: ion-icon
                      ↓Attr [ngx.components.UIAttribute-1646385629298]: 
                        attrName: '[color]'
                        attrValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: 'script:this.pageOwner.getKeyIndex(this.sources)?.type != ''ts'' ? ''yelloweditorbutton'' : ''greyButton'''
                    ↓Style [ngx.components.UIStyle-1610639205571]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              	padding:0px;
                              
                    ↓Event [ngx.components.UIControlEvent-1610642166004]: 
                      ↓setType [ngx.components.UICustomAction-1610642174644]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '		page.currentEdit.editor._editor.bodyElement.style.backgroundColor = "#FFF3CD"
                                		const name = page.pageOwner.getEnabled(page.sources)
                                        let keyIndex = (Object.keys(page.sources[name][''vars''])[page.pageOwner.local.index]);
                                        if(keyIndex == undefined){
                                            keyIndex = page.pageOwner.local.treeSource.filter(x => x.name == name.split(".")[0])[0].sequences.filter(x => x.name == name.split(".")[1])[0].variables.name[page.pageOwner.local.index];
                                            page.sources[name][''vars''][keyIndex] = {"source": false, str:"", "type":"text"};
                                        }
                                		else{
                                			if(page.sources[name][''vars''][keyIndex] != undefined){
                                				page.sources[name][''vars''][keyIndex]["type"] = "text";
                                			}
                                			else{
                                				page.sources[name][''vars''][keyIndex] = {"source": false, str:"", "type":"text"};
                                			}	
                                		}
                                		resolve();
                                '
                        ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1610642482810]: 
                          beanData: '{"ionBean":"InvokeAction"}'
                          stack: C8Oforms.MobileApplication.Application.updateState
                        ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1610654391936]: 
                          beanData: '{"ionBean":"InvokeAction"}'
                          stack: C8Oforms.MobileApplication.Application.detectChanges
                    ↓Attr [ngx.components.UIAttribute-1610702255724]: 
                      attrName: tooltip
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:'hover_text' | translate
                    ↓Attr1 [ngx.components.UIAttribute-1610702255727]: 
                      attrName: 
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:arrow
                    ↓Attr2 [ngx.components.UIAttribute-1610702255730]: 
                      attrName: positionV
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:top
                  ↓ButtonTS [ngx.components.UIDynamicElement-1610637910609]: 
                    beanData: |
                      '{
                       "ionBean": "Button",
                       "IonFill": "plain:clear",
                       "IonSize": "plain:large",
                       "IconSlot": "plain:icon-only"
                      }'
                    tagName: ion-button
                    ↓Icon [ngx.components.UIDynamicElement-1610638223300]: 
                      beanData: '{"ionBean":"Icon","IconName":"plain:logo-javascript"}'
                      tagName: ion-icon
                      ↓Attr [ngx.components.UIAttribute-1646385583198]: 
                        attrName: '[color]'
                        attrValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: 'script:this.pageOwner.getKeyIndex(this.sources)?.type == ''ts'' ? ''blueeditorbutton'' : ''greyButton'''
                    ↓Style [ngx.components.UIStyle-1610639211307]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              	padding:0px;
                              
                    ↓Event [ngx.components.UIControlEvent-1610642516976]: 
                      ↓setType [ngx.components.UICustomAction-1610642516979]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '		try{
                                			page.currentEdit.editor._editor.bodyElement.style.backgroundColor = "#88bdff"
                                		}
                                		catch(e){
                                			
                                		}
                                		const name = page.pageOwner.getEnabled(page.sources)
                                        let keyIndex = (Object.keys(page.sources[name][''vars''])[page.pageOwner.local.index]);
                                        if(keyIndex == undefined){
                                            keyIndex = page.pageOwner.local.treeSource.filter(x => x.name == name.split(".")[0])[0].sequences.filter(x => x.name == name.split(".")[1])[0].variables.name[page.pageOwner.local.index];
                                            page.sources[name][''vars''][keyIndex] = {"source": false, str:"", "type":"text"};
                                        }
                                		else{
                                			if(page.sources[name][''vars''][keyIndex] != undefined){
                                				page.sources[name][''vars''][keyIndex]["type"] = "ts";
                                			}
                                			else{
                                				page.sources[name][''vars''][keyIndex] = {"source": false, str:"", "type":"ts"};
                                			}	
                                		}
                                		resolve();
                                '
                        ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1610642516982]: 
                          beanData: '{"ionBean":"InvokeAction"}'
                          stack: C8Oforms.MobileApplication.Application.updateState
                        ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1610654356044]: 
                          beanData: '{"ionBean":"InvokeAction"}'
                          stack: C8Oforms.MobileApplication.Application.detectChanges
                    ↓Attr [ngx.components.UIAttribute-1610702166800]: 
                      attrName: tooltip
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:'hover_ts' | translate
                    ↓Attr1 [ngx.components.UIAttribute-1610702166803]: 
                      attrName: 
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:arrow
                    ↓Attr2 [ngx.components.UIAttribute-1610702166806]: 
                      attrName: positionV
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:top
    ↓attr [ngx.components.UIAttribute-1678808732949]: 
      attrName: '[attr.size]'
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: 'script:this.pageOwner.getTypeByActions(this.sources, this.isSource) != ''configure'' ? ''9'' : ''12'''
  ↓GridColEditor1 [ngx.components.UIDynamicElement-1678818941742]: 
    beanData: '{"ionBean":"GridCol"}'
    tagName: ion-col
    ↓Div [ngx.components.UIDynamicElement-1678818941745]: 
      beanData: '{"ionBean":"DivTag"}'
      tagName: div
      ↓Style [ngx.components.UIStyle-1678818941748]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '	font-size: 14px;
                  	font-weight: normal;
                 	font-style: normal;
                  	font-stretch: normal;
                  	line-height: normal;
                  	letter-spacing: normal;
                	height:100%;
                }
                
                .class1610637188220:hover {
                	cursor: pointer;
                '
      ↓Div [ngx.components.UIDynamicElement-1678818941751]: 
        beanData: '{"ionBean":"DivTag"}'
        tagName: div
        ↓Style [ngx.components.UIStyle-1678818941754]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  'height:100%;
                  .styleBadge{
                  	/* comes from ion-badge style */
                  	padding: 3px 8px;
                      text-align: center;
                      display: inline-block;
                      min-width: 10px;
                      font-size: 1.3rem;
                      font-weight: bold;
                      line-height: 1;
                      white-space: nowrap;
                      vertical-align: baseline;
                      /* custom */
                      user-select: none !important;
                  	user-drag:element;
                      border-radius: 10px 10px 10px 10px;
                      }
                  '
        ↓Directive [ngx.components.UIControlDirective-1678818941757]: 
          directiveName: Switch
          directiveSource: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:this.type
          ↓Directive [ngx.components.UIControlDirective-1678818941760]: 
            directiveExpression: '''html'''
            directiveName: SwitchCase
            ↓Div [ngx.components.UIDynamicElement-1678818941763]: 
              beanData: '{"ionBean":"DivTag"}'
              tagName: div
              ↓UseSharedComponent11 [ngx.components.UIUseShared-1678818941766]: 
                sharedcomponent: lib_ExtendedComponents_ui_ngx.MobileApplication.Application.tinyMce
                ↓model [ngx.components.UIUseVariable-1678818941769]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:null
                ↓init [ngx.components.UIUseVariable-1678818941772]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: |
                          'script:{
                              placeholder: translate.instant(''placeholder_editor''),
                                  plugins: ''noneditable print preview paste importcss searchreplace autolink autosave save directionality code visualblocks visualchars fullscreen image link media template codesample table charmap hr pagebreak nonbreaking anchor toc insertdatetime advlist lists wordcount imagetools textpattern noneditable help charmap quickbars emoticons'',
                                  imagetools_cors_hosts: [''picsum.photos''],
                                  menubar: ''file edit view insert format tools table help'',
                                  toolbar: ''undo redo | bold italic underline strikethrough | fontselect fontsizeselect formatselect | alignleft aligncenter alignright alignjustify | outdent indent |  numlist bullist | forecolor backcolor removeformat | pagebreak | charmap emoticons | fullscreen  preview save print | insertfile image media template link anchor codesample | ltr rtl'',
                                  toolbar_sticky: true,
                                  autosave_ask_before_unload: true,
                                  autosave_interval: ''30s'',
                                  autosave_prefix: ''{path}{query}-{id}-'',
                                  autosave_restore_when_empty: false,
                                  autosave_retention: ''2m'',
                                  image_advtab: true,
                                  importcss_append: true,
                                  template_cdate_format: ''[Date Created (CDATE): %m/%d/%Y : %H:%M:%S]'',
                                  template_mdate_format: ''[Date Modified (MDATE): %m/%d/%Y : %H:%M:%S]'',
                                  height: 600,
                                  image_caption: true,
                                  quickbars_selection_toolbar: ''bold italic | quicklink h2 h3 blockquote quickimage quicktable'',
                                  noneditable_noneditable_class: ''mceNonEditable'',
                                  toolbar_mode: ''sliding'',
                                  contextmenu: ''link image imagetools table'',
                                  content_css:  this.pageOwner.getTinyCssPath(''html''),
                                  language: this.pageOwner.getTinyLang(this.global.settings.language),
                                  language_url: this.pageOwner.getTinyPathLang(this.global.settings.language),
                                  allow_html_in_named_anchor: true,
                                  branding: false,
                                  setup: this.pageOwner.tinyFuncDrop,
                                  valid_elements : ''*[*]'',
                          	 apply_source_formatting : false,                
                                  verify_html : false,
                          	convert_urls: false
                              }'
                ↓disabled [ngx.components.UIUseVariable-1678818941775]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:''
                ↓apiKey [ngx.components.UIUseVariable-1678818941778]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:''
                ↓cloudChannel [ngx.components.UIUseVariable-1678818941781]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:''
                ↓id [ngx.components.UIUseVariable-1678818941784]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:''
                ↓initialValue [ngx.components.UIUseVariable-1678818941787]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this.pageOwner.transform$toHtml(this.currentObject.str)
                ↓inline [ngx.components.UIUseVariable-1678818941790]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:false
                ↓plugins [ngx.components.UIUseVariable-1678818941793]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:['noneditable advlist autolink lists link image charmap print preview anchor','searchreplace visualblocks code fullscreen','insertdatetime media table paste code imagetools help wordcount']
                ↓toolbar [ngx.components.UIUseVariable-1678818941796]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:'undo redo | formatselect | bold italic backcolor | alignleft aligncenter alignright alignjustify | \bullist numlist outdent indent | removeformat | link image | help'
                ↓Event [ngx.components.UIControlEvent-1678818941799]: 
                  attrName: (onBlur)
                  eventName: onBlur
                  ↓computeResult [ngx.components.UICustomAsyncAction-1678818941802]: 
                    actionValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            '		try {
                            			return {props:{str: page.pageOwner.transformHtmlto$(event.editor.getContent(), true), html: true}};
                            		} catch (e) {
                            			page.c8o.log.error("An error occured while trying to save html");
                            			return {error: true};
                            		}
                            '
                    ↓EmitEvent [ngx.components.UIDynamicEmit-1678872421532]: 
                      beanData: |
                        '{
                         "ionBean": "EmitEventAction",
                         "event": "plain:C8Oforms.MobileApplication.Application.dataSourceEditor.save",
                         "data": "source:{\"filter\":\"Action\",\"project\":\"C8Oforms\",\"input\":\"\",\"model\":{\"data\":[{\"priority\":1678818941802}],\"path\":\"?.out\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}"
                        }'
                      tagName: EmitEvent
          ↓Directive1 [ngx.components.UIControlDirective-1678818941808]: 
            directiveExpression: '''file'''
            directiveName: SwitchCase
            ↓Div [ngx.components.UIDynamicElement-1678818941814]: 
              beanData: '{"ionBean":"DivTag"}'
              tagName: div
              ↓Style [ngx.components.UIStyle-1678818941817]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        	padding:5px;
                        
              ↓Attr21 [ngx.components.UIAttribute-1678818941820]: 
                attrName: '[ngStyle]'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: 'script:this.pageOwner.local.dragging == true ? {''border-width'': ''2px'', ''border-color'': ''#e3e6e6'', ''border-style'': ''dashed''}: {}'
              ↓DivParentFlex [ngx.components.UIDynamicElement-1678818941823]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓Style [ngx.components.UIStyle-1678818941826]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '	display: flex;
                          '
                ↓Div [ngx.components.UIDynamicElement-1678818941829]: 
                  beanData: '{"ionBean":"DivTag"}'
                  tagName: div
                  ↓Style [ngx.components.UIStyle-1678818941832]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            '	flex-grow: 1;
                            	color: black !important;
                            	display: flex;
                                align-items: center;
                            	width:100%;
                            '
                  ↓Attr2 [ngx.components.UIAttribute-1678818941835]: 
                    attrName: class
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:stylegenerictextnormal
                  ↓Div [ngx.components.UIDynamicElement-1678818941838]: 
                    beanData: '{"ionBean":"DivTag"}'
                    tagName: div
                    ↓Style [ngx.components.UIStyle-1678818941841]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              	width:100%;
                              
                    ↓UseSharedComponent1 [ngx.components.UIUseShared-1678818941844]: 
                      isEnabled: false
                      sharedcomponent: lib_ExtendedComponents_ui_ngx.MobileApplication.Application.tinyMce
                      ↓model [ngx.components.UIUseVariable-1678818941847]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:null
                      ↓init [ngx.components.UIUseVariable-1678818941850]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: |
                                'script:{
                                    placeholder: translate.instant(''placeholder_editor''),
                                    toolbar: false,
                                    menubar:false,
                                    statusbar: false,
                                    branding: false,
                                    importcss_append: true,
                                    height: 200,
                                    height: 600,
                                   forced_root_block : false,
                                    noneditable_noneditable_class: ''mceNonEditable'',
                                    content_css: ''assets/css/customTiny.css'',
                                    language: this.pageOwner.getTinyLang(this.global.settings.language),
                                    language_url: this.pageOwner.getTinyPathLang(this.global.settings.language),
                                    setup: this.pageOwner.cancelKeyDownForTiny(editor)
                                }'
                      ↓disabled [ngx.components.UIUseVariable-1678818941853]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:''
                      ↓apiKey [ngx.components.UIUseVariable-1678818941856]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:''
                      ↓cloudChannel [ngx.components.UIUseVariable-1678818941859]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:''
                      ↓id [ngx.components.UIUseVariable-1678818941862]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:''
                      ↓initialValue [ngx.components.UIUseVariable-1678818941865]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:this.pageOwner.transform$toHtml(this.currentObject.str)
                      ↓inline [ngx.components.UIUseVariable-1678818941868]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:true
                      ↓ref [ngx.components.UIUseVariable-1678818941871]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: 'script:{refName: ''actionsVar3'', thingIndex: this.thingIndex, enabled: this.pageowner.getEnabled(this.sources), keyIndex: this.pageOwner.keyIndex(this.sources), path: this.path, item:this.item}'
                    ↓Attr [ngx.components.UIAttribute-1678818941874]: 
                      attrName: '*ngIf'
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:this.currentObject.type == 'ts' else ElseBlock_1678818941877
                  ↓Tag [ngx.components.UIElement-1678818941877]: 
                    identifier: ElseBlock_1678818941877
                    tagName: ng-template
                    ↓Div [ngx.components.UIDynamicElement-1678818941880]: 
                      beanData: '{"ionBean":"DivTag"}'
                      tagName: div
                      ↓Tag [ngx.components.UIElement-1678818941883]: 
                        selfClose: true
                        tagName: input
                        ↓Attr [ngx.components.UIAttribute-1678818941886]: 
                          attrName: type
                          attrValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: plain:file
                        ↓Attr1 [ngx.components.UIAttribute-1678818941889]: 
                          attrName: accept
                          attrValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: plain:file
                        ↓Style [ngx.components.UIStyle-1678818941892]: 
                          styleContent: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  '	display: none;
                                  '
                        ↓Event [ngx.components.UIControlEvent-1678818941895]: 
                          attrName: (change)
                          eventName: (change)
                          ↓AddFIles [ngx.components.UICustomAction-1678818941898]: 
                            actionValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    '		if(event["srcElement"]["files"][0] != undefined){
                                    			var file = event["srcElement"]["files"][0];
                                    			const enabled = page.pageOwner.getEnabled(page.sources)
                                    			const keyIndex = page.pageOwner.keyIndex(page.sources);
                                    			let obj : any= null;
                                    			
                                    			//remove previous files
                                    			try{
                                    				if(page.item[page.path][enabled][''vars''][keyIndex].from_attachment == true){
                                    					obj = JSON.parse(JSON.stringify({"docid": page["form"]["_id"], "name": page.item[page.path][enabled][''vars''][keyIndex]["attchament_name"]}));
                                    				}	
                                    			}
                                    			catch(e){
                                    				
                                    			}
                                    			// define file will come from atatchment
                                    			page.item[page.path][enabled][''vars''][keyIndex].from_attachment = true;
                                    			// save original name
                                    			page.item[page.path][enabled][''vars''][keyIndex].original_name = file.name;
                                    			// generate unique id for file
                                    			page.item[page.path][enabled][''vars''][keyIndex].attchament_name = ""+new Date().getTime();
                                    			// put attchament
                                    			page.c8o.callJsonObject("fs://c8oforms_fs.put_attachment",{
                                    					"docid": page.pageOwner.form["_id"],
                                    					"name": page.item[page.path][enabled][''vars''][keyIndex].attchament_name,
                                    					"content_type": file.type,
                                    					"content": file
                                    				}
                                    			)
                                    			.then((res)=>{
                                    				console.log("ok", res);
                                    				page.pageOwner.updateState()
                                    				.then((res)=>{
                                    					try{
                                    						if(obj != null){
                                    							page.c8o.callJsonObject("fs://c8oforms_fs.delete_attachment",obj )
                                    							.then((res)=>{
                                    								console.log("succesfully deleted :"+ obj["name"]);
                                    								return null;
                                    							})
                                    						}	
                                    					}
                                    					catch(e){
                                    						
                                    					}
                                    				})
                                    				return null
                                    			})
                                    			.fail((e)=>{
                                    				console.error("my error", e);
                                    			})
                                    		}
                                    		
                                    		resolve();
                                    '
                            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1678818941901]: 
                              beanData: '{"ionBean":"InvokeAction"}'
                              stack: C8Oforms.MobileApplication.Application.tick
                        ↓Attr11 [ngx.components.UIAttribute-1678818941904]: 
                          attrName: '[attr.id]'
                          attrValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: plain:1615385751903
                      ↓Button1 [ngx.components.UIDynamicElement-1678818941907]: 
                        beanData: '{"ionBean":"Button","IonColor":"plain:primary"}'
                        tagName: ion-button
                        ↓Event [ngx.components.UIControlEvent-1678818941910]: 
                          ↓CustomAction [ngx.components.UICustomAction-1678818941913]: 
                            actionValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    		document.getElementById(vars.id).click();
                                    		resolve();
                                    
                            ↓id [ngx.components.UIControlVariable-1678818941916]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: plain:1615385751903
                        ↓Icon [ngx.components.UIDynamicElement-1678818941919]: 
                          beanData: '{"ionBean":"Icon","IconName":"plain:cloud-upload-outline"}'
                          tagName: ion-icon
                          ↓Style [ngx.components.UIStyle-1678818941922]: 
                            styleContent: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    '	margin-right: 5px !important;
                                    '
                        ↓Text [ngx.components.UIText-1678818941925]: 
                          i18n: true
                          textValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: plain:Import_File
                        ↓Style [ngx.components.UIStyle-1678818941928]: 
                          styleContent: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  '	color: var(--ion-color-white);
                                  	ion-icon{
                                  		color: var(--ion-color-white);
                                  	}
                                  '
                      ↓Text [ngx.components.UIText-1678818941931]: 
                        i18n: true
                        textValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:this.pageOwner.getFileNameOrDefaultStr(this)
                    ↓Style [ngx.components.UIStyle-1678818941934]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              width:100%;
                              
          ↓Directive2 [ngx.components.UIControlDirective-1678818942003]: 
            directiveExpression: '''configure'''
            directiveName: SwitchCase
            ↓Div [ngx.components.UIDynamicElement-1678818942009]: 
              beanData: '{"ionBean":"DivTag"}'
              tagName: div
              ↓Style [ngx.components.UIStyle-1678818942012]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        	padding:5px;
                        
              ↓Attr21 [ngx.components.UIAttribute-1678818942015]: 
                attrName: '[ngStyle]'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: 'script:this.pageOwner.local.dragging == true ? {''border-width'': ''2px'', ''border-color'': ''#e3e6e6'', ''border-style'': ''dashed''}: {}'
              ↓DivParentFlex [ngx.components.UIDynamicElement-1678818942018]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓Style [ngx.components.UIStyle-1678818942021]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '	display: flex;
                          	flex-direction: column;
                          	justify-content: center;
                          	align-items: center;
                          '
                ↓Div [ngx.components.UIDynamicElement-1678818942024]: 
                  beanData: '{"ionBean":"DivTag"}'
                  tagName: div
                  ↓Style [ngx.components.UIStyle-1678818942027]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            '	flex-grow: 1;
                            	color: black !important;
                            	display: flex;
                                align-items: center;
                                justify-content: center;
                            	width:100%;
                            	ion-icon {
                            	  color: var(--ion-color-primary-contrast);
                            	}
                            '
                  ↓Attr2 [ngx.components.UIAttribute-1678818942030]: 
                    attrName: class
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:stylegenerictextnormal
                  ↓div [ngx.components.UIDynamicElement-1678818942033]: 
                    beanData: '{"ionBean":"DivTag"}'
                    tagName: div
                    ↓Button [ngx.components.UIDynamicElement-1678818942036]: 
                      beanData: '{"ionBean":"Button","IonColor":"plain:primary"}'
                      tagName: ion-button
                      ↓Event [ngx.components.UIControlEvent-1678818942039]: 
                        ↓ComputeURL [ngx.components.UICustomAction-1678818942042]: 
                          actionValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  '		try{
                                  	        let baseUrl = window.location.href.indexOf("localhost") == -1 ? window.location.href.substring(0, (window.location.href.indexOf("/projects/") + 10 )  ) : "http://localhost:18080/convertigo/projects/"; 
                                  	        let configure = page.currentMeta.substring(10)
                                  	        resolve(baseUrl + configure);
                                  	    }
                                  	    catch(e){
                                  	        
                                  	    }
                                  '
                          ↓ModalPage [ngx.components.UIDynamicAction-1678818942045]: 
                            beanData: |
                              '{
                               "ionBean": "ModalAction",
                               "page": "plain:C8Oforms.MobileApplication.Application.modalConfigure",
                               "data": "script:{url: parent.out}",
                               "cssClass": "plain:alwaysFullScreen"
                              }'
                            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1678818942048]: 
                              beanData: '{"ionBean":"InvokeAction"}'
                              stack: C8Oforms.MobileApplication.Application.tick
                      ↓Icon [ngx.components.UIDynamicElement-1678818942051]: 
                        beanData: |
                          '{
                           "ionBean": "Icon",
                           "IconName": "plain:settings-outline",
                           "IconSlot": "plain:start"
                          }'
                        tagName: ion-icon
                        ↓Style [ngx.components.UIStyle-1678818942054]: 
                          styleContent: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  '	margin-right: 5px !important;
                                  '
                      ↓Text [ngx.components.UIText-1678818942057]: 
                        i18n: true
                        textValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: plain:configure
                      ↓Style [ngx.components.UIStyle-1678818942060]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '	--color: var(--ion-color-dark);
                                	ion-icon{
                                		color: var(--ion-color-dark);
                                	}
                                '
                ↓DivJSON [ngx.components.UIDynamicElement-1678818942129]: 
                  beanData: '{"ionBean":"DivTag"}'
                  tagName: div
                  ↓tag [ngx.components.UIControlDirective-1678818942132]: 
                    directiveName: If
                    directiveSource: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:this.isJSON(this.item[this.path][this.pageOwner.getEnabled(this.sources)].vars[this.pageOwner.keyIndex(this.sources)].str) else ElseBlock_1678803138285
                    ↓ListContainer [ngx.components.UIDynamicElement-1678818942135]: 
                      beanData: '{"ionBean":"List"}'
                      tagName: ion-list
                      ↓ListHeader [ngx.components.UIDynamicElement-1678818942138]: 
                        beanData: '{"ionBean":"Listheader"}'
                        isEnabled: false
                        tagName: ion-list-header
                        ↓Label [ngx.components.UIDynamicElement-1678818942141]: 
                          beanData: '{"ionBean":"Label"}'
                          tagName: ion-label
                          ↓Heading [ngx.components.UIDynamicTag-1678818942144]: 
                            beanData: '{"ionBean":"Heading"}'
                            tagName: h1
                            ↓some_text [ngx.components.UIText-1678818942147]: 
                              textValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: plain:some list header
                      ↓tag1 [ngx.components.UIControlDirective-1678818942150]: 
                        directiveIndexName: idx
                        directiveItemName: key
                        directiveSource: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:this.keys(JSON.parse(this.item[this.path][this.pageOwner.getEnabled(this.sources)].vars[this.pageOwner.keyIndex(this.sources)].str))
                        ↓some_text [ngx.components.UIText-1678818942153]: 
                          isEnabled: false
                        ↓ListItem [ngx.components.UIDynamicElement-1678818942156]: 
                          beanData: '{"ionBean":"ListItem","Lines":"plain:full"}'
                          tagName: ion-item
                          ↓Label [ngx.components.UIDynamicElement-1678818942159]: 
                            beanData: '{"ionBean":"Label"}'
                            tagName: ion-label
                            ↓some_text [ngx.components.UIText-1678818942162]: 
                              textValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:this.cptString(key, this.item[this.path][this.pageOwner.getEnabled(this.sources)].vars[this.pageOwner.keyIndex(this.sources)].str)
                            ↓Attr [ngx.components.UIAttribute-1727271983494]: 
                              attrName: class
                              attrValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: plain:ion-text-wrap
                  ↓tag1 [ngx.components.UIElement-1678818942165]: 
                    identifier: ElseBlock_1678803138285
                    tagName: ng-template
                    ↓Text [ngx.components.UIText-1678818942168]: 
                      i18n: true
                      textValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:this.item[this.path][this.pageOwner.getEnabled(this.sources)].vars[this.pageOwner.keyIndex(this.sources)].str
                  ↓Style [ngx.components.UIStyle-1727271951325]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            '	max-width: 100%;
                            '
          ↓Directive4 [ngx.components.UIControlDirective-1678818942171]: 
            directiveExpression: '''filter'''
            directiveName: SwitchCase
            ↓Style [ngx.components.UIStyle-1678818942174]: 
            ↓tag [ngx.components.UIControlDirective-1680251553868]: 
              directiveName: If
              directiveSource: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.local.keyName != null else ElseBlock_1680251584431
              ↓Directive [ngx.components.UIControlDirective-1680251775490]: 
                directiveIndexName: l
                directiveItemName: item
                directiveSource: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.currentObject.conds
                ↓Div [ngx.components.UIDynamicElement-1680251775493]: 
                  beanData: '{"ionBean":"DivTag"}'
                  tagName: div
                  ↓Style [ngx.components.UIStyle-1680251775496]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            	margin-top:10px;
                            	margin-bottom:10px;
                            
                  ↓Div [ngx.components.UIDynamicElement-1680267248419]: 
                    beanData: '{"ionBean":"DivTag"}'
                    tagName: div
                    ↓Style [ngx.components.UIStyle-1680267248422]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              'display: flex;
                              align-items: center;
                              justify-content: flex-start;
                              '
                    ↓DivField [ngx.components.UIDynamicElement-1680267248479]: 
                      beanData: '{"ionBean":"DivTag"}'
                      tagName: div
                      ↓Attr2 [ngx.components.UIAttribute-1680267248482]: 
                        attrName: '[ngStyle]'
                        attrValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:this.currentObject.conds[l].val1.source ? {'background-color':'#f4f4f4'}:{}
                      ↓Style1 [ngx.components.UIStyle-1680267248485]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '	max-width:200px;
                                border: 1px solid rgba(0,0,0,.15) !important;
                                border-radius: .25rem !important;
                                .item-inner {
                                    border-bottom-color: transparent !important;
                                    box-shadow: none !important;
                                  }
                                  
                                  .text-input[disabled] {
                                    opacity: 1 !important;
                                }
                                display:flex;
                                '
                      ↓Div [ngx.components.UIDynamicElement-1680267248488]: 
                        beanData: '{"ionBean":"DivTag"}'
                        tagName: div
                        ↓GenericItem1 [ngx.components.UIDynamicElement-1680267248491]: 
                          beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                          tagName: ion-item
                          ↓TextInput [ngx.components.UIDynamicElement-1680267248494]: 
                            beanData: |
                              '{
                               "ionBean": "Input",
                               "ControlName": "plain:name1680267248494",
                               "DoubleBinding": "script:this.currentObject.conds[l].val1?.displayName",
                               "Disabled": "plain:true",
                               "Debounce": "plain:0",
                               "Placeholder": "script:this.translate.instant(''the_col'')",
                               "Value": "script:this.currentObject.conds[l].val1?.displayName"
                              }'
                            tagName: ion-input
                            ↓Style [ngx.components.UIStyle-1680267248497]: 
                              styleContent: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                    →: |
                                      '
                                      .item-inner {
                                          border-bottom-color: transparent !important;
                                          box-shadow: none !important;
                                        }
                                      '
                            ↓Attr [ngx.components.UIAttribute-1680267248500]: 
                              attrName: 
                              attrValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: plain:no-lines
                      ↓Div1 [ngx.components.UIDynamicElement-1680267248503]: 
                        beanData: '{"ionBean":"DivTag"}'
                        tagName: div
                        ↓Button [ngx.components.UIDynamicElement-1680267248506]: 
                          beanData: '{"ionBean":"Button","IonFill":"plain:clear"}'
                          tagName: ion-button
                          ↓Icon [ngx.components.UIDynamicElement-1680267248509]: 
                            beanData: '{"ionBean":"Icon","IconName":"plain:ellipsis-horizontal-outline"}'
                            tagName: ion-icon
                          ↓Event [ngx.components.UIControlEvent-1680267248512]: 
                            ↓ShowPopOver [ngx.components.UICustomAsyncAction-1680524195754]: 
                              actionValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                    →: |
                                      '		try {
                                      			let popoverController = page.getInstance(PopoverController);
                                      			let popover = await popoverController.create({
                                      		      component: C8Oforms_PopOverSourceCompletion,
                                      		      componentProps:{currentItem:page.item, keyName: page.local.keyName}
                                      		    });
                                      		    await popover.present();
                                      		    page.ref.detectChanges();
                                      		    let res: any = await popover.onDidDismiss();
                                      		    if(res.data.result != undefined){
                                      				page.currentObject.conds[vars.l].val1 = res.data.result;
                                      				page.ref.detectChanges();
                                      				return true;
                                      			}
                                      			else{
                                      				return false;
                                      			}
                                      		    
                                      				    
                                      		} catch (e) {
                                      			return false;
                                      		}
                                      '
                              ↓l [ngx.components.UIControlVariable-1680526920024]: 
                                varValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                    - MobileSmartSourceType: script:l
                              ↓If [ngx.components.UIDynamicAction-1680528111601]: 
                                beanData: '{"ionBean":"IfAction"}'
                                tagName: If
                                ↓EmitEvent [ngx.components.UIDynamicEmit-1680528120150]: 
                                  beanData: |
                                    '{
                                     "ionBean": "EmitEventAction",
                                     "event": "plain:C8Oforms.MobileApplication.Application.dataSourceEditor.save",
                                     "data": "script:this.currentObject"
                                    }'
                                  tagName: EmitEvent
                      ↓FormatLayout [ngx.components.UIDynamicAttr-1680267248521]: 
                        beanData: '{"ionBean":"FormatLayout","FlexContainerAlignment":"plain:ion-justify-content-start"}'
                        selfClose: false
                    ↓DivOperator [ngx.components.UIDynamicElement-1680267248524]: 
                      beanData: '{"ionBean":"DivTag"}'
                      tagName: div
                      ↓Style [ngx.components.UIStyle-1680267248527]: 
                      ↓GenericItem [ngx.components.UIDynamicElement-1680267248530]: 
                        beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                        tagName: ion-item
                        ↓Attr [ngx.components.UIAttribute-1680267248533]: 
                          attrName: 
                          attrValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: plain:no-lines
                        ↓Style [ngx.components.UIStyle-1680267248536]: 
                          styleContent: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  '/**
                                   * Custom properties (sometimes referred to as CSS variables or cascading variables)
                                   * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                                   * They are set using custom property notation, e.g.: --main-color: black;
                                   * and are accessed using the var() function, e.g.: color: var(--main-color);
                                   * You can find below your component''s properties you can customize within the page.
                                   * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                                   * For more informations see https://ionicframework.com/docs/theming.
                                  **/
                                  //--background	//Background of the item
                                  //--background-activated	//Background of the item when pressed. Note: setting this will interfere with the Material Design ripple
                                  //--background-activated-opacity	//Opacity of the item background when pressed
                                  //--background-focused	//Background of the item when focused with the tab key
                                  //--background-focused-opacity	//Opacity of the item background when focused with the tab key
                                  //--background-hover	//Background of the item on hover
                                  //--background-hover-opacity	//Opacity of the background of the item on hover
                                  //--border-color	//Color of the item border
                                  //--border-radius	//Radius of the item border
                                  //--border-style	//Style of the item border
                                  //--border-width	//Width of the item border
                                  //--color	//Color of the item
                                  //--color-activated	//Color of the item when pressed
                                  //--color-focused	//Color of the item when focused with the tab key
                                  //--color-hover	//Color of the item on hover
                                  //--detail-icon-color	//Color of the item detail icon
                                  //--detail-icon-font-size	//Font size of the item detail icon
                                  //--detail-icon-opacity	//Opacity of the item detail icon
                                  //--highlight-color-focused	//The color of the highlight on the item when focused
                                  //--highlight-color-invalid	//The color of the highlight on the item when invalid
                                  //--highlight-color-valid	//The color of the highlight on the item when valid
                                  //--highlight-height	//The height of the highlight on the item
                                  //--inner-border-width	//Width of the item inner border
                                  //--inner-box-shadow	//Box shadow of the item inner
                                  //--inner-padding-bottom	//Bottom padding of the item inner
                                  //--inner-padding-end	//Right padding if direction is left-to-right, and left padding if direction is right-to-left of the item inner
                                  //--inner-padding-start	//Left padding if direction is left-to-right, and right padding if direction is right-to-left of the item inner
                                  //--inner-padding-top	//Top padding of the item inner
                                  //--min-height	//Minimum height of the item
                                  //--padding-bottom	//Bottom padding of the item
                                  //--padding-end	//Right padding if direction is left-to-right, and left padding if direction is right-to-left of the item
                                  //--padding-start	//Left padding if direction is left-to-right, and right padding if direction is right-to-left of the item
                                  //--padding-top	//Top padding of the item
                                  //--ripple-color	//Color of the item ripple effect
                                  //--transition	//Transition of the item
                                  '
                        ↓SelectContainerSimpleField [ngx.components.UIDynamicElement-1680267248539]: 
                          beanData: |
                            '{
                             "ionBean": "Select",
                             "ControlName": "plain:name1680267248539",
                             "Interface": "plain:popover",
                             "Placeholder": "script:this.translate.instant(''operator'')"
                            }'
                          tagName: ion-select
                          ↓Style [ngx.components.UIStyle-1680267248542]: 
                            styleContent: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    'max-width: 100% !important;
                                      width: 100% !important;
                                      padding-left: 0 !important;
                                      
                                    '
                          ↓Attr [ngx.components.UIAttribute-1680267248545]: 
                            attrName: '[(ngModel)]'
                            attrValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: script:this.currentObject.conds[l].operator
                          ↓Attr1 [ngx.components.UIAttribute-1680267248608]: 
                            attrName: '*ngIf'
                            attrValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: plain:this.pageOwner.getType(this.current.val1.type) == 'simple'
                            isEnabled: false
                          ↓Event [ngx.components.UIControlEvent-1680267248623]: 
                            attrName: (ngModelChange)
                            eventName: (ngModelChange)
                            ↓SetVal2Properly [ngx.components.UICustomAction-1680267248626]: 
                              actionValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                    →: |
                                      '		/*let previous = vars.previousOperator;
                                      		let actual = event;
                                      		let simple = ["equals", "different", "greater", "minus", "greaterequals", "minusequals"];
                                      		let multiple = ["among_following", "out_following", "contains", "not_contains"];
                                      		//get previous state was simple
                                      		let previousState = (simple.indexOf(previous) != -1) ? "simple": (multiple.indexOf(previous) != -1)  ? "multiple": "nothing";
                                      		//get actual state was simple
                                      		let actualState = (simple.indexOf(actual) != -1) ? "simple": (multiple.indexOf(actual) != -1)  ? "multiple": "nothing";
                                      		// if previous and actual state are not the same we have to perform an operation
                                      		if(previousState != actualState){
                                      		    // in case of simple becoming a multiple remove str
                                      		    if(previousState == "simple" && actualState == "multiple"){
                                      		        try{
                                      		            page.current.val2.str = "";
                                      		        }
                                      		        catch(e){
                                      		            
                                      		        }
                                      		        
                                      		    }
                                      		    // in case of a a mutliple becoming a simple remove array
                                      		    else if(previousState == "multiple" && actualState == "simple"){
                                      		        delete page.current.val2.arr;		
                                      		    }
                                      		}
                                      		// if actual state is nothing set val 2 to zero
                                      		if(actualState == "nothing"){
                                      		    page.current.val2.str = "";
                                      		    delete page.current.val2.arr;       
                                      		}
                                      		// save new operator
                                      		page.current.operator = event;
                                      		*/
                                      		console.log("event", event);
                                      		resolve();
                                      '
                              ↓previousOperator [ngx.components.UIControlVariable-1680267248629]: 
                                varValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                    - MobileSmartSourceType: script:this.currentObject.conds[l].operator
                            ↓EmitEvent [ngx.components.UIDynamicEmit-1680529296037]: 
                              beanData: |
                                '{
                                 "ionBean": "EmitEventAction",
                                 "event": "plain:C8Oforms.MobileApplication.Application.dataSourceEditor.save",
                                 "data": "script:this.currentObject"
                                }'
                              tagName: EmitEvent
                          ↓tag [ngx.components.UIControlDirective-1680625859271]: 
                            directiveName: If
                            directiveSource: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: script:this.local.complByName[this.currentObject.conds[l].val1.name] != undefined else ElseBlock_1680625935432
                            ↓tag [ngx.components.UIControlDirective-1680626054368]: 
                              directiveItemName: item
                              directiveSource: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:this.local.complByName[this.currentObject.conds[l].val1.name]
                              ↓SelectOption [ngx.components.UIDynamicElement-1680626070728]: 
                                beanData: '{"ionBean":"SelectOption","Value":"script:item"}'
                                tagName: ion-select-option
                                ↓Text [ngx.components.UIText-1680626070731]: 
                                  comment: '((''br_'' + item) | translate) != (''br_'' + item) ? ((''br_'' + item) | translate) : item'
                                  textValue: 
                                    - xmlizable: 
                                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                      - MobileSmartSourceType: 'script:((''br_'' + item) | translate) != (''br_'' + item) ? ((''br_'' + item) | translate) : item'
                          ↓tag1 [ngx.components.UIElement-1680625935432]: 
                            identifier: ElseBlock_1680625935432
                            tagName: ng-template
                            ↓SelectOption [ngx.components.UIDynamicElement-1680267248548]: 
                              beanData: '{"ionBean":"SelectOption","Value":"plain:equal"}'
                              tagName: ion-select-option
                              ↓Text [ngx.components.UIText-1680267248551]: 
                                textValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                    - MobileSmartSourceType: plain:=
                            ↓SelectOption1 [ngx.components.UIDynamicElement-1680267248554]: 
                              beanData: '{"ionBean":"SelectOption","Value":"plain:not_equal"}'
                              tagName: ion-select-option
                              ↓Fragment [ngx.components.UICustom-1680267248557]: 
                                htmlTemplate: '&#8800;'
                            ↓SelectOption11 [ngx.components.UIDynamicElement-1680267248560]: 
                              beanData: '{"ionBean":"SelectOption","Value":"plain:minus"}'
                              tagName: ion-select-option
                              ↓Fragment [ngx.components.UICustom-1680267248563]: 
                                htmlTemplate: '&#60;'
                            ↓SelectOption12 [ngx.components.UIDynamicElement-1680267248566]: 
                              beanData: '{"ionBean":"SelectOption","Value":"plain:minusequals"}'
                              tagName: ion-select-option
                              ↓Fragment [ngx.components.UICustom-1680267248569]: 
                                htmlTemplate: '&#8804;'
                            ↓SelectOption13 [ngx.components.UIDynamicElement-1680267248572]: 
                              beanData: '{"ionBean":"SelectOption","Value":"plain:greater"}'
                              tagName: ion-select-option
                              ↓Fragment [ngx.components.UICustom-1680267248575]: 
                                htmlTemplate: '&#62;'
                            ↓SelectOption14 [ngx.components.UIDynamicElement-1680267248578]: 
                              beanData: '{"ionBean":"SelectOption","Value":"plain:greaterequals"}'
                              tagName: ion-select-option
                              ↓Fragment [ngx.components.UICustom-1680267248581]: 
                                htmlTemplate: '&#8805;'
                            ↓SelectOption141 [ngx.components.UIDynamicElement-1680267248584]: 
                              beanData: '{"ionBean":"SelectOption","Value":"plain:among_following"}'
                              tagName: ion-select-option
                              ↓Text [ngx.components.UIText-1680267248587]: 
                                i18n: true
                                textValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                    - MobileSmartSourceType: plain:among_following
                            ↓SelectOption142 [ngx.components.UIDynamicElement-1680267248590]: 
                              beanData: '{"ionBean":"SelectOption","Value":"plain:out_following"}'
                              tagName: ion-select-option
                              ↓Text [ngx.components.UIText-1680267248593]: 
                                i18n: true
                                textValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                    - MobileSmartSourceType: plain:out_following
                            ↓SelectOption143 [ngx.components.UIDynamicElement-1680267248596]: 
                              beanData: '{"ionBean":"SelectOption","Value":"plain:contains"}'
                              tagName: ion-select-option
                              ↓Text [ngx.components.UIText-1680267248599]: 
                                i18n: true
                                textValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                    - MobileSmartSourceType: plain:contains
                            ↓SelectOption144 [ngx.components.UIDynamicElement-1680267248602]: 
                              beanData: '{"ionBean":"SelectOption","Value":"plain:not_contains"}'
                              tagName: ion-select-option
                              ↓Text [ngx.components.UIText-1680267248605]: 
                                i18n: true
                                textValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                    - MobileSmartSourceType: plain:not_contains
                            ↓SelectOption2 [ngx.components.UIDynamicElement-1680267248611]: 
                              beanData: '{"ionBean":"SelectOption","Value":"plain:is_empty"}'
                              tagName: ion-select-option
                              ↓Text [ngx.components.UIText-1680267248614]: 
                                i18n: true
                                textValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                    - MobileSmartSourceType: plain:is_empty
                            ↓SelectOption1411 [ngx.components.UIDynamicElement-1680267248617]: 
                              beanData: '{"ionBean":"SelectOption","Value":"plain:is_filled"}'
                              tagName: ion-select-option
                              ↓Text [ngx.components.UIText-1680267248620]: 
                                i18n: true
                                textValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                    - MobileSmartSourceType: plain:is_filled
                        ↓SelectContainerMultipleField [ngx.components.UIDynamicElement-1680267248632]: 
                          beanData: |
                            '{
                             "ionBean": "Select",
                             "ControlName": "plain:name1680267248632",
                             "Interface": "plain:popover",
                             "Placeholder": "script:this.translate.instant(''operator'')"
                            }'
                          isEnabled: false
                          tagName: ion-select
                          ↓Style [ngx.components.UIStyle-1680267248635]: 
                            styleContent: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    'max-width: 100% !important;
                                      width: 100% !important;
                                      padding-left: 0 !important;
                                      
                                    '
                          ↓Attr [ngx.components.UIAttribute-1680267248638]: 
                            attrName: '[(ngModel)]'
                            attrValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: script:this.current.operator
                            comment: this.pageOwner.local.operator
                          ↓SelectOption [ngx.components.UIDynamicElement-1680267248641]: 
                            beanData: '{"ionBean":"SelectOption","Value":"plain:equals"}'
                            tagName: ion-select-option
                            ↓Text [ngx.components.UIText-1680267248644]: 
                              textValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: plain:=
                          ↓SelectOption1 [ngx.components.UIDynamicElement-1680267248647]: 
                            beanData: '{"ionBean":"SelectOption","Value":"plain:different"}'
                            tagName: ion-select-option
                            ↓Fragment [ngx.components.UICustom-1680267248650]: 
                              htmlTemplate: '&#8800;'
                          ↓SelectOption141 [ngx.components.UIDynamicElement-1680267248653]: 
                            beanData: '{"ionBean":"SelectOption","Value":"plain:among_following"}'
                            tagName: ion-select-option
                            ↓Text [ngx.components.UIText-1680267248656]: 
                              i18n: true
                              textValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: plain:among_following
                          ↓SelectOption142 [ngx.components.UIDynamicElement-1680267248659]: 
                            beanData: '{"ionBean":"SelectOption","Value":"plain:out_following"}'
                            tagName: ion-select-option
                            ↓Text [ngx.components.UIText-1680267248662]: 
                              i18n: true
                              textValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: plain:out_following
                          ↓SelectOption143 [ngx.components.UIDynamicElement-1680267248665]: 
                            beanData: '{"ionBean":"SelectOption","Value":"plain:contains"}'
                            isEnabled: false
                            tagName: ion-select-option
                            ↓Text [ngx.components.UIText-1680267248668]: 
                              i18n: true
                              textValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: plain:contains
                          ↓SelectOption144 [ngx.components.UIDynamicElement-1680267248671]: 
                            beanData: '{"ionBean":"SelectOption","Value":"plain:not_contains"}'
                            isEnabled: false
                            tagName: ion-select-option
                            ↓Text [ngx.components.UIText-1680267248674]: 
                              i18n: true
                              textValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: plain:not_contains
                          ↓Attr1 [ngx.components.UIAttribute-1680267248677]: 
                            attrName: '*ngIf'
                            attrValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: plain:this.pageOwner.getType(this.current.val1.type) == 'multiple'
                        ↓SelectContainerFileField [ngx.components.UIDynamicElement-1680267248680]: 
                          beanData: |
                            '{
                             "ionBean": "Select",
                             "ControlName": "plain:name1680267248680",
                             "Interface": "plain:popover",
                             "Placeholder": "script:this.translate.instant(''operator'')"
                            }'
                          isEnabled: false
                          tagName: ion-select
                          ↓Style [ngx.components.UIStyle-1680267248683]: 
                            styleContent: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    'max-width: 100% !important;
                                      width: 100% !important;
                                      padding-left: 0 !important;
                                      
                                    '
                          ↓Attr [ngx.components.UIAttribute-1680267248686]: 
                            attrName: '[(ngModel)]'
                            attrValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: script:this.current.operator
                            comment: this.pageOwner.local.operator
                          ↓SelectOption [ngx.components.UIDynamicElement-1680267248689]: 
                            beanData: '{"ionBean":"SelectOption","Value":"plain:does_not_contain_file"}'
                            tagName: ion-select-option
                            ↓Text [ngx.components.UIText-1680267248692]: 
                              i18n: true
                              textValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: plain:does_not_contain_file
                          ↓SelectOption142 [ngx.components.UIDynamicElement-1680267248695]: 
                            beanData: '{"ionBean":"SelectOption","Value":"plain:contains_a_file"}'
                            tagName: ion-select-option
                            ↓Text [ngx.components.UIText-1680267248698]: 
                              i18n: true
                              textValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: plain:contains_a_file
                          ↓SelectOption141 [ngx.components.UIDynamicElement-1680267248701]: 
                            beanData: '{"ionBean":"SelectOption","Value":"plain:contains_multiple_files"}'
                            tagName: ion-select-option
                            ↓Text [ngx.components.UIText-1680267248704]: 
                              i18n: true
                              textValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: plain:contains_multiple_files
                          ↓Attr1 [ngx.components.UIAttribute-1680267248707]: 
                            attrName: '*ngIf'
                            attrValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: plain:this.pageOwner.getType(this.current.val1.type) == 'file'
                        ↓SelectContainerMultipleField2 [ngx.components.UIDynamicElement-1680267248710]: 
                          beanData: |
                            '{
                             "ionBean": "Select",
                             "ControlName": "plain:name1680267248710",
                             "Interface": "plain:popover",
                             "Placeholder": "script:this.translate.instant(''operator'')"
                            }'
                          isEnabled: false
                          tagName: ion-select
                          ↓Style [ngx.components.UIStyle-1680267248713]: 
                            styleContent: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    'max-width: 100% !important;
                                      width: 100% !important;
                                      padding-left: 0 !important;
                                      
                                    '
                          ↓Attr [ngx.components.UIAttribute-1680267248716]: 
                            attrName: '[(ngModel)]'
                            attrValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: script:this.current.operator
                            comment: this.pageOwner.local.operator
                          ↓SelectOption [ngx.components.UIDynamicElement-1680267248719]: 
                            beanData: '{"ionBean":"SelectOption","Value":"plain:is_empty"}'
                            tagName: ion-select-option
                            ↓Text [ngx.components.UIText-1680267248722]: 
                              i18n: true
                              textValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: plain:is_empty
                          ↓SelectOption141 [ngx.components.UIDynamicElement-1680267248725]: 
                            beanData: '{"ionBean":"SelectOption","Value":"plain:is_filled"}'
                            tagName: ion-select-option
                            ↓Text [ngx.components.UIText-1680267248728]: 
                              i18n: true
                              textValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: plain:is_filled
                          ↓Attr1 [ngx.components.UIAttribute-1680267248731]: 
                            attrName: '*ngIf'
                            attrValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: plain:this.pageOwner.getType(this.current.val1.type) == 'camSign'
                    ↓DivField1 [ngx.components.UIDynamicElement-1680529721841]: 
                      beanData: '{"ionBean":"DivTag"}'
                      isEnabled: false
                      tagName: div
                      ↓Attr2 [ngx.components.UIAttribute-1680529721844]: 
                        attrName: '[ngStyle]'
                        attrValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:this.currentObject.conds[l].val1.source ? {'background-color':'#f4f4f4'}:{}
                      ↓Style1 [ngx.components.UIStyle-1680529721847]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                'border: 1px solid rgba(0,0,0,.15) !important;
                                border-radius: .25rem !important;
                                .item-inner {
                                    border-bottom-color: transparent !important;
                                    box-shadow: none !important;
                                  }
                                  
                                  .text-input[disabled] {
                                    opacity: 1 !important;
                                }
                                display:flex;
                                '
                      ↓Div [ngx.components.UIDynamicElement-1680529721850]: 
                        beanData: '{"ionBean":"DivTag"}'
                        tagName: div
                        ↓GenericItem1 [ngx.components.UIDynamicElement-1680529721853]: 
                          beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                          tagName: ion-item
                          ↓TextInput [ngx.components.UIDynamicElement-1680529721856]: 
                            beanData: |
                              '{
                               "ionBean": "Input",
                               "ControlName": "plain:name1680267248494",
                               "DoubleBinding": "script:this.currentObject.conds[l].val1?.displayName",
                               "Disabled": "plain:true",
                               "Debounce": "plain:0",
                               "Placeholder": "script:this.translate.instant(''field'')",
                               "Value": "script:this.currentObject.conds[l].val1?.displayName"
                              }'
                            tagName: ion-input
                            ↓Style [ngx.components.UIStyle-1680529721859]: 
                              styleContent: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                    →: |
                                      '
                                      .item-inner {
                                          border-bottom-color: transparent !important;
                                          box-shadow: none !important;
                                        }
                                      '
                            ↓Attr [ngx.components.UIAttribute-1680529721862]: 
                              attrName: 
                              attrValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: plain:no-lines
                      ↓Div1 [ngx.components.UIDynamicElement-1680529721865]: 
                        beanData: '{"ionBean":"DivTag"}'
                        tagName: div
                        ↓Button [ngx.components.UIDynamicElement-1680529721868]: 
                          beanData: '{"ionBean":"Button","IonFill":"plain:clear"}'
                          tagName: ion-button
                          ↓Icon [ngx.components.UIDynamicElement-1680529721871]: 
                            beanData: '{"ionBean":"Icon","IconName":"plain:ellipsis-horizontal-outline"}'
                            tagName: ion-icon
                          ↓Event [ngx.components.UIControlEvent-1680529721874]: 
                            ↓ShowPopOver [ngx.components.UICustomAsyncAction-1680529721877]: 
                              actionValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                    →: |
                                      '		try {
                                      			let popoverController = page.getInstance(PopoverController);
                                      			let popover = await popoverController.create({
                                      		      component: C8Oforms_PopOverSourceCompletion,
                                      		      componentProps:{currentItem:page.item}
                                      		    });
                                      		    await popover.present();
                                      		    page.ref.detectChanges();
                                      		    let res: any = await popover.onDidDismiss();
                                      		    if(res.data.result != undefined){
                                      				page.currentObject.conds[vars.l].val1 = res.data.result;
                                      				page.ref.detectChanges();
                                      				return true;
                                      			}
                                      			else{
                                      				return false;
                                      			}
                                      		    
                                      				    
                                      		} catch (e) {
                                      			return false;
                                      		}
                                      '
                              ↓l [ngx.components.UIControlVariable-1680529721880]: 
                                varValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                    - MobileSmartSourceType: script:l
                              ↓If [ngx.components.UIDynamicAction-1680529721883]: 
                                beanData: '{"ionBean":"IfAction"}'
                                tagName: If
                                ↓EmitEvent [ngx.components.UIDynamicEmit-1680529721886]: 
                                  beanData: |
                                    '{
                                     "ionBean": "EmitEventAction",
                                     "event": "plain:C8Oforms.MobileApplication.Application.dataSourceEditor.save",
                                     "data": "script:this.currentObject"
                                    }'
                                  tagName: EmitEvent
                      ↓FormatLayout [ngx.components.UIDynamicAttr-1680529721889]: 
                        beanData: '{"ionBean":"FormatLayout","FlexContainerAlignment":"plain:ion-justify-content-start"}'
                        selfClose: false
                    ↓DivFlexContainer [ngx.components.UIDynamicElement-1680529750523]: 
                      beanData: '{"ionBean":"DivTag"}'
                      tagName: div
                      ↓Style [ngx.components.UIStyle-1680529750526]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '	flex-grow: 1;
                                	display: flex;
                                '
                      ↓Div [ngx.components.UIDynamicElement-1680529750529]: 
                        beanData: '{"ionBean":"DivTag"}'
                        tagName: div
                        ↓Style [ngx.components.UIStyle-1680529750532]: 
                          styleContent: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  '	flex-grow: 1;
                                  	color: black !important;
                                  	display: flex;
                                      align-items: center;
                                  	width:100%;
                                  '
                        ↓Attr2 [ngx.components.UIAttribute-1680529750535]: 
                          attrName: class
                          attrValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: plain:stylegenerictextnormal
                        ↓Div [ngx.components.UIDynamicElement-1680529750538]: 
                          beanData: '{"ionBean":"DivTag"}'
                          tagName: div
                          ↓Style [ngx.components.UIStyle-1680529750541]: 
                            styleContent: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    	width:100%;
                                    
                          ↓UseSharedComponent1 [ngx.components.UIUseShared-1680529750544]: 
                            identifier: currentEdit
                            sharedcomponent: lib_ExtendedComponents_ui_ngx.MobileApplication.Application.tinyMce
                            ↓model [ngx.components.UIUseVariable-1680529750547]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:this.pageOwner.transform$toHtml(currentObject.conds[l].val2.str)
                            ↓init [ngx.components.UIUseVariable-1680529750550]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: |
                                      'script:this.currentObject.conds[l].val2.type != ''ts'' ? {
                                          placeholder: this.translate.instant(''placeholder_editor''),
                                          toolbar: false,
                                          menubar:false,
                                          statusbar: false,
                                          branding: false,
                                          indent: false,
                                          quickbars_selection_toolbar: false,
                                          importcss_append: true,
                                          height: 300,
                                          force_br_newlines : false,
                                          force_p_newlines : false,
                                          noneditable_noneditable_class: ''mceNonEditable'',
                                          content_css: this.pageOwner.getTinyCssPath(),
                                          language: this.pageOwner.getTinyLang(this.global.settings.language),
                                          language_url: this.pageOwner.getTinyPathLang(this.global.settings.language),
                                          setup: this.pageOwner.tinyFuncDropWithCancel,
                                          content_style: ''#a'' +l +  '' > .mce-content-body { background: #FFF3CD; color:#000;}'',
                                          oninit: this.pageOwner.tinyPostInit,
                                          valid_elements : ''*[*]'',
                                          apply_source_formatting : false,                
                                          verify_html : false,
                                         l:l
                                      } : {
                                          placeholder: this.translate.instant(''placeholder_editor''),
                                          toolbar: false,
                                          menubar:false,
                                          statusbar: false,
                                          branding: false,
                                          indent: false,
                                          quickbars_selection_toolbar: false,
                                          importcss_append: true,
                                          height: 300,
                                          force_br_newlines : false,
                                          force_p_newlines : false,
                                          noneditable_noneditable_class: ''mceNonEditable'',
                                          content_css: this.pageOwner.getTinyCssPath(),
                                          language: this.pageOwner.getTinyLang(this.global.settings.language),
                                          language_url: this.pageOwner.getTinyPathLang(this.global.settings.language),
                                          setup: this.pageOwner.tinyFuncDropWithCancel,
                                          content_style: ''#a'' +l +  '' > .mce-content-body { background: #88bdff; color:#000;}'',
                                          oninit: this.pageOwner.tinyPostInit,
                                          valid_elements : ''*[*]'',
                                          apply_source_formatting : false,                
                                          verify_html : false,
                                      l:l
                                      }'
                            ↓disabled [ngx.components.UIUseVariable-1680529750553]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:''
                            ↓apiKey [ngx.components.UIUseVariable-1680529750556]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:''
                            ↓cloudChannel [ngx.components.UIUseVariable-1680529750559]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:''
                            ↓id [ngx.components.UIUseVariable-1680529750562]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:'a' + l
                            ↓inline [ngx.components.UIUseVariable-1680529750565]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:true
                            ↓Event [ngx.components.UIControlEvent-1680529750568]: 
                              attrName: (onBlur)
                              eventName: onBlur
                              ↓computeResults [ngx.components.UICustomAsyncAction-1680529750571]: 
                                actionValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                      →: |
                                        '		try {
                                        			// case editing variable type text or ts
                                        			let html = page.pageOwner.transformHtmlto$(event.editor.getContent());
                                        			var newDiv = document.createElement("div");
                                        			newDiv.innerHTML = html
                                        			html = newDiv.innerText;
                                        			page.currentObject.conds[event.object.init.l].val2.str = html;
                                        			return page.currentObject;
                                        		} catch (e) {
                                        			page.c8o.log.error("An error occured while trying to save");
                                        			return {props: {}};
                                        		}
                                        '
                                ↓EmitEvent [ngx.components.UIDynamicEmit-1680529750574]: 
                                  beanData: |
                                    '{
                                     "ionBean": "EmitEventAction",
                                     "event": "plain:C8Oforms.MobileApplication.Application.dataSourceEditor.save",
                                     "data": "source:{\"filter\":\"Action\",\"project\":\"C8Oforms\",\"input\":\"\",\"model\":{\"data\":[{\"priority\":1680529750571,\"rootEvent\":false},{\"priority\":1680529750568,\"rootEvent\":true}],\"path\":\"?.out\",\"prefix\":\"{props:\",\"suffix\":\"}\",\"custom\":\"\",\"useCustom\":false}}"
                                    }'
                                  tagName: EmitEvent
                      ↓DivSwitchToJS [ngx.components.UIDynamicElement-1680529750577]: 
                        beanData: '{"ionBean":"DivTag"}'
                        tagName: div
                        ↓Style [ngx.components.UIStyle-1680529750580]: 
                          styleContent: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                →: |
                                  '	display: inline;
                                  	white-space:nowrap;
                                  	ion-button{
                                  		--padding-start: 0px;
                                  		--padding-end: 0px;
                                  	}
                                  '
                        ↓ButtonText [ngx.components.UIDynamicElement-1680529750583]: 
                          beanData: |
                            '{
                             "ionBean": "Button",
                             "IonFill": "plain:clear",
                             "IonSize": "plain:large",
                             "IconSlot": "plain:icon-only"
                            }'
                          tagName: ion-button
                          ↓Icon [ngx.components.UIDynamicElement-1680529750586]: 
                            beanData: '{"ionBean":"Icon","IconName":"plain:text-outline"}'
                            tagName: ion-icon
                            ↓Attr [ngx.components.UIAttribute-1680529750589]: 
                              attrName: '[color]'
                              attrValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: 'script:this.currentObject.conds[l].val2.type != ''ts'' ? ''yelloweditorbutton'' : ''greyButton'''
                          ↓Style [ngx.components.UIStyle-1680529750592]: 
                            styleContent: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    	padding:0px;
                                    
                          ↓Event [ngx.components.UIControlEvent-1680529750595]: 
                            ↓setType [ngx.components.UICustomAction-1680529750598]: 
                              actionValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                    →: |
                                      '		page.currentEdit.editor._editor.bodyElement.style.backgroundColor = "#FFF3CD"
                                      		const name = page.pageOwner.getEnabled(page.sources)
                                              let keyIndex = (Object.keys(page.sources[name][''vars''])[page.pageOwner.local.index]);
                                              if(keyIndex == undefined){
                                                  keyIndex = page.pageOwner.local.treeSource.filter(x => x.name == name.split(".")[0])[0].sequences.filter(x => x.name == name.split(".")[1])[0].variables.name[page.pageOwner.local.index];
                                                  page.sources[name][''vars''][keyIndex] = {"source": false, str:"", "type":"text"};
                                              }
                                      		else{
                                      			if(page.sources[name][''vars''][keyIndex] != undefined){
                                      				page.sources[name][''vars''][keyIndex]["type"] = "text";
                                      			}
                                      			else{
                                      				page.sources[name][''vars''][keyIndex] = {"source": false, str:"", "type":"text"};
                                      			}	
                                      		}
                                      		resolve();
                                      '
                              isEnabled: false
                              ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1680529750601]: 
                                beanData: '{"ionBean":"InvokeAction"}'
                                stack: C8Oforms.MobileApplication.Application.updateState
                              ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1680529750604]: 
                                beanData: '{"ionBean":"InvokeAction"}'
                                stack: C8Oforms.MobileApplication.Application.detectChanges
                            ↓setColor [ngx.components.UICustomAsyncAction-1680529750607]: 
                              actionValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                    →: |
                                      '		try {
                                      			page.all_currentEdit["_results"][vars.l].editor._editor.bodyElement.style.backgroundColor = "#FFF3CD"
                                      			page.currentObject.conds[vars.l].val2.type = "text";
                                      			return {props: page.currentObject};
                                      		} catch (e) {
                                      		
                                      		}
                                      '
                              ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1680529750610]: 
                                beanData: '{"ionBean":"InvokeAction"}'
                                stack: C8Oforms.MobileApplication.Application.detectChanges
                              ↓EmitEvent [ngx.components.UIDynamicEmit-1680529750613]: 
                                beanData: |
                                  '{
                                   "ionBean": "EmitEventAction",
                                   "event": "plain:C8Oforms.MobileApplication.Application.dataSourceEditor.save",
                                   "data": "source:{\"filter\":\"Action\",\"project\":\"C8Oforms\",\"input\":\"\",\"model\":{\"data\":[{\"priority\":1680529750607,\"rootEvent\":false},{\"priority\":1680529750595,\"rootEvent\":true}],\"path\":\"?.out\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}"
                                  }'
                                tagName: EmitEvent
                              ↓l [ngx.components.UIControlVariable-1680531338010]: 
                                varValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                    - MobileSmartSourceType: script:l
                          ↓Attr [ngx.components.UIAttribute-1680529750616]: 
                            attrName: tooltip
                            attrValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: script:'hover_text' | translate
                            isEnabled: false
                          ↓Attr1 [ngx.components.UIAttribute-1680529750619]: 
                            attrName: 
                            attrValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: plain:arrow
                            isEnabled: false
                          ↓Attr2 [ngx.components.UIAttribute-1680529750622]: 
                            attrName: positionV
                            attrValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: plain:top
                            isEnabled: false
                        ↓ButtonTS [ngx.components.UIDynamicElement-1680529750625]: 
                          beanData: |
                            '{
                             "ionBean": "Button",
                             "IonFill": "plain:clear",
                             "IonSize": "plain:large",
                             "IconSlot": "plain:icon-only"
                            }'
                          tagName: ion-button
                          ↓Icon [ngx.components.UIDynamicElement-1680529750628]: 
                            beanData: '{"ionBean":"Icon","IconName":"plain:logo-javascript"}'
                            tagName: ion-icon
                            ↓Attr [ngx.components.UIAttribute-1680529750631]: 
                              attrName: '[color]'
                              attrValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: 'script:this.currentObject.conds[l].val2.type == ''ts'' ? ''blueeditorbutton'' : ''greyButton'''
                          ↓Style [ngx.components.UIStyle-1680529750634]: 
                            styleContent: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    	padding:0px;
                                    
                          ↓Event [ngx.components.UIControlEvent-1680529750637]: 
                            ↓setType [ngx.components.UICustomAction-1680529750640]: 
                              actionValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                    →: |
                                      '		try{
                                      			page.currentEdit.editor._editor.bodyElement.style.backgroundColor = "#88bdff"
                                      		}
                                      		catch(e){
                                      			
                                      		}
                                      		const name = page.pageOwner.getEnabled(page.sources)
                                              let keyIndex = (Object.keys(page.sources[name][''vars''])[page.pageOwner.local.index]);
                                              if(keyIndex == undefined){
                                                  keyIndex = page.pageOwner.local.treeSource.filter(x => x.name == name.split(".")[0])[0].sequences.filter(x => x.name == name.split(".")[1])[0].variables.name[page.pageOwner.local.index];
                                                  page.sources[name][''vars''][keyIndex] = {"source": false, str:"", "type":"text"};
                                              }
                                      		else{
                                      			if(page.sources[name][''vars''][keyIndex] != undefined){
                                      				page.sources[name][''vars''][keyIndex]["type"] = "ts";
                                      			}
                                      			else{
                                      				page.sources[name][''vars''][keyIndex] = {"source": false, str:"", "type":"ts"};
                                      			}	
                                      		}
                                      		resolve();
                                      '
                              isEnabled: false
                              ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1680529750643]: 
                                beanData: '{"ionBean":"InvokeAction"}'
                                stack: C8Oforms.MobileApplication.Application.updateState
                              ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1680529750646]: 
                                beanData: '{"ionBean":"InvokeAction"}'
                                stack: C8Oforms.MobileApplication.Application.detectChanges
                            ↓setColor [ngx.components.UICustomAsyncAction-1680529750649]: 
                              actionValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                    →: |
                                      '		try {
                                      			page.all_currentEdit["_results"][vars.l].editor._editor.bodyElement.style.backgroundColor = "#88bdff"
                                      			page.currentObject.conds[vars.l].val2.type = "ts";
                                      			return {props: page.currentObject};
                                      		} catch (e) {
                                      		
                                      		}
                                      '
                              ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1680529750652]: 
                                beanData: '{"ionBean":"InvokeAction"}'
                                stack: C8Oforms.MobileApplication.Application.detectChanges
                              ↓EmitEvent [ngx.components.UIDynamicEmit-1680529750655]: 
                                beanData: |
                                  '{
                                   "ionBean": "EmitEventAction",
                                   "event": "plain:C8Oforms.MobileApplication.Application.dataSourceEditor.save",
                                   "data": "source:{\"filter\":\"Action\",\"project\":\"C8Oforms\",\"input\":\"\",\"model\":{\"data\":[{\"priority\":1680529750649,\"rootEvent\":false},{\"priority\":1680529750637,\"rootEvent\":true}],\"path\":\"?.out\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}"
                                  }'
                                tagName: EmitEvent
                              ↓l [ngx.components.UIControlVariable-1680531318792]: 
                                varValue: 
                                  - xmlizable: 
                                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                    - MobileSmartSourceType: script:l
                          ↓Attr [ngx.components.UIAttribute-1680529750658]: 
                            attrName: tooltip
                            attrValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: script:'hover_ts' | translate
                            isEnabled: false
                          ↓Attr1 [ngx.components.UIAttribute-1680529750661]: 
                            attrName: 
                            attrValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: plain:arrow
                            isEnabled: false
                          ↓Attr2 [ngx.components.UIAttribute-1680529750664]: 
                            attrName: positionV
                            attrValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                - MobileSmartSourceType: plain:top
                            isEnabled: false
                    ↓DivDelete [ngx.components.UIDynamicElement-1680267248995]: 
                      beanData: '{"ionBean":"DivTag"}'
                      tagName: div
                      ↓Button [ngx.components.UIDynamicElement-1680267248998]: 
                        beanData: '{"ionBean":"Button","IonFill":"plain:clear"}'
                        tagName: ion-button
                        ↓Icon [ngx.components.UIDynamicElement-1680267249001]: 
                          beanData: '{"ionBean":"Icon","IconName":"plain:remove-circle-outline"}'
                          tagName: ion-icon
                        ↓Event [ngx.components.UIControlEvent-1680267249004]: 
                          ↓removeLine [ngx.components.UICustomAction-1680267249007]: 
                            actionValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    '		const length = page.currentObject.conds.length;
                                    		/*if(length == 1){
                                    		    page.currentObject.conds.push({val1: {name:"", displayName:""}, val2 : {type: "text", str:""}, operator: "" });
                                    		}*/
                                    		page.currentObject.conds.splice(vars.l, 1);
                                    		page.ref.detectChanges();
                                    		resolve();
                                    '
                            ↓l [ngx.components.UIControlVariable-1680267249010]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:l
                            ↓EmitEvent [ngx.components.UIDynamicEmit-1680687470208]: 
                              beanData: |
                                '{
                                 "ionBean": "EmitEventAction",
                                 "event": "plain:C8Oforms.MobileApplication.Application.dataSourceEditor.save",
                                 "data": "script:this.currentObject"
                                }'
                              tagName: EmitEvent
                      ↓Style [ngx.components.UIStyle-1680267249013]: 
                        styleContent: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '	margin-left: auto;
                                	ion-icon{
                                		color: var(--ion-color-danger);
                                	}
                                '
              ↓DivButtonAdd [ngx.components.UIDynamicElement-1680251775508]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓Button [ngx.components.UIDynamicElement-1680251775511]: 
                  beanData: '{"ionBean":"Button","IonFill":"plain:clear"}'
                  tagName: ion-button
                  ↓Icon [ngx.components.UIDynamicElement-1680251775514]: 
                    beanData: '{"ionBean":"Icon","IconSlot":"plain:start"}'
                    tagName: ion-icon
                  ↓Event [ngx.components.UIControlEvent-1680251775517]: 
                    ↓addLine [ngx.components.UICustomAction-1680251775520]: 
                      actionValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '		//this.local.visible.push({visibleVal:{str:"", source:false}, visibleVal2: {str:"", source:false}, operator : "", visible: {element:""}});
                              		    page.currentObject.conds.push(
                              				{subject: "", val1: {name:"", displayName:""}, val2 : {str:"", type:"text"}, operator: "" }
                              			)
                              		    page.ref.detectChanges();
                              		resolve();
                              '
                      ↓EmitEvent [ngx.components.UIDynamicEmit-1680611976310]: 
                        beanData: |
                          '{
                           "ionBean": "EmitEventAction",
                           "event": "plain:C8Oforms.MobileApplication.Application.dataSourceEditor.save",
                           "data": "script:this.currentObject"
                          }'
                        tagName: EmitEvent
                  ↓Label [ngx.components.UIDynamicElement-1680612347589]: 
                    beanData: '{"ionBean":"Label"}'
                    tagName: ion-label
                    ↓some_text [ngx.components.UIText-1680612347588]: 
                      i18n: true
                      textValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:Add filter
                  ↓Style [ngx.components.UIStyle-1680612393463]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            '/**
                             * Custom properties (sometimes referred to as CSS variables or cascading variables)
                             * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                             * They are set using custom property notation, e.g.: --main-color: black;
                             * and are accessed using the var() function, e.g.: color: var(--main-color);
                             * You can find below your component''s properties you can customize within the page.
                             * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                             * For more informations see https://ionicframework.com/docs/theming.
                            **/
                            //--background	//Background of the button
                            //--background-activated	//Background of the button when pressed. Note: setting this will interfere with the Material Design ripple
                            //--background-activated-opacity	//Opacity of the button when pressed
                            //--background-focused	//Background of the button when focused with the tab key
                            //--background-focused-opacity	//Opacity of the button when focused with the tab key
                            //--background-hover	//Background of the button on hover
                            //--background-hover-opacity	//Opacity of the background on hover
                            //--border-color	//Border color of the button
                            //--border-radius	//Border radius of the button
                            //--border-style	//Border style of the button
                            //--border-width	//Border width of the button
                            //--box-shadow	//Box shadow of the button
                            //--color	//Text color of the button
                            //--color-activated	//Text color of the button when pressed
                            //--color-focused	//Text color of the button when focused with the tab key
                            //--color-hover	//Text color of the button when hover
                            //--opacity	//Opacity of the button
                            //--padding-bottom	//Bottom padding of the button
                            //--padding-end	//Right padding if direction is left-to-right, and left padding if direction is right-to-left of the button
                            //--padding-start	//Left padding if direction is left-to-right, and right padding if direction is right-to-left of the button
                            //--padding-top	//Top padding of the button
                            //--ripple-color	//Color of the button ripple effect
                            //--transition	//Transition of the button
                            text-transform: unset !important;
                            '
              ↓RadioList [ngx.components.UIDynamicElement-1680251775526]: 
                beanData: '{"ionBean":"RadioGroup","ControlName":"plain:name1680251775526"}'
                tagName: ion-radio-group
                ↓GenericItem [ngx.components.UIDynamicElement-1680251775529]: 
                  beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                  tagName: ion-item
                  ↓RadioButton [ngx.components.UIDynamicElement-1680251775532]: 
                    beanData: |
                      '{
                       "ionBean": "RadioButton",
                       "IonSlot": "plain:start",
                       "Value": "plain:and"
                      }'
                    tagName: ion-radio
                  ↓Label [ngx.components.UIDynamicElement-1680251775538]: 
                    beanData: '{"ionBean":"Label"}'
                    tagName: ion-label
                    ↓Text [ngx.components.UIText-1680251775541]: 
                      i18n: true
                      textValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:all_cond_checked
                ↓GenericItem1 [ngx.components.UIDynamicElement-1680251775544]: 
                  beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
                  tagName: ion-item
                  ↓RadioButton1 [ngx.components.UIDynamicElement-1680251775547]: 
                    beanData: |
                      '{
                       "ionBean": "RadioButton",
                       "IonSlot": "plain:start",
                       "Value": "plain:or"
                      }'
                    tagName: ion-radio
                  ↓Label [ngx.components.UIDynamicElement-1680251775553]: 
                    beanData: '{"ionBean":"Label"}'
                    tagName: ion-label
                    ↓Text [ngx.components.UIText-1680251775556]: 
                      i18n: true
                      textValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:at_least_one_checked
                ↓Style [ngx.components.UIStyle-1680251775559]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          margin-left:80px;
                          
                ↓Attr [ngx.components.UIAttribute-1680251775562]: 
                  attrName: 
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:no-lines
                ↓Attr1 [ngx.components.UIAttribute-1680251775565]: 
                  attrName: '[(ngModel)]'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this.currentObject.condVisible
                ↓_ngModelChange_ [ngx.components.UIControlEvent-1680611917217]: 
                  attrName: (ngModelChange)
                  eventName: (ngModelChange)
                  ↓EmitEvent [ngx.components.UIDynamicEmit-1680611954447]: 
                    beanData: |
                      '{
                       "ionBean": "EmitEventAction",
                       "event": "plain:C8Oforms.MobileApplication.Application.dataSourceEditor.save",
                       "data": "script:this.currentObject"
                      }'
                    tagName: EmitEvent
            ↓tag1 [ngx.components.UIElement-1680251584431]: 
              identifier: ElseBlock_1680251584431
              tagName: ng-template
              ↓ProgressBar [ngx.components.UIDynamicElement-1680688243037]: 
                beanData: '{"ionBean":"ProgressBar","Type":"plain:indeterminate"}'
                tagName: ion-progress-bar
          ↓Directive3 [ngx.components.UIControlDirective-1678818942339]: 
            directiveName: SwitchDefault
            ↓DivMain [ngx.components.UIDynamicElement-1678818942345]: 
              beanData: '{"ionBean":"DivTag"}'
              tagName: div
              ↓Style [ngx.components.UIStyle-1678818942348]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '	padding:5px;
                        	height: 100%;
                        '
              ↓Attr21 [ngx.components.UIAttribute-1678818942351]: 
                attrName: '[ngStyle]'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: 'script:this.dragging == true ? {''border-width'': ''2px'', ''border-color'': ''#e3e6e6'', ''border-style'': ''dashed''}: {}'
              ↓DivFlexContainer [ngx.components.UIDynamicElement-1678818942354]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓Style [ngx.components.UIStyle-1678818942357]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '	display: flex;
                          	height: 100%;
                          '
                ↓Div [ngx.components.UIDynamicElement-1678818942447]: 
                  beanData: '{"ionBean":"DivTag"}'
                  tagName: div
                  ↓Style [ngx.components.UIStyle-1678818942450]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            '	flex-grow: 1;
                            	color: black !important;
                            	display: flex;
                                align-items: center;
                            	width:100%;
                            '
                  ↓Attr2 [ngx.components.UIAttribute-1678818942453]: 
                    attrName: class
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: plain:stylegenerictextnormal
                  ↓Div [ngx.components.UIDynamicElement-1678818942456]: 
                    beanData: '{"ionBean":"DivTag"}'
                    tagName: div
                    ↓Style [ngx.components.UIStyle-1678818942459]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '	width:100%;
                              	height: 100%;
                              '
                    ↓tag [ngx.components.UIControlDirective-1680793974750]: 
                      directiveName: If
                      directiveSource: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:this.currentObject?.type != 'ts' else ElseBlock_1680793995843
                      ↓UseSharedComponent1 [ngx.components.UIUseShared-1678818942462]: 
                        identifier: currentEdit
                        sharedcomponent: lib_ExtendedComponents_ui_ngx.MobileApplication.Application.tinyMce
                        ↓model [ngx.components.UIUseVariable-1678818942465]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:this.pageOwner.transform$toHtml(currentObject.str)
                        ↓init [ngx.components.UIUseVariable-1678818942468]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: |
                                  'script:{
                                      placeholder: this.translate.instant(''placeholder_editor''),
                                      toolbar: false,
                                      menubar:false,
                                      statusbar: false,
                                      branding: false,
                                      indent: false,
                                      quickbars_selection_toolbar: false,
                                      importcss_append: true,
                                      height: 300,
                                      force_br_newlines : false,
                                      force_p_newlines : false,
                                      noneditable_noneditable_class: ''mceNonEditable'',
                                      content_css: this.pageOwner.getTinyCssPath(),
                                      language: this.pageOwner.getTinyLang(this.global.settings.language),
                                      language_url: this.pageOwner.getTinyPathLang(this.global.settings.language),
                                      setup: this.pageOwner.tinyFuncDropWithCancelText,
                                      content_style:''.mce-content-body { background: #FFF3CD; color:#000;}'',
                                      oninit: this.pageOwner.tinyPostInit,
                                      valid_elements : ''*[*]'',
                                      apply_source_formatting : false,                
                                      verify_html : false
                                  }'
                        ↓disabled [ngx.components.UIUseVariable-1678818942471]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:''
                        ↓apiKey [ngx.components.UIUseVariable-1678818942474]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:''
                        ↓cloudChannel [ngx.components.UIUseVariable-1678818942477]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:''
                        ↓id [ngx.components.UIUseVariable-1678818942480]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:''
                        ↓inline [ngx.components.UIUseVariable-1678818942486]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:true
                        ↓Event [ngx.components.UIControlEvent-1678818942489]: 
                          attrName: (onBlur)
                          eventName: onBlur
                          ↓computeResults [ngx.components.UICustomAsyncAction-1678818942492]: 
                            actionValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    '		try {
                                    			// case editing variable type text or ts
                                    			let html = page.pageOwner.transformHtmlto$(event.editor.getContent());
                                    			var newDiv = document.createElement("div");
                                    			newDiv.innerHTML = html
                                    			html = newDiv.innerText;
                                    			return {props: {str: html, html :false}};
                                    		} catch (e) {
                                    			page.c8o.log.error("An error occured while trying to save");
                                    			return {props: {}};
                                    		}
                                    '
                            ↓EmitEvent [ngx.components.UIDynamicEmit-1678898692416]: 
                              beanData: |
                                '{
                                 "ionBean": "EmitEventAction",
                                 "event": "plain:C8Oforms.MobileApplication.Application.dataSourceEditor.save",
                                 "data": "source:{\"filter\":\"Action\",\"project\":\"C8Oforms\",\"input\":\"\",\"model\":{\"data\":[{\"priority\":1678818942492}],\"path\":\"?.out\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}"
                                }'
                              tagName: EmitEvent
                    ↓tag1 [ngx.components.UIElement-1680793995843]: 
                      identifier: ElseBlock_1680793995843
                      tagName: ng-template
                      ↓UseSharedComponent1 [ngx.components.UIUseShared-1680794059250]: 
                        identifier: currentEdit
                        isEnabled: false
                        sharedcomponent: lib_ExtendedComponents_ui_ngx.MobileApplication.Application.tinyMce
                        ↓model [ngx.components.UIUseVariable-1680794059253]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:this.pageOwner.transform$toHtml(currentObject.str)
                        ↓init [ngx.components.UIUseVariable-1680794059256]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: |
                                  'script:{
                                      placeholder: this.translate.instant(''placeholder_editor''),
                                      toolbar: false,
                                      menubar:false,
                                      statusbar: false,
                                      branding: false,
                                      indent: false,
                                      quickbars_selection_toolbar: false,
                                      importcss_append: true,
                                      height: 400,
                                      force_br_newlines : false,
                                      force_p_newlines : false,
                                      noneditable_noneditable_class: ''mceNonEditable'',
                                      content_css: this.pageOwner.getTinyCssPath(),
                                      language: this.pageOwner.getTinyLang(this.global.settings.language),
                                      language_url: this.pageOwner.getTinyPathLang(this.global.settings.language),
                                      setup: this.pageOwner.tinyFuncDropWithCancel,
                                      content_style:''.mce-content-body { background: #88bdff; color:#000;}'',
                                      oninit: this.pageOwner.tinyPostInit,
                                      valid_elements : ''*[*]'',
                                      apply_source_formatting : false,                
                                      verify_html : false
                                  }'
                        ↓disabled [ngx.components.UIUseVariable-1680794059259]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:''
                        ↓apiKey [ngx.components.UIUseVariable-1680794059262]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:''
                        ↓cloudChannel [ngx.components.UIUseVariable-1680794059265]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:''
                        ↓id [ngx.components.UIUseVariable-1680794059268]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:''
                        ↓inline [ngx.components.UIUseVariable-1680794059271]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:false
                        ↓Event [ngx.components.UIControlEvent-1680794059274]: 
                          attrName: (onBlur)
                          eventName: onBlur
                          ↓computeResults [ngx.components.UICustomAsyncAction-1680794059277]: 
                            actionValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    '		try {
                                    			// case editing variable type text or ts
                                    			let html = page.pageOwner.transformHtmlto$(event.editor.getContent());
                                    			var newDiv = document.createElement("div");
                                    			newDiv.innerHTML = html
                                    			html = newDiv.innerText;
                                    			return {props: {str: html, html :false}};
                                    		} catch (e) {
                                    			page.c8o.log.error("An error occured while trying to save");
                                    			return {props: {}};
                                    		}
                                    '
                            ↓EmitEvent [ngx.components.UIDynamicEmit-1680794059280]: 
                              beanData: |
                                '{
                                 "ionBean": "EmitEventAction",
                                 "event": "plain:C8Oforms.MobileApplication.Application.dataSourceEditor.save",
                                 "data": "source:{\"filter\":\"Action\",\"project\":\"C8Oforms\",\"input\":\"\",\"model\":{\"data\":[{\"priority\":1678818942492}],\"path\":\"?.out\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}"
                                }'
                              tagName: EmitEvent
                      ↓tag [ngx.components.UIUseShared-1681289305917]: 
                        sharedcomponent: C8Oforms.MobileApplication.Application.monacoEditor
                        ↓code [ngx.components.UIUseVariable-1681294585435]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:currentObject.str
                        ↓attr [ngx.components.UIControlEvent-1685454437308]: 
                          attrName: (onBlur)
                          eventName: onBlur
                          ↓computeResults [ngx.components.UICustomAsyncAction-1685454471239]: 
                            actionValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    '		try {
                                    			return {props: {str: event.code, html :false}};
                                    		} catch (e) {
                                    			page.c8o.log.error("an error occured while evaluating monaco output: " + JSON.stringify(e));
                                    		}
                                    '
                            ↓EmitEvent [ngx.components.UIDynamicEmit-1685454447285]: 
                              beanData: |
                                '{
                                 "ionBean": "EmitEventAction",
                                 "event": "plain:C8Oforms.MobileApplication.Application.dataSourceEditor.save",
                                 "data": "source:{\"filter\":\"Action\",\"project\":\"C8Oforms\",\"input\":\"\",\"model\":{\"data\":[{\"priority\":1685454471239,\"rootEvent\":false,\"pageLocals\":false},{\"priority\":1685454437308,\"rootEvent\":true,\"pageLocals\":false}],\"path\":\"?.out\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}"
                                }'
                              tagName: EmitEvent
                ↓DivSwitchToJS [ngx.components.UIDynamicElement-1678818942498]: 
                  beanData: '{"ionBean":"DivTag"}'
                  tagName: div
                  ↓Style [ngx.components.UIStyle-1678818942501]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            '	display: inline;
                            	white-space:nowrap;
                            	ion-button{
                            		--padding-start: 0px;
                            		--padding-end: 0px;
                            	}
                            '
                  ↓ButtonText [ngx.components.UIDynamicElement-1678818942504]: 
                    beanData: |
                      '{
                       "ionBean": "Button",
                       "IonFill": "plain:clear",
                       "IonSize": "plain:large",
                       "IconSlot": "plain:icon-only"
                      }'
                    tagName: ion-button
                    ↓Icon [ngx.components.UIDynamicElement-1678818942507]: 
                      beanData: '{"ionBean":"Icon","IconName":"plain:text-outline"}'
                      tagName: ion-icon
                      ↓Attr [ngx.components.UIAttribute-1678818942510]: 
                        attrName: '[color]'
                        attrValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: 'script:this.currentObject?.type != ''ts'' ? ''yelloweditorbutton'' : ''greyButton'''
                    ↓Style [ngx.components.UIStyle-1678818942513]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              	padding:0px;
                              
                    ↓Event [ngx.components.UIControlEvent-1678818942516]: 
                      ↓setType [ngx.components.UICustomAction-1678818942519]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '		page.currentEdit.editor._editor.bodyElement.style.backgroundColor = "#FFF3CD"
                                		const name = page.pageOwner.getEnabled(page.sources)
                                        let keyIndex = (Object.keys(page.sources[name][''vars''])[page.pageOwner.local.index]);
                                        if(keyIndex == undefined){
                                            keyIndex = page.pageOwner.local.treeSource.filter(x => x.name == name.split(".")[0])[0].sequences.filter(x => x.name == name.split(".")[1])[0].variables.name[page.pageOwner.local.index];
                                            page.sources[name][''vars''][keyIndex] = {"source": false, str:"", "type":"text"};
                                        }
                                		else{
                                			if(page.sources[name][''vars''][keyIndex] != undefined){
                                				page.sources[name][''vars''][keyIndex]["type"] = "text";
                                			}
                                			else{
                                				page.sources[name][''vars''][keyIndex] = {"source": false, str:"", "type":"text"};
                                			}	
                                		}
                                		resolve();
                                '
                        isEnabled: false
                        ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1678818942522]: 
                          beanData: '{"ionBean":"InvokeAction"}'
                          stack: C8Oforms.MobileApplication.Application.updateState
                        ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1678818942525]: 
                          beanData: '{"ionBean":"InvokeAction"}'
                          stack: C8Oforms.MobileApplication.Application.detectChanges
                      ↓setColor [ngx.components.UICustomAsyncAction-1678899517262]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                		try {
                                			page.currentEdit.editor._editor.bodyElement.style.backgroundColor = "#FFF3CD"
                                		} catch (e) {
                                		
                                		} finally {
                                			return;
                                		}
                                
                        ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1678899517265]: 
                          beanData: '{"ionBean":"InvokeAction"}'
                          stack: C8Oforms.MobileApplication.Application.detectChanges
                      ↓EmitEvent [ngx.components.UIDynamicEmit-1678899517268]: 
                        beanData: |
                          '{
                           "ionBean": "EmitEventAction",
                           "event": "plain:C8Oforms.MobileApplication.Application.dataSourceEditor.save",
                           "data": "script:{props: {type: ''text''}}"
                          }'
                        tagName: EmitEvent
                    ↓Attr [ngx.components.UIAttribute-1678818942528]: 
                      attrName: tooltip
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:'hover_text' | translate
                    ↓Attr1 [ngx.components.UIAttribute-1678818942531]: 
                      attrName: 
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:arrow
                    ↓Attr2 [ngx.components.UIAttribute-1678818942534]: 
                      attrName: positionV
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:top
                  ↓ButtonTS [ngx.components.UIDynamicElement-1678818942537]: 
                    beanData: |
                      '{
                       "ionBean": "Button",
                       "IonFill": "plain:clear",
                       "IonSize": "plain:large",
                       "IconSlot": "plain:icon-only"
                      }'
                    tagName: ion-button
                    ↓Icon [ngx.components.UIDynamicElement-1678818942540]: 
                      beanData: '{"ionBean":"Icon","IconName":"plain:logo-javascript"}'
                      tagName: ion-icon
                      ↓Attr [ngx.components.UIAttribute-1678818942543]: 
                        attrName: '[color]'
                        attrValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: 'script:this.currentObject?.type == ''ts'' ? ''blueeditorbutton'' : ''greyButton'''
                    ↓Style [ngx.components.UIStyle-1678818942546]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              	padding:0px;
                              
                    ↓Event [ngx.components.UIControlEvent-1678818942549]: 
                      ↓setType [ngx.components.UICustomAction-1678818942552]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '		try{
                                			page.currentEdit.editor._editor.bodyElement.style.backgroundColor = "#88bdff"
                                		}
                                		catch(e){
                                			
                                		}
                                		const name = page.pageOwner.getEnabled(page.sources)
                                        let keyIndex = (Object.keys(page.sources[name][''vars''])[page.pageOwner.local.index]);
                                        if(keyIndex == undefined){
                                            keyIndex = page.pageOwner.local.treeSource.filter(x => x.name == name.split(".")[0])[0].sequences.filter(x => x.name == name.split(".")[1])[0].variables.name[page.pageOwner.local.index];
                                            page.sources[name][''vars''][keyIndex] = {"source": false, str:"", "type":"text"};
                                        }
                                		else{
                                			if(page.sources[name][''vars''][keyIndex] != undefined){
                                				page.sources[name][''vars''][keyIndex]["type"] = "ts";
                                			}
                                			else{
                                				page.sources[name][''vars''][keyIndex] = {"source": false, str:"", "type":"ts"};
                                			}	
                                		}
                                		resolve();
                                '
                        isEnabled: false
                        ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1678818942555]: 
                          beanData: '{"ionBean":"InvokeAction"}'
                          stack: C8Oforms.MobileApplication.Application.updateState
                        ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1678818942558]: 
                          beanData: '{"ionBean":"InvokeAction"}'
                          stack: C8Oforms.MobileApplication.Application.detectChanges
                      ↓setColor [ngx.components.UICustomAsyncAction-1678899449371]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                '		try {
                                			// if it''s not ts
                                			if(page.currentObject.type != ''ts''){
                                				let alertController = page.getInstance(AlertController);
                                				// send an alert to confirm data will be lost
                                				const alert = await alertController.create({
                                			      header: ''Attention'',
                                			      subHeader: ''Si vous passez en mode Javascript, vous risquez de perdre la compatibilité avec le mode texte. Êtes vous sur de vouloir continuer ?'',
                                			      buttons: [
                                					  {
                                						  text: ''OK'',
                                						  role: ''confirm'',
                                					  },
                                					  {
                                						  text: ''Annuler'',
                                						  role: ''cancel'',
                                					  }
                                					]
                                			    });
                                			    await alert.present();
                                			    let res = await alert.onDidDismiss();
                                			    let str = "";
                                			    if(res.role === ''confirm''){
                                					let strWithoutSpace = page.currentObject.str.replace(/ /g, '''');
                                					if(!(strWithoutSpace.indexOf("(async()=>{") == 0) || !(strWithoutSpace.indexOf("})();") == (strWithoutSpace.length - 5)  )){
                                						return {
                                							str: "(async ()=>{\n	return \""+page.currentObject.str + "\";\n})();",
                                							type: ''ts''
                                						};
                                					}
                                					else{
                                						return {
                                							type: ''ts''
                                						};
                                					}
                                				}
                                				else{
                                					return null;
                                				}
                                			}
                                		} catch (e) {
                                			console.log("error switch to ts", e);
                                		}
                                '
                        ↓If [ngx.components.UIDynamicAction-1687874369262]: 
                          beanData: '{"ionBean":"IfAction","condition":"script:parent.out != null"}'
                          tagName: If
                          ↓EmitEvent [ngx.components.UIDynamicEmit-1678899481258]: 
                            beanData: |
                              '{
                               "ionBean": "EmitEventAction",
                               "event": "plain:C8Oforms.MobileApplication.Application.dataSourceEditor.save",
                               "data": "source:{\"filter\":\"Action\",\"project\":\"C8Oforms\",\"input\":\"\",\"model\":{\"data\":[{\"priority\":1678899449371,\"rootEvent\":false,\"pageLocals\":false},{\"priority\":1678818942549,\"rootEvent\":true,\"pageLocals\":false}],\"path\":\"?.out\",\"prefix\":\"{props: \",\"suffix\":\"}\",\"custom\":\"\",\"useCustom\":false}}"
                              }'
                            tagName: EmitEvent
                          ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1678899512440]: 
                            beanData: '{"ionBean":"InvokeAction"}'
                            stack: C8Oforms.MobileApplication.Application.detectChanges
                    ↓Attr [ngx.components.UIAttribute-1678818942561]: 
                      attrName: tooltip
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:'hover_ts' | translate
                    ↓Attr1 [ngx.components.UIAttribute-1678818942564]: 
                      attrName: 
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:arrow
                    ↓Attr2 [ngx.components.UIAttribute-1678818942567]: 
                      attrName: positionV
                      attrValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: plain:top
    ↓attr [ngx.components.UIAttribute-1678818942570]: 
      attrName: '[attr.size]'
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: 'script:this.type != ''configure'' ? ''9'' : ''12'''
↓item [ngx.components.UICompVariable-1610637569875]: 
↓sources [ngx.components.UICompVariable-1610641542227]: 
↓path [ngx.components.UICompVariable-1610650079266]: 
↓thingIndex [ngx.components.UICompVariable-1610964769102]: 
↓isSource [ngx.components.UICompVariable-1663323512824]: 
  value: false
↓SharedComponent_Event [ngx.components.UISharedComponentEvent-1663332604915]: 
  ↓CustomAsyncAction [ngx.components.UICustomAsyncAction-1663332660154]: 
    actionValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            '		try {
            			window["setConfigurationData"] = async (arg1) =>{
            				//let removeItem: any = page.isSource && page.pageOwner.getMetaFromPalette(page.item.type).hasFilter == true;
            				//removeItem = removeItem ? "forms_filter" : null;
            				page.item[page.path][page.pageOwner.getEnabled(page.sources)].vars[page.pageOwner.keyIndex(page.sources)].str = arg1;
            				page.pageOwner.updateState();
            				let modalController = page.getInstance(ModalController);
                        	await modalController.dismiss();
                        	// force re compute completin for filters if needed
                        	page.local.keyName = null;
            				page.local.complByName = null;
            				page.local.done = false;
                        	page.buildFilters();
            			}
            			window["getConfigurationData"] = () =>{
            				return page.item[page.path][page.pageOwner.getEnabled(page.sources)].vars[page.pageOwner.keyIndex(page.sources)].str;
            			}
            			
            		} catch (e) {
            			console.log(''an error occured'', e);
            		} finally {
            			page.ref.detectChanges();
            			return;
            		}
            '
↓type [ngx.components.UICompVariable-1678818796704]: 
↓currentObject [ngx.components.UICompVariable-1678818920171]: 
↓dragging [ngx.components.UICompVariable-1678819042112]: 
  value: false
↓save [ngx.components.UICompEvent-1678872408164]: 
  attrName: save
↓currentMeta [ngx.components.UICompVariable-1678901065129]: 
↓SharedComponent_Event1 [ngx.components.UISharedComponentEvent-1680252579013]: 
  componentEvent: onChanges
  ↓CustomAsyncAction [ngx.components.UICustomAsyncAction-1680252604628]: 
    actionValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            '		try {
            			if(page.type == "filter"){
            				if(page.currentObject.type != "filter"){
            					page.currentObject.conds = [{val1: {name:"", displayName:""}, val2 : {type: "text", str:""}, operator: "" }];
            					page.currentObject.condVisible = "and";
            					page.currentObject.type = "filter";
            					page.ref.detectChanges();
            				}
            				if(page.local.keyName == null && page.local.done != true){
            					page.local.done = true;
            					let currentElem = page.item;
            				    let structure = { "compl": {}, "builtin": {} };
            				    try {
            				        // if its a sourced elem
            				        if (currentElem.sources != undefined) {
            				            for (let source in currentElem.sources) {
            				                if (currentElem.sources[source].enabled) {
            				                    //try to compute default vars values
            				                    let defaultVars = {};
            				                    let regex = /\$\$(?:START)?(\d+)(.*?)(?:END)?(?:\d+)?\$\$/
            				                    try {
            				                        defaultVars = Object.keys(currentElem.sources[source].vars).map((x => { return { key: x, value: currentElem.sources[source].vars[x].str != undefined ? currentElem.sources[source].vars[x].str.replace(regex, "") : "" } })).reduce((obj, item) => Object.assign(obj, { [item.key]: item.value }), {});
            				                    }
            				                    catch (e) {
            				
            				                    }
            				                    let res = await this.c8o.callJsonObject(source, { model: true, ...defaultVars }).async();
            				                    if(res && res.data && res.data[0]){
            										page.local.keyName = [];
            										page.local.complByName = {};
            										for(let elem in res.data[0]){
            											if(!(res.data[0][elem].filterHide === true)){
            												page.local.keyName.push(
            													{
            														name: elem,
            														displayName:  res.data[0][elem].displayName != undefined ? res.data[0][elem].displayName : elem
            													}
            												);
            												page.local.complByName[elem] = res.data[0][elem].filterCompletion;
            												
            											}
            										}
            										page.ref.detectChanges();
            									}
            				                }
            				            }
            				        }
            				    }
            				    catch (e) {
            				
            				    }
            				}
            				
            			}
            		} catch (e) {
            		
            		} finally {
            			return;
            		}
            '
↓tag [ngx.components.UIControlDirective-1680524753344]: 
  directiveName: If
  directiveSource: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
      - MobileSmartSourceType: script:false
  ↓tag [ngx.components.UIUseShared-1680524960229]: 
    sharedcomponent: C8Oforms.MobileApplication.Application.PopOverSourceCompletion
↓apiRouter [ngx.components.UICompVariable-1688374531692]: 
  value: '{''nextPage'': {code:''await api.router.nextPage(false)'', ''icon'':''arrow-forward-outline''}, ''previousPage'': {code:''await api.router.previousPage(false)'', ''icon'':''arrow-back-outline''}, ''navigateAtIndex'': {code:''await api.router.navigateAtIndex(0, false)'', ''icon'':''navigate-circle-outline''}, ''currentIndex'': {code:''api.router.currentIndex'', ''icon'':''locate-outline''}, ''countPages'': {code:''api.router.count'', ''icon'':''stats-chart-outline''}, ''submitForm'': {code:''await api.router.submit()'', ''icon'':''share-outline''}, ''reloadForm'': {code:''await api.router.reload()'', ''icon'':''refresh-outline''} }'
↓apiApp [ngx.components.UICompVariable-1688475376997]: 
  value: '{''state'': {code:''await api.app.state()'', ''icon'':''stats-chart-outline''}, ''currentVersion'': {code:''await api.app.currentVersion()'', ''icon'':''checkmark-done-outline''}, ''latestVersion'': {code:''await api.app.latestVersion()'', ''icon'':''refresh-outline''}}'
↓apiForm [ngx.components.UICompVariable-1688476770752]: 
  value: '{''published'': {code:''api.form.published'', ''icon'':''arrow-redo-outline''}, ''version'': {code:''api.form.version'', ''icon'':''checkmark-done-outline''}}'
↓apiUser [ngx.components.UICompVariable-1688477760306]: 
  value: '{''authenticated'': {code:''api.user.authenticated'', ''icon'':''lock-closed-outline''}, ''groups'': {code:''api.user.groups'', ''icon'':''people-outline''}, ''maxInactive'': {code:''api.user.maxInactive'', ''icon'':''bed-outline''}, ''name'': {code:''api.user.name'', ''icon'':''person-circle-outline''}, ''sessionId'': {code:''api.user.sessionId'', ''icon'':''logo-android''}}'
↓apiPage [ngx.components.UICompVariable-1688478014362]: 
  value: '{''form'': {code:''api.page.form'', ''icon'':''document-outline''}, ''formSubmit'': {code:''api.page.formSubmit'', ''icon'':''newspaper-outline''}}'
↓apiTranslate [ngx.components.UICompVariable-1688478413538]: 
  value: '{''currentLang'': {code:''api.translate.currentLang'', ''icon'':''language-outline''}, ''getBrowserLang'': {code:''api.translate.getBrowserLang()'', ''icon'':''globe-outline''}, ''use'': {code:''api.translate.use("en")'', ''icon'':''flag-outline''}}'
↓apiC8o [ngx.components.UICompVariable-1688479140514]: 
  value: '{''callJson'': {code:''await api.c8o.callJsonObject("", {}).async();'', ''icon'':''flash-outline''}, ''log debug'': {code:''api.c8o.log.debug("")'', ''icon'':''bug-outline''}, ''log warn'': {code:''api.c8o.log.warn("")'', ''icon'':''alert-outline''}, ''log error'': {code:''api.c8o.log.error("")'', ''icon'':''warning-outline''}}'