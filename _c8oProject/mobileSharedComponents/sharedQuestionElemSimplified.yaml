isEnabled: false
↓item [ngx.components.UICompVariable-1623745436377]: 
↓GridRow [ngx.components.UIDynamicElement-1623745492086]: 
  beanData: '{"ionBean":"GridRow","FlexAlignement":"plain:ion-align-items-end"}'
  tagName: ion-row
  ↓GridCol [ngx.components.UIDynamicElement-1623745492089]: 
    beanData: '{"ionBean":"GridCol","Size":"plain:12"}'
    tagName: ion-col
    ↓GenericItem [ngx.components.UIDynamicElement-1623745492092]: 
      beanData: '{"ionBean":"GenericItem"}'
      tagName: ion-item
      ↓FormatLayout [ngx.components.UIDynamicAttr-1645090139267]: 
        beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-uppercase"}'
        comment: FormatLayout
        tagName: div
      ↓Text [ngx.components.UIText-1623745492098]: 
        i18n: true
        textValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:'define_question' | translate
      ↓Style [ngx.components.UIStyle-1623745492101]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                'color: #ff8206;
                  font-size: 14px;
                  font-weight: 600;
                  font-style: normal;
                  font-stretch: normal;
                  line-height: normal;
                  letter-spacing: normal;
                '
      ↓Style1 [ngx.components.UIStyle-1623745492104]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '	.label{
                		margin-top: 0px !important;	
                		margin-bottom: 0px !important;	
                	}
                '
    ↓Grid [ngx.components.UIDynamicElement-1623745973407]: 
      beanData: '{"ionBean":"Grid"}'
      tagName: ion-grid
      ↓GridRow [ngx.components.UIDynamicElement-1623745976961]: 
        beanData: '{"ionBean":"GridRow"}'
        tagName: ion-row
        ↓GridCol [ngx.components.UIDynamicElement-1623745983246]: 
          beanData: '{"ionBean":"GridCol"}'
          tagName: ion-col
          ↓GenericItem1 [ngx.components.UIDynamicElement-1623745983249]: 
            beanData: '{"ionBean":"GenericItem"}'
            tagName: ion-item
            ↓Label [ngx.components.UIDynamicElement-1623745983252]: 
              beanData: '{"ionBean":"Label","Position":"plain:stacked"}'
              tagName: ion-label
              ↓FormatLayout [ngx.components.UIDynamicAttr-1645090139269]: 
                beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-capitalize"}'
                comment: FormatLayout
                tagName: div
              ↓Text [ngx.components.UIText-1623745983258]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:'text' | translate
              ↓Style [ngx.components.UIStyle-1623745983261]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        'color: var(--ion-color-primary);
                        '
            ↓Attr2 [ngx.components.UIAttribute-1623745983264]: 
              attrName: '[ngClass]'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:'stylegenerictexteditor'
            ↓Style [ngx.components.UIStyle-1623745983267]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      'width: 90%;
                      .label{
                      		margin-top: 0px !important;	
                      		margin-bottom: 0px !important;	
                      	}
                      '
            ↓TextArea [ngx.components.UIDynamicElement-1623745983270]: 
              beanData: '{"ionBean":"TextArea","Debounce":"plain:0"}'
              isEnabled: false
              tagName: ion-textarea
              ↓Attr [ngx.components.UIAttribute-1623745983273]: 
                attrName: '[(ngModel)]'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.item.config.label
              ↓Event1 [ngx.components.UIControlEvent-1623745983276]: 
                attrName: (change)
                eventName: onChange
                ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1623745983279]: 
                  beanData: '{"ionBean":"InvokeAction"}'
                  stack: C8Oforms_NGX.MobileApplication.Application.updateState
              ↓Attr2 [ngx.components.UIAttribute-1623745983282]: 
                attrName: ondragstart
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:event.preventDefault();event.stopPropagation();
              ↓Event11 [ngx.components.UIControlEvent-1623745983285]: 
                attrName: (dragover)
                eventName: (dragover)
                ↓refuseDrop [ngx.components.UICustomAction-1623745983288]: 
                  actionValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          		if(event.dataTransfer.types.includes("__c8oformsdrag")){
                          					event.preventDefault();
                          					//this.recursive(event.target, "before");
                          			}
                          		resolve();
                          
              ↓Attr3 [ngx.components.UIAttribute-1623745983291]: 
                attrName: ondragover
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:event.preventDefault()
              ↓Attr31 [ngx.components.UIAttribute-1623745983294]: 
                attrName: ondrop
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:event.preventDefault()
              ↓Attr11 [ngx.components.UIAttribute-1623745983297]: 
                attrName: '[attr.draggable]'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:false
              ↓Event11132 [ngx.components.UIControlEvent-1623745983300]: 
                attrName: (mouseenter)
                eventName: (mouseenter)
                ↓cantDrag [ngx.components.UICustomAction-1623745983303]: 
                  actionValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          	    page.local.canDrag = "false";
                          		page.tick();
                          //		console.log('MOUSEENTER !!');
                          		resolve();
                          
              ↓Event111311 [ngx.components.UIControlEvent-1623745983306]: 
                attrName: (mouseleave)
                eventName: (mouseleave)
                ↓canDrag [ngx.components.UICustomAction-1623745983309]: 
                  actionValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          	    page.local.canDrag = "true";
                          		page.tick();
                          //		console.log('MOUSELEAVE !!');
                          		resolve();
                          
            ↓TextInput [ngx.components.UIDynamicElement-1623745983312]: 
              beanData: '{"ionBean":"Input","Debounce":"plain:0"}'
              tagName: ion-input
              ↓Attr [ngx.components.UIAttribute-1623745983315]: 
                attrName: '[(ngModel)]'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.item.config.label
              ↓Attr2 [ngx.components.UIAttribute-1623745983318]: 
                attrName: ondragstart
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:event.preventDefault();event.stopPropagation();
              ↓Attr3 [ngx.components.UIAttribute-1623745983321]: 
                attrName: ondragover
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:event.preventDefault()
              ↓Attr31 [ngx.components.UIAttribute-1623745983324]: 
                attrName: ondrop
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:event.preventDefault()
              ↓Attr11 [ngx.components.UIAttribute-1623745983327]: 
                attrName: '[attr.draggable]'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:false
              ↓Event1 [ngx.components.UIControlEvent-1623745983330]: 
                attrName: (change)
                eventName: onChange
                ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1623745983333]: 
                  beanData: '{"ionBean":"InvokeAction"}'
                  stack: C8Oforms_NGX.MobileApplication.Application.updateState
              ↓Event11 [ngx.components.UIControlEvent-1623745983336]: 
                attrName: (dragover)
                eventName: (dragover)
                ↓refuseDrop [ngx.components.UICustomAction-1623745983339]: 
                  actionValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          		if(event.dataTransfer.types.includes("__c8oformsdrag")){
                          					event.preventDefault();
                          					//this.recursive(event.target, "before");
                          			}
                          		resolve();
                          
              ↓Event11132 [ngx.components.UIControlEvent-1623745983342]: 
                attrName: (mouseenter)
                eventName: (mouseenter)
                ↓cantDrag [ngx.components.UICustomAction-1623745983345]: 
                  actionValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          	    page.local.canDrag = "false";
                          		page.tick();
                          //		console.log('MOUSEENTER !!');
                          		resolve();
                          
              ↓Event111311 [ngx.components.UIControlEvent-1623745983348]: 
                attrName: (mouseleave)
                eventName: (mouseleave)
                ↓canDrag [ngx.components.UICustomAction-1623745983351]: 
                  actionValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          	    page.local.canDrag = "true";
                          		page.tick();
                          //		console.log('MOUSELEAVE !!');
                          		resolve();
                          
          ↓Attr [ngx.components.UIAttribute-1623745983354]: 
            attrName: padding
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:true