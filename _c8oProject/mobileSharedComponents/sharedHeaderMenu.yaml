↓Directive [ngx.components.UIControlDirective-1647018823063]: 
  directiveName: If
  directiveSource: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
      - MobileSmartSourceType: script:this.global.settings != undefined else ElseBlock_1602690082828
  ↓Directive [ngx.components.UIControlDirective-1647018823066]: 
    directiveName: Switch
    directiveSource: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:this.global?.settings?.provider
    ↓Directive [ngx.components.UIControlDirective-1647018823069]: 
      directiveExpression: '''google'''
      directiveName: SwitchCase
      ↓GenericItem [ngx.components.UIDynamicElement-1647018823072]: 
        beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
        tagName: ion-item
        ↓AvatarItem [ngx.components.UIDynamicElement-1647018823075]: 
          beanData: '{"ionBean":"Avatar","IonSlot":"plain:start"}'
          tagName: ion-avatar
          ↓Image1 [ngx.components.UIDynamicElement-1647018823078]: 
            beanData: '{"ionBean":"Image","url":"script:this.global?.settings?.picture"}'
            selfClose: true
            tagName: img
            ↓Style [ngx.components.UIStyle-1647018823081]: 
              isEnabled: false
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      'display: inline;
                      '
            ↓Attr [ngx.components.UIAttribute-1647018823084]: 
              attrName: onerror
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:this.src = 'assets/images/google-icon.svg'
        ↓Style [ngx.components.UIStyle-1647018823087]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '/**
                   * Custom properties (sometimes referred to as CSS variables or cascading variables)
                   * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                   * They are set using custom property notation, e.g.: --main-color: black;
                   * and are accessed using the var() function, e.g.: color: var(--main-color);
                   * You can find below your component''s properties you can customize within the page.
                   * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                   * For more informations see https://ionicframework.com/docs/theming.
                  **/
                  //--background	//Background of the item
                  //--background-activated	//Background of the item when pressed. Note: setting this will interfere with the Material Design ripple
                  //--background-activated-opacity	//Opacity of the item background when pressed
                  //--background-focused	//Background of the item when focused with the tab key
                  //--background-focused-opacity	//Opacity of the item background when focused with the tab key
                  //--background-hover	//Background of the item on hover
                  //--background-hover-opacity	//Opacity of the background of the item on hover
                  //--border-color	//Color of the item border
                  //--border-radius	//Radius of the item border
                  //--border-style	//Style of the item border
                  //--border-width	//Width of the item border
                  //--color	//Color of the item
                  //--color-activated	//Color of the item when pressed
                  //--color-focused	//Color of the item when focused with the tab key
                  //--color-hover	//Color of the item on hover
                  //--detail-icon-color	//Color of the item detail icon
                  //--detail-icon-font-size	//Font size of the item detail icon
                  //--detail-icon-opacity	//Opacity of the item detail icon
                  //--highlight-color-focused	//The color of the highlight on the item when focused
                  //--highlight-color-invalid	//The color of the highlight on the item when invalid
                  //--highlight-color-valid	//The color of the highlight on the item when valid
                  //--highlight-height	//The height of the highlight on the item
                  //--inner-border-width	//Width of the item inner border
                  //--inner-box-shadow	//Box shadow of the item inner
                  //--inner-padding-bottom	//Bottom padding of the item inner
                  //--inner-padding-end	//Right padding if direction is left-to-right, and left padding if direction is right-to-left of the item inner
                  //--inner-padding-start	//Left padding if direction is left-to-right, and right padding if direction is right-to-left of the item inner
                  //--inner-padding-top	//Top padding of the item inner
                  //--min-height	//Minimum height of the item
                  //--padding-bottom	//Bottom padding of the item
                  //--padding-end	//Right padding if direction is left-to-right, and left padding if direction is right-to-left of the item
                  //--padding-start	//Left padding if direction is left-to-right, and right padding if direction is right-to-left of the item
                  //--padding-top	//Top padding of the item
                  //--ripple-color	//Color of the item ripple effect
                  //--transition	//Transition of the item
                  '
        ↓Attr [ngx.components.UIAttribute-1647018823090]: 
          attrName: 
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:no-lines
        ↓Label [ngx.components.UIDynamicElement-1647018823093]: 
          beanData: '{"ionBean":"Label"}'
          tagName: ion-label
          ↓TextItem [ngx.components.UIDynamicElement-1647018823096]: 
            beanData: '{"ionBean":"TextItem"}'
            tagName: ion-text
            ↓H2 [ngx.components.UIDynamicElement-1647018823099]: 
              beanData: '{"ionBean":"Heading2"}'
              tagName: h2
              ↓Text [ngx.components.UIText-1647018823102]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.global.settings.displayName
              ↓Style [ngx.components.UIStyle-1647018823105]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        display:inline
                        
          ↓Paragraph [ngx.components.UIDynamicElement-1647018823108]: 
            beanData: '{"ionBean":"Paragraph"}'
            tagName: p
            ↓Text [ngx.components.UIText-1647018823111]: 
              i18n: true
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.global.settings.mail
    ↓Directive1 [ngx.components.UIControlDirective-1647018823114]: 
      directiveExpression: '''forms'''
      directiveName: SwitchCase
      ↓GenericItem [ngx.components.UIDynamicElement-1647018823117]: 
        beanData: '{"ionBean":"GenericItem"}'
        tagName: ion-item
        ↓AvatarItem [ngx.components.UIDynamicElement-1647018823120]: 
          beanData: '{"ionBean":"Avatar","IonSlot":"plain:start"}'
          tagName: ion-avatar
          ↓Image1 [ngx.components.UIDynamicElement-1647018823123]: 
            beanData: '{"ionBean":"Image","url":"plain:assets\/images\/forms.png"}'
            selfClose: true
            tagName: img
            ↓Style [ngx.components.UIStyle-1647018823126]: 
              isEnabled: false
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      'display: inline;
                      '
        ↓Style [ngx.components.UIStyle-1647018823129]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '/**
                   * Custom properties (sometimes referred to as CSS variables or cascading variables)
                   * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                   * They are set using custom property notation, e.g.: --main-color: black;
                   * and are accessed using the var() function, e.g.: color: var(--main-color);
                   * You can find below your component''s properties you can customize within the page.
                   * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                   * For more informations see https://ionicframework.com/docs/theming.
                  **/
                  //--background	//Background of the item
                  //--background-activated	//Background of the item when pressed. Note: setting this will interfere with the Material Design ripple
                  //--background-activated-opacity	//Opacity of the item background when pressed
                  //--background-focused	//Background of the item when focused with the tab key
                  //--background-focused-opacity	//Opacity of the item background when focused with the tab key
                  //--background-hover	//Background of the item on hover
                  //--background-hover-opacity	//Opacity of the background of the item on hover
                  //--border-color	//Color of the item border
                  //--border-radius	//Radius of the item border
                  //--border-style	//Style of the item border
                  //--border-width	//Width of the item border
                  //--color	//Color of the item
                  //--color-activated	//Color of the item when pressed
                  //--color-focused	//Color of the item when focused with the tab key
                  //--color-hover	//Color of the item on hover
                  //--detail-icon-color	//Color of the item detail icon
                  //--detail-icon-font-size	//Font size of the item detail icon
                  //--detail-icon-opacity	//Opacity of the item detail icon
                  //--highlight-color-focused	//The color of the highlight on the item when focused
                  //--highlight-color-invalid	//The color of the highlight on the item when invalid
                  //--highlight-color-valid	//The color of the highlight on the item when valid
                  //--highlight-height	//The height of the highlight on the item
                  //--inner-border-width	//Width of the item inner border
                  //--inner-box-shadow	//Box shadow of the item inner
                  //--inner-padding-bottom	//Bottom padding of the item inner
                  //--inner-padding-end	//Right padding if direction is left-to-right, and left padding if direction is right-to-left of the item inner
                  //--inner-padding-start	//Left padding if direction is left-to-right, and right padding if direction is right-to-left of the item inner
                  //--inner-padding-top	//Top padding of the item inner
                  //--min-height	//Minimum height of the item
                  //--padding-bottom	//Bottom padding of the item
                  //--padding-end	//Right padding if direction is left-to-right, and left padding if direction is right-to-left of the item
                  //--padding-start	//Left padding if direction is left-to-right, and right padding if direction is right-to-left of the item
                  //--padding-top	//Top padding of the item
                  //--ripple-color	//Color of the item ripple effect
                  //--transition	//Transition of the item
                  '
        ↓Attr [ngx.components.UIAttribute-1647018823132]: 
          attrName: 
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:no-lines
        ↓Label [ngx.components.UIDynamicElement-1647018823135]: 
          beanData: '{"ionBean":"Label"}'
          tagName: ion-label
          ↓Paragraph [ngx.components.UIDynamicElement-1647018823138]: 
            beanData: '{"ionBean":"Paragraph"}'
            tagName: p
            ↓Text [ngx.components.UIText-1647018823141]: 
              i18n: true
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.global.settings.mail
    ↓Directive2 [ngx.components.UIControlDirective-1647018823144]: 
      directiveExpression: '''ad'''
      directiveName: SwitchCase
      ↓GenericItem [ngx.components.UIDynamicElement-1647018823147]: 
        beanData: '{"ionBean":"GenericItem"}'
        tagName: ion-item
        ↓AvatarItem [ngx.components.UIDynamicElement-1647018823150]: 
          beanData: '{"ionBean":"Avatar","IonSlot":"plain:start"}'
          tagName: ion-avatar
          ↓Image1 [ngx.components.UIDynamicElement-1647018823153]: 
            beanData: '{"ionBean":"Image","url":"plain:assets\/images\/activeDirectory.png"}'
            selfClose: true
            tagName: img
        ↓Style [ngx.components.UIStyle-1647018823156]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '/**
                   * Custom properties (sometimes referred to as CSS variables or cascading variables)
                   * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                   * They are set using custom property notation, e.g.: --main-color: black;
                   * and are accessed using the var() function, e.g.: color: var(--main-color);
                   * You can find below your component''s properties you can customize within the page.
                   * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                   * For more informations see https://ionicframework.com/docs/theming.
                  **/
                  //--background	//Background of the item
                  //--background-activated	//Background of the item when pressed. Note: setting this will interfere with the Material Design ripple
                  //--background-activated-opacity	//Opacity of the item background when pressed
                  //--background-focused	//Background of the item when focused with the tab key
                  //--background-focused-opacity	//Opacity of the item background when focused with the tab key
                  //--background-hover	//Background of the item on hover
                  //--background-hover-opacity	//Opacity of the background of the item on hover
                  //--border-color	//Color of the item border
                  //--border-radius	//Radius of the item border
                  //--border-style	//Style of the item border
                  //--border-width	//Width of the item border
                  //--color	//Color of the item
                  //--color-activated	//Color of the item when pressed
                  //--color-focused	//Color of the item when focused with the tab key
                  //--color-hover	//Color of the item on hover
                  //--detail-icon-color	//Color of the item detail icon
                  //--detail-icon-font-size	//Font size of the item detail icon
                  //--detail-icon-opacity	//Opacity of the item detail icon
                  //--highlight-color-focused	//The color of the highlight on the item when focused
                  //--highlight-color-invalid	//The color of the highlight on the item when invalid
                  //--highlight-color-valid	//The color of the highlight on the item when valid
                  //--highlight-height	//The height of the highlight on the item
                  //--inner-border-width	//Width of the item inner border
                  //--inner-box-shadow	//Box shadow of the item inner
                  //--inner-padding-bottom	//Bottom padding of the item inner
                  //--inner-padding-end	//Right padding if direction is left-to-right, and left padding if direction is right-to-left of the item inner
                  //--inner-padding-start	//Left padding if direction is left-to-right, and right padding if direction is right-to-left of the item inner
                  //--inner-padding-top	//Top padding of the item inner
                  //--min-height	//Minimum height of the item
                  //--padding-bottom	//Bottom padding of the item
                  //--padding-end	//Right padding if direction is left-to-right, and left padding if direction is right-to-left of the item
                  //--padding-start	//Left padding if direction is left-to-right, and right padding if direction is right-to-left of the item
                  //--padding-top	//Top padding of the item
                  //--ripple-color	//Color of the item ripple effect
                  //--transition	//Transition of the item
                  '
        ↓Attr [ngx.components.UIAttribute-1647018823159]: 
          attrName: 
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:no-lines
        ↓Label [ngx.components.UIDynamicElement-1647018823162]: 
          beanData: '{"ionBean":"Label"}'
          tagName: ion-label
          ↓TextItem [ngx.components.UIDynamicElement-1647018823165]: 
            beanData: '{"ionBean":"TextItem"}'
            tagName: ion-text
            ↓H2 [ngx.components.UIDynamicElement-1647018823168]: 
              beanData: '{"ionBean":"Heading2"}'
              tagName: h2
              ↓Text [ngx.components.UIText-1647018823171]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.global.settings.displayName
              ↓Style [ngx.components.UIStyle-1647018823174]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        display:inline
                        
          ↓Paragraph [ngx.components.UIDynamicElement-1647018823177]: 
            beanData: '{"ionBean":"Paragraph"}'
            tagName: p
            ↓Text [ngx.components.UIText-1647018823180]: 
              i18n: true
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.global.settings.mail
    ↓Directive3 [ngx.components.UIControlDirective-1647018823183]: 
      directiveExpression: '''azuread'''
      directiveName: SwitchCase
      ↓GenericItem [ngx.components.UIDynamicElement-1647018823186]: 
        beanData: '{"ionBean":"GenericItem"}'
        tagName: ion-item
        ↓AvatarItem [ngx.components.UIDynamicElement-1647018823189]: 
          beanData: '{"ionBean":"Avatar","IonSlot":"plain:start"}'
          tagName: ion-avatar
          ↓Image [ngx.components.UIDynamicElement-1647018823192]: 
            beanData: '{"ionBean":"Image","url":"plain:assets\/images\/svg\/login\/microsoft-logo.svg"}'
            selfClose: true
            tagName: img
            ↓Style [ngx.components.UIStyle-1647018823195]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      'height: 40px !important;
                      width: 40px !important;
                      '
        ↓Attr [ngx.components.UIAttribute-1647018823198]: 
          attrName: 
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:no-lines
        ↓Label [ngx.components.UIDynamicElement-1647018823201]: 
          beanData: '{"ionBean":"Label"}'
          tagName: ion-label
          ↓TextItem [ngx.components.UIDynamicElement-1647018823204]: 
            beanData: '{"ionBean":"TextItem"}'
            tagName: ion-text
            ↓H2 [ngx.components.UIDynamicElement-1647018823207]: 
              beanData: '{"ionBean":"Heading2"}'
              tagName: h2
              ↓Text [ngx.components.UIText-1647018823210]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.global.settings.displayName
              ↓Style [ngx.components.UIStyle-1647018823213]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        display:inline;
                        
          ↓Paragraph [ngx.components.UIDynamicElement-1647018823216]: 
            beanData: '{"ionBean":"Paragraph"}'
            tagName: p
            ↓Text [ngx.components.UIText-1647018823219]: 
              i18n: true
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.global.settings.mail
            ↓Style [ngx.components.UIStyle-1647018823222]: 
    ↓Directive4 [ngx.components.UIControlDirective-1656593475543]: 
      directiveExpression: '''linkedin'''
      directiveName: SwitchCase
      ↓GenericItem [ngx.components.UIDynamicElement-1656593475547]: 
        beanData: '{"ionBean":"GenericItem"}'
        tagName: ion-item
        ↓AvatarItem [ngx.components.UIDynamicElement-1656593475550]: 
          beanData: '{"ionBean":"Avatar","IonSlot":"plain:start"}'
          tagName: ion-avatar
          ↓Image [ngx.components.UIDynamicElement-1656593475553]: 
            beanData: '{"ionBean":"Image","url":"plain:assets\/images\/svg\/login\/linkedin-logo.svg"}'
            selfClose: true
            tagName: img
            ↓Style [ngx.components.UIStyle-1656593475556]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      'height: 40px !important;
                      width: 40px !important;
                      '
        ↓Attr [ngx.components.UIAttribute-1656593475559]: 
          attrName: 
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:no-lines
        ↓Label [ngx.components.UIDynamicElement-1656593475562]: 
          beanData: '{"ionBean":"Label"}'
          tagName: ion-label
          ↓TextItem [ngx.components.UIDynamicElement-1656593475565]: 
            beanData: '{"ionBean":"TextItem"}'
            tagName: ion-text
            ↓H2 [ngx.components.UIDynamicElement-1656593475568]: 
              beanData: '{"ionBean":"Heading2"}'
              tagName: h2
              ↓Text [ngx.components.UIText-1656593475571]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.global.settings.displayName
              ↓Style [ngx.components.UIStyle-1656593475574]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        display:inline;
                        
          ↓Paragraph [ngx.components.UIDynamicElement-1656593475577]: 
            beanData: '{"ionBean":"Paragraph"}'
            tagName: p
            ↓Text [ngx.components.UIText-1656593475580]: 
              i18n: true
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.global.settings.mail
            ↓Style [ngx.components.UIStyle-1656593475583]: 
↓Tag [ngx.components.UIElement-1647018823225]: 
  identifier: ElseBlock_1602690082828
  tagName: ng-template
  ↓ToolBar [ngx.components.UIDynamicElement-1647018823228]: 
    beanData: '{"ionBean":"ToolBar"}'
    tagName: ion-toolbar
    ↓BarTitle [ngx.components.UIDynamicElement-1647018823231]: 
      beanData: '{"ionBean":"BarTitle"}'
      tagName: ion-title
      ↓Text [ngx.components.UIText-1647018823234]: 
        i18n: true
        textValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:Menu