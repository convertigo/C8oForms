scriptContent: 
  - xmlizable: 
    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
    - com.twinsoft.convertigo.beans.common.FormatedContent: 
      →: |
        /*Begin_c8o_CompImport*/
        /*End_c8o_CompImport*/
        /*Begin_c8o_CompDeclaration*/
        	/*End_c8o_CompDeclaration*/
        /*Begin_c8o_CompConstructor*/
        		/*End_c8o_CompConstructor*/
        /*Begin_c8o_CompInitialization*/
        		/*End_c8o_CompInitialization*/
        /*Begin_c8o_CompFinalization*/
        		/*End_c8o_CompFinalization*/
        /*Begin_c8o_CompFunction*/
        	/*End_c8o_CompFunction*/
        
↓item [ngx.components.UICompVariable-1570465415181]: 
  value: 
↓model [ngx.components.UICompVariable-1570478796726]: 
  value: '{}'
↓redList [ngx.components.UICompVariable-1570486717049]: 
  value: null
↓disabled [ngx.components.UICompVariable-1571231987852]: 
  comment: this.formsSubmit[item['name']]
  value: false
↓Tag [ngx.components.UIElement-1663773854139]: 
  tagName: fieldset
  ↓Tag1 [ngx.components.UIElement-1663773858817]: 
    tagName: legend
    ↓Text [ngx.components.UIText-1663773858820]: 
      textValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:this.pageOwner.removeHTML(this.item.config.html)
  ↓Div [ngx.components.UIDynamicElement-1588839517681]: 
    beanData: '{"ionBean":"DivTag"}'
    identifier: divtext
    tagName: div
    ↓Attr [ngx.components.UIAttribute-1588839517684]: 
      attrName: '[ngClass]'
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: 'script:this.redList != undefined ?  this.redList[this.item.name] == true ? (this.item.config.mandatory && this.item.config.disabled == true) ? [''requiredgregoryvpadding'', ''styledivred''] : ''styledivred'': (this.item.config.mandatory && this.item.config.disabled == true) ? [''requiredgregoryv'', ''styledivnormal''] : ''styledivnormal'': (this.item.config.mandatory && this.item.config.disabled == true) ? [''requiredgregoryv'', ''styledivnormal''] : ''styledivnormal'''
    ↓UseSharedComponent [ngx.components.UIUseShared-1588839517690]: 
      sharedcomponent: C8Oforms.MobileApplication.Application.sharedLabelElem
      ↓item [ngx.components.UIUseVariable-1588839517693]: 
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:this.item
    ↓ListContainer [ngx.components.UIDynamicElement-1588839517687]: 
      beanData: '{"ionBean":"List","Lines":"plain:none"}'
      tagName: ion-list
      ↓Directive [ngx.components.UIControlDirective-1588839517696]: 
        directiveExpression: 'let j = index;trackBy: this.pageOwner.trackById'
        directiveSource: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:let child of this.item.children
        ↓GenericItem [ngx.components.UIDynamicElement-1588839517699]: 
          beanData: |
            '{
             "ionBean": "GenericItem",
             "Lines": "plain:none",
             "ButtonFormType": "plain"
            }'
          tagName: ion-item
          ↓Label [ngx.components.UIDynamicElement-1588839517702]: 
            beanData: '{"ionBean":"Label"}'
            isEnabled: false
            tagName: ion-label
            ↓Attr3 [ngx.components.UIAttribute-1588839517708]: 
              attrName: '[color]'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:(this.item.config.label_color != 'unset')?this.item.config.label_color:null
            ↓Text1 [ngx.components.UIText-1588839517705]: 
              i18n: true
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:child.value
            ↓Attr [ngx.components.UIAttribute-1663775734960]: 
              attrName: '[attr.for]'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:child.value
            ↓Attr1 [ngx.components.UIAttribute-1666285082976]: 
              attrName: '[attr.aria-hidden]'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:false
          ↓Attr [ngx.components.UIAttribute-1588839517726]: 
            attrName: 
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:no-lines
          ↓CheckBox [ngx.components.UIDynamicElement-1588839517729]: 
            beanData: '{"ionBean":"CheckBox","LabelPlacement":"plain:end"}'
            tagName: ion-checkbox
            ↓Attr1 [ngx.components.UIAttribute-1588839517732]: 
              attrName: '[(ngModel)]'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this['model']['children'][j]['selected']
            ↓Attr2 [ngx.components.UIAttribute-1588839517735]: 
              attrName: '*ngIf'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:!this.disabled
            ↓Event [ngx.components.UIControlEvent-1596633461067]: 
              attrName: (ionChange)
              eventName: ionChange
              ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1596633461070]: 
                beanData: '{"ionBean":"InvokeAction"}'
                stack: C8Oforms.MobileApplication.Application.executeGoToPageIfCondition
                ↓item [ngx.components.UIControlVariable-1596633461073]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this.item
                ↓line [ngx.components.UIControlVariable-1596633461076]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:null
                ↓child [ngx.components.UIControlVariable-1596633461079]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:child
                ↓canExec [ngx.components.UIControlVariable-1596633489208]: 
                  comment: this['model']['children'][j]['selected']
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:true
              ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1609768717050]: 
                beanData: '{"ionBean":"InvokeAction"}'
                stack: C8Oforms.MobileApplication.Application.UpdateFunctionsToBeCalledToDataSource
                ↓item [ngx.components.UIControlVariable-1609768717053]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this.item
              ↓ManualTriggerDetectChanges [ngx.components.UICustomAction-1611336646655]: 
                actionValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        		page.ref.detectChanges();
                        		resolve();
                        
            ↓Attr [ngx.components.UIAttribute-1646158151354]: 
              attrName: slot
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:start
            ↓Attr3 [ngx.components.UIAttribute-1663776064664]: 
              attrName: '[attr.id]'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:child.value
            ↓Text1 [ngx.components.UIText-1727962453549]: 
              i18n: true
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:child.value
          ↓Attr2 [ngx.components.UIAttribute-1588839517738]: 
            attrName: '[ngClass]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:'stylegenericcheckboxnormal'
          ↓Event [ngx.components.UIControlEvent-1588839517741]: 
            ↓CustomAction [ngx.components.UICustomAction-1588839517744]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      		;
                      		console.log(vars);
                      		let a = this.formsSubmit[vars.item['name']][vars.child['value']]
                      		resolve();
                      
              isEnabled: false
              ↓item [ngx.components.UIControlVariable-1588839517747]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.item
              ↓child [ngx.components.UIControlVariable-1588839517750]: 
                varValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:child
          ↓Attr1 [ngx.components.UIAttribute-1588839517753]: 
            attrName: '*ngIf'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:!child.other
          ↓CheckBox1 [ngx.components.UIDynamicElement-1588839517756]: 
            beanData: |
              '{
               "ionBean": "CheckBox",
               "Disabled": "script:true",
               "LabelPlacement": "plain:end"
              }'
            tagName: ion-checkbox
            ↓Attr1 [ngx.components.UIAttribute-1588839517759]: 
              attrName: '[(ngModel)]'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.item.children[j].selected
            ↓Attr2 [ngx.components.UIAttribute-1588839517762]: 
              attrName: '*ngIf'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:this.disabled
            ↓Attr3 [ngx.components.UIAttribute-1646158167600]: 
              attrName: slot
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:start
            ↓Text1 [ngx.components.UIText-1727962457017]: 
              i18n: true
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:child.value
          ↓Style [ngx.components.UIStyle-1588839517768]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    	.class1588839517756 {
                    		opacity:1 !important;
                    	}
                    	.class1588839517702 {
                    		opacity:1 !important;
                    	}
                    
                    
          ↓Attr3 [ngx.components.UIAttribute-1588839517771]: 
            attrName: 
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:text-wrap
      ↓Directive1 [ngx.components.UIControlDirective-1588839517774]: 
        comment: adding other element
        directiveExpression: let j = index
        directiveSource: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:let child of this.item.children
        ↓GenericItem1 [ngx.components.UIDynamicElement-1588839517777]: 
          beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
          tagName: ion-item
          ↓DivCheckbox [ngx.components.UIDynamicElement-1588839517780]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓Style [ngx.components.UIStyle-1588839517783]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '	display: inline-block;
                      	margin-left: 4px;
                      	margin-right: 16px;
                      	.class1588839517822{
                      		opacity: 1 !important;
                      	}
                      '
            ↓GenericItem [ngx.components.UIDynamicElement-1588839517786]: 
              beanData: '{"ionBean":"GenericItem"}'
              isEnabled: false
              tagName: ion-item
              ↓Style [ngx.components.UIStyle-1588839517789]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '.checkbox{
                        margin-right:4px !important;
                        }
                        '
            ↓GenericItem1 [ngx.components.UIDynamicElement-1588839517792]: 
              beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
              isEnabled: false
              tagName: ion-item
              ↓Attr [ngx.components.UIAttribute-1588839517795]: 
                attrName: 
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:no-lines
              ↓Attr2 [ngx.components.UIAttribute-1588839517807]: 
                attrName: '[ngClass]'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:'stylegenericcheckboxnormal'
              ↓Event [ngx.components.UIControlEvent-1588839517810]: 
                ↓CustomAction [ngx.components.UICustomAction-1588839517813]: 
                  actionValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          		;
                          		console.log(vars);
                          		let a = this.formsSubmit[vars.item['name']][vars.child['value']]
                          		resolve();
                          
                  isEnabled: false
                  ↓item [ngx.components.UIControlVariable-1588839517816]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:this.item
                  ↓child [ngx.components.UIControlVariable-1588839517819]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:child
              ↓Style [ngx.components.UIStyle-1588839517831]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '	--padding-start:0px;
                        	.item-inner {
                        		//padding-right: 0px !important;
                        	}
                        	.class1588839517822  .class1588839517798{
                        		opacity:1 !important;
                        	}
                        	
                        '
            ↓CheckBox [ngx.components.UIDynamicElement-1588839517798]: 
              beanData: '{"ionBean":"CheckBox","Disabled":"script:this.item.config.disabled"}'
              tagName: ion-checkbox
              ↓Attr1 [ngx.components.UIAttribute-1588839517801]: 
                attrName: '[(ngModel)]'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this['model']['children'][j]['selected']
              ↓Attr2 [ngx.components.UIAttribute-1588839517804]: 
                attrName: '*ngIf'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:!this.disabled
              ↓Event [ngx.components.UIControlEvent-1609768851564]: 
                ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1609768851567]: 
                  beanData: '{"ionBean":"InvokeAction"}'
                  stack: C8Oforms.MobileApplication.Application.executeGoToPageIfCondition
                  ↓item [ngx.components.UIControlVariable-1609768851570]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:this.item
                  ↓line [ngx.components.UIControlVariable-1609768851573]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:null
                  ↓child [ngx.components.UIControlVariable-1609768851576]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:child
                  ↓canExec [ngx.components.UIControlVariable-1609768851579]: 
                    comment: this['model']['children'][j]['selected']
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:true
                ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1609768851582]: 
                  beanData: '{"ionBean":"InvokeAction"}'
                  stack: C8Oforms.MobileApplication.Application.UpdateFunctionsToBeCalledToDataSource
                  ↓item [ngx.components.UIControlVariable-1609768851585]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:this.item
              ↓Style [ngx.components.UIStyle-1646158461023]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '/**
                         * Custom properties (sometimes referred to as CSS variables or cascading variables)
                         * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                         * They are set using custom property notation, e.g.: --main-color: black;
                         * and are accessed using the var() function, e.g.: color: var(--main-color);
                         * You can find below your component''s properties you can customize within the page.
                         * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                         * For more informations see https://ionicframework.com/docs/theming.
                        **/
                        //--background	//Background of the checkbox icon
                        //--background-checked	//Background of the checkbox icon when checked
                        //--border-color	//Border color of the checkbox icon
                        //--border-color-checked	//Border color of the checkbox icon when checked
                        //--border-radius	//Border radius of the checkbox icon
                        //--border-style	//Border style of the checkbox icon
                        //--border-width	//Border width of the checkbox icon
                        //--checkmark-color	//Color of the checkbox checkmark when checked
                        //--checkmark-width	//Stroke width of the checkbox checkmark
                        //--size	//Size of the checkbox icon
                        //--transition	//Transition of the checkbox icon
                        '
            ↓CheckBox1 [ngx.components.UIDynamicElement-1588839517822]: 
              beanData: '{"ionBean":"CheckBox","Disabled":"script:true"}'
              tagName: ion-checkbox
              ↓Attr1 [ngx.components.UIAttribute-1588839517825]: 
                attrName: '[(ngModel)]'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.item.children[j].selected
              ↓Attr2 [ngx.components.UIAttribute-1588839517828]: 
                attrName: '*ngIf'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:this.disabled
              ↓Style [ngx.components.UIStyle-1646158463911]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '/**
                         * Custom properties (sometimes referred to as CSS variables or cascading variables)
                         * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                         * They are set using custom property notation, e.g.: --main-color: black;
                         * and are accessed using the var() function, e.g.: color: var(--main-color);
                         * You can find below your component''s properties you can customize within the page.
                         * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                         * For more informations see https://ionicframework.com/docs/theming.
                        **/
                        //--background	//Background of the checkbox icon
                        //--background-checked	//Background of the checkbox icon when checked
                        //--border-color	//Border color of the checkbox icon
                        //--border-color-checked	//Border color of the checkbox icon when checked
                        //--border-radius	//Border radius of the checkbox icon
                        //--border-style	//Border style of the checkbox icon
                        //--border-width	//Border width of the checkbox icon
                        //--checkmark-color	//Color of the checkbox checkmark when checked
                        //--checkmark-width	//Stroke width of the checkbox checkmark
                        //--size	//Size of the checkbox icon
                        //--transition	//Transition of the checkbox icon
                        '
          ↓Div1 [ngx.components.UIDynamicElement-1588839517837]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓Style [ngx.components.UIStyle-1588839517840]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      'display: inline-block;
                      .item-inner{
                      background-color:unset !important;
                      }
                      .item{
                      background-color:unset !important;
                      }
                      '
            ↓Attr1 [ngx.components.UIAttribute-1588839517843]: 
              attrName: '*ngIf'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:child.other
            ↓GenericItem [ngx.components.UIDynamicElement-1588839517846]: 
              beanData: '{"ionBean":"GenericItem"}'
              tagName: ion-item
              ↓Text [ngx.components.UIText-1588839517849]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:('Other'|translate) + ' :'
              ↓Style [ngx.components.UIStyle-1601455184078]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        'padding-left: 0px !important;
                        '
            ↓Event [ngx.components.UIControlEvent-1588839517852]: 
              ↓setCheckboxSelected [ngx.components.UICustomAction-1588839517855]: 
                actionValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        		vars.params['model']['children'][vars.j]['selected'] = true;
                        		resolve();
                        
                ↓params [ngx.components.UIControlVariable-1588839517858]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this
                ↓j [ngx.components.UIControlVariable-1588839517861]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:j
          ↓DivInput [ngx.components.UIDynamicElement-1588839517864]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓GenericItem [ngx.components.UIDynamicElement-1588839517867]: 
              beanData: '{"ionBean":"GenericItem","Lines":"plain:full"}'
              tagName: ion-item
              ↓TextInput [ngx.components.UIDynamicElement-1588839517870]: 
                beanData: '{"ionBean":"Input","Debounce":"plain:0"}'
                tagName: ion-input
                ↓Attr [ngx.components.UIAttribute-1588839517873]: 
                  attrName: '[(ngModel)]'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this['model']['children'][j]['value']
                ↓Style [ngx.components.UIStyle-1588839517876]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '	.text-input {
                          	opacity: 1 !important;
                          	}
                          
                          '
                ↓Event [ngx.components.UIControlEvent-1588839517879]: 
                  attrName: (ionBlur)
                  eventName: (ionBlur)
                  isEnabled: false
                  ↓If [ngx.components.UIDynamicAction-1588839517882]: 
                    beanData: '{"ionBean":"IfAction","condition":"script:this.redList != undefined"}'
                    ↓CheckNotEmpty [ngx.components.UICustomAction-1588839517885]: 
                      actionValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              		if(vars.item.config.mandatory == true){
                              		    if(event.value == ""){
                              		        vars.redList = true;
                              		        //;
                              		    }
                              		}
                              		resolve();
                              
                      ↓item [ngx.components.UIControlVariable-1588839517888]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:params1570455165983.item
                      ↓redList [ngx.components.UIControlVariable-1588839517891]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:this.redList[params1570455165983.item.name]
                ↓Attr2 [ngx.components.UIAttribute-1588839517894]: 
                  attrName: '[disabled]'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:!this['model']['children'][j]['selected']
                  isEnabled: false
                ↓Event1 [ngx.components.UIControlEvent-1588839517897]: 
                  attrName: (ngModelChange)
                  eventName: (ngModelChange)
                  isEnabled: false
                  ↓If [ngx.components.UIDynamicAction-1588839517900]: 
                    beanData: '{"ionBean":"IfAction","condition":"script:this.redList != undefined"}'
                    ↓CheckFilled [ngx.components.UICustomAction-1588839517903]: 
                      actionValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              		if(vars.item.config.mandatory == true){
                              		    if(event.value != ""){
                              		        vars.item1 = vars.item1 + event;
                              		        vars.redList = false;
                              		    }
                              		}
                              		    //;
                              		resolve();
                              
                      ↓item [ngx.components.UIControlVariable-1588839517906]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:params1570455165983.item
                      ↓redList [ngx.components.UIControlVariable-1588839517909]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:this.redList[params1570455165983.item.name]
                ↓Attr21 [ngx.components.UIAttribute-1588839517912]: 
                  attrName: '*ngIf'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:!this.disabled
              ↓Attr [ngx.components.UIAttribute-1588839517915]: 
                attrName: 
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:no-lines
              ↓TextInput1 [ngx.components.UIDynamicElement-1588839517918]: 
                beanData: '{"ionBean":"Input","Debounce":"plain:0"}'
                tagName: ion-input
                ↓Style [ngx.components.UIStyle-1588839517921]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '	.text-input {
                          	opacity: 1 !important;
                          	}
                          
                          '
                ↓Attr2 [ngx.components.UIAttribute-1588839517924]: 
                  attrName: '*ngIf'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:this.disabled
                ↓Attr21 [ngx.components.UIAttribute-1588839517927]: 
                  attrName: '[disabled]'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:true
            ↓Style [ngx.components.UIStyle-1588839517930]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      'display: inline-block;
                      .item-inner{
                      background-color:unset !important;
                      }
                      .item{
                      background-color:unset !important;
                      }
                      '
            ↓Attr1 [ngx.components.UIAttribute-1588839517933]: 
              attrName: '*ngIf'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:child.other
            ↓Event [ngx.components.UIControlEvent-1588839517936]: 
              ↓setCheckboxSelected [ngx.components.UICustomAction-1588839517939]: 
                actionValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        		vars.params['model']['children'][vars.j]['selected'] = true;
                        		resolve();
                        
                ↓params [ngx.components.UIControlVariable-1588839517942]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this
                ↓j [ngx.components.UIControlVariable-1588839517945]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:j
          ↓Attr1 [ngx.components.UIAttribute-1588839517948]: 
            attrName: '*ngIf'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:child.other
          ↓Attr2 [ngx.components.UIAttribute-1588839517951]: 
            attrName: '[ngClass]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:'stylegenericcheckboxnormal'
          ↓Style [ngx.components.UIStyle-1588839517954]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    '.label {
                    	margin-top: 0px !important;
                    	margin-bottom: 0px !important;
                    }
                    
                    '
        ↓GenericItem11 [ngx.components.UIDynamicElement-1646217119060]: 
          beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
          isEnabled: false
          tagName: ion-item
          ↓DivCheckbox [ngx.components.UIDynamicElement-1646217119063]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓Style [ngx.components.UIStyle-1646217119066]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      'display: inline-block;
                      '
            ↓GenericItem [ngx.components.UIDynamicElement-1646217119069]: 
              beanData: '{"ionBean":"GenericItem"}'
              isEnabled: false
              tagName: ion-item
              ↓Style [ngx.components.UIStyle-1646217119072]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '.checkbox{
                        margin-right:4px !important;
                        }
                        '
            ↓GenericItem1 [ngx.components.UIDynamicElement-1646217119075]: 
              beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
              tagName: ion-item
              ↓Attr [ngx.components.UIAttribute-1646217119078]: 
                attrName: 
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:no-lines
              ↓CheckBox [ngx.components.UIDynamicElement-1646217119081]: 
                beanData: |
                  '{
                   "ionBean": "CheckBox",
                   "ControlName": "plain:name1646217119081",
                   "Disabled": "script:this.item.config.disabled",
                   "IonColor": "script:this.item.config.color"
                  }'
                tagName: ion-checkbox
                ↓Attr1 [ngx.components.UIAttribute-1646217119084]: 
                  attrName: '[(ngModel)]'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this['model']['children'][j]['selected']
                ↓Attr2 [ngx.components.UIAttribute-1646217119087]: 
                  attrName: '*ngIf'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:!this.disabled
                ↓Event [ngx.components.UIControlEvent-1646217119090]: 
                  ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1646217119093]: 
                    beanData: '{"ionBean":"InvokeAction"}'
                    stack: C8Oforms.MobileApplication.Application.executeGoToPageIfCondition
                    ↓item [ngx.components.UIControlVariable-1646217119096]: 
                      varValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:this.item
                    ↓line [ngx.components.UIControlVariable-1646217119099]: 
                      varValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:null
                    ↓child [ngx.components.UIControlVariable-1646217119102]: 
                      varValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:child
                    ↓canExec [ngx.components.UIControlVariable-1646217119105]: 
                      comment: this['model']['children'][j]['selected']
                      varValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:true
                  ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1646217119108]: 
                    beanData: '{"ionBean":"InvokeAction"}'
                    stack: C8Oforms.MobileApplication.Application.UpdateFunctionsToBeCalledToDataSource
                    ↓item [ngx.components.UIControlVariable-1646217119111]: 
                      varValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:this.item
                ↓Style [ngx.components.UIStyle-1646217119114]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '/**
                           * Custom properties (sometimes referred to as CSS variables or cascading variables)
                           * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                           * They are set using custom property notation, e.g.: --main-color: black;
                           * and are accessed using the var() function, e.g.: color: var(--main-color);
                           * You can find below your component''s properties you can customize within the page.
                           * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                           * For more informations see https://ionicframework.com/docs/theming.
                          **/
                          //--background	//Background of the checkbox icon
                          //--background-checked	//Background of the checkbox icon when checked
                          //--border-color	//Border color of the checkbox icon
                          //--border-color-checked	//Border color of the checkbox icon when checked
                          //--border-radius	//Border radius of the checkbox icon
                          //--border-style	//Border style of the checkbox icon
                          //--border-width	//Border width of the checkbox icon
                          //--checkmark-color	//Color of the checkbox checkmark when checked
                          //--checkmark-width	//Stroke width of the checkbox checkmark
                          //--size	//Size of the checkbox icon
                          //--transition	//Transition of the checkbox icon
                          '
              ↓Attr2 [ngx.components.UIAttribute-1646217119117]: 
                attrName: '[ngClass]'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:'stylegenericcheckboxnormal'
              ↓Event [ngx.components.UIControlEvent-1646217119120]: 
                ↓CustomAction [ngx.components.UICustomAction-1646217119123]: 
                  actionValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          		;
                          		console.log(vars);
                          		let a = this.formsSubmit[vars.item['name']][vars.child['value']]
                          		resolve();
                          
                  isEnabled: false
                  ↓item [ngx.components.UIControlVariable-1646217119126]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:this.item
                  ↓child [ngx.components.UIControlVariable-1646217119129]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:child
              ↓CheckBox1 [ngx.components.UIDynamicElement-1646217119132]: 
                beanData: |
                  '{
                   "ionBean": "CheckBox",
                   "ControlName": "plain:name1646217119132",
                   "Disabled": "script:true",
                   "IonColor": "script:this.item.config.color"
                  }'
                tagName: ion-checkbox
                ↓Attr1 [ngx.components.UIAttribute-1646217119135]: 
                  attrName: '[(ngModel)]'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this.item.children[j].selected
                ↓Attr2 [ngx.components.UIAttribute-1646217119138]: 
                  attrName: '*ngIf'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:this.disabled
                ↓Style [ngx.components.UIStyle-1646217119141]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '/**
                           * Custom properties (sometimes referred to as CSS variables or cascading variables)
                           * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                           * They are set using custom property notation, e.g.: --main-color: black;
                           * and are accessed using the var() function, e.g.: color: var(--main-color);
                           * You can find below your component''s properties you can customize within the page.
                           * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                           * For more informations see https://ionicframework.com/docs/theming.
                          **/
                          //--background	//Background of the checkbox icon
                          //--background-checked	//Background of the checkbox icon when checked
                          //--border-color	//Border color of the checkbox icon
                          //--border-color-checked	//Border color of the checkbox icon when checked
                          //--border-radius	//Border radius of the checkbox icon
                          //--border-style	//Border style of the checkbox icon
                          //--border-width	//Border width of the checkbox icon
                          //--checkmark-color	//Color of the checkbox checkmark when checked
                          //--checkmark-width	//Stroke width of the checkbox checkmark
                          //--size	//Size of the checkbox icon
                          //--transition	//Transition of the checkbox icon
                          '
              ↓Style [ngx.components.UIStyle-1646217119144]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '	--padding-start:0px;
                        	.item-inner {
                        		//padding-right: 0px !important;
                        	}
                        	.class1588839517822  .class1588839517798{
                        		opacity:1 !important;
                        	}
                        	
                        '
          ↓Div1 [ngx.components.UIDynamicElement-1646217119147]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓Style [ngx.components.UIStyle-1646217119150]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      'display: inline-block;
                      .item-inner{
                      background-color:unset !important;
                      }
                      .item{
                      background-color:unset !important;
                      }
                      '
            ↓Attr1 [ngx.components.UIAttribute-1646217119153]: 
              attrName: '*ngIf'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:child.other
            ↓GenericItem [ngx.components.UIDynamicElement-1646217119156]: 
              beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
              tagName: ion-item
              ↓Text [ngx.components.UIText-1646217119159]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:('Other'|translate) + ' :'
              ↓Style [ngx.components.UIStyle-1646217119162]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        'padding-left: 0px !important;
                        '
            ↓Event [ngx.components.UIControlEvent-1646217119165]: 
              ↓setCheckboxSelected [ngx.components.UICustomAction-1646217119168]: 
                actionValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        		vars.params['model']['children'][vars.j]['selected'] = true;
                        		resolve();
                        
                ↓params [ngx.components.UIControlVariable-1646217119171]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this
                ↓j [ngx.components.UIControlVariable-1646217119174]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:j
          ↓DivInput [ngx.components.UIDynamicElement-1646217119177]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓GenericItem [ngx.components.UIDynamicElement-1646217119180]: 
              beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
              tagName: ion-item
              ↓TextInput [ngx.components.UIDynamicElement-1646217119183]: 
                beanData: |
                  '{
                   "ionBean": "Input",
                   "ControlName": "plain:name1646217119183",
                   "Debounce": "plain:0"
                  }'
                tagName: ion-input
                ↓Attr [ngx.components.UIAttribute-1646217119186]: 
                  attrName: '[(ngModel)]'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this['model']['children'][j]['value']
                ↓Style [ngx.components.UIStyle-1646217119189]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '	.text-input {
                          	opacity: 1 !important;
                          	}
                          
                          '
                ↓Event [ngx.components.UIControlEvent-1646217119192]: 
                  attrName: (ionBlur)
                  eventName: (ionBlur)
                  isEnabled: false
                  ↓If [ngx.components.UIDynamicAction-1646217119195]: 
                    beanData: '{"ionBean":"IfAction","condition":"script:this.redList != undefined"}'
                    ↓CheckNotEmpty [ngx.components.UICustomAction-1646217119198]: 
                      actionValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              		if(vars.item.config.mandatory == true){
                              		    if(event.value == ""){
                              		        vars.redList = true;
                              		        //;
                              		    }
                              		}
                              		resolve();
                              
                      ↓item [ngx.components.UIControlVariable-1646217119201]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:params1570455165983.item
                      ↓redList [ngx.components.UIControlVariable-1646217119204]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:this.redList[params1570455165983.item.name]
                ↓Attr2 [ngx.components.UIAttribute-1646217119207]: 
                  attrName: '[disabled]'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:!this['model']['children'][j]['selected']
                  isEnabled: false
                ↓Event1 [ngx.components.UIControlEvent-1646217119210]: 
                  attrName: (ngModelChange)
                  eventName: (ngModelChange)
                  isEnabled: false
                  ↓If [ngx.components.UIDynamicAction-1646217119213]: 
                    beanData: '{"ionBean":"IfAction","condition":"script:this.redList != undefined"}'
                    ↓CheckFilled [ngx.components.UICustomAction-1646217119216]: 
                      actionValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              		if(vars.item.config.mandatory == true){
                              		    if(event.value != ""){
                              		        vars.item1 = vars.item1 + event;
                              		        vars.redList = false;
                              		    }
                              		}
                              		    //;
                              		resolve();
                              
                      ↓item [ngx.components.UIControlVariable-1646217119219]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:params1570455165983.item
                      ↓redList [ngx.components.UIControlVariable-1646217119222]: 
                        varValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                            - MobileSmartSourceType: script:this.redList[params1570455165983.item.name]
                ↓Attr21 [ngx.components.UIAttribute-1646217119225]: 
                  attrName: '*ngIf'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:!this.disabled
              ↓Attr [ngx.components.UIAttribute-1646217119228]: 
                attrName: 
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:no-lines
              ↓TextInput1 [ngx.components.UIDynamicElement-1646217119231]: 
                beanData: |
                  '{
                   "ionBean": "Input",
                   "ControlName": "plain:name1646217119231",
                   "Debounce": "plain:0"
                  }'
                tagName: ion-input
                ↓Style [ngx.components.UIStyle-1646217119234]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '	.text-input {
                          	opacity: 1 !important;
                          	}
                          
                          '
                ↓Attr2 [ngx.components.UIAttribute-1646217119237]: 
                  attrName: '*ngIf'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:this.disabled
                ↓Attr21 [ngx.components.UIAttribute-1646217119240]: 
                  attrName: '[disabled]'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: plain:true
            ↓Style [ngx.components.UIStyle-1646217119243]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      'display: inline-block;
                      .item-inner{
                      background-color:unset !important;
                      }
                      .item{
                      background-color:unset !important;
                      }
                      '
            ↓Attr1 [ngx.components.UIAttribute-1646217119246]: 
              attrName: '*ngIf'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:child.other
            ↓Event [ngx.components.UIControlEvent-1646217119249]: 
              ↓setCheckboxSelected [ngx.components.UICustomAction-1646217119252]: 
                actionValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        		vars.params['model']['children'][vars.j]['selected'] = true;
                        		resolve();
                        
                ↓params [ngx.components.UIControlVariable-1646217119255]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this
                ↓j [ngx.components.UIControlVariable-1646217119258]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:j
          ↓Attr1 [ngx.components.UIAttribute-1646217119261]: 
            attrName: '*ngIf'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:child.other
          ↓Attr2 [ngx.components.UIAttribute-1646217119264]: 
            attrName: '[ngClass]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:'stylegenericcheckboxnormal'
          ↓Style [ngx.components.UIStyle-1646217119267]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    '.label {
                    	margin-top: 0px !important;
                    	margin-bottom: 0px !important;
                    }
                    
                    '
      ↓Style [ngx.components.UIStyle-1657205863952]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                'background-color: transparent; --background: transparent;
                '
      ↓Attr2 [ngx.components.UIAttribute-1661953045258]: 
        attrName: '[attr.aria-label]'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:this.pageOwner.removeHTML(this.item.config.html)
    ↓Attr1 [ngx.components.UIAttribute-1588839517969]: 
      attrName: '[attr.id]'
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:this.item.name
    ↓Style [ngx.components.UIStyle-1601980115510]: 
      styleContent: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              position:relative;
              
    ↓Directive2 [ngx.components.UIControlDirective-1658849685406]: 
      directiveName: If
      directiveSource: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: 'script:this.redList != null ? this.redList[this.item.name] : false'
      ↓UseSharedComponent [ngx.components.UIUseShared-1658849685409]: 
        sharedcomponent: C8Oforms.MobileApplication.Application.labelFieldMustBeFilled
        ↓text [ngx.components.UIUseVariable-1658849685412]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'repMandartory'