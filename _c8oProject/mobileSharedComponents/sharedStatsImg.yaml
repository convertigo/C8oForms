↓element [ngx.components.UICompVariable-1581690229073]: 
↓Directive [ngx.components.UIControlDirective-1581690229076]: 
  directiveName: If
  directiveSource: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
      - MobileSmartSourceType: script:this?.element?.type == 'img' || this?.element?.type == 'signature'
  ↓CardContainer [ngx.components.UIDynamicElement-1581690229079]: 
    beanData: '{"ionBean":"Card"}'
    tagName: ion-card
    ↓Style [ngx.components.UIStyle-1581690229082]: 
      styleContent: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              'border-radius: 5px;
              '
    ↓CardHeader [ngx.components.UIDynamicElement-1581690229085]: 
      beanData: '{"ionBean":"CardHeader"}'
      tagName: ion-card-header
      ↓GenericItem [ngx.components.UIDynamicElement-1581690229088]: 
        beanData: '{"ionBean":"GenericItem"}'
        tagName: ion-item
        ↓UseSharedComponent [ngx.components.UIUseShared-1613999554155]: 
          sharedcomponent: C8Oforms_NGX.MobileApplication.Application.SharedHeaderStats
          ↓element [ngx.components.UIUseVariable-1613999554158]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.element
      ↓Style [ngx.components.UIStyle-1581690229103]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                padding-top:0px !important;
                padding-bottom:0px !important;
                
    ↓CardContent [ngx.components.UIDynamicElement-1581690229106]: 
      beanData: '{"ionBean":"CardContent"}'
      tagName: ion-card-content
      ↓Div [ngx.components.UIDynamicElement-1581690229109]: 
        beanData: '{"ionBean":"DivTag"}'
        isEnabled: false
        tagName: div
        ↓Attr [ngx.components.UIAttribute-1581690229112]: 
          attrName: '[ngClass]'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'styledivnormal'
          isEnabled: false
        ↓ListContainer [ngx.components.UIDynamicElement-1581690229115]: 
          beanData: '{"ionBean":"List"}'
          tagName: ion-list
          ↓Directive [ngx.components.UIControlDirective-1581690229118]: 
            directiveIndexName: i
            directiveItemName: item
            directiveSource: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:params1580308950214?.element?.value
            ↓ListItem [ngx.components.UIDynamicElement-1581690229121]: 
              beanData: '{"ionBean":"ListItem"}'
              tagName: ion-item
              ↓Div [ngx.components.UIDynamicElement-1581690229124]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓Paragraph [ngx.components.UIDynamicElement-1581690229127]: 
                  beanData: '{"ionBean":"Paragraph"}'
                  tagName: p
                  ↓Text [ngx.components.UIText-1581690229130]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:item.value
                ↓Style [ngx.components.UIStyle-1581690229133]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          'background-color: #f8f9fa !important;
                          color:#202124 !important;
                          margin-left: 17px;
                          margin-right: 17px;
                          padding-left:2vw;
                          '
        ↓Style [ngx.components.UIStyle-1581690229136]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '
                  margin-left: 17px;
                  margin-right: 17px;
                  .label{
                  margin:0px !important;
                  }
                  '
      ↓ListContainer [ngx.components.UIDynamicElement-1581690229139]: 
        beanData: '{"ionBean":"List"}'
        isEnabled: false
        tagName: ion-list
        ↓Directive [ngx.components.UIControlDirective-1581690229142]: 
          directiveIndexName: i
          directiveItemName: item
          directiveSource: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:params1580308950214?.element?.value
          ↓Directive [ngx.components.UIControlDirective-1581690229145]: 
            directiveName: If
            directiveSource: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:i < 2 ||page.local.show[params1580308950214.element?.name] == true
            ↓ListItem [ngx.components.UIDynamicElement-1581690229148]: 
              beanData: '{"ionBean":"ListItem"}'
              tagName: ion-item
              ↓Div [ngx.components.UIDynamicElement-1581690229151]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓Style [ngx.components.UIStyle-1581690229154]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          color:#202124 !important;
                          
                ↓H2 [ngx.components.UIDynamicElement-1581690229157]: 
                  beanData: '{"ionBean":"Heading2"}'
                  tagName: h2
                  ↓Text [ngx.components.UIText-1581690229160]: 
                    i18n: true
                    textValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:item.value
              ↓Style [ngx.components.UIStyle-1581690229163]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '.input-wrapper{
                        border-radius: 5px;
                        background-color: #f8f9fa !important;
                        margin-left: 5vw;
                        margin-right: 5vw;
                        padding-left:2vw;
                        margin-bottom: 1vh !important;
                        }
                        '
        ↓Style [ngx.components.UIStyle-1581690229166]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '.label{
                  margin: 0 !important;
                  }
                  '
      ↓Directive [ngx.components.UIControlDirective-1581690229169]: 
        directiveName: If
        directiveSource: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:params1580308950214?.element?.value?.length > 2
        isEnabled: false
        ↓Div1 [ngx.components.UIDynamicElement-1581690229172]: 
          beanData: '{"ionBean":"DivTag"}'
          tagName: div
          ↓Style [ngx.components.UIStyle-1581690229175]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    'text-align: center;
                    '
          ↓Directive [ngx.components.UIControlDirective-1581690229178]: 
            directiveName: If
            directiveSource: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:page.pageOwner.local.parami18n.show[params1580308950214?.element?.name] == false
            ↓Button [ngx.components.UIDynamicElement-1581690229181]: 
              beanData: '{"ionBean":"Button","IonSize":"plain:large"}'
              tagName: ion-button
              ↓Icon [ngx.components.UIDynamicElement-1581690229184]: 
                beanData: '{"ionBean":"Icon","IconName":"plain:arrow-dropdown-circle"}'
                tagName: ion-icon
              ↓Style [ngx.components.UIStyle-1581690229187]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        'display: block; margin: 0 auto;
                        '
              ↓Event [ngx.components.UIControlEvent-1581690229190]: 
                ↓CustomAction [ngx.components.UICustomAction-1581690229193]: 
                  actionValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          		page.pageOwner.local.parami18n.show[vars.name] = true;
                          		resolve();
                          
                  ↓name [ngx.components.UIControlVariable-1581690229196]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:params1580308950214?.element?.name
          ↓Directive1 [ngx.components.UIControlDirective-1581690229199]: 
            directiveName: If
            directiveSource: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:page.pageOwner.local.parami18n.show[params1580308950214?.element?.name] == true
            ↓Button [ngx.components.UIDynamicElement-1581690229202]: 
              beanData: '{"ionBean":"Button","IonSize":"plain:large"}'
              tagName: ion-button
              ↓Icon [ngx.components.UIDynamicElement-1581690229205]: 
                beanData: '{"ionBean":"Icon","IconName":"plain:arrow-dropup-circle"}'
                tagName: ion-icon
              ↓Style [ngx.components.UIStyle-1581690229208]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        'display: block; margin: 0 auto;
                        '
              ↓Event [ngx.components.UIControlEvent-1581690229211]: 
                ↓CustomAction [ngx.components.UICustomAction-1581690229214]: 
                  actionValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          		page.pageOwner.local.parami18n.show[vars.name] = false;
                          		resolve();
                          
                  ↓name [ngx.components.UIControlVariable-1581690229217]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:params1580308950214?.element?.name
      ↓Grid [ngx.components.UIDynamicElement-1581690229220]: 
        beanData: '{"ionBean":"Grid"}'
        isEnabled: false
        tagName: ion-grid
        ↓GridRow [ngx.components.UIDynamicElement-1581690229223]: 
          beanData: |
            '{
             "ionBean": "GridRow",
             "FlexJustifyContent": "plain:ion-justify-content-center",
             "FlexAlignement": "plain:ion-align-items-center"
            }'
          tagName: ion-row
          ↓GridCol [ngx.components.UIDynamicElement-1581690229226]: 
            beanData: |
              '{
               "ionBean": "GridCol",
               "FlexAlignement": "plain:ion-align-self-center",
               "Size": "plain:2"
              }'
            tagName: ion-col
            ↓Button [ngx.components.UIDynamicElement-1581690229229]: 
              beanData: '{"ionBean":"Button","IonSize":"plain:large"}'
              tagName: ion-button
              ↓Icon [ngx.components.UIDynamicElement-1581690229232]: 
                beanData: '{"ionBean":"Icon","IconName":"plain:arrow-dropdown-circle"}'
                tagName: ion-icon
      ↓SlidesContainer [ngx.components.UIDynamicElement-1581690332817]: 
        beanData: '{"ionBean":"Slides"}'
        tagName: ion-slides
        ↓Directive [ngx.components.UIControlDirective-1581690341159]: 
          directiveIndexName: i
          directiveItemName: item
          directiveSource: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:this?.element?.value
          ↓SlideItem [ngx.components.UIDynamicElement-1581690364142]: 
            beanData: '{"ionBean":"Slide"}'
            tagName: ion-slide
            ↓Directive [ngx.components.UIControlDirective-1633560577492]: 
              directiveName: If
              directiveSource: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:item.att_type == true
              ↓FSImage [ngx.components.UIDynamicElement-1633560567293]: 
                beanData: |
                  '{
                   "ionBean": "FSImage",
                   "docid": "script:item.id",
                   "attachment": "script:item.name",
                   "requestable": "plain:C8Oforms_NGX.c8oforms_response_fs"
                  }'
                selfClose: true
                tagName: img
            ↓Directive1 [ngx.components.UIControlDirective-1633560603418]: 
              directiveName: If
              directiveSource: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:item.att_type != true
              ↓Image [ngx.components.UIDynamicElement-1581690384892]: 
                beanData: '{"ionBean":"Image","url":"script:item.type == ''img'' ? ''data:image\/jpeg;base64,''+item.value : item.value"}'
                selfClose: true
                tagName: img
        ↓Style [ngx.components.UIStyle-1581690575410]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  'text-align: center;
                  img{
                    height: 30vh;
                    width: auto;
                    margin: auto;
                    display: block;
                  }
                  '