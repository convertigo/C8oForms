scriptContent: 
  - xmlizable: 
    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
    - com.twinsoft.convertigo.beans.common.FormatedContent: 
      →: |
        /*Begin_c8o_CompImport*/
        /*End_c8o_CompImport*/
        /*Begin_c8o_CompDeclaration*/
        	/*End_c8o_CompDeclaration*/
        /*Begin_c8o_CompConstructor*/
        		/*End_c8o_CompConstructor*/
        /*Begin_c8o_CompInitialization*/
        		/*End_c8o_CompInitialization*/
        /*Begin_c8o_CompFinalization*/
        		/*End_c8o_CompFinalization*/
        /*Begin_c8o_CompChanges*/
        		/*End_c8o_CompChanges*/
        /*Begin_c8o_CompDoCheck*/
        		/*End_c8o_CompDoCheck*/
        /*Begin_c8o_CompAfterContentInit*/
        		/*End_c8o_CompAfterContentInit*/
        /*Begin_c8o_CompAfterContentChecked*/
        		/*End_c8o_CompAfterContentChecked*/
        /*Begin_c8o_CompAfterViewInit*/
        		/*End_c8o_CompAfterViewInit*/
        /*Begin_c8o_CompAfterViewChecked*/
        		/*End_c8o_CompAfterViewChecked*/
        /*Begin_c8o_CompFunction*/
        	showDisplayValue(val){
        		if(val != undefined){
        			let day = val.substring(8,10);
        			let month = val.substring(5,7);
        			let year = val.substring(0,4);
        			switch(this.item.config.display_format){
        				case "MM/DD/YY":
        					return month + "/" + day + "/" + year.substring(2);
        				break;
        				case "DD/MM/YY":
        					return day + "/" + month + "/" + year.substring(2);
        				break;
        				case "MM/DD/YYYY":
        					return month + "/" + day + "/" + year;
        				break;
        				case "DD/MM/YYYY":
        					return day + "/" + month + "/" + year
        				break;
        				case "YYYY/MM/DD":
        					return year + "/" + month + "/" + day
        				break;
        				default:
        					return val;
        			}
        		}
        		else{
        			return "";
        		}
        	}
        	/*End_c8o_CompFunction*/
        
↓item [ngx.components.UICompVariable-1571406887208]: 
  value: 
↓idselected [ngx.components.UICompVariable-1571406887211]: 
  value: 
↓isChild [ngx.components.UICompVariable-1571845648670]: 
  value: false
↓UseSharedComponent1 [ngx.components.UIUseShared-1588847587532]: 
  sharedcomponent: C8Oforms.MobileApplication.Application.sharedQuestionElem
  ↓item [ngx.components.UIUseVariable-1588847587535]: 
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:this.item
↓GenericItem [ngx.components.UIDynamicElement-1588847587538]: 
  beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
  tagName: ion-item
  ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138325]: 
    beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-uppercase"}'
    comment: FormatLayout
    tagName: div
  ↓Style [ngx.components.UIStyle-1588847587544]: 
    styleContent: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            'color: #ff8206;
              font-size: 14px;
              font-weight: 600;
              font-style: normal;
              font-stretch: normal;
              line-height: normal;
              letter-spacing: normal;
            '
  ↓Text1 [ngx.components.UIText-1588847587547]: 
    textValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:'style_date' | translate
  ↓Style1 [ngx.components.UIStyle-1588847587550]: 
    styleContent: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            '	.label{
            		margin-top: 0px !important;	
            		margin-bottom: 0px !important;	
            	}
            '
↓GridRowDisplaySettings [ngx.components.UIDynamicElement-1588847587553]: 
  beanData: '{"ionBean":"GridRow"}'
  tagName: ion-row
  ↓GridColDisplayFormat [ngx.components.UIDynamicElement-1658753500273]: 
    beanData: '{"ionBean":"GridCol","Size":"plain:12"}'
    tagName: ion-col
    ↓GenericItem1 [ngx.components.UIDynamicElement-1658753500300]: 
      beanData: '{"ionBean":"GenericItem","Lines":"plain:inset"}'
      tagName: ion-item
      ↓Attr [ngx.components.UIAttribute-1658753500303]: 
        attrName: 
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:no-lines
      ↓Attr1 [ngx.components.UIAttribute-1658753500306]: 
        attrName: '[class.item-label-stacked]'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:true
      ↓Style [ngx.components.UIStyle-1658753500309]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '	&:hover{
                		cursor:pointer;
                	}
                	ion-input:hover{
                		cursor:pointer;
                	}
                background-color: transparent;
                	.label{
                		opacity:1 !important;
                	}
                	.datetime{
                		opacity:1 !important;
                	}
                	.class1570476475379 {
                		opacity:1 !important;
                	}
                '
      ↓Attr21 [ngx.components.UIAttribute-1658753500312]: 
        attrName: '[ngClass]'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: 'script:this.redList ? ''stylegenerictextred'': ''stylegenerictextnormal'''
        isEnabled: false
      ↓Label [ngx.components.UIDynamicElement-1658753500315]: 
        beanData: '{"ionBean":"Label","Position":"plain:stacked"}'
        tagName: ion-label
        ↓FormatLayout [ngx.components.UIDynamicAttr-1658753500318]: 
          beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-capitalize"}'
          comment: FormatLayout
          tagName: div
        ↓Style [ngx.components.UIStyle-1658753500321]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  'color: var(--ion-color-primary);
                  '
        ↓Text [ngx.components.UIText-1658753500324]: 
          i18n: true
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:displayformat
      ↓Attr3 [ngx.components.UIAttribute-1658753500351]: 
        attrName: '[ngClass]'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:'stylegenerictexteditor'
      ↓SelectContainer [ngx.components.UIDynamicElement-1658753597954]: 
        beanData: |
          '{
           "ionBean": "Select",
           "ControlName": "plain:name1658753597954",
           "DoubleBinding": "script:this.item.config.display_format"
          }'
        tagName: ion-select
        ↓SelectOption [ngx.components.UIDynamicElement-1658753601722]: 
          beanData: '{"ionBean":"SelectOption","Value":"plain:MM\/DD\/YY"}'
          tagName: ion-select-option
          ↓Text [ngx.components.UIText-1658753774358]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:MM_DD_YY
        ↓SelectOption1 [ngx.components.UIDynamicElement-1658753753412]: 
          beanData: '{"ionBean":"SelectOption","Value":"plain:DD\/MM\/YY"}'
          tagName: ion-select-option
          ↓Text [ngx.components.UIText-1658753780391]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:DD_MM_YY
        ↓SelectOption2 [ngx.components.UIDynamicElement-1658753848247]: 
          beanData: '{"ionBean":"SelectOption","Value":"plain:MM\/DD\/YYYY"}'
          tagName: ion-select-option
          ↓Text [ngx.components.UIText-1658753848250]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:MM_DD_YYYY
        ↓SelectOption3 [ngx.components.UIDynamicElement-1658753851610]: 
          beanData: '{"ionBean":"SelectOption","Value":"plain:DD\/MM\/YYYY"}'
          tagName: ion-select-option
          ↓Text [ngx.components.UIText-1658753851613]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:DD_MM_YYYY
        ↓SelectOption4 [ngx.components.UIDynamicElement-1658753857266]: 
          beanData: '{"ionBean":"SelectOption","Value":"plain:YYYY\/MM\/DD"}'
          tagName: ion-select-option
          ↓Text [ngx.components.UIText-1658753857269]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:YYYY_MM_DD
        ↓Event [ngx.components.UIControlEvent-1658756275827]: 
          attrName: (ngModelChange)
          eventName: (ngModelChange)
          ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1658756308438]: 
            beanData: '{"ionBean":"InvokeAction"}'
            stack: C8Oforms.MobileApplication.Application.detectChanges
            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1658756308441]: 
              beanData: '{"ionBean":"InvokeAction"}'
              stack: C8Oforms.MobileApplication.Application.updateState
  ↓GridColMinDate [ngx.components.UIDynamicElement-1588847587736]: 
    beanData: |
      '{
       "ionBean": "GridCol",
       "SizeLg": "plain:6",
       "SizeXl": "plain:6"
      }'
    tagName: ion-col
    ↓PopoverMin [ngx.components.UIDynamicElement-1658744859986]: 
      beanData: |
        '{
         "ionBean": "InlinePopover",
         "Side": "plain:top",
         "Size": "plain:auto",
         "Trigger": "script:''date_'' + this.item.name + ''min''"
        }'
      tagName: ion-popover
      ↓DateTime1 [ngx.components.UIDynamicElement-1658744859989]: 
        beanData: |
          '{
           "ionBean": "DateTime",
           "ControlName": "plain:name1658744859989",
           "CancelText": "script:this.translate.instant(''Cancel'')",
           "DoneText": "plain:Ok",
           "Min": "plain:1000",
           "Max": "script:this.item.config.max_datetime",
           "Presentation": "plain:date",
           "ShowDefaultButtons": "plain:true",
           "Size": "plain:cover"
          }'
        tagName: ion-datetime
        ↓Attr [ngx.components.UIAttribute-1658744859992]: 
          attrName: '[ngModel]'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:this.item.config.min_datetime
        ↓Event [ngx.components.UIControlEvent-1658744860001]: 
          attrName: (ngModelChange)
          eventName: (ngModelChange)
          ↓setVal [ngx.components.UICustomAction-1658744860004]: 
            actionValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    		page.item.config.min_datetime = event.substring(0, 10)
                    		resolve();
                    
            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1658752441459]: 
              beanData: '{"ionBean":"InvokeAction"}'
              stack: C8Oforms.MobileApplication.Application.detectChanges
              ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1658752553278]: 
                beanData: '{"ionBean":"InvokeAction"}'
                stack: C8Oforms.MobileApplication.Application.updateState
      ↓Style [ngx.components.UIStyle-1658744860037]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '/**
                 * Custom properties (sometimes referred to as CSS variables or cascading variables)
                 * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                 * They are set using custom property notation, e.g.: --main-color: black;
                 * and are accessed using the var() function, e.g.: color: var(--main-color);
                 * You can find below your component''s properties you can customize within the page.
                 * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                 * For more informations see https://ionicframework.com/docs/theming.
                **/
                //--backdrop-opacity	//Opacity of the backdrop
                //--background	//Background of the popover
                //--box-shadow	//Box shadow of the popover
                //--height	//Height of the popover
                //--max-height	//Maximum height of the popover
                //--max-width	//Maximum width of the popover
                --min-height: 392px;	//Minimum height of the popover
                
                //--min-width	//Minimum width of the popover
                //--offset-x	//The amount to move the popover by on the x-axis
                //--offset-y	//The amount to move the popover by on the y-axis
                //--width	//Width of the popover
                '
    ↓GenericItem1 [ngx.components.UIDynamicElement-1658744678444]: 
      beanData: '{"ionBean":"GenericItem","Lines":"plain:inset"}'
      tagName: ion-item
      ↓Attr [ngx.components.UIAttribute-1658744678447]: 
        attrName: 
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:no-lines
      ↓Attr1 [ngx.components.UIAttribute-1658744678450]: 
        attrName: '[class.item-label-stacked]'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:true
      ↓Style [ngx.components.UIStyle-1658744678453]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '	&:hover{
                		cursor:pointer;
                	}
                	ion-input:hover{
                		cursor:pointer;
                	}
                background-color: transparent;
                	.label{
                		opacity:1 !important;
                	}
                	.datetime{
                		opacity:1 !important;
                	}
                	.class1570476475379 {
                		opacity:1 !important;
                	}
                '
      ↓Attr21 [ngx.components.UIAttribute-1658744678456]: 
        attrName: '[ngClass]'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: 'script:this.redList ? ''stylegenerictextred'': ''stylegenerictextnormal'''
        isEnabled: false
      ↓Label [ngx.components.UIDynamicElement-1658752080238]: 
        beanData: '{"ionBean":"Label","Position":"plain:stacked"}'
        tagName: ion-label
        ↓FormatLayout [ngx.components.UIDynamicAttr-1658752080241]: 
          beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-capitalize"}'
          comment: FormatLayout
          tagName: div
        ↓Style [ngx.components.UIStyle-1658752080244]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  'color: var(--ion-color-primary);
                  '
        ↓Text [ngx.components.UIText-1658752080247]: 
          i18n: true
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'minimumdate' | translate
      ↓TextInput [ngx.components.UIDynamicElement-1658744678459]: 
        beanData: |
          '{
           "ionBean": "Input",
           "ControlName": "plain:name1657206422909",
           "Debounce": "plain:0",
           "Placeholder": "script:this.item.config.picker_format == ''MM\/DD\/YY'' ? (''MM_DD_YY'' | translate) : this.item.config.picker_format == ''DD\/MM\/YY'' ? (''DD_MM_YY'' | translate) : this.item.config.picker_format == ''MM\/DD\/YYYY'' ? (''MM_DD_YYYY'' | translate) : this.item.config.picker_format == ''DD\/MM\/YYYY'' ? (''DD_MM_YYYY'' | translate) : this.item.config.picker_format == ''DDDD MMMM D, YYYY'' ? (''DDDD_MMMM_D__YYYY'' | translate) : this.item.config.picker_format == ''DDDD D MMMM YYYY'' ? (''DDDD_D_MMMMM_YYYY'' | translate) : ''''",
           "Readonly": "plain:true",
           "Type": "plain"
          }'
        tagName: ion-input
        ↓Attr [ngx.components.UIAttribute-1658744678462]: 
          attrName: '[ngModel]'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:this.showDisplayValue(this.item.config.min_datetime)
        ↓Style [ngx.components.UIStyle-1658744678465]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '/**
                   * Custom properties (sometimes referred to as CSS variables or cascading variables)
                   * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                   * They are set using custom property notation, e.g.: --main-color: black;
                   * and are accessed using the var() function, e.g.: color: var(--main-color);
                   * You can find below your component''s properties you can customize within the page.
                   * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                   * For more informations see https://ionicframework.com/docs/theming.
                  **/
                  //--background	//Background of the input
                  //--color	//Color of the input text
                  //--padding-bottom	//Bottom padding of the input
                  //--padding-end	//Right padding if direction is left-to-right, and left padding if direction is right-to-left of the input
                  //--padding-start	//Left padding if direction is left-to-right, and right padding if direction is right-to-left of the input
                  //--padding-top	//Top padding of the input
                  //--placeholder-color	//Color of the input placeholder text
                  //--placeholder-font-style	//Font style of the input placeholder text
                  //--placeholder-font-weight	//Font weight of the input placeholder text
                  //--placeholder-opacity	//Opacity of the input placeholder text
                  max-width: 120px !important;
                  &:hover{
                  	cursor:pointer;
                  }
                  '
      ↓Button [ngx.components.UIDynamicElement-1658744678468]: 
        beanData: |
          '{
           "ionBean": "Button",
           "IonColor": "plain:convertigo",
           "IonFill": "plain:clear",
           "IonSize": "plain:default",
           "IconSlot": "plain:end"
          }'
        tagName: ion-button
        ↓Event [ngx.components.UIControlEvent-1658744678471]: 
        ↓Icon [ngx.components.UIDynamicElement-1658744678474]: 
          beanData: |
            '{
             "ionBean": "Icon",
             "IconName": "plain:calendar-outline",
             "IconSlot": "plain:icon-only"
            }'
          tagName: ion-icon
        ↓FormatLayout [ngx.components.UIDynamicAttr-1658744678477]: 
          beanData: '{"ionBean":"FormatLayout","FlexItemAlignment":"plain:ion-align-self-center"}'
          selfClose: false
      ↓Attr2 [ngx.components.UIAttribute-1658744678480]: 
        attrName: '[id]'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:'date_' + this.item.name + 'min'
      ↓Attr3 [ngx.components.UIAttribute-1658744690388]: 
        attrName: '[ngClass]'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:'stylegenerictexteditor'
      ↓Attr4 [ngx.components.UIAttribute-1658751805980]: 
        attrName: '*ngIf'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:this.item.config.date_less_than_today != true
  ↓GridColMaxDate [ngx.components.UIDynamicElement-1588847587697]: 
    beanData: |
      '{
       "ionBean": "GridCol",
       "SizeLg": "plain:6",
       "SizeXl": "plain:6"
      }'
    tagName: ion-col
    ↓PopoverMax [ngx.components.UIDynamicElement-1658751963875]: 
      beanData: |
        '{
         "ionBean": "InlinePopover",
         "Side": "plain:top",
         "Size": "plain:auto",
         "Trigger": "script:''date_'' + this.item.name + ''max''"
        }'
      tagName: ion-popover
      ↓DateTime1 [ngx.components.UIDynamicElement-1658751963878]: 
        beanData: |
          '{
           "ionBean": "DateTime",
           "ControlName": "plain:name1658744859989",
           "CancelText": "script:this.translate.instant(''Cancel'')",
           "DoneText": "plain:Ok",
           "Min": "script:this.item.config.min_datetime",
           "Max": "plain:3000",
           "Presentation": "plain:date",
           "ShowDefaultButtons": "plain:true",
           "Size": "plain:cover"
          }'
        tagName: ion-datetime
        ↓Attr [ngx.components.UIAttribute-1658751963881]: 
          attrName: '[ngModel]'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:this.item.config.max_datetime
        ↓Event [ngx.components.UIControlEvent-1658751963884]: 
          attrName: (ngModelChange)
          eventName: (ngModelChange)
          ↓setVal [ngx.components.UICustomAction-1658751963887]: 
            actionValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    		page.item.config.max_datetime = event.substring(0, 10)
                    		resolve();
                    
            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1658752373793]: 
              beanData: '{"ionBean":"InvokeAction"}'
              stack: C8Oforms.MobileApplication.Application.detectChanges
              ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1658752575212]: 
                beanData: '{"ionBean":"InvokeAction"}'
                stack: C8Oforms.MobileApplication.Application.updateState
      ↓Style [ngx.components.UIStyle-1658751963890]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '/**
                 * Custom properties (sometimes referred to as CSS variables or cascading variables)
                 * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                 * They are set using custom property notation, e.g.: --main-color: black;
                 * and are accessed using the var() function, e.g.: color: var(--main-color);
                 * You can find below your component''s properties you can customize within the page.
                 * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                 * For more informations see https://ionicframework.com/docs/theming.
                **/
                //--backdrop-opacity	//Opacity of the backdrop
                //--background	//Background of the popover
                //--box-shadow	//Box shadow of the popover
                //--height	//Height of the popover
                //--max-height	//Maximum height of the popover
                //--max-width	//Maximum width of the popover
                --min-height: 392px;	//Minimum height of the popover
                
                //--min-width	//Minimum width of the popover
                //--offset-x	//The amount to move the popover by on the x-axis
                //--offset-y	//The amount to move the popover by on the y-axis
                //--width	//Width of the popover
                '
    ↓GenericItem1 [ngx.components.UIDynamicElement-1658751944902]: 
      beanData: '{"ionBean":"GenericItem","Lines":"plain:inset"}'
      tagName: ion-item
      ↓Attr [ngx.components.UIAttribute-1658751944905]: 
        attrName: 
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:no-lines
      ↓Attr1 [ngx.components.UIAttribute-1658751944908]: 
        attrName: '[class.item-label-stacked]'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:true
      ↓Style [ngx.components.UIStyle-1658751944911]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '	&:hover{
                		cursor:pointer;
                	}
                	ion-input:hover{
                		cursor:pointer;
                	}
                background-color: transparent;
                	.label{
                		opacity:1 !important;
                	}
                	.datetime{
                		opacity:1 !important;
                	}
                	.class1570476475379 {
                		opacity:1 !important;
                	}
                '
      ↓Attr21 [ngx.components.UIAttribute-1658751944914]: 
        attrName: '[ngClass]'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: 'script:this.redList ? ''stylegenerictextred'': ''stylegenerictextnormal'''
        isEnabled: false
      ↓Label [ngx.components.UIDynamicElement-1588847587703]: 
        beanData: '{"ionBean":"Label","Position":"plain:stacked"}'
        tagName: ion-label
        ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138335]: 
          beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-capitalize"}'
          comment: FormatLayout
          tagName: div
        ↓Style [ngx.components.UIStyle-1588847587709]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  'color: var(--ion-color-primary);
                  '
        ↓Text [ngx.components.UIText-1588847587712]: 
          i18n: true
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'maxdatetime' | translate
      ↓TextInput [ngx.components.UIDynamicElement-1658751944917]: 
        beanData: |
          '{
           "ionBean": "Input",
           "ControlName": "plain:name1657206422909",
           "Debounce": "plain:0",
           "Placeholder": "script:this.item.config.picker_format == ''MM\/DD\/YY'' ? (''MM_DD_YY'' | translate) : this.item.config.picker_format == ''DD\/MM\/YY'' ? (''DD_MM_YY'' | translate) : this.item.config.picker_format == ''MM\/DD\/YYYY'' ? (''MM_DD_YYYY'' | translate) : this.item.config.picker_format == ''DD\/MM\/YYYY'' ? (''DD_MM_YYYY'' | translate) : this.item.config.picker_format == ''DDDD MMMM D, YYYY'' ? (''DDDD_MMMM_D__YYYY'' | translate) : this.item.config.picker_format == ''DDDD D MMMM YYYY'' ? (''DDDD_D_MMMMM_YYYY'' | translate) : ''''",
           "Readonly": "plain:true",
           "Type": "plain"
          }'
        tagName: ion-input
        ↓Attr [ngx.components.UIAttribute-1658751944920]: 
          attrName: '[ngModel]'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:this.showDisplayValue(this.item.config.max_datetime)
        ↓Style [ngx.components.UIStyle-1658751944923]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '/**
                   * Custom properties (sometimes referred to as CSS variables or cascading variables)
                   * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                   * They are set using custom property notation, e.g.: --main-color: black;
                   * and are accessed using the var() function, e.g.: color: var(--main-color);
                   * You can find below your component''s properties you can customize within the page.
                   * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                   * For more informations see https://ionicframework.com/docs/theming.
                  **/
                  //--background	//Background of the input
                  //--color	//Color of the input text
                  //--padding-bottom	//Bottom padding of the input
                  //--padding-end	//Right padding if direction is left-to-right, and left padding if direction is right-to-left of the input
                  //--padding-start	//Left padding if direction is left-to-right, and right padding if direction is right-to-left of the input
                  //--padding-top	//Top padding of the input
                  //--placeholder-color	//Color of the input placeholder text
                  //--placeholder-font-style	//Font style of the input placeholder text
                  //--placeholder-font-weight	//Font weight of the input placeholder text
                  //--placeholder-opacity	//Opacity of the input placeholder text
                  max-width: 120px !important;
                  &:hover{
                  	cursor:pointer;
                  }
                  '
      ↓Button [ngx.components.UIDynamicElement-1658751944926]: 
        beanData: |
          '{
           "ionBean": "Button",
           "IonColor": "plain:convertigo",
           "IonFill": "plain:clear",
           "IonSize": "plain:default",
           "IconSlot": "plain:end"
          }'
        tagName: ion-button
        ↓Icon [ngx.components.UIDynamicElement-1658751944932]: 
          beanData: |
            '{
             "ionBean": "Icon",
             "IconName": "plain:calendar-outline",
             "IconSlot": "plain:icon-only"
            }'
          tagName: ion-icon
        ↓FormatLayout [ngx.components.UIDynamicAttr-1658751944935]: 
          beanData: '{"ionBean":"FormatLayout","FlexItemAlignment":"plain:ion-align-self-center"}'
          selfClose: false
      ↓Attr2 [ngx.components.UIAttribute-1658751944938]: 
        attrName: '[id]'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:'date_' + this.item.name + 'max'
      ↓Attr3 [ngx.components.UIAttribute-1658751944941]: 
        attrName: '[ngClass]'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:'stylegenerictexteditor'
      ↓Attr4 [ngx.components.UIAttribute-1658751944944]: 
        attrName: '*ngIf'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:this.item.config.date_more_than_today != true
  ↓GridColNotLessThanToday [ngx.components.UIDynamicElement-1641220569722]: 
    beanData: |
      '{
       "ionBean": "GridCol",
       "SizeLg": "plain:6",
       "SizeXl": "plain:6"
      }'
    tagName: ion-col
    ↓GenericItem [ngx.components.UIDynamicElement-1641220676470]: 
      beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
      tagName: ion-item
      ↓Label [ngx.components.UIDynamicElement-1641220676473]: 
        beanData: '{"ionBean":"Label"}'
        tagName: ion-label
        ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138338]: 
          beanData: '{"ionBean":"FormatLayout"}'
          comment: FormatLayout
          tagName: div
        ↓Text [ngx.components.UIText-1641220676479]: 
          i18n: true
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:date_less_than_today
      ↓ToggleButton [ngx.components.UIDynamicElement-1641220676482]: 
        beanData: '{"ionBean":"Toggle"}'
        tagName: ion-toggle
        ↓Event [ngx.components.UIControlEvent-1641220676488]: 
          attrName: (ngModelChange)
          eventName: (ngModelChange)
          ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1641220676497]: 
            beanData: '{"ionBean":"InvokeAction"}'
            stack: C8Oforms.MobileApplication.Application.updateState
            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1641220676500]: 
              beanData: '{"ionBean":"InvokeAction"}'
              stack: C8Oforms.MobileApplication.Application.tick
        ↓Attr1 [ngx.components.UIAttribute-1641220676503]: 
          attrName: slot
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:start
        ↓Attr2 [ngx.components.UIAttribute-1641221091061]: 
          attrName: '[(ngModel)]'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:this.item.config.date_less_than_today
  ↓GridColNotMoreThanToday [ngx.components.UIDynamicElement-1641220569782]: 
    beanData: |
      '{
       "ionBean": "GridCol",
       "SizeLg": "plain:6",
       "SizeXl": "plain:6"
      }'
    tagName: ion-col
    ↓GenericItem [ngx.components.UIDynamicElement-1641221327541]: 
      beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
      tagName: ion-item
      ↓Label [ngx.components.UIDynamicElement-1641221327544]: 
        beanData: '{"ionBean":"Label"}'
        tagName: ion-label
        ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138340]: 
          beanData: '{"ionBean":"FormatLayout"}'
          comment: FormatLayout
          tagName: div
        ↓Text [ngx.components.UIText-1641221327550]: 
          i18n: true
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:date_more_than_today
      ↓ToggleButton [ngx.components.UIDynamicElement-1641221327553]: 
        beanData: '{"ionBean":"Toggle"}'
        tagName: ion-toggle
        ↓Event [ngx.components.UIControlEvent-1641221327556]: 
          attrName: (ngModelChange)
          eventName: (ngModelChange)
          ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1641221327559]: 
            beanData: '{"ionBean":"InvokeAction"}'
            stack: C8Oforms.MobileApplication.Application.updateState
            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1641221327562]: 
              beanData: '{"ionBean":"InvokeAction"}'
              stack: C8Oforms.MobileApplication.Application.tick
        ↓Attr1 [ngx.components.UIAttribute-1641221327565]: 
          attrName: slot
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:start
        ↓Attr2 [ngx.components.UIAttribute-1641221327568]: 
          attrName: '[(ngModel)]'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:this.item.config.date_more_than_today
↓Directive1 [ngx.components.UIControlDirective-1623856242902]: 
  directiveName: If
  directiveSource: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
      - MobileSmartSourceType: script:this.pageOwner.local.advancedEditing
  ↓GridRowTitleOptions [ngx.components.UIDynamicElement-1588847587775]: 
    beanData: '{"ionBean":"GridRow"}'
    tagName: ion-row
    ↓GenericItemTitleOption [ngx.components.UIDynamicElement-1588847587778]: 
      beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
      tagName: ion-item
      ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138342]: 
        beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-uppercase"}'
        comment: FormatLayout
        tagName: div
      ↓Style [ngx.components.UIStyle-1588847587784]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                'color: #ff8206;
                  font-size: 14px;
                  font-weight: 600;
                  font-style: normal;
                  font-stretch: normal;
                  line-height: normal;
                  letter-spacing: normal;
                '
      ↓Text1 [ngx.components.UIText-1588847587787]: 
        i18n: true
        textValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:option
      ↓Style1 [ngx.components.UIStyle-1588847587790]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '	.label{
                		margin-top: 0px !important;	
                		margin-bottom: 0px !important;	
                	}
                '
  ↓GridRowMandatory [ngx.components.UIDynamicElement-1588847587793]: 
    beanData: '{"ionBean":"GridRow"}'
    tagName: ion-row
    ↓GridColMandatory [ngx.components.UIDynamicElement-1662650854925]: 
      beanData: |
        '{
         "ionBean": "GridCol",
         "SizeLg": "plain:6",
         "SizeXl": "plain:6"
        }'
      tagName: ion-col
      ↓GenericItem [ngx.components.UIDynamicElement-1662650953336]: 
        beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
        tagName: ion-item
        ↓Label [ngx.components.UIDynamicElement-1662650953339]: 
          beanData: '{"ionBean":"Label"}'
          tagName: ion-label
          ↓FormatLayout [ngx.components.UIDynamicAttr-1662650953342]: 
            beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-capitalize"}'
            comment: FormatLayout
            tagName: div
          ↓Text [ngx.components.UIText-1662650953345]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:'mandatory' | translate
        ↓ToggleButton [ngx.components.UIDynamicElement-1662650953348]: 
          beanData: '{"ionBean":"Toggle","ControlName":"plain:name1662650953348"}'
          tagName: ion-toggle
          ↓Attr [ngx.components.UIAttribute-1662650953351]: 
            attrName: '[(ngModel)]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.item.config.mandatory
          ↓Event [ngx.components.UIControlEvent-1662650953354]: 
            attrName: (ngModelChange)
            eventName: (ngModelChange)
            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1662650953357]: 
              beanData: '{"ionBean":"InvokeAction"}'
              stack: C8Oforms.MobileApplication.Application.updateState
              ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1662650953360]: 
                beanData: '{"ionBean":"InvokeAction"}'
                stack: C8Oforms.MobileApplication.Application.tick
          ↓Attr1 [ngx.components.UIAttribute-1662650953363]: 
            attrName: slot
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:start
    ↓GridColAccesibility [ngx.components.UIDynamicElement-1662650946067]: 
      beanData: |
        '{
         "ionBean": "GridCol",
         "SizeLg": "plain:6",
         "SizeXl": "plain:6"
        }'
      tagName: ion-col
      ↓GenericItem [ngx.components.UIDynamicElement-1662650946070]: 
        beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
        tagName: ion-item
        ↓Label [ngx.components.UIDynamicElement-1662650946073]: 
          beanData: '{"ionBean":"Label"}'
          tagName: ion-label
          ↓FormatLayout [ngx.components.UIDynamicAttr-1662650946076]: 
            beanData: '{"ionBean":"FormatLayout"}'
            comment: FormatLayout
            tagName: div
          ↓Text [ngx.components.UIText-1662650946079]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:Accessibility_mode
        ↓ToggleButton [ngx.components.UIDynamicElement-1662650946082]: 
          beanData: '{"ionBean":"Toggle","ControlName":"plain:name1662650854940"}'
          tagName: ion-toggle
          ↓Event [ngx.components.UIControlEvent-1662650946085]: 
            attrName: (ngModelChange)
            eventName: (ngModelChange)
            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1662650946088]: 
              beanData: '{"ionBean":"InvokeAction"}'
              stack: C8Oforms.MobileApplication.Application.updateState
              ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1662650946091]: 
                beanData: '{"ionBean":"InvokeAction"}'
                stack: C8Oforms.MobileApplication.Application.tick
          ↓Attr1 [ngx.components.UIAttribute-1662650946094]: 
            attrName: slot
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:start
          ↓Attr2 [ngx.components.UIAttribute-1662650946097]: 
            attrName: '[(ngModel)]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.item.config.accessibility