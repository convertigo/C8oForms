scriptContent: 
  - xmlizable: 
    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
    - com.twinsoft.convertigo.beans.common.FormatedContent: 
      →: |
        /*Begin_c8o_CompImport*/
        /*End_c8o_CompImport*/
        /*Begin_c8o_CompDeclaration*/
        	/*End_c8o_CompDeclaration*/
        /*Begin_c8o_CompConstructor*/
        		/*End_c8o_CompConstructor*/
        /*Begin_c8o_CompInitialization*/
        		/*End_c8o_CompInitialization*/
        /*Begin_c8o_CompFinalization*/
        		/*End_c8o_CompFinalization*/
        /*Begin_c8o_CompChanges*/
        		/*End_c8o_CompChanges*/
        /*Begin_c8o_CompDoCheck*/
        		/*End_c8o_CompDoCheck*/
        /*Begin_c8o_CompAfterContentInit*/
        		/*End_c8o_CompAfterContentInit*/
        /*Begin_c8o_CompAfterContentChecked*/
        		/*End_c8o_CompAfterContentChecked*/
        /*Begin_c8o_CompAfterViewInit*/
        		/*End_c8o_CompAfterViewInit*/
        /*Begin_c8o_CompAfterViewChecked*/
        		/*End_c8o_CompAfterViewChecked*/
        /*Begin_c8o_CompFunction*/
        	/*End_c8o_CompFunction*/
        
↓item [ngx.components.UICompVariable-1571411661406]: 
  value: 
↓model [ngx.components.UICompVariable-1571411661409]: 
  comment: this.formsSubmit[item['name']]
  value: '{}'
↓redList [ngx.components.UICompVariable-1571411661412]: 
  comment: this.redList[item['name']]
  value: null
↓disabled [ngx.components.UICompVariable-1571411661415]: 
  comment: this.formsSubmit[item['name']]
  value: false
↓Tag [ngx.components.UIElement-1663834575250]: 
  tagName: fieldset
  ↓Tag1 [ngx.components.UIElement-1663834575253]: 
    tagName: legend
    ↓Text [ngx.components.UIText-1663834575256]: 
      textValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:this.pageOwner.removeHTML(this.item.config.html)
  ↓Popover [ngx.components.UIDynamicElement-1658757385226]: 
    beanData: |
      '{
       "ionBean": "InlinePopover",
       "Side": "plain:top",
       "Size": "plain:auto",
       "Trigger": "script:''time_'' + this.item.name"
      }'
    tagName: ion-popover
    ↓DateTime1 [ngx.components.UIDynamicElement-1658757385229]: 
      beanData: |
        '{
         "ionBean": "DateTime",
         "ControlName": "plain:name1658757385229",
         "CancelText": "script:this.translate.instant(''Cancel'')",
         "DoneText": "plain:Ok",
         "Presentation": "plain:time",
         "ShowDefaultButtons": "plain:true",
         "Size": "plain:cover"
        }'
      tagName: ion-datetime
      ↓Attr [ngx.components.UIAttribute-1658757385232]: 
        attrName: '[ngModel]'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:this.model['value']
      ↓Event [ngx.components.UIControlEvent-1658757385241]: 
        attrName: (ngModelChange)
        eventName: (ngModelChange)
        ↓CheckFilled [ngx.components.UICustomAction-1658757385244]: 
          actionValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  		page.model["value"] = event.substring(11, 16)
                  		if(vars.item.config.mandatory == true){
                  		    if(event != ""){
                  		        vars.redlist = false;
                  		    }
                  		}
                  		resolve();
                  
          ↓item [ngx.components.UIControlVariable-1658757385247]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.item
          ↓redList [ngx.components.UIControlVariable-1658757385250]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.redList
          ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1658757385253]: 
            beanData: '{"ionBean":"InvokeAction"}'
            stack: C8Oforms.MobileApplication.Application.executeGoToPageIfCondition
            ↓item [ngx.components.UIControlVariable-1658757385256]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.item
            ↓line [ngx.components.UIControlVariable-1658757385259]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:null
            ↓child [ngx.components.UIControlVariable-1658757385262]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:null
            ↓canExec [ngx.components.UIControlVariable-1658757385265]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:true
          ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1658757385268]: 
            beanData: '{"ionBean":"InvokeAction"}'
            stack: C8Oforms.MobileApplication.Application.UpdateFunctionsToBeCalledToDataSource
            ↓item [ngx.components.UIControlVariable-1658757385271]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.item
      ↓Attr6 [ngx.components.UIAttribute-1658757385274]: 
        attrName: '[disabled]'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:this.disabled
      ↓Attr1 [ngx.components.UIAttribute-1658757455596]: 
        attrName: '[hourCycle]'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:(this.item.config.display_format == 'hh_mm' || this.item.config.display_format == 'hh_mm_ss' )? 'h12':'h23'
    ↓Style [ngx.components.UIStyle-1658757385277]: 
      styleContent: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              '/**
               * Custom properties (sometimes referred to as CSS variables or cascading variables)
               * are entities defined by CSS authors that contain specific values to be reused throughout a document.
               * They are set using custom property notation, e.g.: --main-color: black;
               * and are accessed using the var() function, e.g.: color: var(--main-color);
               * You can find below your component''s properties you can customize within the page.
               * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
               * For more informations see https://ionicframework.com/docs/theming.
              **/
              //--backdrop-opacity	//Opacity of the backdrop
              //--background	//Background of the popover
              //--box-shadow	//Box shadow of the popover
              //--height	//Height of the popover
              //--max-height	//Maximum height of the popover
              //--max-width	//Maximum width of the popover
              --min-height: 392px;	//Minimum height of the popover
              
              //--min-width	//Minimum width of the popover
              //--offset-x	//The amount to move the popover by on the x-axis
              //--offset-y	//The amount to move the popover by on the y-axis
              //--width	//Width of the popover
              '
  ↓Div [ngx.components.UIDynamicElement-1571411661283]: 
    beanData: '{"ionBean":"DivTag"}'
    identifier: divtext
    tagName: div
    ↓UseSharedComponent [ngx.components.UIUseShared-1573676548792]: 
      sharedcomponent: C8Oforms.MobileApplication.Application.sharedLabelElem
      ↓item [ngx.components.UIUseVariable-1573676548795]: 
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:this.item
    ↓GenericItem2 [ngx.components.UIDynamicElement-1658757255978]: 
      beanData: '{"ionBean":"GenericItem","Lines":"plain:inset"}'
      tagName: ion-item
      ↓Attr [ngx.components.UIAttribute-1658757255981]: 
        attrName: 
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:no-lines
      ↓Attr1 [ngx.components.UIAttribute-1658757255984]: 
        attrName: '[class.item-label-stacked]'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:true
      ↓Style [ngx.components.UIStyle-1658757255987]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '	&:hover{
                		cursor:pointer;
                	}
                	ion-input:hover{
                		cursor:pointer;
                	}
                background-color: transparent;
                	.label{
                		opacity:1 !important;
                	}
                	.datetime{
                		opacity:1 !important;
                	}
                	.class1570476475379 {
                		opacity:1 !important;
                	}
                '
      ↓Attr21 [ngx.components.UIAttribute-1658757255990]: 
        attrName: '[ngClass]'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: 'script:this.redList ? ''stylegenerictextred'': ''stylegenerictextnormal'''
      ↓TextInput [ngx.components.UIDynamicElement-1658757255993]: 
        beanData: |
          '{
           "ionBean": "Input",
           "ControlName": "plain:name1657206422909",
           "Debounce": "plain:0",
           "Placeholder": "script:this.item.config.display_format == ''HH:mm'' || this.item.config.display_format == ''HH:mm:ss'' ? (''HH_mm'' | translate) : this.item.config.display_format == ''hh:mm'' || this.item.config.display_format == ''hh:mm:ss'' ? (''hh_mm'' | translate) : ''''",
           "Readonly": "plain:true",
           "Type": "plain"
          }'
        tagName: ion-input
        ↓Attr [ngx.components.UIAttribute-1658757255996]: 
          attrName: '[ngModel]'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:this.model['value']
        ↓Style [ngx.components.UIStyle-1658757255999]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '/**
                   * Custom properties (sometimes referred to as CSS variables or cascading variables)
                   * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                   * They are set using custom property notation, e.g.: --main-color: black;
                   * and are accessed using the var() function, e.g.: color: var(--main-color);
                   * You can find below your component''s properties you can customize within the page.
                   * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                   * For more informations see https://ionicframework.com/docs/theming.
                  **/
                  //--background	//Background of the input
                  //--color	//Color of the input text
                  //--padding-bottom	//Bottom padding of the input
                  //--padding-end	//Right padding if direction is left-to-right, and left padding if direction is right-to-left of the input
                  //--padding-start	//Left padding if direction is left-to-right, and right padding if direction is right-to-left of the input
                  //--padding-top	//Top padding of the input
                  //--placeholder-color	//Color of the input placeholder text
                  //--placeholder-font-style	//Font style of the input placeholder text
                  //--placeholder-font-weight	//Font weight of the input placeholder text
                  //--placeholder-opacity	//Opacity of the input placeholder text
                  max-width: 160px !important;
                  &:hover{
                  	cursor:pointer;
                  }
                  '
        ↓Attr1 [ngx.components.UIAttribute-1663835131089]: 
          attrName: '[attr.id]'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:this.item.name
      ↓Button [ngx.components.UIDynamicElement-1658757256002]: 
        beanData: |
          '{
           "ionBean": "Button",
           "IonFill": "plain:clear",
           "IonSize": "plain:default",
           "IconSlot": "plain:end"
          }'
        tagName: ion-button
        ↓Event [ngx.components.UIControlEvent-1658757256005]: 
        ↓Icon [ngx.components.UIDynamicElement-1658757256008]: 
          beanData: |
            '{
             "ionBean": "Icon",
             "IconName": "plain:calendar-outline",
             "IconSlot": "plain:icon-only"
            }'
          tagName: ion-icon
        ↓FormatLayout [ngx.components.UIDynamicAttr-1658757256011]: 
          beanData: '{"ionBean":"FormatLayout","FlexItemAlignment":"plain:ion-align-self-center"}'
          selfClose: false
        ↓Style [ngx.components.UIStyle-1663766687518]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '/**
                   * Custom properties (sometimes referred to as CSS variables or cascading variables)
                   * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                   * They are set using custom property notation, e.g.: --main-color: black;
                   * and are accessed using the var() function, e.g.: color: var(--main-color);
                   * You can find below your component''s properties you can customize within the page.
                   * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                   * For more informations see https://ionicframework.com/docs/theming.
                  **/
                  //--background	//Background of the button
                  //--background-activated	//Background of the button when pressed. Note: setting this will interfere with the Material Design ripple
                  //--background-activated-opacity	//Opacity of the button when pressed
                  //--background-focused	//Background of the button when focused with the tab key
                  //--background-focused-opacity	//Opacity of the button when focused with the tab key
                  //--background-hover	//Background of the button on hover
                  //--background-hover-opacity	//Opacity of the background on hover
                  //--border-color	//Border color of the button
                  //--border-radius	//Border radius of the button
                  //--border-style	//Border style of the button
                  //--border-width	//Border width of the button
                  //--box-shadow	//Box shadow of the button
                  --color:var(--ion-color-convertigo);	//Text color of the button
                  //--color-activated	//Text color of the button when pressed
                  //--color-focused	//Text color of the button when focused with the tab key
                  //--color-hover	//Text color of the button when hover
                  //--opacity	//Opacity of the button
                  //--padding-bottom	//Bottom padding of the button
                  //--padding-end	//Right padding if direction is left-to-right, and left padding if direction is right-to-left of the button
                  //--padding-start	//Left padding if direction is left-to-right, and right padding if direction is right-to-left of the button
                  //--padding-top	//Top padding of the button
                  //--ripple-color	//Color of the button ripple effect
                  //--transition	//Transition of the button
                  '
        ↓Attr [ngx.components.UIAttribute-1663835120470]: 
          attrName: '[attr.for]'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:this.item.name
      ↓Attr2 [ngx.components.UIAttribute-1658757256014]: 
        attrName: '[id]'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: 'script:''time_'' + (this.disabled ? '''' : this.item.name)'
    ↓Attr11 [ngx.components.UIAttribute-1571411661400]: 
      attrName: '[attr.id]'
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:this.item.name
    ↓Attr [ngx.components.UIAttribute-1571411661403]: 
      attrName: '[ngClass]'
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: 'script:this.redList != undefined ?  this.redList[this.item.name] == true ? (this.item.config.mandatory && this.item.config.disabled == true) ? [''requiredgregoryvpadding'', ''styledivred''] : ''styledivred'': (this.item.config.mandatory && this.item.config.disabled == true) ? [''requiredgregoryv'', ''styledivnormal''] : ''styledivnormal'': (this.item.config.mandatory && this.item.config.disabled == true) ? [''requiredgregoryv'', ''styledivnormal''] : ''styledivnormal'''
    ↓Style [ngx.components.UIStyle-1574866454790]: 
      styleContent: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              position:relative;
              
    ↓Directive2 [ngx.components.UIControlDirective-1658849902382]: 
      directiveName: If
      directiveSource: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: 'script:this.redList != null ? this.redList[this.item.name] : false'
      ↓UseSharedComponent [ngx.components.UIUseShared-1658849902385]: 
        sharedcomponent: C8Oforms.MobileApplication.Application.labelFieldMustBeFilled
        ↓text [ngx.components.UIUseVariable-1658849902388]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'repMandartory'