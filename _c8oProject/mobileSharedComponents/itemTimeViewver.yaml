↓item [ngx.components.UICompVariable-1571411661406]: 
  value: 
↓model [ngx.components.UICompVariable-1571411661409]: 
  comment: this.formsSubmit[item['name']]
  value: '{}'
↓redList [ngx.components.UICompVariable-1571411661412]: 
  comment: this.redList[item['name']]
  value: null
↓disabled [ngx.components.UICompVariable-1571411661415]: 
  comment: this.formsSubmit[item['name']]
  value: false
↓Div [ngx.components.UIDynamicElement-1571411661283]: 
  beanData: '{"ionBean":"DivTag"}'
  identifier: divtext
  tagName: div
  ↓UseSharedComponent [ngx.components.UIUseShared-1573676548792]: 
    sharedcomponent: C8Oforms.MobileApplication.Application.sharedLabelElem
    ↓item [ngx.components.UIUseVariable-1573676548795]: 
      varValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:this.item
  ↓GenericItem1 [ngx.components.UIDynamicElement-1571411661286]: 
    beanData: '{"ionBean":"GenericItem"}'
    tagName: ion-item
    ↓Attr [ngx.components.UIAttribute-1571411661316]: 
      attrName: 
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: plain:no-lines
    ↓Attr1 [ngx.components.UIAttribute-1571411661319]: 
      attrName: '[class.item-label-stacked]'
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:true
    ↓Style [ngx.components.UIStyle-1571411661322]: 
      styleContent: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              'background-color: transparent;
              	.class1571411661325{
              		opacity:1 !important;
              	}
              '
    ↓DateTime1 [ngx.components.UIDynamicElement-1571411661325]: 
      beanData: |
        '{
         "ionBean": "DateTime",
         "CancelText": "script:this.translate.instant(''Cancel'')",
         "DoneText": "plain:Ok",
         "Presentation": "plain:time"
        }'
      tagName: ion-datetime
      ↓Attr [ngx.components.UIAttribute-1571411661328]: 
        attrName: '[(ngModel)]'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:this.model['value']
      ↓Attr3 [ngx.components.UIAttribute-1571411661337]: 
        attrName: '[displayFormat]'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:this.item.config.picker_format
        isEnabled: false
      ↓Attr8 [ngx.components.UIAttribute-1571411661349]: 
        attrName: '[pickerFormat]'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:this.item.config.picker_format
        isEnabled: false
      ↓Event [ngx.components.UIControlEvent-1571411661352]: 
        attrName: (ngModelChange)
        eventName: (ngModelChange)
        ↓CheckFilled [ngx.components.UICustomAction-1571411661355]: 
          actionValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  		if(vars.item.config.mandatory == true){
                  		    if(event.value != ""){
                  		        vars.redlist = false;
                  		    }
                  		}
                  		;
                  		resolve();
                  
          ↓item [ngx.components.UIControlVariable-1571411661358]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.item
          ↓redList [ngx.components.UIControlVariable-1571411661361]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.redList
        ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1596721249383]: 
          beanData: '{"ionBean":"InvokeAction"}'
          stack: C8Oforms.MobileApplication.Application.executeGoToPageIfCondition
          ↓item [ngx.components.UIControlVariable-1596721249386]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.item
          ↓line [ngx.components.UIControlVariable-1596721249389]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:null
          ↓child [ngx.components.UIControlVariable-1596721249392]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:null
          ↓canExec [ngx.components.UIControlVariable-1596721249395]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:true
        ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1609769548685]: 
          beanData: '{"ionBean":"InvokeAction"}'
          stack: C8Oforms.MobileApplication.Application.UpdateFunctionsToBeCalledToDataSource
          ↓item [ngx.components.UIControlVariable-1609769548688]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.item
      ↓Attr6 [ngx.components.UIAttribute-1571411661382]: 
        attrName: '[disabled]'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:this.disabled
      ↓Attr9 [ngx.components.UIAttribute-1611683069381]: 
        attrName: '[pickerOptions]'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:this.pageOwner.local.pickerOptionsDelete(this)
        isEnabled: false
      ↓Event1 [ngx.components.UIControlEvent-1614787451120]: 
        attrName: (tap)
        eventName: (tap)
        ↓CustomAction [ngx.components.UICustomAction-1614787458026]: 
          actionValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  		if(page.pageOwner.local.timeToRemoveOnCancel == undefined){
                  			page.pageOwner.local.timeToRemoveOnCancel = {};
                  		}
                  		if(vars.params.model['value'] == ""){
                  			vars.params.model["value"] = new Date().toTimeString().split(' ')[0];
                  			page.pageOwner.local.timeToRemoveOnCancel[vars.params.item.id] = true; 
                  		}
                  		else{
                  			page.pageOwner.local.timeToRemoveOnCancel[vars.params.item.id] = false; 
                  		}
                  		resolve();
                  
          ↓params [ngx.components.UIControlVariable-1614787642964]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this
      ↓Event2 [ngx.components.UIControlEvent-1614791450297]: 
        attrName: (ionCancel)
        eventName: ionCancel
        ↓CustomAction [ngx.components.UICustomAction-1614791473089]: 
          actionValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  		if(page.pageOwner.local.timeToRemoveOnCancel[vars.params.item.id] == true){
                  			vars.params.model["value"] = "";
                  		}
                  		resolve();
                  
          ↓params [ngx.components.UIControlVariable-1614791487584]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this
      ↓FormatLayout [ngx.components.UIDynamicAttr-1646304022983]: 
        beanData: '{"ionBean":"FormatLayout","FlexItemAlignment":"plain:ion-align-self-center"}'
        selfClose: false
      ↓Attr1 [ngx.components.UIAttribute-1646304915364]: 
        attrName: '[hourCycle]'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:this.item.config.picker_format == 'hh_mm' ? 'h12':'h23'
    ↓Attr21 [ngx.components.UIAttribute-1571411661385]: 
      attrName: '[ngClass]'
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: 'script:this.redList ? ''stylegenerictextred'': ''stylegenerictextnormal'''
    ↓FormatLayout [ngx.components.UIDynamicAttr-1646303975807]: 
      beanData: '{"ionBean":"FormatLayout","FlexItemAlignment":"plain:ion-align-self-center"}'
      selfClose: false
  ↓Directive2 [ngx.components.UIControlDirective-1571411661388]: 
    directiveName: If
    directiveSource: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:this.redList
    ↓itemErrorText [ngx.components.UIDynamicElement-1571411661391]: 
      beanData: '{"ionBean":"GenericItem"}'
      tagName: ion-item
      ↓Text [ngx.components.UIText-1571411661394]: 
        i18n: true
        textValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:'repMandartory'| translate
      ↓Style [ngx.components.UIStyle-1571411661397]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                'background-color: transparent;
                margin:0px;
                padding:0px;
                color:#ff0000;
                '
  ↓Attr11 [ngx.components.UIAttribute-1571411661400]: 
    attrName: '[attr.id]'
    attrValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:this.item.name
  ↓Attr [ngx.components.UIAttribute-1571411661403]: 
    attrName: '[ngClass]'
    attrValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: 'script:this.redList != undefined ?  this.redList[this.item.name] == true ? (this.item.config.mandatory && this.item.config.disabled == true) ? [''requiredgregoryvpadding'', ''styledivred''] : ''styledivred'': (this.item.config.mandatory && this.item.config.disabled == true) ? [''requiredgregoryv'', ''styledivnormal''] : ''styledivnormal'': (this.item.config.mandatory && this.item.config.disabled == true) ? [''requiredgregoryv'', ''styledivnormal''] : ''styledivnormal'''
  ↓Style [ngx.components.UIStyle-1574866454790]: 
    styleContent: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            position:relative;
            