scriptContent: 
  - xmlizable: 
    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
    - com.twinsoft.convertigo.beans.common.FormatedContent: 
      →: |
        /*Begin_c8o_CompImport*/
        /*End_c8o_CompImport*/
        /*Begin_c8o_CompDeclaration*/
        	/*End_c8o_CompDeclaration*/
        /*Begin_c8o_CompConstructor*/
        		/*End_c8o_CompConstructor*/
        /*Begin_c8o_CompInitialization*/
        		/*End_c8o_CompInitialization*/
        /*Begin_c8o_CompFinalization*/
        		/*End_c8o_CompFinalization*/
        /*Begin_c8o_CompFunction*/
        	/*End_c8o_CompFunction*/
        
↓current [ngx.components.UICompVariable-1595246801975]: 
↓i [ngx.components.UICompVariable-1595246801978]: 
↓DivFieldOrForm [ngx.components.UIDynamicElement-1595246902586]: 
  beanData: '{"ionBean":"DivTag"}'
  tagName: div
  ↓Style [ngx.components.UIStyle-1595246902589]: 
    styleContent: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            'display: flex;
            align-items: center;
            margin-bottom: 5px;
            '
  ↓Div1 [ngx.components.UIDynamicElement-1595247733718]: 
    beanData: '{"ionBean":"DivTag"}'
    tagName: div
    ↓Text [ngx.components.UIText-1595247022563]: 
      i18n: true
      textValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: 'script:this.current.subject == ''field'' ? this.translate.instant(''the_field'') : this.translate.instant(''pub_form_success0'') '
    ↓Style [ngx.components.UIStyle-1595247742605]: 
      styleContent: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              margin-left:80px;
              
  ↓Directive [ngx.components.UIControlDirective-1595246902637]: 
    directiveName: If
    directiveSource: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:this.current.subject == 'field'
    ↓Div2 [ngx.components.UIDynamicElement-1595248240079]: 
      beanData: '{"ionBean":"DivTag"}'
      tagName: div
      ↓Badge [ngx.components.UIDynamicElement-1595248240082]: 
        beanData: '{"ionBean":"Badge","IonColor":"plain:primaryB"}'
        tagName: ion-badge
        ↓Text [ngx.components.UIText-1595248240085]: 
          i18n: true
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:this.getItemNameById(this.current.val1)
      ↓Style [ngx.components.UIStyle-1595248240088]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                margin-left:5px;
                
    ↓Div3 [ngx.components.UIDynamicElement-1595248240091]: 
      beanData: '{"ionBean":"DivTag"}'
      tagName: div
      ↓Directive2 [ngx.components.UIControlDirective-1595248240094]: 
        directiveName: Switch
        directiveSource: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:this.current.operator
        ↓Directive [ngx.components.UIControlDirective-1595248240097]: 
          directiveExpression: '''equals'''
          directiveName: SwitchCase
          ↓Badge [ngx.components.UIDynamicElement-1595248240100]: 
            beanData: '{"ionBean":"Badge","IonColor":"plain:light"}'
            tagName: ion-badge
            ↓Text [ngx.components.UIText-1595248240103]: 
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:=
        ↓Directive1 [ngx.components.UIControlDirective-1595248240106]: 
          directiveExpression: '''different'''
          directiveName: SwitchCase
          ↓Badge [ngx.components.UIDynamicElement-1595248240109]: 
            beanData: '{"ionBean":"Badge","IonColor":"plain:light"}'
            tagName: ion-badge
            ↓Fragment [ngx.components.UICustom-1595248598720]: 
              htmlTemplate: '&#8800;'
        ↓Directive11 [ngx.components.UIControlDirective-1595248240112]: 
          directiveExpression: '''minus'''
          directiveName: SwitchCase
          ↓Badge [ngx.components.UIDynamicElement-1595248240115]: 
            beanData: '{"ionBean":"Badge","IonColor":"plain:light"}'
            tagName: ion-badge
            ↓Fragment [ngx.components.UICustom-1595248607234]: 
              htmlTemplate: '&#60;'
        ↓Directive12 [ngx.components.UIControlDirective-1595248240118]: 
          directiveExpression: '''minusequals'''
          directiveName: SwitchCase
          ↓Badge [ngx.components.UIDynamicElement-1595248240121]: 
            beanData: '{"ionBean":"Badge","IonColor":"plain:light"}'
            tagName: ion-badge
            ↓Fragment [ngx.components.UICustom-1595248613658]: 
              htmlTemplate: '&#8804;'
        ↓Directive13 [ngx.components.UIControlDirective-1595248240124]: 
          directiveExpression: '''greater'''
          directiveName: SwitchCase
          ↓Badge [ngx.components.UIDynamicElement-1595248240127]: 
            beanData: '{"ionBean":"Badge","IonColor":"plain:light"}'
            tagName: ion-badge
            ↓Fragment [ngx.components.UICustom-1595248622601]: 
              htmlTemplate: '&#62;'
        ↓Directive14 [ngx.components.UIControlDirective-1595248240130]: 
          directiveExpression: '''greaterequals'''
          directiveName: SwitchCase
          ↓Badge [ngx.components.UIDynamicElement-1595248240133]: 
            beanData: '{"ionBean":"Badge","IonColor":"plain:light"}'
            tagName: ion-badge
            ↓Fragment [ngx.components.UICustom-1595248628798]: 
              htmlTemplate: '&#8805;'
        ↓Directive141 [ngx.components.UIControlDirective-1595432210055]: 
          directiveExpression: '''among_following'''
          directiveName: SwitchCase
          ↓Badge [ngx.components.UIDynamicElement-1595432210058]: 
            beanData: '{"ionBean":"Badge","IonColor":"plain:light"}'
            tagName: ion-badge
            ↓Text [ngx.components.UIText-1595432257392]: 
              i18n: true
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:among_following
        ↓Directive1411 [ngx.components.UIControlDirective-1595432272235]: 
          directiveExpression: '''out_following'''
          directiveName: SwitchCase
          ↓Badge [ngx.components.UIDynamicElement-1595432272238]: 
            beanData: '{"ionBean":"Badge","IonColor":"plain:light"}'
            tagName: ion-badge
            ↓Text [ngx.components.UIText-1595432272241]: 
              i18n: true
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:out_following
        ↓Directive1412 [ngx.components.UIControlDirective-1595432274392]: 
          directiveExpression: '''contains'''
          directiveName: SwitchCase
          ↓Badge [ngx.components.UIDynamicElement-1595432274395]: 
            beanData: '{"ionBean":"Badge","IonColor":"plain:light"}'
            tagName: ion-badge
            ↓Text [ngx.components.UIText-1595432274398]: 
              i18n: true
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:contains
        ↓Directive1413 [ngx.components.UIControlDirective-1595432277188]: 
          directiveExpression: '''not_contains'''
          directiveName: SwitchCase
          ↓Badge [ngx.components.UIDynamicElement-1595432277191]: 
            beanData: '{"ionBean":"Badge","IonColor":"plain:light"}'
            tagName: ion-badge
            ↓Text [ngx.components.UIText-1595432277194]: 
              i18n: true
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:not_contains
        ↓Directive1414 [ngx.components.UIControlDirective-1595495095692]: 
          directiveExpression: '''does_not_contain_file'''
          directiveName: SwitchCase
          ↓Badge [ngx.components.UIDynamicElement-1595495095695]: 
            beanData: '{"ionBean":"Badge","IonColor":"plain:light"}'
            tagName: ion-badge
            ↓Text [ngx.components.UIText-1595495095698]: 
              i18n: true
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:does_not_contain_file
        ↓Directive14111 [ngx.components.UIControlDirective-1595495095701]: 
          directiveExpression: '''contains_multiple_files'''
          directiveName: SwitchCase
          ↓Badge [ngx.components.UIDynamicElement-1595495095704]: 
            beanData: '{"ionBean":"Badge","IonColor":"plain:light"}'
            tagName: ion-badge
            ↓Text [ngx.components.UIText-1595495095707]: 
              i18n: true
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:contains_multiple_files
        ↓Directive14121 [ngx.components.UIControlDirective-1595495095710]: 
          directiveExpression: '''contains_a_file'''
          directiveName: SwitchCase
          ↓Badge [ngx.components.UIDynamicElement-1595495095713]: 
            beanData: '{"ionBean":"Badge","IonColor":"plain:light"}'
            tagName: ion-badge
            ↓Text [ngx.components.UIText-1595495095716]: 
              i18n: true
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:contains_a_file
        ↓Directive14131 [ngx.components.UIControlDirective-1595495095719]: 
          directiveExpression: '''is_filled'''
          directiveName: SwitchCase
          ↓Badge [ngx.components.UIDynamicElement-1595495095722]: 
            beanData: '{"ionBean":"Badge","IonColor":"plain:light"}'
            tagName: ion-badge
            ↓Text [ngx.components.UIText-1595495095725]: 
              i18n: true
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:is_filled
        ↓Directive141311 [ngx.components.UIControlDirective-1595495099653]: 
          directiveExpression: '''is_empty'''
          directiveName: SwitchCase
          ↓Badge [ngx.components.UIDynamicElement-1595495099656]: 
            beanData: '{"ionBean":"Badge","IonColor":"plain:light"}'
            tagName: ion-badge
            ↓Text [ngx.components.UIText-1595495099659]: 
              i18n: true
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:is_empty
      ↓Style [ngx.components.UIStyle-1595248240139]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                margin-left:5px;
                
    ↓Div4 [ngx.components.UIDynamicElement-1595248240142]: 
      beanData: '{"ionBean":"DivTag"}'
      tagName: div
      ↓Style [ngx.components.UIStyle-1595248240145]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                margin-left:5px;
                
      ↓Directive1 [ngx.components.UIControlDirective-1595248240148]: 
        comment: (page as any).pageOwner.local.parami18n.operator
        directiveName: Switch
        directiveSource: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:this.current.operator
        ↓Directive [ngx.components.UIControlDirective-1595248240151]: 
          directiveExpression: '''equals'''
          directiveName: SwitchCase
          ↓Text [ngx.components.UIText-1595248240154]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:to
        ↓Directive1 [ngx.components.UIControlDirective-1595248240157]: 
          directiveExpression: '''different'''
          directiveName: SwitchCase
          ↓Text [ngx.components.UIText-1595248240160]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:fromO
        ↓Directive2 [ngx.components.UIControlDirective-1595248240163]: 
          directiveExpression: '''minus'''
          directiveName: SwitchCase
          ↓Text [ngx.components.UIText-1595248240166]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:thanO
        ↓Directive3 [ngx.components.UIControlDirective-1595248240169]: 
          directiveExpression: '''minusequals'''
          directiveName: SwitchCase
          ↓Text [ngx.components.UIText-1595248240172]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:thanO
        ↓Directive4 [ngx.components.UIControlDirective-1595248240175]: 
          directiveExpression: '''greater'''
          directiveName: SwitchCase
          ↓Text [ngx.components.UIText-1595248240178]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:thanO
        ↓Directive41 [ngx.components.UIControlDirective-1595248240181]: 
          directiveExpression: '''greaterequals'''
          directiveName: SwitchCase
          ↓Text [ngx.components.UIText-1595248240184]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:thanO
        ↓Directive141 [ngx.components.UIControlDirective-1595433546768]: 
          directiveExpression: '''among_following'''
          directiveName: SwitchCase
          ↓Text [ngx.components.UIText-1595433546771]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:the
        ↓Directive1411 [ngx.components.UIControlDirective-1595433546774]: 
          directiveExpression: '''out_following'''
          directiveName: SwitchCase
          ↓Text [ngx.components.UIText-1595433546777]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:the
        ↓Directive1412 [ngx.components.UIControlDirective-1595433546780]: 
          directiveExpression: '''contains'''
          directiveName: SwitchCase
          ↓Text [ngx.components.UIText-1595433546783]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:the
        ↓Directive1413 [ngx.components.UIControlDirective-1595433546786]: 
          directiveExpression: '''not_contains'''
          directiveName: SwitchCase
          ↓Text [ngx.components.UIText-1595433546789]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:the
      ↓Directive [ngx.components.UIControlDirective-1595248240187]: 
        comment: this.global.visibleVal.source == true else ElseBlock_1594993065876
        directiveName: If
        directiveSource: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:this.current.val2.source == true else ElseBlock_1594993065876
        ↓Text [ngx.components.UIText-1595248240190]: 
          i18n: true
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: plain:the_field2
      ↓Tag [ngx.components.UIElement-1595248240193]: 
        identifier: ElseBlock_1594993065876
        tagName: ng-template
        ↓Directive [ngx.components.UIControlDirective-1595248240196]: 
          comment: (page as any).pageOwner.local.parami18n.operator != ''
          directiveName: If
          directiveSource: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:this.current.operator != ''
          ↓Text [ngx.components.UIText-1595248240199]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:text
      ↓Attr1 [ngx.components.UIAttribute-1595432150087]: 
        attrName: '*ngIf'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: |
                'plain:!(this.current.operator == ''among_following'' || this.current.operator == ''out_following'' || this.getType(this.current.val1.type) == ''camSign'' || this.getType(this.current.val1.type) == ''file''
                || this.current.operator == ''is_filled'' || this.current.operator == ''is_empty'')'
    ↓Div5 [ngx.components.UIDynamicElement-1595248240202]: 
      beanData: '{"ionBean":"DivTag"}'
      tagName: div
      ↓Style [ngx.components.UIStyle-1595248240205]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                margin-left:5px;
                
      ↓Attr1 [ngx.components.UIAttribute-1595432394129]: 
        attrName: '*ngIf'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:!(this.current.operator == 'among_following' || this.current.operator == 'out_following' || this.getType(this.current.val1.type) == 'camSign' || this.getType(this.current.val1.type) == 'file' || this.current.operator == 'is_filled' || this.current.operator == 'is_empty')
      ↓Directive1 [ngx.components.UIControlDirective-1596025160689]: 
        directiveName: If
        directiveSource: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:this.current.val2.arr !=undefined else ElseBlock_1596025160695
        ↓Directive [ngx.components.UIControlDirective-1595511331761]: 
          directiveItemName: elO
          directiveSource: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:this.current.val2.arr
          ↓Badge [ngx.components.UIDynamicElement-1595248240208]: 
            beanData: '{"ionBean":"Badge","IonColor":"plain:secondary"}'
            tagName: ion-badge
            ↓Text [ngx.components.UIText-1595248240211]: 
              i18n: true
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:elO.display
      ↓Tag [ngx.components.UIElement-1596025160695]: 
        identifier: ElseBlock_1596025160695
        tagName: ng-template
        ↓Badge [ngx.components.UIDynamicElement-1596025264250]: 
          beanData: '{"ionBean":"Badge","IonColor":"plain:secondary"}'
          tagName: ion-badge
          ↓Text [ngx.components.UIText-1596025264253]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:getItemNameById(this.current.val2)
    ↓Div51 [ngx.components.UIDynamicElement-1595432402145]: 
      beanData: '{"ionBean":"DivTag"}'
      tagName: div
      ↓Style [ngx.components.UIStyle-1595432402148]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                margin-left:5px;
                
      ↓Attr1 [ngx.components.UIAttribute-1595432402157]: 
        attrName: '*ngIf'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:(this.current.operator == 'among_following' || this.current.operator == 'out_following')
      ↓Directive1 [ngx.components.UIControlDirective-1595432634663]: 
        directiveName: If
        directiveSource: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:this.current.val2.source == true
        ↓Text [ngx.components.UIText-1595432682231]: 
          i18n: true
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'('+this.translate.instant('the_field2')+')'
      ↓Directive [ngx.components.UIControlDirective-1595432417584]: 
        directiveItemName: itm
        directiveSource: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:this.current.val2.arr
        ↓Badge [ngx.components.UIDynamicElement-1595432402151]: 
          beanData: '{"ionBean":"Badge","IonColor":"plain:secondary"}'
          tagName: ion-badge
          ↓Text [ngx.components.UIText-1595432402154]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:itm.display
  ↓Directive1 [ngx.components.UIControlDirective-1595246902898]: 
    directiveName: If
    directiveSource: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:this.current.subject == 'form'
    ↓Div3 [ngx.components.UIDynamicElement-1595248407240]: 
      beanData: '{"ionBean":"DivTag"}'
      tagName: div
      ↓Directive2 [ngx.components.UIControlDirective-1595248407243]: 
        directiveName: Switch
        directiveSource: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:this.current.operator
        ↓Directive [ngx.components.UIControlDirective-1595248407246]: 
          directiveExpression: '''equals'''
          directiveName: SwitchCase
          ↓Badge [ngx.components.UIDynamicElement-1595248407249]: 
            beanData: '{"ionBean":"Badge","IonColor":"plain:light"}'
            tagName: ion-badge
            ↓Text [ngx.components.UIText-1595248407252]: 
              i18n: true
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:is
        ↓Directive1 [ngx.components.UIControlDirective-1595248407255]: 
          directiveExpression: '''different'''
          directiveName: SwitchCase
          ↓Badge [ngx.components.UIDynamicElement-1595248407258]: 
            beanData: '{"ionBean":"Badge","IonColor":"plain:light"}'
            tagName: ion-badge
            ↓Text [ngx.components.UIText-1595248465609]: 
              i18n: true
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:isnt
      ↓Style [ngx.components.UIStyle-1595248407288]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                margin-left:5px;
                
    ↓Div5 [ngx.components.UIDynamicElement-1595248502132]: 
      beanData: '{"ionBean":"DivTag"}'
      tagName: div
      ↓Style [ngx.components.UIStyle-1595248502135]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                margin-left:5px;
                
      ↓Badge [ngx.components.UIDynamicElement-1595248502138]: 
        beanData: '{"ionBean":"Badge","IonColor":"plain:secondary"}'
        tagName: ion-badge
        ↓Text [ngx.components.UIText-1595248502141]: 
          i18n: true
          textValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:this.translate.instant(this.current.attribute)
  ↓Directive11 [ngx.components.UIControlDirective-1595252081834]: 
    directiveName: If
    directiveSource: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:(page as any).pageOwner.local.parami18n.visible.length > 1 && ((page as any).pageOwner.local.parami18n.visible.length -1 ) != this.i
    ↓Div [ngx.components.UIDynamicElement-1595252081879]: 
      beanData: '{"ionBean":"DivTag"}'
      tagName: div
      ↓Text [ngx.components.UIText-1595252081882]: 
        i18n: true
        textValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: 'script:(page as any).pageOwner.local.parami18n.condVisible == ''and'' ? this.translate.instant(''and'') : this.translate.instant(''or'')'
      ↓Style [ngx.components.UIStyle-1595252081885]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                margin-left:5px;
                
  ↓Attr [ngx.components.UIAttribute-1611149565411]: 
    attrName: '*ngIf'
    attrValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: plain:this.always == false && (this.current.subject == 'field' || this.current.subject == 'form')
↓DivNeverOrAlways [ngx.components.UIDynamicElement-1611149663413]: 
  beanData: '{"ionBean":"DivTag"}'
  tagName: div
  ↓Style [ngx.components.UIStyle-1611149663416]: 
    styleContent: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            'display: flex;
            align-items: center;
            margin-bottom: 5px;
            '
  ↓Attr [ngx.components.UIAttribute-1611149663782]: 
    attrName: '*ngIf'
    attrValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: plain:this.always == true || this.current.subject == 'never_visible'
  ↓Div2 [ngx.components.UIDynamicElement-1611149663431]: 
    beanData: '{"ionBean":"DivTag"}'
    tagName: div
    ↓Badge [ngx.components.UIDynamicElement-1611149663434]: 
      beanData: '{"ionBean":"Badge","IonColor":"plain:primaryB"}'
      tagName: ion-badge
      ↓Text [ngx.components.UIText-1611149663437]: 
        i18n: true
        textValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: 'script:this.always ? this.translate.instant(''always_visible'') : this.translate.instant(''never_visible'')'
    ↓Style [ngx.components.UIStyle-1611149663440]: 
      styleContent: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              margin-left:5px;
              
    ↓Style1 [ngx.components.UIStyle-1611152975456]: 
      styleContent: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              margin-left:80px;
              
↓always [ngx.components.UICompVariable-1611149711413]: 
  value: false