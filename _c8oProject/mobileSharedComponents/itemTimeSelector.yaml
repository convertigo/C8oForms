↓item [ngx.components.UICompVariable-1571412574737]: 
  value: 
↓idselected [ngx.components.UICompVariable-1571412574740]: 
  value: 
↓isChild [ngx.components.UICompVariable-1571845653156]: 
  value: false
↓UseSharedComponent1 [ngx.components.UIUseShared-1588851494874]: 
  sharedcomponent: C8Oforms_NGX.MobileApplication.Application.sharedQuestionElem
  ↓item [ngx.components.UIUseVariable-1588851494877]: 
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:this.item
↓Directive1 [ngx.components.UIControlDirective-1623856279393]: 
  directiveName: If
  directiveSource: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
      - MobileSmartSourceType: script:this.pageOwner.local.advancedEditing
  ↓GridRow2 [ngx.components.UIDynamicElement-1588851494880]: 
    beanData: '{"ionBean":"GridRow"}'
    tagName: ion-row
    ↓GenericItem [ngx.components.UIDynamicElement-1588851494883]: 
      beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
      tagName: ion-item
      ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138346]: 
        beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-uppercase"}'
        comment: FormatLayout
        tagName: div
      ↓Style [ngx.components.UIStyle-1588851494889]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                'color: #ff8206;
                  font-size: 14px;
                  font-weight: 600;
                  font-style: normal;
                  font-stretch: normal;
                  line-height: normal;
                  letter-spacing: normal;
                '
      ↓Text1 [ngx.components.UIText-1588851494892]: 
        i18n: true
        textValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:option
      ↓Style1 [ngx.components.UIStyle-1588851494895]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '	.label{
                		margin-top: 0px !important;	
                		margin-bottom: 0px !important;	
                	}
                '
  ↓GridRow111 [ngx.components.UIDynamicElement-1588851494898]: 
    beanData: '{"ionBean":"GridRow"}'
    tagName: ion-row
    ↓GridCol [ngx.components.UIDynamicElement-1641218506257]: 
      beanData: '{"ionBean":"GridCol","Size":"plain:6"}'
      tagName: ion-col
      ↓GenericItem [ngx.components.UIDynamicElement-1588851494901]: 
        beanData: '{"ionBean":"GenericItem","Lines":"plain:none"}'
        tagName: ion-item
        ↓Label [ngx.components.UIDynamicElement-1588851494904]: 
          beanData: '{"ionBean":"Label"}'
          tagName: ion-label
          ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138348]: 
            beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-capitalize"}'
            comment: FormatLayout
            tagName: div
          ↓Text [ngx.components.UIText-1588851494910]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:'mandatory' | translate
        ↓ToggleButton [ngx.components.UIDynamicElement-1588851494913]: 
          beanData: '{"ionBean":"Toggle","SetPosition":"plain"}'
          tagName: ion-toggle
          ↓Attr [ngx.components.UIAttribute-1588851494916]: 
            attrName: '[(ngModel)]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.item.config.mandatory
          ↓Event [ngx.components.UIControlEvent-1588851494919]: 
            attrName: (ngModelChange)
            eventName: (ngModelChange)
            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1588851494925]: 
              beanData: '{"ionBean":"InvokeAction"}'
              stack: C8Oforms_NGX.MobileApplication.Application.updateState
              ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1588851494928]: 
                beanData: '{"ionBean":"InvokeAction"}'
                stack: C8Oforms_NGX.MobileApplication.Application.tick
          ↓Attr1 [ngx.components.UIAttribute-1588851494931]: 
            attrName: slot
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: plain:start
    ↓GridCol1 [ngx.components.UIDynamicElement-1641218508432]: 
      beanData: '{"ionBean":"GridCol","Size":"plain:6"}'
      tagName: ion-col
      ↓GenericItem1 [ngx.components.UIDynamicElement-1641228030064]: 
        beanData: '{"ionBean":"GenericItem"}'
        tagName: ion-item
        ↓Label [ngx.components.UIDynamicElement-1641228030067]: 
          beanData: '{"ionBean":"Label","Position":"plain:stacked"}'
          tagName: ion-label
          ↓FormatLayout [ngx.components.UIDynamicAttr-1645090138352]: 
            beanData: '{"ionBean":"FormatLayout","TextTransformation":"plain:ion-text-capitalize"}'
            comment: FormatLayout
            tagName: div
          ↓Style [ngx.components.UIStyle-1641228030073]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    'color: var(--ion-color-primary);
                    '
          ↓Text [ngx.components.UIText-1641228030076]: 
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:'displayformat' | translate
        ↓Attr2 [ngx.components.UIAttribute-1641228030079]: 
          attrName: '[ngClass]'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'stylegenerictexteditor'
        ↓Style [ngx.components.UIStyle-1641228030082]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  'width: 90%;
                  .label{
                  		margin-top: 0px !important;	
                  		margin-bottom: 0px !important;	
                  	}
                  '
        ↓SelectContainer [ngx.components.UIDynamicElement-1641228030085]: 
          beanData: '{"ionBean":"Select"}'
          tagName: ion-select
          ↓SelectOption2 [ngx.components.UIDynamicElement-1641228030088]: 
            beanData: '{"ionBean":"SelectOption","Value":"plain:HH:mm:ss"}'
            isEnabled: false
            tagName: ion-select-option
            ↓Text [ngx.components.UIText-1641228030091]: 
              i18n: true
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:HH_mm_ss
            ↓Attr [ngx.components.UIAttribute-1641228030094]: 
              attrName: '[selected]'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.item.config.display_format == 'HH:mm:ss'
          ↓SelectOption3 [ngx.components.UIDynamicElement-1641228030097]: 
            beanData: '{"ionBean":"SelectOption","Value":"plain:HH:mm"}'
            tagName: ion-select-option
            ↓Text [ngx.components.UIText-1641228030100]: 
              i18n: true
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:HH_mm
            ↓Attr [ngx.components.UIAttribute-1641228030103]: 
              attrName: '[selected]'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.item.config.display_format == 'HH:mm'
          ↓SelectOption4 [ngx.components.UIDynamicElement-1641228030106]: 
            beanData: '{"ionBean":"SelectOption","Value":"plain:hh:mm:ss:A"}'
            isEnabled: false
            tagName: ion-select-option
            ↓Text [ngx.components.UIText-1641228030109]: 
              i18n: true
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:hh_mm_ss
            ↓Attr [ngx.components.UIAttribute-1641228030112]: 
              attrName: '[selected]'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.item.config.display_format == 'hh:mm:ss:A'
          ↓SelectOption5 [ngx.components.UIDynamicElement-1641228030115]: 
            beanData: '{"ionBean":"SelectOption","Value":"plain:hh:mm:A"}'
            tagName: ion-select-option
            ↓Text [ngx.components.UIText-1641228030118]: 
              i18n: true
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:hh_mm
            ↓Attr [ngx.components.UIAttribute-1641228030121]: 
              attrName: '[selected]'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.item.config.display_format == 'hh:mm:A'
          ↓Attr1 [ngx.components.UIAttribute-1641228030133]: 
            attrName: '[(ngModel)]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.item.config.picker_format
          ↓Event [ngx.components.UIControlEvent-1641228030136]: 
            attrName: (ngModelChange)
            eventName: (ngModelChange)
            ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1641228030142]: 
              beanData: '{"ionBean":"InvokeAction"}'
              stack: C8Oforms_NGX.MobileApplication.Application.updateState
            ↓CustomAction [ngx.components.UICustomAction-1641228030145]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      		page.pageOwner.local.refreshFormatDateUnique = true;
                      		page.ref.detectChanges();
                      		setTimeout(()=>{
                      			page.pageOwner.local.refreshFormatDateUnique = undefined;
                      			page.ref.detectChanges();
                      		},0);
                      		
                      		resolve();
                      