scriptContent: 
  - xmlizable: 
    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
    - com.twinsoft.convertigo.beans.common.FormatedContent: 
      →: |
        /*Begin_c8o_CompImport*/
        /*End_c8o_CompImport*/
        /*Begin_c8o_CompDeclaration*/
        	/*End_c8o_CompDeclaration*/
        /*Begin_c8o_CompConstructor*/
        		/*End_c8o_CompConstructor*/
        /*Begin_c8o_CompInitialization*/
        		/*End_c8o_CompInitialization*/
        /*Begin_c8o_CompFinalization*/
        		/*End_c8o_CompFinalization*/
        /*Begin_c8o_CompFunction*/
        	/*End_c8o_CompFunction*/
        
↓item [ngx.components.UICompVariable-1571661380807]: 
  value: 
↓model [ngx.components.UICompVariable-1571661380810]: 
  comment: this.formsSubmit[item['name']]
  value: '{}'
↓redList [ngx.components.UICompVariable-1571661380813]: 
  comment: this.redList[item['name']]
  value: null
↓disabled [ngx.components.UICompVariable-1571661380816]: 
  comment: this.formsSubmit[item['name']]
  value: false
↓Div [ngx.components.UIDynamicElement-1570487160451]: 
  beanData: '{"ionBean":"DivTag"}'
  identifier: divtext
  tagName: div
  ↓Attr11 [ngx.components.UIAttribute-1570487160454]: 
    attrName: '[attr.id]'
    attrValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:this.item.name
  ↓Attr [ngx.components.UIAttribute-1570487160457]: 
    attrName: '[ngClass]'
    attrValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: 'script:this.redList != undefined ?  this.redList[this.item.name] == true ? (this.item.config.mandatory && this.item.config.disabled == true) ? [''requiredgregoryvpadding'', ''styledivred''] : ''styledivred'': (this.item.config.mandatory && this.item.config.disabled == true) ? [''requiredgregoryv'', ''styledivnormal''] : ''styledivnormal'': (this.item.config.mandatory && this.item.config.disabled == true) ? [''requiredgregoryv'', ''styledivnormal''] : ''styledivnormal'''
  ↓UseSharedComponent [ngx.components.UIUseShared-1573677385518]: 
    sharedcomponent: C8Oforms.MobileApplication.Application.sharedLabelElem
    ↓item [ngx.components.UIUseVariable-1573677385521]: 
      varValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:this.item
  ↓GenericItem_BarCode [ngx.components.UIDynamicElement-1605795649058]: 
    beanData: '{"ionBean":"GenericItem"}'
    tagName: ion-item
    ↓TextInput [ngx.components.UIDynamicElement-1605795649067]: 
      beanData: |
        '{
         "ionBean": "Input",
         "Debounce": "plain:0",
         "Placeholder": "script:this.item.config.placeholder"
        }'
      tagName: ion-input
      ↓Attr2 [ngx.components.UIAttribute-1605797246732]: 
        attrName: ondragstart
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:event.preventDefault();event.stopPropagation();
      ↓Attr3 [ngx.components.UIAttribute-1605797246735]: 
        attrName: ondragover
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:event.preventDefault()
      ↓Attr31 [ngx.components.UIAttribute-1605797246738]: 
        attrName: ondrop
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:event.preventDefault()
      ↓Attr11 [ngx.components.UIAttribute-1605797246741]: 
        attrName: '[attr.draggable]'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: plain:false
      ↓Event [ngx.components.UIControlEvent-1605805836313]: 
        attrName: (ionBlur)
        eventName: (ionBlur)
        ↓CheckNotEmpty [ngx.components.UICustomAction-1605805836316]: 
          actionValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  		    
                              if(page["redList"] != undefined){
                                  if(vars.item.config.mandatory == true){
                                      if(event.value == ""){
                                          vars.redList[vars.item.name] = true;
                                          //;
                                      }
                                  }
                              }
                  		resolve();
                  
          ↓item [ngx.components.UIControlVariable-1605805836319]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.item
          ↓redList [ngx.components.UIControlVariable-1605805836322]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.redList
      ↓Event1 [ngx.components.UIControlEvent-1605805836325]: 
        attrName: (ngModelChange)
        eventName: (ngModelChange)
        ↓CheckFilled [ngx.components.UICustomAction-1605805836328]: 
          actionValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '		    
                  		    if(page["redList"] != undefined){
                  		        if(vars.item.config.mandatory == true){
                  		            if((event.value != undefined ? event.value != "": event != "")){
                  		                vars.item1 = vars.item1 + event;
                  		                vars.redList = false;
                  		            }
                  		        }
                  		    }
                  		
                  		    //;
                  		resolve();
                  '
          ↓item [ngx.components.UIControlVariable-1605805836331]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.item
          ↓redList [ngx.components.UIControlVariable-1605805836334]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.redList[this.item.name]
        ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1609769879109]: 
          beanData: '{"ionBean":"InvokeAction"}'
          stack: C8Oforms.MobileApplication.Application.UpdateFunctionsToBeCalledToDataSource
          ↓item [ngx.components.UIControlVariable-1609769879112]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.item
      ↓Attr1 [ngx.components.UIAttribute-1605867666278]: 
        attrName: '[(ngModel)]'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:this.model['value']
    ↓Attr [ngx.components.UIAttribute-1605797495207]: 
      attrName: 
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: plain:no-lines
    ↓Attr11 [ngx.components.UIAttribute-1605805416244]: 
      attrName: '[class.item-label-stacked]'
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:(this.item.config.position == 'stacked')
    ↓Attr111 [ngx.components.UIAttribute-1605805416247]: 
      attrName: '[class.item-label-floating]'
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:(this.item.config.position == 'floating')
    ↓Attr12 [ngx.components.UIAttribute-1605805416250]: 
      attrName: '[class.item-label-fixed]'
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:(this.item.config.position == 'fixed')
    ↓Attr21 [ngx.components.UIAttribute-1605805416253]: 
      attrName: '[ngClass]'
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: 'script:this.redList != undefined ?  this.redList[this.item.name] == true ? ''stylegenerictextred'': ''stylegenerictextnormal'': ''stylegenerictextnormal'''
    ↓Button [ngx.components.UIDynamicElement-1646318599996]: 
      beanData: |
        '{
         "ionBean": "Button",
         "IonFill": "plain:clear",
         "IonSize": "plain:large"
        }'
      tagName: ion-button
      ↓Icon_Camera [ngx.components.UIDynamicElement-1605795649073]: 
        beanData: '{"ionBean":"Icon","IconName":"plain:barcode"}'
        tagName: ion-icon
        ↓Style [ngx.components.UIStyle-1605864206564]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '	cursor: pointer;
                  '
      ↓Event [ngx.components.UIControlEvent-1605806257004]: 
        ↓If [ngx.components.UICustomAction-1605806257007]: 
          actionValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  		if(vars.disabled == true){
                  		    resolve(true);
                  		}
                  		else{
                  	        resolve(false);
                  		}
                  
          ↓disabled [ngx.components.UIControlVariable-1605806257010]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.disabled == false
          ↓If [ngx.components.UIDynamicAction-1605806257013]: 
            beanData: '{"ionBean":"IfAction"}'
            ↓ModalPage [ngx.components.UIDynamicAction-1605871469364]: 
              beanData: |
                '{
                 "ionBean": "ModalAction",
                 "page": "plain:C8Oforms.MobileApplication.Application.modalVideo",
                 "data": "script:{''model'': script:this.model}",
                 "blockWhileDisplayed": "plain:true",
                 "cssClass": "plain:alwaysFullScreen"
                }'
              ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1644931226489]: 
                beanData: '{"ionBean":"InvokeAction"}'
                stack: C8Oforms.MobileApplication.Application.UpdateFunctionsToBeCalledToDataSource
                ↓item [ngx.components.UIControlVariable-1644931226492]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this.item
    ↓Button1 [ngx.components.UIDynamicElement-1646318602893]: 
      beanData: |
        '{
         "ionBean": "Button",
         "IonFill": "plain:clear",
         "IonSize": "plain:large"
        }'
      tagName: ion-button
      ↓Icon_File [ngx.components.UIDynamicElement-1605795649118]: 
        beanData: '{"ionBean":"Icon","IconName":"plain:image"}'
        tagName: ion-icon
        ↓Style [ngx.components.UIStyle-1605864257863]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '	cursor: pointer;
                  '
      ↓Event [ngx.components.UIControlEvent-1605880187047]: 
        ↓If [ngx.components.UICustomAction-1605880187050]: 
          actionValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  		if(vars.disabled == true){
                  		    
                  		    resolve(true);
                  		}
                  		else{
                  	        resolve(false);
                  		}
                  		page.global["multiple"] = false;
                  
          ↓disabled [ngx.components.UIControlVariable-1605880187053]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.disabled == false
          ↓If [ngx.components.UIDynamicAction-1605880187056]: 
            beanData: '{"ionBean":"IfAction"}'
            ↓ModalPage [ngx.components.UIDynamicAction-1605880187059]: 
              beanData: |
                '{
                 "ionBean": "ModalAction",
                 "page": "plain:C8Oforms.MobileApplication.Application.dropFilePage",
                 "data": "script:{''barcode'':true, ''multiple'': false}",
                 "blockWhileDisplayed": "plain:true",
                 "cssClass": "plain:alwaysFullScreen"
                }'
              ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1605882154153]: 
                beanData: '{"ionBean":"InvokeAction"}'
                stack: C8Oforms.MobileApplication.Application.ZXing_sa_forms
                ↓type [ngx.components.UIControlVariable-1605882154156]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:'file'
                ↓resultId [ngx.components.UIControlVariable-1605882154159]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:''
                ↓imgId [ngx.components.UIControlVariable-1605882154162]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:''
                ↓topic [ngx.components.UIControlVariable-1605882154165]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:''
                ↓ref [ngx.components.UIControlVariable-1605882154168]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:''
                ↓file [ngx.components.UIControlVariable-1605883216280]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this.global['barcoderesult']
                ↓save_result [ngx.components.UICustomAction-1605888208310]: 
                  actionValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          		let out = props.out[1];
                          		if(out && out.text && vars.model['value'] !== undefined)
                          		    vars.model['value'] = out.text;
                          		resolve();
                          
                  ↓model [ngx.components.UIControlVariable-1605888208313]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:this.model
                  ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1644931198207]: 
                    beanData: '{"ionBean":"InvokeAction"}'
                    stack: C8Oforms.MobileApplication.Application.UpdateFunctionsToBeCalledToDataSource
                    ↓item [ngx.components.UIControlVariable-1644931198214]: 
                      varValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:this.item
    ↓Style [ngx.components.UIStyle-1646318645570]: 
      styleContent: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              '/**
               * Custom properties (sometimes referred to as CSS variables or cascading variables)
               * are entities defined by CSS authors that contain specific values to be reused throughout a document.
               * They are set using custom property notation, e.g.: --main-color: black;
               * and are accessed using the var() function, e.g.: color: var(--main-color);
               * You can find below your component''s properties you can customize within the page.
               * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
               * For more informations see https://ionicframework.com/docs/theming.
              **/
              //--background	//Background of the item
              //--background-activated	//Background of the item when pressed. Note: setting this will interfere with the Material Design ripple
              //--background-activated-opacity	//Opacity of the item background when pressed
              //--background-focused	//Background of the item when focused with the tab key
              //--background-focused-opacity	//Opacity of the item background when focused with the tab key
              //--background-hover	//Background of the item on hover
              //--background-hover-opacity	//Opacity of the background of the item on hover
              //--border-color	//Color of the item border
              //--border-radius	//Radius of the item border
              //--border-style	//Style of the item border
              //--border-width	//Width of the item border
              //--color	//Color of the item
              //--color-activated	//Color of the item when pressed
              //--color-focused	//Color of the item when focused with the tab key
              //--color-hover	//Color of the item on hover
              //--detail-icon-color	//Color of the item detail icon
              //--detail-icon-font-size	//Font size of the item detail icon
              //--detail-icon-opacity	//Opacity of the item detail icon
              //--highlight-color-focused	//The color of the highlight on the item when focused
              //--highlight-color-invalid	//The color of the highlight on the item when invalid
              //--highlight-color-valid	//The color of the highlight on the item when valid
              //--highlight-height	//The height of the highlight on the item
              //--inner-border-width	//Width of the item inner border
              //--inner-box-shadow	//Box shadow of the item inner
              //--inner-padding-bottom	//Bottom padding of the item inner
              //--inner-padding-end	//Right padding if direction is left-to-right, and left padding if direction is right-to-left of the item inner
              //--inner-padding-start	//Left padding if direction is left-to-right, and right padding if direction is right-to-left of the item inner
              //--inner-padding-top	//Top padding of the item inner
              //--min-height	//Minimum height of the item
              //--padding-bottom	//Bottom padding of the item
              //--padding-end	//Right padding if direction is left-to-right, and left padding if direction is right-to-left of the item
              //--padding-start	//Left padding if direction is left-to-right, and right padding if direction is right-to-left of the item
              //--padding-top	//Top padding of the item
              //--ripple-color	//Color of the item ripple effect
              //--transition	//Transition of the item
              ion-icon{
              	color: var(ion-color--convertigo);
              }
              ion-button{
              		--padding-start: 0px;
              		--padding-end: 0px;
              	}
              '
  ↓Style [ngx.components.UIStyle-1574866514225]: 
    styleContent: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            position:relative;
            
  ↓Directive2 [ngx.components.UIControlDirective-1658849939975]: 
    directiveName: If
    directiveSource: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: 'script:this.redList != null ? this.redList[this.item.name] : false'
    ↓UseSharedComponent [ngx.components.UIUseShared-1658849939978]: 
      sharedcomponent: C8Oforms.MobileApplication.Application.labelFieldMustBeFilled
      ↓text [ngx.components.UIUseVariable-1658849939981]: 
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:'repMandartory'