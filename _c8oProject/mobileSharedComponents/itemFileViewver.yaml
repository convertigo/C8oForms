↓idFiles [ngx.components.UICompVariable-1570822161462]: 
  value: null
↓item [ngx.components.UICompVariable-1571666707832]: 
  value: 
↓model [ngx.components.UICompVariable-1571666707835]: 
  comment: this.formsSubmit[item['name']]
  value: '{}'
↓redList [ngx.components.UICompVariable-1571666707838]: 
  comment: this.redList[item['name']]
  value: null
↓disabled [ngx.components.UICompVariable-1571666707841]: 
  comment: this.formsSubmit[item['name']]
  value: false
↓Tag [ngx.components.UIElement-1663836522949]: 
  tagName: fieldset
  ↓Tag1 [ngx.components.UIElement-1663836522952]: 
    tagName: legend
    ↓Text [ngx.components.UIText-1663836522955]: 
      textValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:this.pageOwner.removeHTML(this.item.config.html)
  ↓Div [ngx.components.UIDynamicElement-1570521491673]: 
    beanData: '{"ionBean":"DivTag"}'
    identifier: divtext
    tagName: div
    ↓UseSharedComponent [ngx.components.UIUseShared-1573677470606]: 
      sharedcomponent: C8Oforms.MobileApplication.Application.sharedLabelElem
      ↓item [ngx.components.UIUseVariable-1573677470609]: 
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:this.item
    ↓Attr [ngx.components.UIAttribute-1570521491994]: 
      attrName: '[ngClass]'
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: 'script:this.redList != undefined ?  this.redList[this.item.name] == true ? (this.item.config.mandatory && this.item.config.disabled == true) ? [''requiredgregoryvpadding'', ''styledivred''] : ''styledivred'': (this.item.config.mandatory && this.item.config.disabled == true) ? [''requiredgregoryv'', ''styledivnormal''] : ''styledivnormal'': (this.item.config.mandatory && this.item.config.disabled == true) ? [''requiredgregoryv'', ''styledivnormal''] : ''styledivnormal'''
    ↓GenericItemAddFile [ngx.components.UIDynamicElement-1570521491859]: 
      beanData: '{"ionBean":"GenericItem"}'
      tagName: ion-item
      ↓Style [ngx.components.UIStyle-1570521491895]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                'background-color: transparent;
                
                
                
                '
      ↓Attr2 [ngx.components.UIAttribute-1570521491991]: 
        attrName: '[ngClass]'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:'stylegenericcheckboxnormal'
      ↓Attr3 [ngx.components.UIAttribute-1658844893866]: 
        attrName: '*ngIf'
        attrValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: 'plain:(this.item.config.multiple || this.disabled) ? true : this.idFiles != null ? this.global[this.idFiles][this.item.id].length == 0 : false'
      ↓Button [ngx.components.UIDynamicElement-1663081316672]: 
        beanData: '{"ionBean":"Button"}'
        tagName: ion-button
        ↓Event [ngx.components.UIControlEvent-1663081316678]: 
          ↓If1 [ngx.components.UIDynamicAction-1663081349281]: 
            beanData: '{"ionBean":"IfAction","condition":"source:{\"filter\":\"Shared\",\"project\":\"C8Oforms\",\"input\":\"\",\"model\":{\"data\":[{\"priority\":1570521387467,\"regular\":true}],\"path\":\"?.disabled\",\"prefix\":\"\",\"suffix\":\" == false\",\"custom\":\"\",\"useCustom\":false}}"}'
            ↓Modal_Page [ngx.components.UIDynamicAction-1663081349284]: 
              beanData: |
                '{
                 "ionBean": "ModalAction",
                 "page": "plain:C8Oforms.MobileApplication.Application.dropFilePage",
                 "data": "script:{id: this.idFiles, multiple:this.item.config.multiple, max_size: this.item.config.max_size, idItem: this.item.id, name: this.item.name}",
                 "cssClass": "plain:alwaysFullScreen"
                }'
        ↓Label [ngx.components.UIDynamicElement-1570521491943]: 
          beanData: '{"ionBean":"Label"}'
          tagName: ion-label
          ↓Style [ngx.components.UIStyle-1570521491946]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    'cursor: pointer;
                    '
          ↓Text1 [ngx.components.UIText-1570521491949]: 
            i18n: true
            textValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.item.config.placeholder
          ↓Event [ngx.components.UIControlEvent-1570521491952]: 
            isEnabled: false
            ↓If1 [ngx.components.UIDynamicAction-1658845054443]: 
              beanData: '{"ionBean":"IfAction","condition":"source:{\"filter\":\"Shared\",\"project\":\"C8Oforms\",\"input\":\"\",\"model\":{\"data\":[{\"priority\":1570521387467,\"regular\":true}],\"path\":\"?.disabled\",\"prefix\":\"\",\"suffix\":\" == false\",\"custom\":\"\",\"useCustom\":false}}"}'
              ↓Modal_Page [ngx.components.UIDynamicAction-1658840287988]: 
                beanData: |
                  '{
                   "ionBean": "ModalAction",
                   "page": "plain:C8Oforms.MobileApplication.Application.dropFilePage",
                   "data": "script:{id: this.idFiles, multiple:this.item.config.multiple, max_size: this.item.config.max_size, idItem: this.item.id, name: this.item.name}",
                   "cssClass": "plain:alwaysFullScreen"
                  }'
        ↓Style [ngx.components.UIStyle-1663081390304]: 
          isEnabled: false
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '/**
                   * Custom properties (sometimes referred to as CSS variables or cascading variables)
                   * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                   * They are set using custom property notation, e.g.: --main-color: black;
                   * and are accessed using the var() function, e.g.: color: var(--main-color);
                   * You can find below your component''s properties you can customize within the page.
                   * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                   * For more informations see https://ionicframework.com/docs/theming.
                  **/
                  //--background	//Background of the button
                  //--background-activated	//Background of the button when pressed. Note: setting this will interfere with the Material Design ripple
                  //--background-activated-opacity	//Opacity of the button when pressed
                  //--background-focused	//Background of the button when focused with the tab key
                  //--background-focused-opacity	//Opacity of the button when focused with the tab key
                  //--background-hover	//Background of the button on hover
                  //--background-hover-opacity	//Opacity of the background on hover
                  //--border-color	//Border color of the button
                  //--border-radius	//Border radius of the button
                  //--border-style	//Border style of the button
                  //--border-width	//Border width of the button
                  //--box-shadow	//Box shadow of the button
                  //--color	//Text color of the button
                  //--color-activated	//Text color of the button when pressed
                  //--color-focused	//Text color of the button when focused with the tab key
                  //--color-hover	//Text color of the button when hover
                  //--opacity	//Opacity of the button
                  //--padding-bottom	//Bottom padding of the button
                  //--padding-end	//Right padding if direction is left-to-right, and left padding if direction is right-to-left of the button
                  //--padding-start	//Left padding if direction is left-to-right, and right padding if direction is right-to-left of the button
                  //--padding-top	//Top padding of the button
                  //--ripple-color	//Color of the button ripple effect
                  //--transition	//Transition of the button
                  text-transform: unset;
                  '
        ↓Attr [ngx.components.UIAttribute-1663836589726]: 
          attrName: '[attr.id]'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:this.item.name
    ↓Directive [ngx.components.UIControlDirective-1570521491676]: 
      directiveName: If
      directiveSource: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: 'script:this.idFiles != null ? this.global[this.idFiles][this.item.id].length > 0 : false'
      ↓Grid [ngx.components.UIDynamicElement-1570521491805]: 
        beanData: '{"ionBean":"Grid"}'
        tagName: ion-grid
        ↓GridRow [ngx.components.UIDynamicElement-1570521491808]: 
          beanData: '{"ionBean":"GridRow"}'
          tagName: ion-row
          ↓Directive [ngx.components.UIControlDirective-1570521491811]: 
            directiveIndexName: i
            directiveSource: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.global[this.idFiles][this.item.id]
            ↓GridCol [ngx.components.UIDynamicElement-1570521491814]: 
              beanData: |
                '{
                 "ionBean": "GridCol",
                 "Size": "plain:6",
                 "SizeLg": "plain:6",
                 "SizeMd": "plain:6",
                 "SizeSm": "plain:6",
                 "SizeXl": "plain:6",
                 "SizeXs": "plain:12"
                }'
              tagName: ion-col
              ↓CardContainer [ngx.components.UIDynamicElement-1570521491817]: 
                beanData: '{"ionBean":"Card"}'
                tagName: ion-card
                ↓ListItem [ngx.components.UIDynamicElement-1658843934543]: 
                  beanData: '{"ionBean":"ListItem","Lines":"plain:none"}'
                  tagName: ion-item
                  ↓Icon [ngx.components.UIDynamicElement-1658843934546]: 
                    beanData: '{"ionBean":"Icon","IconName":"plain:document"}'
                    tagName: ion-icon
                  ↓Label [ngx.components.UIDynamicElement-1658843934549]: 
                    beanData: '{"ionBean":"Label"}'
                    tagName: ion-label
                    ↓Style [ngx.components.UIStyle-1658843934555]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '/**
                               * Custom properties (sometimes referred to as CSS variables or cascading variables)
                               * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                               * They are set using custom property notation, e.g.: --main-color: black;
                               * and are accessed using the var() function, e.g.: color: var(--main-color);
                               * You can find below your component''s properties you can customize within the page.
                               * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                               * For more informations see https://ionicframework.com/docs/theming.
                              **/
                              //--color	//Color of the label
                              margin-left:3px;
                              '
                    ↓Text [ngx.components.UIText-1658843951229]: 
                      i18n: true
                      textValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: source:{"filter":"Iteration","project":"C8Oforms","input":"item1570521491811?.name"}
                  ↓btEdit [ngx.components.UIDynamicElement-1658843934567]: 
                    beanData: |
                      '{
                       "ionBean": "Button",
                       "ButtonFormType": "plain:false",
                       "IonFill": "plain:clear",
                       "IonSize": "plain:small",
                       "IconSlot": "plain:end"
                      }'
                    tagName: ion-button
                    ↓Icon [ngx.components.UIDynamicElement-1658843934570]: 
                      beanData: '{"ionBean":"Icon","IconName":"plain:close"}'
                      tagName: ion-icon
                    ↓Event [ngx.components.UIControlEvent-1658843934573]: 
                      ↓CustomAction [ngx.components.UICustomAction-1658843934576]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                		this.files.splice(vars.i, 1);
                                		resolve();
                                
                        isEnabled: false
                        ↓i [ngx.components.UIControlVariable-1658843934579]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:i
                      ↓If [ngx.components.UICustomAction-1658843965194]: 
                        actionValue: 
                          - xmlizable: 
                            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                            - com.twinsoft.convertigo.beans.common.FormatedContent: 
                              →: |
                                		if(vars.disabled == true){
                                		    resolve(true);
                                		}
                                		else{
                                	        resolve(false);
                                		}
                                
                        ↓disabled [ngx.components.UIControlVariable-1658843965197]: 
                          varValue: 
                            - xmlizable: 
                              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                              - MobileSmartSourceType: script:this.disabled == false
                        ↓If [ngx.components.UIDynamicAction-1658843965200]: 
                          beanData: '{"ionBean":"IfAction"}'
                          ↓CustomAction [ngx.components.UICustomAction-1658843965203]: 
                            actionValue: 
                              - xmlizable: 
                                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                                  →: |
                                    		if(page["idFiles"] != undefined){
                                    		    vars.i = props.stack.root.scope.i;
                                    		    if(page.global[page["idFiles"]][vars.itemID][vars.i]["deleted"] !== undefined){
                                    	            page.global["__C8O_TODELETE"].push(page.global[page["idFiles"]][vars.itemID][vars.i]);
                                    	            page.global[page["idFiles"]][vars.itemID].splice(vars.i, 1);
                                    	        }
                                    	        else{
                                    	            page.global[page["idFiles"]][vars.itemID].splice(vars.i, 1);
                                    	        } 
                                    		}
                                    		
                                    		resolve();
                                    
                            ↓i [ngx.components.UIControlVariable-1658843965206]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:i
                            ↓itemID [ngx.components.UIControlVariable-1658843965209]: 
                              varValue: 
                                - xmlizable: 
                                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                                  - MobileSmartSourceType: script:this.item.id
                    ↓Style [ngx.components.UIStyle-1663765324532]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '/**
                               * Custom properties (sometimes referred to as CSS variables or cascading variables)
                               * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                               * They are set using custom property notation, e.g.: --main-color: black;
                               * and are accessed using the var() function, e.g.: color: var(--main-color);
                               * You can find below your component''s properties you can customize within the page.
                               * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                               * For more informations see https://ionicframework.com/docs/theming.
                              **/
                              //--background	//Background of the button
                              //--background-activated	//Background of the button when pressed. Note: setting this will interfere with the Material Design ripple
                              //--background-activated-opacity	//Opacity of the button when pressed
                              //--background-focused	//Background of the button when focused with the tab key
                              //--background-focused-opacity	//Opacity of the button when focused with the tab key
                              //--background-hover	//Background of the button on hover
                              //--background-hover-opacity	//Opacity of the background on hover
                              //--border-color	//Border color of the button
                              //--border-radius	//Border radius of the button
                              //--border-style	//Border style of the button
                              //--border-width	//Border width of the button
                              //--box-shadow	//Box shadow of the button
                              --color: var(--ion-color-dark);	//Text color of the button
                              //--color-activated	//Text color of the button when pressed
                              //--color-focused	//Text color of the button when focused with the tab key
                              //--color-hover	//Text color of the button when hover
                              //--opacity	//Opacity of the button
                              //--padding-bottom	//Bottom padding of the button
                              //--padding-end	//Right padding if direction is left-to-right, and left padding if direction is right-to-left of the button
                              //--padding-start	//Left padding if direction is left-to-right, and right padding if direction is right-to-left of the button
                              //--padding-top	//Top padding of the button
                              //--ripple-color	//Color of the button ripple effect
                              //--transition	//Transition of the button
                              '
    ↓Attr1 [ngx.components.UIAttribute-1570521491997]: 
      attrName: '[attr.id]'
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:this.item.name
    ↓Style [ngx.components.UIStyle-1574866530090]: 
      styleContent: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              position:relative;
              
    ↓Directive2 [ngx.components.UIControlDirective-1658849994980]: 
      directiveName: If
      directiveSource: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: 'script:this.redList != null ? this.redList[this.item.name] : false'
      ↓UseSharedComponent [ngx.components.UIUseShared-1658849994983]: 
        sharedcomponent: C8Oforms.MobileApplication.Application.labelFieldMustBeFilled
        ↓text [ngx.components.UIUseVariable-1658849994986]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:'repMandartory'