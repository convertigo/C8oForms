↓i [ngx.components.UICompVariable-1586351176877]: 
  value: 
↓list [ngx.components.UICompVariable-1645566374321]: 
  value: 
↓isAfolder [ngx.components.UICompVariable-1645811613402]: 
  value: false
↓offsetObject [ngx.components.UICompVariable-1645811613405]: 
  value: null
↓Div [ngx.components.UIDynamicElement-1645812795180]: 
  beanData: '{"ionBean":"DivTag"}'
  tagName: div
  ↓Attr11 [ngx.components.UIAttribute-1645811739315]: 
    attrName: draggable
    attrValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: plain:true
  ↓Attr [ngx.components.UIAttribute-1645811739318]: 
    attrName: '[ngClass]'
    attrValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:this.list[this.i]?._id
  ↓Style [ngx.components.UIStyle-1586351172302]: 
    styleContent: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            'padding: 1em;
            height: 100% !important;
            margin-bottom: 15px;
            margin-top: 15px;
            margin-left:15px;
            margin-right:15px;
            
            '
  ↓Event11 [ngx.components.UIControlEvent-1629218511441]: 
    attrName: (dragstart)
    eventName: (dragstart)
    ↓IfElse [ngx.components.UIDynamicIf-1645811811319]: 
      beanData: '{"ionBean":"IfElseAction","condition":"script:this.isAfolder"}'
      ↓Else_Handler [ngx.components.UIActionElseEvent-1645811811322]: 
        ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1629218511444]: 
          beanData: '{"ionBean":"InvokeAction"}'
          stack: C8Oforms.MobileApplication.Application.dragFormIntoFolder
          ↓id [ngx.components.UIControlVariable-1629218511447]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.list[this.i]?._id
  ↓Event21 [ngx.components.UIControlEvent-1629218511450]: 
    attrName: (dragend)
    eventName: (dragend)
    ↓IfElse1 [ngx.components.UIDynamicIf-1645811818703]: 
      beanData: '{"ionBean":"IfElseAction","condition":"script:this.isAfolder"}'
      ↓Else_Handler [ngx.components.UIActionElseEvent-1645811818706]: 
        ↓removeDash [ngx.components.UICustomAction-1629218511453]: 
          actionValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  			page.local.dragging = false;
                  			if((page as any).pageOwner.local.currentHighlighted != null){
                  				(page as any).pageOwner.local.currentHighlighted.style["border-color"] = null;
                  	        	(page as any).pageOwner.local.currentHighlighted.style["border-style"] = null;
                  			}
                  		
                  		resolve();
                  
  ↓Event3 [ngx.components.UIControlEvent-1645811796161]: 
    attrName: (dragover)
    eventName: (dragover)
    ↓IfElse1 [ngx.components.UIDynamicIf-1645811832966]: 
      beanData: '{"ionBean":"IfElseAction","condition":"script:this.isAfolder"}'
      ↓allowDrop [ngx.components.UICustomAction-1645811796164]: 
        actionValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                		    if(event.dataTransfer.types.includes("__c8oformsdrag_form")){ 
                				if(page.global['visibleoptions0Drag'] == undefined){
                					page.global['visibleoptions0Drag'] = {};
                				}
                				page.global['visibleoptions0Drag'][vars.i] = true;    
                	            event.preventDefault();
                	        }
                		resolve();
                
        ↓i [ngx.components.UIControlVariable-1645811796167]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:i
      ↓Else_Handler [ngx.components.UIActionElseEvent-1645811832969]: 
  ↓Event111 [ngx.components.UIControlEvent-1645811796170]: 
    attrName: (drop)
    eventName: (drop)
    ↓IfElse1 [ngx.components.UIDynamicIf-1645811835726]: 
      beanData: '{"ionBean":"IfElseAction","condition":"script:this.isAfolder"}'
      ↓HttpDrop [ngx.components.UICustomAsyncAction-1699891814372]: 
        actionValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '		try {
                			event.preventDefault();
                			let name = "";
                			let error = false;
                			const keysSelected = Object.keys(page.global.selectedItem);
                			const multiple = keysSelected.length > 1;
                			if (page.global[''visibleoptions0Drag''] == undefined) {
                				page.global[''visibleoptions0Drag''] = {};
                			}
                			page.global[''visibleoptions0Drag''][vars.i] = false;
                
                			var id = event.dataTransfer.getData("_id");
                			var ids;
                			if (multiple) {
                				ids = keysSelected
                					.filter((x) => { return this.global.selectedItem[x] });
                			}
                			else {
                				ids = [id];
                			}
                			ids = JSON.stringify(ids);
                			let meta = JSON.stringify({tag: vars.folder, action: "add"});
                			let res = (await page.c8o.callJsonObject("C8Oforms.APIV2_updateTags", { "id": ids, meta: meta }).async()).res; 
                			if (!res?.error) {
                				page.global.selectedItem = {};
                				return { msg: page[''translate''].instant("had_been_moved_folders", {folder: vars.folder}), cssClass: "toastSuccess" };
                			}
                			else {
                				return { msg: page[''translate''].instant("error_occured_while_moving"), cssClass: "toastError" };
                			}
                		} catch (e) {
                			return { msg: page[''translate''].instant("error_occured_while_moving"), cssClass: "toastError" };
                			page.c8o.log.error("An error occured while trying to move a form", e);
                		}
                '
        ↓folder [ngx.components.UIControlVariable-1699891814375]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:this.list[this.i].key
        ↓i [ngx.components.UIControlVariable-1699891814378]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:this.i
        ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1699891814381]: 
          beanData: '{"ionBean":"InvokeAction"}'
          stack: C8Oforms.MobileApplication.Application.showToast
          ↓msg [ngx.components.UIControlVariable-1699891814384]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:parent.out?.msg
          ↓duration [ngx.components.UIControlVariable-1699891814387]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:'5000'
          ↓position [ngx.components.UIControlVariable-1699891814390]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:'bottom'
          ↓cssClass [ngx.components.UIControlVariable-1699891814393]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:parent.out?.cssClass
          ↓showCloseButton [ngx.components.UIControlVariable-1699891814396]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:false
          ↓closeButtonText [ngx.components.UIControlVariable-1699891814399]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:'Close'
      ↓Else_Handler [ngx.components.UIActionElseEvent-1645811835729]: 
  ↓Event4 [ngx.components.UIControlEvent-1645811796203]: 
    attrName: (dragleave)
    eventName: (dragleave)
    ↓IfElse1 [ngx.components.UIDynamicIf-1645811837398]: 
      beanData: '{"ionBean":"IfElseAction","condition":"script:this.isAfolder"}'
      ↓CustomAction [ngx.components.UICustomAction-1645811796206]: 
        actionValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                		if(page.global['visibleoptions0Drag'] == undefined){
                			page.global['visibleoptions0Drag'] = {};
                		}
                		page.global['visibleoptions0Drag'][vars.i] = false;
                		resolve();
                
        ↓i [ngx.components.UIControlVariable-1645811796209]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:i
      ↓Else_Handler [ngx.components.UIActionElseEvent-1645811837401]: 
  ↓GridList [ngx.components.UIDynamicElement-1586351172071]: 
    beanData: '{"ionBean":"Grid","Height":"plain:100%"}'
    tagName: ion-grid
    ↓GridRowList [ngx.components.UIDynamicElement-1586351172074]: 
      beanData: |
        '{
         "ionBean": "GridRow",
         "FlexJustifyContent": "plain:ion-justify-content-center",
         "FlexAlignement": "plain:ion-align-items-center"
        }'
      tagName: ion-row
      ↓GridColOption [ngx.components.UIDynamicElement-1586351172077]: 
        beanData: |
          '{
           "ionBean": "GridCol",
           "FlexAlignement": "plain:ion-align-self-center",
           "SizeLg": "plain:1",
           "SizeMd": "plain:1",
           "SizeSm": "plain:1",
           "SizeXl": "plain:1",
           "SizeXs": "plain:1"
          }'
        tagName: ion-col
        ↓Event [ngx.components.UIControlEvent-1586351172080]: 
          attrName: (mouseenter)
          eventName: (mouseenter)
          ↓showoptions [ngx.components.UICustomAction-1586351172083]: 
            actionValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    		    if(!page.global.selectedItem[(page as any).list[vars["visible"]]._id]){
                    		        page.global["visibleoptions"][vars["visible"]] = true;
                    		    }
                    		    resolve();
                    
            ↓visible [ngx.components.UIControlVariable-1586351172086]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.i
        ↓Event1 [ngx.components.UIControlEvent-1586351172089]: 
          attrName: (mouseleave)
          eventName: (mouseleave)
          ↓removeoptions [ngx.components.UICustomAction-1586351172092]: 
            actionValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    		    if(!page.global.selectedItem[(page as any).list[vars["visible"]]._id]){
                    		        page.global["visibleoptions"][vars["visible"]] = false;
                                }
                    		    resolve();
                    
            ↓visible [ngx.components.UIControlVariable-1586351172095]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.i
        ↓divIconRadio [ngx.components.UIDynamicElement-1586351172098]: 
          beanData: '{"ionBean":"DivTag"}'
          tagName: div
          ↓Style [ngx.components.UIStyle-1586351172101]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    '	display:inline-block;
                    	float: right;
                    	margin-right:1em;
                    '
          ↓CheckBox [ngx.components.UIDynamicElement-1586351172119]: 
            beanData: '{"ionBean":"CheckBox","IonColor":"plain:greenSelector"}'
            tagName: ion-checkbox
            ↓Style [ngx.components.UIStyle-1586351172122]: 
            ↓Attr [ngx.components.UIAttribute-1586351172125]: 
              attrName: mode
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:ios
            ↓Attr1 [ngx.components.UIAttribute-1586351172128]: 
              attrName: '[(ngModel)]'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this?.global?.selectedItem[this.list[this.i]._id]
            ↓Attr2 [ngx.components.UIAttribute-1645812357734]: 
              attrName: '*ngIf'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:!this.isAfolder
          ↓Attr [ngx.components.UIAttribute-1586351172131]: 
            attrName: '[ngStyle]'
            attrValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: 'script:{''visibility'':this.global[''visibleoptions''][this.i] ? ''visible'' : ''hidden''}'
      ↓GridColImage [ngx.components.UIDynamicElement-1586351172134]: 
        beanData: |
          '{
           "ionBean": "GridCol",
           "SizeLg": "plain:2",
           "SizeMd": "plain:2",
           "SizeSm": "plain:2",
           "SizeXl": "plain:2",
           "SizeXs": "plain:2"
          }'
        tagName: ion-col
        ↓Style [ngx.components.UIStyle-1586351172143]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '	height: 100% !important;
                      border-radius: 4px;
                    	position:relative;
                  '
        ↓Event [ngx.components.UIControlEvent-1586351172149]: 
          attrName: (mouseenter)
          eventName: (mouseenter)
          ↓showoptions [ngx.components.UICustomAction-1586351172152]: 
            actionValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    		    if(!page.global.selectedItem[(page as any).list[vars["visible"]]._id]){
                    		        page.global["visibleoptions"][vars["visible"]] = true;
                    		    }
                    		    resolve();
                    
            ↓visible [ngx.components.UIControlVariable-1586351172155]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.i
        ↓Event1 [ngx.components.UIControlEvent-1586351172158]: 
          attrName: (mouseleave)
          eventName: (mouseleave)
          ↓removeoptions [ngx.components.UICustomAction-1586351172161]: 
            actionValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    		    if(!page.global.selectedItem[(page as any).list[vars["visible"]]._id]){
                    		        page.global["visibleoptions"][vars["visible"]] = false;
                                }
                    		    resolve();
                    
            ↓visible [ngx.components.UIControlVariable-1586351172164]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.i
        ↓Event2 [ngx.components.UIControlEvent-1586351172167]: 
          ↓IfElse1 [ngx.components.UIDynamicIf-1645884385770]: 
            beanData: '{"ionBean":"IfElseAction","condition":"script:this.isAfolder"}'
            ↓CustomAsyncAction [ngx.components.UICustomAsyncAction-1645884385773]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '		try {
                      			page["pageOwner"].local.folder = page["list"][page["i"]].key;	        
                      	        let url : string = window.location.href;
                      			let splitSlash = window.location.href.split("/");
                      			let selectorPosition = splitSlash.indexOf("selector")
                      			splitSlash[selectorPosition + 3] = ""+page["pageOwner"].local.folder;
                      			window.history.replaceState("", "", splitSlash.join("/"));
                      		} catch (e) {
                      		
                      		} finally {
                      			return;
                      		}
                      '
              ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1645884385776]: 
                beanData: '{"ionBean":"InvokeAction"}'
                stack: C8Oforms.MobileApplication.Application.callViewLiveAndFillFormList
            ↓Else_Handler [ngx.components.UIActionElseEvent-1645884385779]: 
              ↓IfPublishedElse [ngx.components.UIDynamicIf-1645884419359]: 
                beanData: '{"ionBean":"IfElseAction","condition":"script:this.pageOwner.local.published"}'
                ↓openPwa [ngx.components.UICustomAction-1645884419362]: 
                  actionValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '			event.stopPropagation();
                          			let goToPwa = ()=>{
                          				let baseUrl = (window.location.href.substring(0, window.location.href.indexOf("mobile/index.html")) != "" ? window.location.href.substring(0, window.location.href.indexOf("mobile/index.html")) : "http://localhost:18080/convertigo/projects/C8Oforms/DisplayObjects/");
                          		    	window.open(baseUrl+page["list"][page["i"]].pwa_subPath);
                          			};
                          			try{
                          				if(page["list"][page["i"]].status == ''doing''){
                          					
                          				}
                          				else{
                          					goToPwa();
                          				}
                          			}
                          			catch(e){
                          				goToPwa();
                          			}
                          		    resolve();
                          '
                ↓Else_Handler [ngx.components.UIActionElseEvent-1645884419365]: 
                  ↓RootPage [ngx.components.UIDynamicAction-1645884419368]: 
                    beanData: |
                      '{
                       "ionBean": "RootPageAction",
                       "page": "plain:C8Oforms.MobileApplication.Application.editorPage",
                       "data": "script:{formId: this.list[this.i]?._id}"
                      }'
        ↓Directive [ngx.components.UIControlDirective-1645812266220]: 
          directiveName: If
          directiveSource: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:this.isAfolder else ElseBlock_1645812266232
          ↓Image [ngx.components.UIDynamicElement-1645812324973]: 
            beanData: '{"ionBean":"Image","url":"script:''assets\/images\/svg\/icon\/folder.svg''"}'
            selfClose: true
            tagName: img
            ↓Style [ngx.components.UIStyle-1645812324976]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '    width:4rem;
                          height: 4rem;
                          /*position: relative;
                          top: 50%; 
                          transform: translateY(-50%);
                          -webkit-transform: translateY(-50%);
                          text-align: center;
                          display: block;
                          margin: 0 auto;*/
                          &:hover {
                      		cursor: pointer;
                      	}
                      '
        ↓Tag1 [ngx.components.UIElement-1645812266232]: 
          identifier: ElseBlock_1645812266232
          tagName: ng-template
          ↓Directive1 [ngx.components.UIControlDirective-1616490417159]: 
            directiveName: If
            directiveSource: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.list[this.i]?.status == 'doing' else ElseBlock_1616490445730
            ↓Div [ngx.components.UIDynamicElement-1616490417162]: 
              beanData: '{"ionBean":"DivTag"}'
              tagName: div
              ↓Style [ngx.components.UIStyle-1616490417165]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '	 width:4rem;
                            height: 4rem;
                            -webkit-border-radius: 50%;
                            border-radius: 50%;
                            position: relative;
                            text-align: center;
                            display: block;
                        '
              ↓Image [ngx.components.UIDynamicElement-1616490417168]: 
                beanData: |
                  '{
                   "ionBean": "Image",
                   "url": "script:''assets\/images\/svg\/icon\/building.svg''",
                   "width": "plain"
                  }'
                selfClose: true
                tagName: img
                ↓Style [ngx.components.UIStyle-1616490417171]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '    width:4rem;
                              height: 4rem;
                              -webkit-border-radius: 50%;
                              border-radius: 50%;
                          '
              ↓Attr [ngx.components.UIAttribute-1616490417180]: 
                attrName: matTooltip
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:'app_being_created' | translate
          ↓Tag [ngx.components.UIElement-1616490445730]: 
            identifier: ElseBlock_1616490445730
            tagName: ng-template
            ↓Directive2 [ngx.components.UIControlDirective-1604675076605]: 
              directiveName: If
              directiveSource: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:(this.list[this.i]?.thumbnail?.enabled && this.list[this.i]?.thumbnail?.type != 'color') else ElseBlock_1604595693051WallPaper
              ↓FSImage [ngx.components.UIDynamicElement-1604675076608]: 
                beanData: |
                  '{
                   "ionBean": "FSImage",
                   "docid": "script:this.list[this.i]?.id",
                   "attachment": "plain:thumbnail",
                   "requestable": "plain:C8Oforms.c8oforms_fs"
                  }'
                isEnabled: false
                selfClose: true
                tagName: img
                ↓Style [ngx.components.UIStyle-1604675076611]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '   width:4rem;
                             height: 4rem;
                             -webkit-border-radius: 50%;
                             border-radius: 50%;
                          '
              ↓Image1 [ngx.components.UIDynamicElement-1695807146613]: 
                beanData: '{"ionBean":"Image","url":"script:this.global.originIMG + ''\/convertigo\/fullsync\/c8oforms_fs\/''+ this.list[this.i]?._id + ''\/thumbnail''"}'
                selfClose: true
                tagName: img
                ↓Style [ngx.components.UIStyle-1695807163401]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '   width:4rem;
                             height: 4rem;
                             -webkit-border-radius: 50%;
                             border-radius: 50%;
                          '
          ↓Tag2 [ngx.components.UIElement-1604675076614]: 
            identifier: ElseBlock_1604595693051WallPaper
            tagName: ng-template
            ↓Directive [ngx.components.UIControlDirective-1604675076617]: 
              directiveName: If
              directiveSource: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:(this.list[this.i]?.wallpaper?.enabled && this.list[this.i]?.wallpaper?.type != 'color') else ElseBlock1604595755153Random
              ↓FSImage [ngx.components.UIDynamicElement-1604675076620]: 
                beanData: |
                  '{
                   "ionBean": "FSImage",
                   "docid": "script:this.list[this.i]?.id",
                   "attachment": "plain:wallpaper",
                   "requestable": "plain:C8Oforms.c8oforms_fs"
                  }'
                isEnabled: false
                selfClose: true
                tagName: img
                ↓Style [ngx.components.UIStyle-1604675076623]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '    width:4rem;
                              height: 4rem;
                              -webkit-border-radius: 50%;
                              border-radius: 50%;
                          '
              ↓Image1 [ngx.components.UIDynamicElement-1695807364199]: 
                beanData: '{"ionBean":"Image","url":"script:this.global.originIMG + ''\/convertigo\/fullsync\/c8oforms_fs\/''+ this.list[this.i]?._id + ''\/wallpaper''"}'
                selfClose: true
                tagName: img
                ↓Style [ngx.components.UIStyle-1695807373749]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '    width:4rem;
                              height: 4rem;
                              -webkit-border-radius: 50%;
                              border-radius: 50%;
                          '
          ↓Tag3 [ngx.components.UIElement-1604675076626]: 
            identifier: ElseBlock1604595755153Random
            tagName: ng-template
            ↓Directive [ngx.components.UIControlDirective-1604675076629]: 
              directiveName: If
              directiveSource: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:((this.list[this.i]?.thumbnail?.enabled && this.list[this.i]?.thumbnail?.type == 'color') || (this.list[this.i]?.wallpaper?.enabled && this.list[this.i]?.wallpaper?.type == 'color')) else ElseBlock_1604598151040Color
              ↓Image1 [ngx.components.UIDynamicElement-1604675076632]: 
                beanData: '{"ionBean":"Image","url":"script:this.list[this.i]?.value?.random"}'
                isEnabled: false
                selfClose: true
                tagName: img
                ↓Style [ngx.components.UIStyle-1604675076635]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '    width:4rem;
                              height: 4rem;
                              -webkit-border-radius: 50%;
                              border-radius: 50%;
                          '
              ↓Div [ngx.components.UIDynamicElement-1695807445290]: 
                beanData: '{"ionBean":"DivTag"}'
                tagName: div
                ↓Style [ngx.components.UIStyle-1695807445293]: 
                  styleContent: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '	width:4rem;
                              height: 4rem;
                              -webkit-border-radius: 50%;
                              border-radius: 50%;
                          '
                ↓Attr [ngx.components.UIAttribute-1695807445296]: 
                  attrName: '[ngStyle]'
                  attrValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: 'script:{''background-color'':(this.list[this.i]?.wallpaper?.enabled && this.list[this.i]?.wallpaper?.type == ''color'') ? this.list[this.i]?.wallpaper?.color: this.list[this.i]?.thumbnail?.color}'
          ↓Tag4 [ngx.components.UIElement-1604675076638]: 
            identifier: ElseBlock_1604598151040Color
            tagName: ng-template
            ↓Div [ngx.components.UIDynamicElement-1604675076641]: 
              beanData: '{"ionBean":"DivTag"}'
              isEnabled: false
              tagName: div
              ↓Style [ngx.components.UIStyle-1604675076644]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '	width:4rem;
                            height: 4rem;
                            -webkit-border-radius: 50%;
                            border-radius: 50%;
                        '
              ↓Attr [ngx.components.UIAttribute-1604675076647]: 
                attrName: '[ngStyle]'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:{'background-color':this.list[this.i]?.value?.color}
            ↓Image1 [ngx.components.UIDynamicElement-1695807489371]: 
              beanData: '{"ionBean":"Image","url":"script:this.list[this.i]?.wallpaper?.random"}'
              selfClose: true
              tagName: img
              ↓Style [ngx.components.UIStyle-1695807504535]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '    width:4rem;
                            height: 4rem;
                            -webkit-border-radius: 50%;
                            border-radius: 50%;
                        '
      ↓GridColTitle [ngx.components.UIDynamicElement-1586351172203]: 
        beanData: |
          '{
           "ionBean": "GridCol",
           "FlexAlignement": "plain:ion-align-self-center",
           "SizeLg": "plain:8",
           "SizeMd": "plain:8",
           "SizeSm": "plain:8",
           "SizeXl": "plain:8",
           "SizeXs": "plain:8"
          }'
        tagName: ion-col
        ↓Style [ngx.components.UIStyle-1586351172206]: 
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  ' 	height: 100% !important;
                    	color: #999999;
                    	strong{
                  		color:black !important;
                  	}
                  '
        ↓Div [ngx.components.UIDynamicElement-1586351172209]: 
          beanData: '{"ionBean":"DivTag"}'
          tagName: div
          ↓Style [ngx.components.UIStyle-1586351172215]: 
            styleContent: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                        strong{
                    		color:black !important;
                    	}
                    	margin-left:5px;
                    
          ↓Directive [ngx.components.UIControlDirective-1645812156753]: 
            directiveName: If
            directiveSource: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.isAfolder else ElseBlock_1645812179194
            ↓Div [ngx.components.UIDynamicElement-1645812230551]: 
              beanData: '{"ionBean":"DivTag"}'
              tagName: div
              ↓Text [ngx.components.UIText-1645812230554]: 
                i18n: true
                textValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.list[this.i].key
              ↓Style [ngx.components.UIStyle-1645812230557]: 
          ↓Tag [ngx.components.UIElement-1645812179194]: 
            identifier: ElseBlock_1645812179194
            tagName: ng-template
            ↓Div [ngx.components.UIDynamicElement-1616492845732]: 
              beanData: '{"ionBean":"DivTag"}'
              tagName: div
              ↓Style [ngx.components.UIStyle-1616492874554]: 
                styleContent: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        '	flex: auto;
                        '
              ↓Attr [ngx.components.UIAttribute-1605210899232]: 
                attrName: '[innerHTML]'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: script:this.list[this.i]?.name
          ↓Div1 [ngx.components.UIDynamicElement-1616492848048]: 
            beanData: '{"ionBean":"DivTag"}'
            tagName: div
            ↓Style [ngx.components.UIStyle-1616492876445]: 
              styleContent: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '	flex: initial;
                      '
            ↓Directive2 [ngx.components.UIControlDirective-1616492756229]: 
              directiveName: Switch
              directiveSource: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.pageOwner.getLevelAccesDoc(this.list[this.i], this.global.settings)
              ↓Directive [ngx.components.UIControlDirective-1616492756232]: 
                directiveExpression: 1
                directiveName: SwitchCase
                ↓DivIcons [ngx.components.UIDynamicElement-1616492756235]: 
                  beanData: '{"ionBean":"DivTag"}'
                  tagName: div
                  ↓Icon [ngx.components.UIDynamicElement-1616492756238]: 
                    beanData: '{"ionBean":"Icon","IconName":"plain:key"}'
                    tagName: ion-icon
                    ↓Style [ngx.components.UIStyle-1616492756241]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '
                              }
                              .class1614763218936:hover {
                              	cursor:help;
                              '
                  ↓Style [ngx.components.UIStyle-1616492756244]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            'position: absolute;
                            bottom: 0;
                            right:0;
                            display:inline-block;
                            '
                  ↓Icon1 [ngx.components.UIDynamicElement-1616492756247]: 
                    beanData: '{"ionBean":"Icon","IconName":"plain:stats-chart"}'
                    tagName: ion-icon
                    ↓Style [ngx.components.UIStyle-1616492756250]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '
                              }
                              .class1614763218936:hover {
                              	cursor:help;
                              '
                  ↓Attr [ngx.components.UIAttribute-1616492756253]: 
                    attrName: matTooltip
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'form_has_been_shared_edit_resp' | translate
              ↓Directive1 [ngx.components.UIControlDirective-1616492756262]: 
                directiveExpression: 2
                directiveName: SwitchCase
                ↓DivIcons [ngx.components.UIDynamicElement-1616492756265]: 
                  beanData: '{"ionBean":"DivTag"}'
                  tagName: div
                  ↓Icon [ngx.components.UIDynamicElement-1616492756268]: 
                    beanData: '{"ionBean":"Icon","IconName":"plain:key"}'
                    tagName: ion-icon
                    ↓Style [ngx.components.UIStyle-1616492756271]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '
                              }
                              .class1614763218936:hover {
                              	cursor:help;
                              '
                  ↓Style [ngx.components.UIStyle-1616492756274]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            'position: absolute;
                            bottom: 0;
                            right:0;
                            display:inline-block;
                            '
                  ↓Attr [ngx.components.UIAttribute-1616492756277]: 
                    attrName: matTooltip
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'form_has_been_shared_edit' | translate
              ↓Directive2 [ngx.components.UIControlDirective-1616492756286]: 
                directiveExpression: 3
                directiveName: SwitchCase
                ↓DivIcons [ngx.components.UIDynamicElement-1616492756289]: 
                  beanData: '{"ionBean":"DivTag"}'
                  tagName: div
                  ↓Style [ngx.components.UIStyle-1616492756292]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            'position: absolute;
                            bottom: 0;
                            right:0;
                            display:inline-block;
                            '
                  ↓Icon1 [ngx.components.UIDynamicElement-1616492756295]: 
                    beanData: '{"ionBean":"Icon","IconName":"plain:stats"}'
                    tagName: ion-icon
                    ↓Style [ngx.components.UIStyle-1616492756298]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '
                              }
                              .class1614763218936:hover {
                              	cursor:help;
                              '
                  ↓Attr [ngx.components.UIAttribute-1616492756301]: 
                    attrName: matTooltip
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'form_has_been_shared_resp' | translate
              ↓Directive21 [ngx.components.UIControlDirective-1616492756310]: 
                directiveExpression: 4
                directiveName: SwitchCase
                ↓DivIcons [ngx.components.UIDynamicElement-1616492756313]: 
                  beanData: '{"ionBean":"DivTag"}'
                  tagName: div
                  ↓Icon [ngx.components.UIDynamicElement-1616492756316]: 
                    beanData: '{"ionBean":"Icon","IconName":"plain:custom-share-social"}'
                    tagName: ion-icon
                    ↓Style [ngx.components.UIStyle-1616492756319]: 
                      styleContent: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                          - com.twinsoft.convertigo.beans.common.FormatedContent: 
                            →: |
                              '
                              }
                              .class1614763218936:hover {
                              	cursor:help;
                              '
                  ↓Style [ngx.components.UIStyle-1616492756322]: 
                    styleContent: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                        - com.twinsoft.convertigo.beans.common.FormatedContent: 
                          →: |
                            'position: absolute;
                            bottom: 0;
                            right:0;
                            display:inline-block;
                            '
                  ↓Attr [ngx.components.UIAttribute-1616492756325]: 
                    attrName: matTooltip
                    attrValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:'form_has_been_shared_with_you' | translate
              ↓Attr [ngx.components.UIAttribute-1645812030960]: 
                attrName: '*ngIf'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:!this.isAfolder
        ↓Event [ngx.components.UIControlEvent-1586351172221]: 
          attrName: (mouseenter)
          eventName: (mouseenter)
          ↓showoptions [ngx.components.UICustomAction-1586351172224]: 
            actionValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    		    if(!page.global.selectedItem[vars["visible"]]){
                    		        page.global["visibleoptions"][vars["visible"]] = true;
                    		    }
                    		    resolve();
                    
            ↓visible [ngx.components.UIControlVariable-1586351172227]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.i
        ↓Event1 [ngx.components.UIControlEvent-1586351172230]: 
          attrName: (mouseleave)
          eventName: (mouseleave)
          ↓removeoptions [ngx.components.UICustomAction-1586351172233]: 
            actionValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    		    if(!page.global.selectedItem[(page as any).list[vars["visible"]]._id]){
                    		        page.global["visibleoptions"][vars["visible"]] = false;
                                }
                    		    resolve();
                    
            ↓visible [ngx.components.UIControlVariable-1586351172236]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.i
        ↓Event2 [ngx.components.UIControlEvent-1586351172239]: 
          ↓IfElse1 [ngx.components.UIDynamicIf-1645887732296]: 
            beanData: '{"ionBean":"IfElseAction","condition":"script:this.isAfolder"}'
            ↓CustomAsyncAction [ngx.components.UICustomAsyncAction-1645887732299]: 
              actionValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                  - com.twinsoft.convertigo.beans.common.FormatedContent: 
                    →: |
                      '		try {
                      			page["pageOwner"].local.folder = page["list"][page["i"]].key;	        
                      	        let url : string = window.location.href;
                      			let splitSlash = window.location.href.split("/");
                      			let selectorPosition = splitSlash.indexOf("selector")
                      			splitSlash[selectorPosition + 3] = ""+page["pageOwner"].local.folder;
                      			window.history.replaceState("", "", splitSlash.join("/"));
                      		} catch (e) {
                      		
                      		} finally {
                      			return;
                      		}
                      '
              ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1645887732302]: 
                beanData: '{"ionBean":"InvokeAction"}'
                stack: C8Oforms.MobileApplication.Application.callViewLiveAndFillFormList
            ↓Else_Handler [ngx.components.UIActionElseEvent-1645887732305]: 
              ↓IfPublishedElse [ngx.components.UIDynamicIf-1645887732308]: 
                beanData: '{"ionBean":"IfElseAction","condition":"script:this.pageOwner.local.published"}'
                ↓openPwa [ngx.components.UICustomAction-1645887732311]: 
                  actionValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                      - com.twinsoft.convertigo.beans.common.FormatedContent: 
                        →: |
                          '			event.stopPropagation();
                          			let goToPwa = ()=>{
                          				let baseUrl = window.location.href.indexOf("localhost") == -1 ? window.location.href.substring(0, window.location.href.indexOf("mobile/")) : "http://localhost:18080/convertigo/projects/C8Oforms/DisplayObjects/";
                          		    	window.open(baseUrl+page["list"][page["i"]].pwa_subPath);
                          			};
                          			try{
                          				if(page["list"][page["i"]].status == ''doing''){
                          					
                          				}
                          				else{
                          					goToPwa();
                          				}
                          			}
                          			catch(e){
                          				goToPwa();
                          			}
                          		    resolve();
                          '
                ↓Else_Handler [ngx.components.UIActionElseEvent-1645887732314]: 
                  ↓RootPage [ngx.components.UIDynamicAction-1645887732317]: 
                    beanData: |
                      '{
                       "ionBean": "RootPageAction",
                       "page": "plain:C8Oforms.MobileApplication.Application.editorPage",
                       "data": "script:{formId: this.list[this.i]?._id}"
                      }'
      ↓GridColMore [ngx.components.UIDynamicElement-1586351172263]: 
        beanData: |
          '{
           "ionBean": "GridCol",
           "FlexAlignement": "plain:ion-align-self-center",
           "SizeLg": "plain:1",
           "SizeMd": "plain:1",
           "SizeSm": "plain:1",
           "SizeXl": "plain:1",
           "SizeXs": "plain:1"
          }'
        tagName: ion-col
        ↓Style [ngx.components.UIStyle-1586351172266]: 
          isEnabled: false
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '	 	height: 100% !important;
                       	  border-radius: 4px;
                    	border-top: solid 1px #f6f6f6;
                    	border-bottom: solid 1px #f6f6f6;
                    	border-right: solid 1px #f6f6f6;
                  '
        ↓Event [ngx.components.UIControlEvent-1586351172284]: 
          attrName: (mouseenter)
          eventName: (mouseenter)
          ↓showoptions [ngx.components.UICustomAction-1586351172287]: 
            actionValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    		    if(!page.global.selectedItem[(page as any).list[vars["visible"]]._id]){
                    		        page.global["visibleoptions"][vars["visible"]] = true;
                    		    }
                    		    resolve();
                    
            ↓visible [ngx.components.UIControlVariable-1586351172290]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.i
        ↓Event1 [ngx.components.UIControlEvent-1586351172293]: 
          attrName: (mouseleave)
          eventName: (mouseleave)
          ↓removeoptions [ngx.components.UICustomAction-1586351172296]: 
            actionValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    		    if(!page.global.selectedItem[(page as any).list[vars["visible"]]._id]){
                    		        page.global["visibleoptions"][vars["visible"]] = false;
                                }
                    		    resolve();
                    
            ↓visible [ngx.components.UIControlVariable-1586351172299]: 
              varValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.i
        ↓FormatLayout [ngx.components.UIDynamicAttr-1645805570266]: 
          beanData: '{"ionBean":"FormatLayout","FlexItemAlignment":"plain:ion-align-self-center"}'
          selfClose: false
        ↓Div [ngx.components.UIDynamicElement-1645805958836]: 
          beanData: '{"ionBean":"DivTag"}'
          tagName: div
          ↓Button [ngx.components.UIDynamicElement-1645805485713]: 
            beanData: '{"ionBean":"Button","IonFill":"plain:clear"}'
            tagName: ion-button
            ↓Icon [ngx.components.UIDynamicElement-1586351172269]: 
              beanData: '{"ionBean":"Icon","IconName":"plain:ellipsis-horizontal"}'
              tagName: ion-icon
              ↓Attr [ngx.components.UIAttribute-1645805472502]: 
                attrName: '[color]'
                attrValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                    - MobileSmartSourceType: plain:greyButton
            ↓Event [ngx.components.UIControlEvent-1586351172272]: 
              ↓IfElse [ngx.components.UIDynamicIf-1645883810675]: 
                beanData: '{"ionBean":"IfElseAction","condition":"script:this.isAfolder"}'
                ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1645883810678]: 
                  beanData: '{"ionBean":"InvokeAction"}'
                  stack: C8Oforms.MobileApplication.Application.showThreeDotsMenu
                  ↓id [ngx.components.UIControlVariable-1645883810681]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:this.list[this.i].key
                  ↓currentIndex [ngx.components.UIControlVariable-1645883810684]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:i
                  ↓page [ngx.components.UIControlVariable-1645883810687]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:this.pageOwner
                  ↓folder [ngx.components.UIControlVariable-1645883810690]: 
                    varValue: 
                      - xmlizable: 
                        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                        - MobileSmartSourceType: script:true
                ↓Else_Handler [ngx.components.UIActionElseEvent-1645883810693]: 
                  ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1645883810696]: 
                    beanData: '{"ionBean":"InvokeAction"}'
                    stack: C8Oforms.MobileApplication.Application.showThreeDotsMenu
                    ↓id [ngx.components.UIControlVariable-1645883810699]: 
                      varValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:this.list[this.i]?._id
                    ↓currentIndex [ngx.components.UIControlVariable-1645883810702]: 
                      varValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:this.i
                    ↓page [ngx.components.UIControlVariable-1645883810705]: 
                      varValue: 
                        - xmlizable: 
                          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                          - MobileSmartSourceType: script:this.pageOwner
        ↓Style1 [ngx.components.UIStyle-1645806259990]: 
          isEnabled: false
          styleContent: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  'display: flex;
                    justify-content:center;
                  '
  ↓Event [ngx.components.UIControlEvent-1645812974541]: 
    attrName: (mouseenter)
    eventName: (mouseenter)
    ↓showoptions [ngx.components.UICustomAction-1645812974544]: 
      actionValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              		    if(!page.global.selectedItem[(page as any).list[vars["visible"]]._id]){
              		        page.global["visibleoptions"][vars["visible"]] = true;
              		    }
              		    resolve();
              
      ↓visible [ngx.components.UIControlVariable-1645812974547]: 
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:this.i
  ↓Event1 [ngx.components.UIControlEvent-1645812974550]: 
    attrName: (mouseleave)
    eventName: (mouseleave)
    ↓removeoptions [ngx.components.UICustomAction-1645812974553]: 
      actionValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              		    if(!page.global.selectedItem[(page as any).list[vars["visible"]]._id]){
              		        page.global["visibleoptions"][vars["visible"]] = false;
                          }
              		    resolve();
              
      ↓visible [ngx.components.UIControlVariable-1645812974556]: 
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:this.i
  ↓Attr1 [ngx.components.UIAttribute-1645882961092]: 
    attrName: '[ngStyle]'
    attrValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: 'script:{''background-color'': this.global[''visibleoptions''][this.i] ? ''#f9f9f9'': ''#ffffff'', ''border-top-left-radius'': this.global[''visibleoptions''][this.i] ? ''4px'': ''0px'', ''border-bottom-left-radius'': this.global[''visibleoptions''][this.i] ? ''4px'': ''0px'', ''border-left'': this.global.selectedItem[this.i] ? ''solid 1px #25e056'': '''', ''border-top'': this.global.selectedItem[this.i] ? ''solid 1px #25e056'': '''', ''border-bottom'': this.global.selectedItem[this.i] ? ''solid 1px #25e056'': '''', ''border-bottom-right-radius'': ''0px'', ''border-top-right-radius'':''0px'', cursor : this.list[this.i]?.status == ''doing'' ? ''wait'': ''pointer''}'
↓PageEvent [ngx.components.UIPageEvent-1695808712579]: 
  comment: just import some modules
  ↓Imports [ngx.components.UICustomAsyncAction-1695808726810]: 
    actionValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            		return;
            
    comment: just import some modules
    module_ng_imports: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
        - com.twinsoft.convertigo.beans.common.XMLVector: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
            - com.twinsoft.convertigo.beans.common.XMLVector: 
              - java.lang.String: 
                - ↑value: MatTooltipModule
    module_ts_imports: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
        - com.twinsoft.convertigo.beans.common.XMLVector: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
            - com.twinsoft.convertigo.beans.common.XMLVector: 
              - java.lang.String: 
                - ↑value: MatTooltipModule
              - java.lang.String: 
                - ↑value: '@angular/material/tooltip'