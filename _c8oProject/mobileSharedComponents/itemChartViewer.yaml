comment: The Chart Widget viewer
scriptContent: 
  - xmlizable: 
    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
    - com.twinsoft.convertigo.beans.common.FormatedContent: 
      →: |
        /*Begin_c8o_CompImport*/
        /*End_c8o_CompImport*/
        /*Begin_c8o_CompDeclaration*/
        	/*End_c8o_CompDeclaration*/
        /*Begin_c8o_CompConstructor*/
        		/*End_c8o_CompConstructor*/
        /*Begin_c8o_CompInitialization*/
        		/*End_c8o_CompInitialization*/
        /*Begin_c8o_CompFinalization*/
        		/*End_c8o_CompFinalization*/
        /*Begin_c8o_CompChanges*/
        		/*End_c8o_CompChanges*/
        /*Begin_c8o_CompDoCheck*/
        		/*End_c8o_CompDoCheck*/
        /*Begin_c8o_CompAfterContentInit*/
        		/*End_c8o_CompAfterContentInit*/
        /*Begin_c8o_CompAfterContentChecked*/
        		/*End_c8o_CompAfterContentChecked*/
        /*Begin_c8o_CompAfterViewInit*/
        		/*End_c8o_CompAfterViewInit*/
        /*Begin_c8o_CompAfterViewChecked*/
        		/*End_c8o_CompAfterViewChecked*/
        /*Begin_c8o_CompFunction*/
        	
        	public updateChartValues(){
        	}
        	/*End_c8o_CompFunction*/
        
↓item [ngx.components.UICompVariable-1728753163567]: 
  value: 
↓model [ngx.components.UICompVariable-1728753163570]: 
  autoEmit: true
  comment: this.formsSubmit[item['name']]
  value: '{}'
↓redList [ngx.components.UICompVariable-1728753163573]: 
  comment: this.redList[item['name']]
  value: null
↓disabled [ngx.components.UICompVariable-1728753163576]: 
  comment: this.formsSubmit[item['name']]
  value: false
↓Subscribe_Handler [ngx.components.UIEventSubscriber-1728753163579]: 
  isEnabled: false
  topic: agGridCellClicked
  ↓doCellClicked [ngx.components.UICustomAction-1728753163582]: 
    actionValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            '		let callSources = false;
            		let item = null;
            		if(event.ref != undefined && event.ref != '''' && page.constructor.name === "viewerPage" && page["getPathById"] != undefined){
            			 item = page["getItemById"](+event.ref)
            			if(item != null && item.config.returned_value === "cell_selected"){
            				//keep a reference on a row
            				if(page.pageOwner.local.techGrid == undefined){
            					page.pageOwner.local.techGrid = {};
            				}
            				page.pageOwner.local.techGrid[item.name] = event.event.node;
            				let grossData = event.event.value;
            				let data = "";
            				if(typeof(grossData) !== "string"){
            					data = grossData.value;
            				}
            				else{
            					data = grossData;
            				}
            				eval(page["getPathById"](event.ref) + " = data");
            				callSources = true;
            			}
            			
            		}
            		resolve({canCall: callSources, item: item}); 		
            '
    ↓If [ngx.components.UIDynamicAction-1728753163585]: 
      beanData: '{"ionBean":"IfAction","condition":"script:parent.out.canCall"}'
      ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1728753163588]: 
        beanData: '{"ionBean":"InvokeAction"}'
        stack: C8Oforms.MobileApplication.Application.UpdateFunctionsToBeCalledToDataSource
        ↓item [ngx.components.UIControlVariable-1728753163591]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:stack.doCellClicked.out.item
      ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1728753163594]: 
        beanData: '{"ionBean":"InvokeAction"}'
        stack: C8Oforms.MobileApplication.Application.executeGoToPageIfCondition
        ↓item [ngx.components.UIControlVariable-1728753163597]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:stack.doCellClicked.out.item
        ↓line [ngx.components.UIControlVariable-1728753163600]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:null
        ↓child [ngx.components.UIControlVariable-1728753163603]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:null
        ↓canExec [ngx.components.UIControlVariable-1728753163606]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:true
↓Subscribe_Handler1 [ngx.components.UIEventSubscriber-1728753163609]: 
  isEnabled: false
  topic: agGridRowClicked
  ↓doAgGridRowClicked [ngx.components.UICustomAction-1728753163612]: 
    actionValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            '		let callSources = false;
            		let item = null;
            		if(event.ref != undefined && event.ref != '''' && page.constructor.name === "viewerPage" && page["getPathById"] != undefined){
            			item = page["getItemById"](+event.ref)
            			if(item != null && item.config.returned_value === "row_selected"){
            				//keep a reference on a row
            				if(page.pageOwner.local.techGrid == undefined){
            					page.pageOwner.local.techGrid = {};
            				}
            				page.pageOwner.local.techGrid[item.name] = event.event.node;
            				// save result
            				let grossData = event.event.data;
            				let data = {};
            				if(grossData.__rowValue != undefined){
            					data =  grossData.__rowValue
            				}
            				else{
            					for(let i in grossData){
            						if(typeof(grossData[i]) !== "string"){
            							data[grossData[i].technicalName] = grossData[i].value;
            						}
            						else{
            							data[i] = grossData[i];
            						}
            					}
            				}
            				
            				eval(page["getPathById"](event.ref) + " = data");
            				callSources = true;
            			}
            		}
            		resolve({canCall: callSources, item: item});
            '
    ↓If [ngx.components.UIDynamicAction-1728753163615]: 
      beanData: '{"ionBean":"IfAction","condition":"script:parent.out.canCall"}'
      ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1728753163618]: 
        beanData: '{"ionBean":"InvokeAction"}'
        stack: C8Oforms.MobileApplication.Application.UpdateFunctionsToBeCalledToDataSource
        ↓item [ngx.components.UIControlVariable-1728753163621]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:stack.doAgGridRowClicked.out.item
      ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1728753163624]: 
        beanData: '{"ionBean":"InvokeAction"}'
        stack: C8Oforms.MobileApplication.Application.executeGoToPageIfCondition
        ↓item [ngx.components.UIControlVariable-1728753163627]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:stack.doAgGridRowClicked.out.item
        ↓line [ngx.components.UIControlVariable-1728753163630]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:null
        ↓child [ngx.components.UIControlVariable-1728753163633]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:null
        ↓canExec [ngx.components.UIControlVariable-1728753163636]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:true
↓Subscribe_Handler11 [ngx.components.UIEventSubscriber-1728753163639]: 
  isEnabled: false
  topic: agGridRowDataChanged
  ↓doAgGridRowDataChanged [ngx.components.UICustomAction-1728753163642]: 
    actionValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            '		let callSources = false;
            		let item = null;
            		if(event.ref != undefined && event.ref != '''' && page.constructor.name === "viewerPage" && page["getPathById"] != undefined){
            			item = page["getItemById"](+event.ref);
            			if(item != null){
            				if(item.config.returned_value === "all_the_data"){
            					callSources = true;
            				}
            				else{
            					setTimeout(()=>{
            						page[''updateGridValues''](event, item);	
            					}, 0)
            				}
            			}
            		}
            		resolve({canCall: callSources, item: item});
            '
    ↓If [ngx.components.UIDynamicAction-1728753163645]: 
      beanData: '{"ionBean":"IfAction","condition":"script:parent.out.canCall"}'
      ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1728753163648]: 
        beanData: '{"ionBean":"InvokeAction"}'
        stack: C8Oforms.MobileApplication.Application.UpdateFunctionsToBeCalledToDataSource
        ↓item [ngx.components.UIControlVariable-1728753163651]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:stack.doAgGridRowDataChanged.out.item
      ↓InvokeSharedAction1 [ngx.components.UIDynamicInvoke-1728753163654]: 
        beanData: '{"ionBean":"InvokeAction"}'
        stack: C8Oforms.MobileApplication.Application.executeGoToPageIfCondition
        ↓item [ngx.components.UIControlVariable-1728753163657]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:stack.doAgGridRowDataChanged.out.item
        ↓line [ngx.components.UIControlVariable-1728753163660]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:null
        ↓child [ngx.components.UIControlVariable-1728753163663]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:null
        ↓canExec [ngx.components.UIControlVariable-1728753163666]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:true
↓Subscribe_Handler111 [ngx.components.UIEventSubscriber-1728753163669]: 
  isEnabled: false
  topic: agGridModelUpdated
  ↓doAgGridModelUpdated [ngx.components.UICustomAction-1728753163672]: 
    actionValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            '		console.log("there");
            		
            		let callSources = false;
            		let item = null;
            		if(event.ref != undefined && event.ref != '''' && page.constructor.name === "viewerPage" && page["getPathById"] != undefined){
            			item = page["getItemById"](+event.ref);
            			if(item != null){
            				setTimeout(()=>{
            					page[''updateGridValues''](event, item);	
            				}, 0)
            			}
            		}
            		resolve({canCall: callSources, item: item});
            '
↓outModel [ngx.components.UICompVariable-1728753163675]: 
  autoEmit: true
  value: null
↓Tag [ngx.components.UIElement-1728753163678]: 
  tagName: fieldset
  ↓Tag1 [ngx.components.UIElement-1728753163681]: 
    tagName: legend
    ↓Text [ngx.components.UIText-1728753163684]: 
      textValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:this.pageOwner.removeHTML(this.item.config.html)
  ↓Div [ngx.components.UIDynamicElement-1728753163687]: 
    beanData: '{"ionBean":"DivTag"}'
    identifier: divtext
    tagName: div
    ↓Attr [ngx.components.UIAttribute-1728753163690]: 
      attrName: '[ngClass]'
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: 'script:this.redList != undefined ?  this.redList[this.item.name] == true ? (this.item.config.mandatory && this.item.config.disabled == true) ? [''requiredgregoryvpadding'', ''styledivred''] : ''styledivred'': (this.item.config.mandatory && this.item.config.disabled == true) ? [''requiredgregoryv''] : []: (this.item.config.mandatory && this.item.config.disabled == true) ? [''requiredgregoryv''] : []'
      comment: 'this.redList != undefined ?  this.redList[this.item.name] == true ? (this.item.config.mandatory && this.item.config.disabled == true) ? [''requiredgregoryvpadding'', ''styledivred''] : ''styledivred'': (this.item.config.mandatory && this.item.config.disabled == true) ? [''requiredgregoryv'', ''styledivnormal''] : ''styledivnormal'': (this.item.config.mandatory && this.item.config.disabled == true) ? [''requiredgregoryv'', ''styledivnormal''] : ''styledivnormal'''
    ↓Attr1 [ngx.components.UIAttribute-1728753163693]: 
      attrName: '[attr.id]'
      attrValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:this.item.name
    ↓Style [ngx.components.UIStyle-1728753163696]: 
      styleContent: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              position:relative;
              
    ↓Directive [ngx.components.UIControlDirective-1728753163699]: 
      directiveName: If
      directiveSource: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:this.disabled else ElseBlock_1627489489614
      ↓UseSharedComponent [ngx.components.UIUseShared-1728753163702]: 
        sharedcomponent: C8Oforms.MobileApplication.Application.sharedLabelElem
        ↓item [ngx.components.UIUseVariable-1728753163705]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:this.item
        ↓setStyle [ngx.components.UIUseVariable-1728753163708]: 
          varValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:true
    ↓Tag [ngx.components.UIElement-1728753163711]: 
      identifier: ElseBlock_1627489489614
      tagName: ng-template
      ↓Div [ngx.components.UIDynamicElement-1728753163714]: 
        beanData: '{"ionBean":"DivTag"}'
        tagName: div
        ↓Attr2 [ngx.components.UIAttribute-1728753163717]: 
          attrName: '[ngClass]'
          attrValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
              - MobileSmartSourceType: script:['styledivnormal']
        ↓UseSharedComponent [ngx.components.UIUseShared-1728753163720]: 
          sharedcomponent: C8Oforms.MobileApplication.Application.sharedLabelElem
          ↓item [ngx.components.UIUseVariable-1728753163723]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:this.item
          ↓setStyle [ngx.components.UIUseVariable-1728753163726]: 
            varValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                - MobileSmartSourceType: script:true
    ↓UseSharedComponent [ngx.components.UIUseShared-1729054855147]: 
      sharedcomponent: libApexCharts.Application.NgxApp.apxChart
      ↓chart [ngx.components.UIUseVariable-1729054951326]: 
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: |
                'script:{
                                    type: this.item.config.type ? this.item.config.type : ''bar'',
                                    height: this.item.config.height ? this.item.config.height : ''auto'',
                                    stacked: this.item.config.stacked ? this.item.config.stacked : false,
                                    zoom: {
                                                type: ''x'',
                                                enabled: true,
                                                autoScaleYaxis: true
                			},
                                     toolbar: {
                                                autoSelected: ''zoom''
                                     }
                }
                '
      ↓annotations [ngx.components.UIUseVariable-1729054951328]: 
        comment: |
          Annotations in ApexCharts allows you to write custom text on specific data-points or on axes values.
          For more information please visit [Series documentation](https://apexcharts.com/docs/annotations/) 
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:null
      ↓colors [ngx.components.UIUseVariable-1729054951330]: 
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:null
      ↓dataLabels [ngx.components.UIUseVariable-1729054951332]: 
        comment: |
          Data Labels are the actual values which are passed in the series. You can add formatters which will allow you to modify values before displaying.
          For more information please visit [Series documentation](https://apexcharts.com/docs/datalabels/) 
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:null
      ↓series [ngx.components.UIUseVariable-1729054951334]: 
        comment: |
          The series is a set of data. You may have single or multiple data series.
          For more information please visit [Series documentation](https://apexcharts.com/docs/series/) 
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: |
                'script:this.model?.series != null  && this.model?.series != undefined ?
                this.model.series :
                [{
                		  data: [23, 34, 12, 54, 32, 45, 43,12,45,78,78,89]
                }]'
      ↓stroke [ngx.components.UIUseVariable-1729054951336]: 
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:null
      ↓labels [ngx.components.UIUseVariable-1729054951338]: 
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: |
                script:this.model?.labels != null  && this.model?.labels != undefined ?
                this.model.labels :	['Label1','Label2', 'Label3']
                
                
      ↓legend [ngx.components.UIUseVariable-1729054951340]: 
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:null
      ↓fill [ngx.components.UIUseVariable-1729054951342]: 
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:null
      ↓tooltip [ngx.components.UIUseVariable-1729054951344]: 
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:null
      ↓plotOptions [ngx.components.UIUseVariable-1729054951346]: 
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:null
      ↓responsive [ngx.components.UIUseVariable-1729054951348]: 
        comment: |
          You can configure different options for different screen sizes and ApexCharts will override the configuration based on breakpoints defined.
          For more information please visit [Series documentation](https://apexcharts.com/docs/responsive/) 
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:null
      ↓xaxis [ngx.components.UIUseVariable-1729054951350]: 
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: |
                'script:model?.xaxis ? model.xaxis :
                {
                  categories: [
                  ]
                }
                '
      ↓yaxis [ngx.components.UIUseVariable-1729054951352]: 
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:null
      ↓grid [ngx.components.UIUseVariable-1729054951354]: 
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:null
      ↓states [ngx.components.UIUseVariable-1729054951356]: 
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:null
      ↓title [ngx.components.UIUseVariable-1729054951358]: 
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:null
      ↓subtitle [ngx.components.UIUseVariable-1729054951360]: 
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:null
      ↓theme [ngx.components.UIUseVariable-1729054951362]: 
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:null