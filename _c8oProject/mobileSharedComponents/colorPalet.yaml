↓GenericItem [mobile.components.UIDynamicElement-1573746908722]: 
  beanData: '{"ionBean":"GenericItem"}'
  tagName: ion-item
  ↓Label [mobile.components.UIDynamicElement-1573746908725]: 
    beanData: '{"ionBean":"Label","Stacked":"plain:stacked"}'
    tagName: ion-label
    ↓TextFormat [mobile.components.UIDynamicElement-1573746908728]: 
      beanData: '{"ionBean":"TextFormat","TextCapitalize":"plain:text-capitalize"}'
      tagName: div
      ↓Text [mobile.components.UIText-1573746908731]: 
        i18n: true
        textValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
            - MobileSmartSourceType: script:'color' | translate
  ↓Attr2 [mobile.components.UIAttribute-1573746908782]: 
    attrName: '[ngClass]'
    attrValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
        - MobileSmartSourceType: script:'stylegenerictexteditor'
  ↓Style [mobile.components.UIStyle-1573746908785]: 
    styleContent: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            'width: 90%;
            .label{
            		margin-top: 0px !important;	
            		margin-bottom: 0px !important;	
            	}
            '
  ↓TextInput [mobile.components.UIDynamicElement-1573824751862]: 
    beanData: |
      '{
       "ionBean": "Input",
       "Readonly": "plain:true",
       "Value": "script:this.local.namer(params1573746896372.item.config[params1573746896372.path]).ntc[0].name"
      }'
    tagName: ion-input
    ↓Event1 [mobile.components.UIControlEvent-1573824877805]: 
      attrName: (click)
      ↓Popover [mobile.components.UIDynamicAction-1573824877808]: 
        beanData: |
          '{
           "ionBean": "PopoverAction",
           "page": "plain:C8Oforms.MobileApplication.Application.colorPage",
           "data": "script:{item:stack.root.scope.params1573746896372.item, path: stack.root.scope.params1573746896372.path}"
          }'
        ↓getPickerColor [mobile.components.UICustomAction-1602848534863]: 
          actionValue: 
            - xmlizable: 
              - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
              - com.twinsoft.convertigo.beans.common.FormatedContent: 
                →: |
                  '		page.c8o.log.debug(''[MB] ''+ props.actionFunction +'': ''+ props.actionName);
                  		page.global.colorPicker=(page.global.colorPicker !== undefined)?page.global.colorPicker:"#ffffff";
                  		event.target.value=page.local.namer(page.global.colorPicker).ntc[0].name;
                  		props.stack.root.scope.params1573746896372.item.config.label_color=page.global.colorPicker;
                  		resolve();
                  '
          ↓InvokeSharedAction [mobile.components.UIDynamicInvoke-1574089347602]: 
            beanData: '{"ionBean":"InvokeAction"}'
            stack: C8Oforms.MobileApplication.Application.updateState
↓item [mobile.components.UICompVariable-1573833966923]: 
↓path [mobile.components.UICompVariable-1574087378396]: 
  value: '''label_color'''