↓item [ngx.components.UICompVariable-1596548897197]: 
  value: 
↓model [ngx.components.UICompVariable-1596548897200]: 
  value: '{}'
↓redList [ngx.components.UICompVariable-1596548897203]: 
  value: null
↓disabled [ngx.components.UICompVariable-1596548897206]: 
  comment: this.formsSubmit[item['name']]
  value: false
↓Div1 [ngx.components.UIDynamicElement-1596548990846]: 
  beanData: '{"ionBean":"DivTag"}'
  identifier: divtext
  tagName: div
  ↓Attr [ngx.components.UIAttribute-1596548990849]: 
    attrName: '[ngClass]'
    attrValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:'styledivnormal'
  ↓Attr1 [ngx.components.UIAttribute-1596548991134]: 
    attrName: '[attr.id]'
    attrValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:this.item.name
  ↓Directive1 [ngx.components.UIControlDirective-1641391293060]: 
    comment: adding other element
    directiveExpression: let j = index
    directiveSource: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: script:let child of this.item.children
    ↓Grid [ngx.components.UIDynamicElement-1729160532046]: 
      beanData: '{"ionBean":"Grid"}'
      tagName: ion-grid
      ↓GridRow [ngx.components.UIDynamicElement-1729160532033]: 
        beanData: |
          '{
           "ionBean": "GridRow",
           "FlexJustifyContent": "plain:ion-justify-content-start",
           "FlexAlignement": "plain:ion-align-items-center"
          }'
        tagName: ion-row
        ↓GridCol [ngx.components.UIDynamicElement-1729160532035]: 
          beanData: '{"ionBean":"GridCol","Size":"plain:auto"}'
          tagName: ion-col
          ↓CheckBox [ngx.components.UIDynamicElement-1729160586537]: 
            beanData: |
              '{
               "ionBean": "CheckBox",
               "ControlName": "plain:name1729160586537",
               "Disabled": "plain:true",
               "IonColor": "script:this.item.config.color"
              }'
            tagName: ion-checkbox
        ↓GridCol1 [ngx.components.UIDynamicElement-1729160532041]: 
          beanData: '{"ionBean":"GridCol","Size":"plain:4"}'
          tagName: ion-col
          ↓Label [ngx.components.UIDynamicElement-1729160595596]: 
            beanData: '{"ionBean":"Label"}'
            tagName: ion-label
            ↓Attr1 [ngx.components.UIAttribute-1729160595599]: 
              attrName: '*ngIf'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:!child.other
            ↓Text [ngx.components.UIText-1729160595602]: 
              i18n: true
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:child.value
          ↓Label1 [ngx.components.UIDynamicElement-1729160595605]: 
            beanData: '{"ionBean":"Label"}'
            tagName: ion-label
            ↓Text [ngx.components.UIText-1729160595608]: 
              i18n: true
              textValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:('Other'|translate) + ' :'
            ↓Attr1 [ngx.components.UIAttribute-1729160595611]: 
              attrName: '*ngIf'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: plain:child.other
        ↓GridCol2 [ngx.components.UIDynamicElement-1729160555866]: 
          beanData: '{"ionBean":"GridCol","Size":"plain:7"}'
          tagName: ion-col
          ↓SelectContainer [ngx.components.UIDynamicElement-1729160607536]: 
            beanData: |
              '{
               "ionBean": "Select",
               "ControlName": "plain:name1729160607536",
               "Interface": "plain:popover",
               "Placeholder": "script:this.translate.instant(''select_page_navigate_to'')"
              }'
            tagName: ion-select
            ↓Attr [ngx.components.UIAttribute-1729160607539]: 
              attrName: '[ngModel]'
              attrValue: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.model[child.id]
              comment: no comment
            ↓SelectOption [ngx.components.UIDynamicElement-1729160607542]: 
              beanData: '{"ionBean":"SelectOption","Value":"script:''C8O_C8O_C8O_undefined''"}'
              tagName: ion-select-option
            ↓Directive [ngx.components.UIControlDirective-1729160607545]: 
              directiveIndexName: i
              directiveItemName: item
              directiveSource: 
                - xmlizable: 
                  - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                  - MobileSmartSourceType: script:this.pageOwner.navParams.data.form.pages
              ↓SelectOption1 [ngx.components.UIDynamicElement-1729160607548]: 
                beanData: '{"ionBean":"SelectOption","Value":"script:''goTo_''+item.pageTechName"}'
                tagName: ion-select-option
                ↓Text [ngx.components.UIText-1729160607551]: 
                  i18n: true
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:translate.instant('goToPageIF') + ' ' +item.name
              ↓SelectOption [ngx.components.UIDynamicElement-1729160607554]: 
                beanData: '{"ionBean":"SelectOption","Value":"script:item.pageTechName"}'
                tagName: ion-select-option
                ↓Text [ngx.components.UIText-1729160607557]: 
                  i18n: true
                  textValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:translate.instant('AllowPageIf') + ' ' +item.name
            ↓Event [ngx.components.UIControlEvent-1729160607560]: 
              attrName: (ngModelChange)
              eventName: (ngModelChange)
              ↓setValue [ngx.components.UICustomAction-1729160607563]: 
                actionValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        		if(event != 'C8O_C8O_C8O_undefined'){
                        			page.model[vars.id] = event;
                        		}
                        		else{
                        			page.model[vars.id] = "";
                        		}
                        		resolve();
                        
                ↓params [ngx.components.UIControlVariable-1729160607566]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: script:this
                ↓id [ngx.components.UIControlVariable-1729160607569]: 
                  varValue: 
                    - xmlizable: 
                      - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
                      - MobileSmartSourceType: source:{"filter":"Iteration","project":"C8Oforms","input":"","model":{"data":[{"priority":1641391293060}],"path":"","prefix":"","suffix":"?.id","custom":"","useCustom":false}}
      ↓Style [ngx.components.UIStyle-1729161146635]: 
        styleContent: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
            - com.twinsoft.convertigo.beans.common.FormatedContent: 
              →: |
                '/**
                 * Custom properties (sometimes referred to as CSS variables or cascading variables)
                 * are entities defined by CSS authors that contain specific values to be reused throughout a document.
                 * They are set using custom property notation, e.g.: --main-color: black;
                 * and are accessed using the var() function, e.g.: color: var(--main-color);
                 * You can find below your component''s properties you can customize within the page.
                 * If you''d like to make some customizations for whole app, please see your app Style & Theme components.
                 * For more informations see https://ionicframework.com/docs/theming.
                **/
                //--ion-grid-padding	//Padding for the Grid
                //--ion-grid-padding-lg	//Padding for the Grid on lg screens
                //--ion-grid-padding-md	//Padding for the Grid on md screens
                //--ion-grid-padding-sm	//Padding for the Grid on sm screens
                //--ion-grid-padding-xl	//Padding for the Grid on xl screens
                //--ion-grid-padding-xs	//Padding for the Grid on xs screens
                //--ion-grid-width	//Width of the fixed Grid
                //--ion-grid-width-lg	//Width of the fixed Grid on lg screens
                //--ion-grid-width-md	//Width of the fixed Grid on md screens
                //--ion-grid-width-sm	//Width of the fixed Grid on sm screens
                //--ion-grid-width-xl	//Width of the fixed Grid on xl screens
                //--ion-grid-width-xs	//Width of the fixed Grid on xs screens
                	ion-col:not(:last-child) {
                		margin-right : 8px;
                	}
                	
                	ion-row {
                		border-bottom: 1px dashed rgb(228, 228, 228);
                	}
                '