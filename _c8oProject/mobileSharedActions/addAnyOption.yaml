↓item [mobile.components.UIStackVariable-1586263151011]: 
↓checkAndAdd [mobile.components.UICustomAction-1586263158364]: 
  actionValue: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
      - com.twinsoft.convertigo.beans.common.FormatedContent: 
        →: |
          '		    const label_color = "#202124";
          		    // push function to push a new option
          		    let push = (val) => {
          		        if(vars.isOther){
          		            vars.item[''children''].push({"value":"", "selected":false,"label_color": label_color,"position": ''unset'', "other": true});
          		        }
          		        else{
          		            vars.item[''children''].push({"value":vars.defaultValue + " " +val, "selected":false,"label_color":label_color,"position": ''unset''});
          		        }
          		        
          		    }
          		    // main function to add an option
          		    let doAdd = () => {
          		        let localNumbers = [];
                          page["getlocalNumbersSorted"](vars.item, localNumbers, vars.defaultValue);
                          let val = page["getNextValueDispo"](localNumbers);
                          push(val);
                          page["updateState"]();
                          page["tick"]();
                          resolve(false);
          		    }
          		    // in case of adding an other option check if we can add it
          		    let tobedone;
          		    if(vars.isOther){
          		        tobedone = true;
          	            for(let i in vars.item[''children'']){
          	                if(vars.item[''children''][i]["other"] == true){
          	                    tobedone = false;
          	                }
          	            }
          		    }
          		    // if we are adding an option ''other and have permission, or if we are adding a normal option do it
                      if(tobedone || vars.isOther == false){
                          doAdd();
                          resolve(false);
                      }
                      // else toast 
                      else{
                          resolve(true);
                      }
          '
  ↓item [mobile.components.UIControlVariable-1586263176978]: 
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
        - MobileSmartSourceType: script:params.item
  ↓defaultValue [mobile.components.UIControlVariable-1586263229071]: 
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
        - MobileSmartSourceType: script:params.defaultValue
  ↓IfaddToToast [mobile.components.UIDynamicAction-1586263388509]: 
    beanData: '{"ionBean":"IfAction"}'
    ↓Toast [mobile.components.UIDynamicAction-1586263388512]: 
      beanData: '{"ionBean":"ToastAction","message":"script:c8oPage.translate.instant(''canOnlyAddOnce'')"}'
  ↓isOther [mobile.components.UIControlVariable-1586263972597]: 
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.mobile.components.MobileSmartSourceType
        - MobileSmartSourceType: script:params.isOther
↓defaultValue [mobile.components.UIStackVariable-1586263212279]: 
↓isOther [mobile.components.UIStackVariable-1586263919612]: 
  value: false