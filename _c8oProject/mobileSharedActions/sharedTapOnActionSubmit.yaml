↓item [ngx.components.UIStackVariable-1586453346307]: 
↓If [ngx.components.UIDynamicAction-1586453559548]: 
  beanData: '{"ionBean":"IfAction","condition":"script:params.item.type == ''submit''"}'
  ↓CallSequence [ngx.components.UIDynamicAction-1586453338361]: 
    beanData: |
      '{
       "ionBean": "CallSequenceAction",
       "requestable": "plain:C8Oforms.GetSequences",
       "noLoading": "plain:true"
      }'
    ↓computeData [ngx.components.UICustomAction-1586453338364]: 
      actionValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              		    
              		try{
              			page.local["_seq"+vars.item.id] = true;
              		if(props.parent.out.projects != undefined && props.parent.out.projects.length > 0){
              		    let prefix = "";
              		    if(vars.viewer == true){
              		        prefix = "_visibleV";
              		    }else{
              		        prefix = "_visible";
              		    }
              		    for(let i in props.parent.out.projects){
              		        page.local[prefix+i]  = false;
              		        const projectName = props.parent.out.projects[i]["name"];
              		        for(let j in props.parent.out.projects[i]["sequences"]){
              		            const sequenceName = props.parent.out.projects[i]["sequences"][j]["name"];
              		            if(vars.item.actions[projectName+'.'+sequenceName]!= undefined){
              						if(vars.item.actions[projectName+'.'+sequenceName]["enabled"] == true){
              							page.local[prefix+i]  = true; 	
              						}
              						let newVarsDef = props.parent.out.projects[i]["sequences"][j].variables.name
              						let newVars = {};
              						for(let variableName of newVarsDef){
              							if(vars.item.actions[projectName+'.'+sequenceName]["vars"][variableName] != undefined){
              								newVars[variableName] =vars.item.actions[projectName+'.'+sequenceName]["vars"][variableName];
              							}
              							else{
              								newVars[variableName] = {str:""};
              							}
              						}
              						vars.item.actions[projectName+'.'+sequenceName]["vars"] = newVars;
              						
              		                
              		            }
              		        }
              		        if(page.local[prefix+i]  == null){
              		            page.local[prefix+i]  = false; 
              		        }		        
              		    }
              		}
              		}
              		catch(e){
              			
              		}
              		finally{
              			page.local.tree = props.parent.out.projects;
              			page["subscriber_tree"].next(null);
              			resolve();
              		}
              		
              
      ↓item [ngx.components.UIControlVariable-1586453338367]: 
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:params.item
      ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1594394456114]: 
        beanData: '{"ionBean":"InvokeAction"}'
        stack: C8Oforms.MobileApplication.Application.detectChanges
    ↓projectFilter [ngx.components.UIControlVariable-1586453338370]: 
      comment: new variable
      varValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: plain:
    ↓sequenceFilter [ngx.components.UIControlVariable-1586453338373]: 
      comment: new variable
      varValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: plain:^forms_
↓If1 [ngx.components.UIDynamicAction-1599053087922]: 
  beanData: '{"ionBean":"IfAction","condition":"script:params.item.cat != ''action''"}'
  ↓CallSequence [ngx.components.UIDynamicAction-1599053087925]: 
    beanData: |
      '{
       "ionBean": "CallSequenceAction",
       "requestable": "plain:C8Oforms.GetSequences",
       "noLoading": "plain:true"
      }'
    ↓computeData [ngx.components.UICustomAction-1599053087928]: 
      actionValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              '		let local = null;
              		if(page["pageOwner"] != undefined){
              			local = page["pageOwner"].local;
              		}
              		else{
              			local = page.local;
              		}
              		
              		try{
              			
              				local["_seq" + vars.item.id] = true;
              				if (props.parent.out.projects != undefined && props.parent.out.projects.length > 0) {
              					let prefix = "";
              					if (vars.viewer == true) {
              						prefix = "_sourceV";
              					} else {
              						prefix = "_source";
              					}
              					for (let i in props.parent.out.projects) {
              						local[prefix + i] = false;
              						const projectName = props.parent.out.projects[i]["name"];
              						for (let j in props.parent.out.projects[i]["sequences"]) {
              							const sequenceName = props.parent.out.projects[i]["sequences"][j]["name"];
              							if (vars.item.sources != undefined && vars.item.sources[projectName + ''.'' + sequenceName] != undefined) {
              								if (vars.item.sources[projectName + ''.'' + sequenceName]["enabled"] == true) {
              									local[prefix + i] = true;
              								}
              								let newVarsDef = props.parent.out.projects[i]["sequences"][j].variables.name
              								let newVars = {};
              								for (let variableName of newVarsDef) {
              									if (vars.item.sources[projectName + ''.'' + sequenceName]["vars"][variableName] != undefined) {
              										newVars[variableName] = vars.item.sources[projectName + ''.'' + sequenceName]["vars"][variableName];
              									}
              									else {
              										newVars[variableName] = { str: "" };
              									}
              								}
              								vars.item.sources[projectName + ''.'' + sequenceName]["vars"] = newVars;
              
              							}
              						}
              						if (local[prefix + i] == null) {
              							local[prefix + i] = false;
              						}
              					}
              				}
              
              
              			}
              			catch (e) {
              
              			}
              			finally {
              				local.treeSource = props.parent.out.projects;
              				resolve();
              				
              			}
              '
      ↓item [ngx.components.UIControlVariable-1599053087931]: 
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:params.item
      ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1599053087934]: 
        beanData: '{"ionBean":"InvokeAction"}'
        stack: C8Oforms.MobileApplication.Application.detectChanges
    ↓projectFilter [ngx.components.UIControlVariable-1599053087937]: 
      comment: new variable
      varValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: plain:
    ↓sequenceFilter [ngx.components.UIControlVariable-1599053087940]: 
      comment: new variable
      varValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: plain:^formssource_
    ↓type [ngx.components.UIControlVariable-1641397914373]: 
      comment: new variable
      varValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:params.item.type