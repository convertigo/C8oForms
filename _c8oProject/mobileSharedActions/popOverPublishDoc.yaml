↓selectedForm [ngx.components.UIStackVariable-1606729324225]: 
↓PublishDoc [ngx.components.UICustomAsyncAction-1695202637335]: 
  actionValue: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
      - com.twinsoft.convertigo.beans.common.FormatedContent: 
        →: |
          '		try {
          			let askForPwa = false;
          			console.log("vars.selectedForm", vars.selectedForm);
          			let resp = (await page.c8o.callJsonObject("C8Oforms.APIV2_Publish",
          				{
          					id: vars.selectedForm._id,
          					rev: vars.selectedForm._rev,
          					meta: JSON.stringify({publishing: true})
          				}
          			).async());
          			if(resp.error){
          				let toastController = page.getInstance(ToastController)
          				const toast = await toastController.create({
          		            message: "Une érreur s''est produite pendant la publication du formulaire",
          		            duration: 10000,
          		            position: "top",
          		            cssClass: "toastError",
          		            buttons: [
          					    {
          					      text: ''Ok'',
          					      role: ''cancel''
          					    },
          					  ]
          		          });
          				await toast.present();
          			}
          			else if(resp.res){
          				resp = resp.res;
          				if(resp.pwa_required){
          					askForPwa = true;
          				}
          				else{
          					// must toast
          					let toastController = page.getInstance(ToastController)
          					const toast = await toastController.create({
          			            message: "Le formulaire à été publié avec succès",
          			            duration: 6000,
          			            position: "top",
          			            cssClass: "toastSuccess",
          			            buttons: [
          						    {
          						      text: ''Ok'',
          						      role: ''cancel''
          						    },
          						  ]
          			          });
              				await toast.present();
          				}
          			}
          			return askForPwa;
          			
          		} catch (e) {
          			// must toast
          			let toastController = page.getInstance(ToastController)
          			const toast = await toastController.create({
          	            message: "Une érreur s''est produite pendant la publication du formulaire",
          	            duration: 10000,
          	            position: "top",
          	            cssClass: "toastError",
          	            buttons: [
          				    {
          				      text: ''Ok'',
          				      role: ''cancel''
          				    },
          				  ]
          	          });
          			await toast.present();
          			console.log("ok done");
          			console.error("error while publishin form", e);
          		}
          '
  page_ts_imports: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
      - com.twinsoft.convertigo.beans.common.XMLVector: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.XMLVector
          - com.twinsoft.convertigo.beans.common.XMLVector: 
            - java.lang.String: 
              - ↑value: ToastController
            - java.lang.String: 
              - ↑value: '@ionic/angular'
  ↓selectedForm [ngx.components.UIControlVariable-1695202700216]: 
    varValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
        - MobileSmartSourceType: source:{"filter":"Action","project":"C8Oforms","input":"","model":{"data":[{"priority":1606729290054,"rootEvent":false,"pageLocals":false}],"path":"?.in?.vars?.selectedForm","prefix":"","suffix":"","custom":"","useCustom":false}}
  ↓IfElse [ngx.components.UIDynamicIf-1699354529199]: 
    beanData: '{"ionBean":"IfElseAction"}'
    tagName: IfElse
    ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1695204657314]: 
      beanData: '{"ionBean":"InvokeAction"}'
      comment: if doesn't exists pop over create pwa before publishing
      stack: C8Oforms.MobileApplication.Application.popOverCreatePwa
      ↓selectedForm [ngx.components.UIControlVariable-1695204657317]: 
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:params.selectedForm
      ↓publishInfos [ngx.components.UIControlVariable-1695204657320]: 
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:params.selectedForm
      ↓header [ngx.components.UIControlVariable-1695204657323]: 
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:true
      ↓realFormFrom [ngx.components.UIControlVariable-1695204657326]: 
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:params.selectedForm._id
      ↓new [ngx.components.UIControlVariable-1695206633375]: 
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:true
      ↓publish [ngx.components.UIControlVariable-1695216433345]: 
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:true