↓canExec [ngx.components.UIStackVariable-1645787738099]: 
  value: false
↓If [ngx.components.UIDynamicAction-1645787756893]: 
  beanData: '{"ionBean":"IfAction","condition":"script:params.canExec"}'
  ↓CustomAsyncAction [ngx.components.UICustomAsyncAction-1645787786914]: 
    actionValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            '		try {
            			//reset search criterias
            			try{
            				page["query"] = "";
            				page.local.searchTags = [];
            				page.local.searchSubTags = [];
            			}
            			catch(e){
            				
            			}
            	        page.local.spinner = true;
            	        // cancel views live and reset folder emplacement 
            	        page.c8o.cancelLive("viewLiveFolders");
            	        page.c8o.cancelLive("viewLiveOut");
            	        page.c8o.cancelLive("viewLiveInFolders");
            	        page.local.folder = "";
            	        // set new state (whenever is into published or edition)
            	        page.local.published = vars.changeToPublished;
            	        page.local.nocodedatabase = false;
            	        //define new ddoc for fullsync''s views request
            	        const ddocPublished = vars.changeToPublished ? "published_formsV2": "formsV2";
            	        page.local["ddoc"] = ddocPublished;
            	        // define new url
            			let url : string = window.location.href;
            			let splitSlash = window.location.href.split("/");
            			let selectorPosition = splitSlash.indexOf("selector")
            			splitSlash[selectorPosition + 2] = ""+page.local.published;
            			splitSlash[selectorPosition+ 3] = ""+encodeURI(":folder");
            			window.history.replaceState("", "", splitSlash.join("/"));
            		} catch (e) {
            		
            		} finally {
            			return true;
            		}
            '
    ↓changeToPublished [ngx.components.UIControlVariable-1645787981620]: 
      varValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
          - MobileSmartSourceType: script:params.changeToPublished
    ↓InvokeSharedAction [ngx.components.UIDynamicInvoke-1645788264373]: 
      beanData: '{"ionBean":"InvokeAction"}'
      stack: C8Oforms.MobileApplication.Application.callViewLiveAndFillFormList
      ↓keys [ngx.components.UIControlVariable-1645788264376]: 
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:null
↓changeToPublished [ngx.components.UIStackVariable-1645787812011]: 
  value: true
↓If1 [ngx.components.UIDynamicAction-1728309157947]: 
  beanData: '{"ionBean":"IfAction","condition":"source:{\"filter\":\"Action\",\"project\":\"C8Oforms\",\"input\":\"\",\"model\":{\"data\":[{\"priority\":1645787700014,\"rootEvent\":false,\"pageLocals\":false}],\"path\":\"?.in?.vars?.changeToData\",\"prefix\":\"\",\"suffix\":\"\",\"custom\":\"\",\"useCustom\":false}}"}'
  ↓CustomAsyncAction [ngx.components.UICustomAsyncAction-1728309223360]: 
    actionValue: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
        - com.twinsoft.convertigo.beans.common.FormatedContent: 
          →: |
            		try {
            			page.local.nocodedatabase = true;
            			page.ref.detectChanges();
            		} catch (e) {
            		
            		} finally {
            			return;
            		}
            
↓changeToData [ngx.components.UIStackVariable-1728309172368]: 
  value: false