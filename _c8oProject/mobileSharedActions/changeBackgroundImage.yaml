↓IfElse [ngx.components.UIDynamicIf-1648569391724]: 
  beanData: '{"ionBean":"IfElseAction","condition":"script:params.selectedForm != null || c8oPage.local.spinner == false"}'
  ↓ModalPage [ngx.components.UIDynamicAction-1648569391727]: 
    beanData: |
      '{
       "ionBean": "ModalAction",
       "page": "plain:C8Oforms.MobileApplication.Application.wallPaperSelection",
       "data": "script:params.selectedForm != null ? {form: params.selectedForm, wallpaper: params.wallpaper}: {form: c8oPage.form, wallpaper: params.wallpaper}",
       "animated": "plain:false",
       "blockWhileDisplayed": "plain:true",
       "cssClass": "plain:modalCSV"
      }'
    ↓SaveProperties [ngx.components.UICustomAction-1648569391730]: 
      actionValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              '		if(vars.selectedForm == null){
              			let args = vars.arg.data;
              		    const key = vars.wallpaper === true ? "wallpaper" : "thumbnail";
              		    page.form[key]["enabled"] = args.enabled;
              		    page.form[key]["type"] = args.type;
              		    switch(args.type){
              				case "color":
              					page.form[key]["color"] = args.color;
              				break;
              				case "custom":
              					//legacy
              					page.form[key]["link"] = undefined;
              				break;
              			}
              			page.ref.detectChanges();
              		    page["updateState"]()
              		    .then(()=>{
              		        if(args.type === "custom"){
              		            resolve({"key": key,"put_attach": true, "content": args.filePreview.source, "type" : args.filePreview.type });
              		        }
              		        else {
              		            resolve({"put_attach": false});
              		        }
              		    })
              		}
              		else{
              			let args = vars.arg.data;
              		    const key = vars.wallpaper === true ? "wallpaper" : "thumbnail";
              		    let obj = { [key]: vars.selectedForm[key], "_id": vars.selectedForm["_id"]};
              		    obj[key]["enabled"] = args.enabled;
              		    obj[key]["type"] = args.type;
              		    switch(args.type){
              				case "color":
              					obj[key]["color"] = args.color;
              				break;
              				case "custom":
              					//legacy
              					obj[key]["link"] = undefined;
              				break;
              			}
              			const use_merge = "_use_merge_" + key;
              			page.c8o.callJsonObject("fs://c8oforms_fs.post", {
              				...obj,
              				"_use_policy": "merge",
              				[use_merge]:"override"
              			})
              			.then((res)=>{
              				if(args.type === "custom"){
              		            resolve({"key": key,"put_attach": true, "content": args.filePreview.source, "type" : args.filePreview.type });
              		        }
              		        else {
              		            resolve({"put_attach": false});
              		        }
              				return null;
              			})
              		}
              		    
              '
      isEnabled: false
      ↓arg [ngx.components.UIControlVariable-1648569391733]: 
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:parent.out
      ↓IfElse [ngx.components.UIDynamicIf-1648569391736]: 
        beanData: '{"ionBean":"IfElseAction","condition":"script:parent.out.put_attach == true"}'
        ↓PutAttachment [ngx.components.UIDynamicAction-1648569391739]: 
          beanData: |
            '{
             "ionBean": "FullSyncPutAttachmentAction",
             "requestable": "plain:C8Oforms.c8oforms_fs",
             "noLoading": "plain:true",
             "docid": "script:c8oPage.form._id",
             "name": "source:{\"filter\":\"Action\",\"project\":\"C8Oforms\",\"input\":\"\",\"model\":{\"data\":[{\"priority\":1648569391730},{\"priority\":1648569341732},{\"priority\":1648569391724},{\"priority\":1648569391727}],\"path\":\"?.out\",\"prefix\":\"\",\"suffix\":\".key\",\"custom\":\"\",\"useCustom\":false}}",
             "content_type": "script:stack[''SaveProperties''].out.type",
             "content": "script:stack[''SaveProperties''].out.content"
            }'
          ↓refreshWallpaper [ngx.components.UICustomAction-1648569391742]: 
            actionValue: 
              - xmlizable: 
                - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                - com.twinsoft.convertigo.beans.common.FormatedContent: 
                  →: |
                    		    page["resetImageCache"]();
                    		    page["getBackgroundImage"]();
                    		    page.ref.detectChanges();
                    		resolve();
                    
        ↓Else_Handler [ngx.components.UIActionElseEvent-1648569391745]: 
          ↓DeleteAttachment [ngx.components.UIDynamicAction-1648569391748]: 
            beanData: |
              '{
               "ionBean": "FullSyncDeleteAttachmentAction",
               "requestable": "plain:C8Oforms.c8oforms_fs",
               "noLoading": "plain:true",
               "docid": "script:c8oPage.form._id",
               "name": "source:{\"filter\":\"Action\",\"project\":\"C8Oforms\",\"input\":\"\",\"model\":{\"data\":[{\"priority\":1648569391730},{\"priority\":1648569341732},{\"priority\":1648569391724},{\"priority\":1648569391727}],\"path\":\"?.out\",\"prefix\":\"\",\"suffix\":\".key\",\"custom\":\"\",\"useCustom\":false}}"
              }'
            ↓Failure_Handler [ngx.components.UIActionFailureEvent-1648569391751]: 
              ↓CustomAsyncAction [ngx.components.UICustomAsyncAction-1648569391754]: 
                actionValue: 
                  - xmlizable: 
                    - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
                    - com.twinsoft.convertigo.beans.common.FormatedContent: 
                      →: |
                        		try {
                        			page.c8o.log.info('The errore above can be totaly normal');
                        		} catch (e) {
                        		
                        		} finally {
                        			return;
                        		}
                        
      ↓wallpaper [ngx.components.UIControlVariable-1648657658608]: 
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:params.wallpaper
      ↓selectedForm [ngx.components.UIControlVariable-1649779813474]: 
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:params.selectedForm
    ↓SaveHttpProperties [ngx.components.UICustomAsyncAction-1697449665796]: 
      actionValue: 
        - xmlizable: 
          - ↑classname: com.twinsoft.convertigo.beans.common.FormatedContent
          - com.twinsoft.convertigo.beans.common.FormatedContent: 
            →: |
              '		try {
              			if(vars.selectedForm == null){
              				let args = vars.arg.data;
              			    const key = vars.wallpaper === true ? "wallpaper" : "thumbnail";
              			    page.form[key]["enabled"] = args.enabled;
              			    page.form[key]["type"] = args.type;
              			    switch(args.type){
              					case "color":
              						page.form[key]["color"] = args.color;
              					break;
              					case "custom":
              						//legacy
              						page.form[key]["link"] = undefined;
              					break;
              				}
              				page.ref.detectChanges();
              			    page["updateState"]()
              			    .then(async ()=>{
              			        if(args.type === "custom"){
              						let params = {file: args.filePreview,meta: JSON.stringify({"_id": page.form["_id"], _up_content_type: args.filePreview.type, ["_up_"+key]: true})};
              						let res = (await page.c8o.callJsonObject("C8Oforms.APIV2_updateFormulaireDocument", params).async()).res;
              			        	page.local.imgTimeStamp = "?"+new Date().getTime();
              			        }
              			        else {
              			            let params = {meta: JSON.stringify({"_id": page.form["_id"], _up_delete_attach:key})};
              						let res = (await page.c8o.callJsonObject("C8Oforms.APIV2_updateFormulaireDocument", params).async()).res;
              			        }
              			    })
              			}
              		} catch (e) {
              			console.error("SaveHttpProperties [attach]", e);
              		
              		} finally {
              			page.ref.detectChanges();
              			return;
              		}
              '
      ↓arg [ngx.components.UIControlVariable-1697449703182]: 
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:parent.out
      ↓wallpaper [ngx.components.UIControlVariable-1697449703185]: 
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:params.wallpaper
      ↓selectedForm [ngx.components.UIControlVariable-1697449703188]: 
        varValue: 
          - xmlizable: 
            - ↑classname: com.twinsoft.convertigo.beans.ngx.components.MobileSmartSourceType
            - MobileSmartSourceType: script:params.selectedForm
↓wallpaper [ngx.components.UIStackVariable-1648655578638]: 
  value: true
↓selectedForm [ngx.components.UIStackVariable-1649779465013]: 
  value: null